2025-10-02 13:18:22 +0800  Kevin McCarthy  <kevin@8t8.us> (b2db4087)

        * Update UPDATING file for 2.2.15 release.

M	UPDATING

2025-09-20 10:41:24 +0800  Kevin McCarthy  <kevin@8t8.us> (b363b602)

        * Add SMTP gsasl auth workaround for broken Microsoft servers.
        
        It appears some Microsoft servers append a non-BASE64 encoded response
        to what should be an empty challenge to the initial AUTH sent by the
        client.
        
        It's not RFC compliant, so gsasl rightly rejects the response.
        However, this doesn't help poor mutt users to authenticate.
        
        To work around this, check the response for the initial reply only,
        and if it's not BASE64 decodable, just drop the response.  It is
        mostly likely meaningless, and would have resulted in the AUTH failing
        regardless.
        
        Thanks to Frank Reker for the bug report and proposed patch, which
        this is based upon.

M	smtp.c

2025-08-26 13:30:32 +0800  Kevin McCarthy  <kevin@8t8.us> (b4771a9d)

        * Add documentation about <buffy-cycle> and its keybinding.
        
        Add a subsection to the "Editing Input Fields" section of the manual,
        explaining about the <buffy-cycle> function, and when it is used.
        
        Also, add an explanation for a previously undocumented behavior: in
        other filename and mailbox prompts, typing the <buffy-cycle> key
        binding falls back and invokes the <complete> function.
        
        Mention the <quote-char> function, as a useful way to enter a literal
        space, instead of invoking <buffy-cycle> or <complete> when typing
        space.

M	doc/manual.xml.head

2025-08-26 10:32:22 +0800  Kevin McCarthy  <kevin@8t8.us> (467e919f)

        * Fix isdigit() argument to unsigned char in pager is_ansi() call.
        
        In a refactor, in commit 0ac6b609cd9e4588f00221b5c66e0fd5f584da88 a
        few years ago, I inadvertantly changed the type of the is_ansi()
        parameter, and thus changed the isdigit() argument to char.
        
        This is not allowed, and needs to be cast to (unsigned char) for
        correct behavior on some platforms.
        
        Thanks to Thomas Klausner (@_wiz_) for pointing out the bug and for
        the patch.

M	pager.c

2025-05-03 19:24:57 +0800  Kevin McCarthy  <kevin@8t8.us> (47ed1d21)

        * Fix .builds files to reference new srht repository.

M	.builds/alpine.yml
M	.builds/debian.yml
M	.builds/freebsd.yml

2025-05-03 19:06:44 +0800  Kevin McCarthy  <kevin@8t8.us> (42d9a016)

        * Improve the my_hdr documentation.
        
        Try to make it clearer that it can only be used for custom header
        fields and a certain set of standard header fields.

M	doc/manual.xml.head

2025-04-26 11:42:21 +0800  Kevin McCarthy  <kevin@8t8.us> (61a66d03)

        * Remove deprecated AC_PROG_CC_C99 call.
        
        The test and setting of $ac_cv_prog_cc_c99 is done by AC_PROG_CC now.

M	configure.ac

2025-03-13 15:28:55 +0800  Kevin McCarthy  <kevin@8t8.us> (dacd6a50)

        * Fix interleaved search/limit for IMAP mailboxes.
        
        mutt_search_command() and mutt_pattern_func() both invoke
        imap_search() for IMAP mailboxes.  Additionally, mutt_search_command()
        uses the header->searched flag to cache search results for faster
        repeated matching.
        
        Interleaving a search, followed by a limit, followed by another search
        (with the exact same pattern) did not invalidate the previous search.
        The limit imap_search() cleared all the match flags, and set them to
        the results of the limit imap_search().  The second search for the
        same pattern tried to use the matched flag for headers with cached
        results, resulting in incorrect search results.
        
        Many thanks to Mikhail (@MikZyth) for the very detailed bug report,
        allowing me to easily track down the bug.

M	imap/imap.c

2025-02-20 10:58:56 +0800  Kevin McCarthy  <kevin@8t8.us> (516568dc)

        * automatic post-release commit for mutt-2.2.14

M	ChangeLog
M	VERSION

2025-02-20 10:20:51 +0800  Kevin McCarthy  <kevin@8t8.us> (59908c2b)

        * Update UPDATING file for 2.2.14 release.

M	UPDATING

2025-02-08 11:20:38 +0800  Kevin McCarthy  <kevin@8t8.us> (aa1bc169)

        * Update copyrights to 2025.

M	COPYRIGHT
M	doc/manual.xml.head
M	doc/mutt.man
M	main.c
M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/el.po
M	po/eo.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fi.po
M	po/fr.po
M	po/ga.po
M	po/gl.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/nl.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/sv.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po

2025-02-05 18:09:37 +0800  Kevin McCarthy  <kevin@8t8.us> (0ac64bf3)

        * Fix NULL pointer dereference when calling imap_logout_all().
        
        When idata->status is set to IMAP_FATAL, it signals the connection is
        in an unusable state that can't be resolved.  While doing cleanup,
        imap_close_mailbox() will leave the idata->state unchanged, and will
        set idata->ctx to NULL.
        
        So this could result in a situation where
          idata->status == IMAP_FATAL
          idata->state == IMAP_SELECTED
          idata->ctx == NULL.
        
        Normally when idata->state == IMAP_SELECTED (or higher), Mutt assumes
        a mailbox is selected and the ctx should be set to the open mailbox
        CONTEXT.  However, when the status is IMAP_FATAL, mutt aborts trying
        to do anything with that connection.  So there is no issue.
        
        When exiting mutt, imap_logout_all() is called, which loops through
        any unclosed connections and calls imap_logout() for each.
        Unfortunately, imap_logout() was overwriting idata->status to IMAP_BYE
        without checking if it was previously set to IMAP_FATAL, and then
        sending a "LOGOUT" commmand.
        
        This could result in
          idata->status == IMAP_BYE
          idata->state == IMAP_SELECTED
          idata->ctx == NULL
        in which case the IMAP code assumes a ctx will be present, because status
        is no longer set to IMAP_FATAL.
        
        This commit checks for an existing IMAP_FATAL status, and skips
        trying to reset the status and send "LOGOUT" in that case.
        
        Many thanks to Roberto Ricci for reporting the bug along with a stack
        trace, and working with me as I slowly found the problem.

M	imap/imap.c

2024-11-29 11:40:05 +0800  Kevin McCarthy  <kevin@8t8.us> (cba1fc27)

        * Remove "." from MimeSpecials (RFC2045 tspecials).
        
        RFC2045 declares tspecials to not include a period.  So encoding it
        inside 2231 parameter values, or adding double quotes to MIME
        parameter values (such as in Content-Type and Content-Disposition)
        because of the presence of a period, while not illegal, is
        unnecessary.
        
        Ticket 491 reported a case where some Android clients were not
        decoding the "." in an attachment filename extension for some unknown
        reason.  While this is clearly a bug in the Android client, it's also
        true that the period need not have been encoded in the first place.
        
        However, "." couldn't simply be removed from MIMESpecials, because it
        was also used for RFC2047 encoding.  RFC2047 encoded-words are used in
        non-MIME headers, and cannot be double quoted.
        
        Create a third "specials" list, RFC2047Specials, adding back in the
        ".", to keep RFC2047 encoding the same as it was.  Add a comment as to
        why it exists, to prevent someone from making the unfortunate mistake
        of thinking it can just be changed back to use MIMESpecials.
        
        Thanks to Peter Seiderer for reporting the issue and suggesting a fix,
        which this patch is based upon.

M	rfc2047.c
M	sendlib.c

2024-10-29 13:15:12 +0800  Kevin McCarthy  <kevin@8t8.us> (a5bd9821)

        * Fix configure.ac AM_ICONV result checking.
        
        --disable-iconv seeds the cache value variable, $am_cv_func_iconv, to
        "no" to skip the test and disable iconv.
        
        However, the result of an existing and *working* AM_ICONV test is
        stored in $am_func_iconv.  The call to AC_DEFINE(HAVE_ICONV) depends
        on that variable.
        
        Mutt was improperly checking $am_cv_func_iconv below.
        
        In the event of an existing but broken iconv, this would result in
        HAVE_ICONV being undefined, but mutt_idna.o being added to
        MUTT_LIB_OBJECTS.  This would cause both the stub functions in
        mutt_idna.h and the full functions in mutt_idna.c to be defined,
        giving a compilation error.
        
        Thanks to @juanitotc for the bug report and helping to test the fix.

M	configure.ac

2024-04-19 22:30:54 +0200  Alejandro Colomar  <alx@kernel.org> (0af8a6fc)

        * crypt-gpgme.c: Fix NULL dereference
        
        Fixes: 1afaa74a19ee ("gpgme integration.  See documentation for $crypt_use_gpgme, and http://www.gnupg.org/aegypten2/.")

M	crypt-gpgme.c

2024-04-13 13:22:11 +0800  Kevin McCarthy  <kevin@8t8.us> (0d75d71a)

        * Add $smime_pkcs7_default_smime_type config option.
        
        This works around Outlook sending application/pkcs7-mime ".p7m" parts
        without a smime-type parameter.
        
        Mutt previously hardcoded an assumption that these were SignedData to
        work around an old Outlook book.  However Outlook now appears to also
        send EnvelopedData in this form.

M	contrib/smime.rc
M	crypt.c
M	globals.h
M	init.h

2024-03-09 18:29:03 +0800  Kevin McCarthy  <kevin@8t8.us> (00d56288)

        * automatic post-release commit for mutt-2.2.13

M	ChangeLog
M	VERSION

2024-03-09 18:24:58 +0800  Kevin McCarthy  <kevin@8t8.us> (ceecc40b)

        * Update UPDATING file for 2.2.13 release.

M	UPDATING

2024-03-09 18:01:11 +0800  Kevin McCarthy  <kevin@8t8.us> (9b967f07)

        * Fix smtp client to respect $use_envelope_from option.
        
        The code was only looking to see if $envelope_from_address had a
        value, not if $use_envelope_from was set.
        
        Add extra safety checks to make sure the mailbox value isn't NULL.

M	smtp.c

2024-03-09 17:54:34 +0800  Kevin McCarthy  <kevin@8t8.us> (039cc521)

        * Fix smtp client $envelope_from_address possible dangling pointer.
        
        If the account-hook invoked by mutt_conn_find() modifies
        $envelope_from_address, envfrom could point no longer point to the
        address.
        
        Move the mutt_conn_find() before the code that determines the envelope
        from address.

M	smtp.c

2023-09-09 14:45:24 +0800  Kevin McCarthy  <kevin@8t8.us> (0a81a2a7)

        * automatic post-release commit for mutt-2.2.12

M	ChangeLog
M	VERSION

2023-09-09 14:42:14 +0800  Kevin McCarthy  <kevin@8t8.us> (6a155b49)

        * Update UPDATING file for 2.2.12 release.

M	UPDATING

2023-09-03 14:11:48 +0800  Kevin McCarthy  <kevin@8t8.us> (a4752eb0)

        * Fix write_one_header() illegal header check.
        
        This is another crash caused by the rfc2047 decoding bug fixed in the
        second prior commit.
        
        In this case, an empty header line followed by a header line starting
        with ":", would result in t==end.
        
        The mutt_substrdup() further below would go very badly at that point,
        with t >= end+1.  This could result in either a memcpy onto NULL or a
        huge malloc call.
        
        Thanks to Chenyuan Mi (@morningbread) for giving a working example
        draft message of the rfc2047 decoding flaw.  This allowed me, with
        further testing, to discover this additional crash bug.

M	sendlib.c

2023-09-04 12:50:07 +0800  Kevin McCarthy  <kevin@8t8.us> (4cc3128a)

        * Check for NULL userhdrs.
        
        When composing an email, miscellaneous extra headers are stored in a
        userhdrs list.  Mutt first checks to ensure each header contains at
        least a colon character, passes the entire userhdr field (name, colon,
        and body) to the rfc2047 decoder, and safe_strdup()'s the result on
        the userhdrs list.  An empty result would from the decode would result
        in a NULL headers being added to list.
        
        The previous commit removed the possibility of the decoded header
        field being empty, but it's prudent to add a check to the strchr
        calls, in case there is another unexpected bug resulting in one.
        
        Thanks to Chenyuan Mi (@morningbread) for discovering the two strchr
        crashes, giving a working example draft message, and providing the
        stack traces for the two NULL derefences.

M	sendlib.c

2023-09-03 12:22:01 +0800  Kevin McCarthy  <kevin@8t8.us> (452ee330)

        * Fix rfc2047 base64 decoding to abort on illegal characters.
        
        For some reason, the rfc2047 base64 decoder ignored illegal
        characters, instead of aborting.  This seems innocuous, but in fact
        leads to at least three crash-bugs elsewhere in Mutt.
        
        These stem from Mutt, in some cases, passing an entire header
        field (name, colon, and body) to the rfc2047 decoder.  (It is
        technically incorrect to do so, by the way, but is beyond scope for
        these fixes in stable).  Mutt then assumes the result can't be empty
        because of a previous check that the header contains at least a colon.
        
        This commit takes care of the source of the crashes, by aborting the
        rfc2047 decode.  The following two commits add protective fixes to the
        specific crash points.
        
        Thanks to Chenyuan Mi (@morningbread) for discovering the strchr
        crashes, giving a working example draft message, and providing the
        stack traces for the two NULL derefences.

M	rfc2047.c

2023-08-23 15:40:19 +0800  Kevin McCarthy  <kevin@8t8.us> (7eb9c18f)

        * Add a documentation note that aliases are case insensitive.
        
        It's very old behavior, but doesn't seem to be documented anywhere.
        
        Thanks to Charles for pointing that out.

M	doc/manual.xml.head

2023-08-18 11:17:23 +0800  Kevin McCarthy  <kevin@8t8.us> (6b538297)

        * automatic post-release commit for mutt-2.2.11

M	ChangeLog
M	VERSION

2023-08-18 11:07:42 +0800  Kevin McCarthy  <kevin@8t8.us> (d619496e)

        * Update UPDATING file for 2.2.11 release.

M	UPDATING

2023-08-15 12:34:05 +0800  Kevin McCarthy  <kevin@8t8.us> (d52c6115)

        * Fix GPGME build failure on MacOS.
        
        Commit 012981e8 (in release 2.2.9) updated the GPGME autoconf files,
        to fix a build issue with newer GPGME releases.
        
        Unfortunatley that caused a build issue for hosts where the gpg-error
        header files aren't in the include path.  The newer autoconf file
        expect GPG_ERROR_CFLAGS to be added to the list of flags for the
        compiler.
        
        Thanks to Will Yardley for reporting the issue and quickly testing the
        proposed fix.

M	Makefile.am

2023-06-05 18:53:55 +0800  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp> (a5423c40)

        * Updated Japanese translation.

M	po/ja.po

2023-04-14 15:57:07 -0700  Kevin McCarthy  <kevin@8t8.us> (50954c4a)

        * Fix <collapse-all> behavior for sort=reverse-threads.
        
        When uncollapsing, _mutt_traverse_thread() returns the virtual number
        of the root message in the thread.  <collapse-thread> directly sets
        menu->current to this value to cause the cursor to be on the *first*
        message of the thread (which isn't the same as the root message when
        sort=reverse-threads).  <collapse-all> finds the corresponding message
        by searching for it after re-indexing.
        
        However, when collapsing, _mutt_traverse_thread() had code to try and
        find the *first* message in the thread and return that virtual number.
        <collapse-thread> then did the same trick, because the old first
        message is now the new root message for sort=reverse-threads.
        
        However, that cleverness caused a bug for <collapse-all> - it can't
        use that virtual number directly, and it can't "find" the message at
        the index after reindexing.
        
        To fix this, remove the cleverness from _mutt_traverse_thread() when
        collapsing.  Return the virtual number of the root.  Add searching
        behavior for <collapse-thread> to fix its behavior.

M	curs_main.c
M	thread.c

2023-03-25 13:07:19 -0700  Kevin McCarthy  <kevin@8t8.us> (e0e92c31)

        * automatic post-release commit for mutt-2.2.10

M	ChangeLog
M	VERSION

2023-03-25 13:03:39 -0700  Kevin McCarthy  <kevin@8t8.us> (9138232d)

        * Update UPDATING files for 2.2.10 release.

M	UPDATING

2023-03-13 18:24:31 -0700  Kevin McCarthy  <kevin@8t8.us> (33f8b7ce)

        * Update copyright notices.
        
        This is generated from the copyright-updater script, with manual
        updates for the main.c and documentation, and po files.

M	COPYRIGHT
M	background.c
M	buffy.c
M	doc/manual.xml.head
M	doc/mutt.man
M	main.c
M	mutt_sasl_gnu.c
M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/el.po
M	po/eo.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fi.po
M	po/fr.po
M	po/ga.po
M	po/gl.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/nl.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/sv.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po
M	sidebar.c

2022-11-12 10:02:01 -0800  Kevin McCarthy  <kevin@8t8.us> (9f01d4ab)

        * Abort imap_fast_trash() if previously checkpointed.
        
        We don't want to copy the deleted flag over to the trash folder too.
        
        I looked into various ways to keep the UID COPY, but they lead to
        niggling issues with error handling along with handling if the server
        sends flag updates back to the client.
        
        So for that (hopefully rare) case, abort the fast trash and just use a
        regular copy.

M	imap/imap.c

2023-03-06 18:55:06 -0800  Kevin McCarthy  <kevin@8t8.us> (216dd145)

        * Improve smtp oauth authentication.
        
        Split XOAUTH2 to use two steps.
        
        This follows the microsoft.com documentation example for smtp.  Since
        office365 is the main site using XOAUTH2 now, it's better to match
        their documentation.
        
        It also matches msmtp's behavior, which probably means somewhere or
        another needs it that way.
        
        At the same time, improve response code checking.  Mutt was using
        smtp_get_resp() before, which returns 0 for both a ready and success
        response code.  Make sure it's a success response code when done
        authenticating.

M	smtp.c

2023-03-04 18:33:35 +0100  Sebastian Andrzej Siewior  <sebastian@breakpoint.cc> (5df86199)

        * Use base64 URL safe alphabet for message id generation.
        
        The character '/' from base64 alphabet breaks web redirectors if the
        message-id from an email is used as part of the URL for redirectors and/
        or automatic pointers to an email.
        
        Use the URL safe alphabet from RFC4648 section 5 for message id
        generation.
        
        Signed-off-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>

M	base64.c
M	messageid.c
M	mime.h
M	protos.h
M	sendlib.c

2023-03-04 18:33:34 +0100  Sebastian Andrzej Siewior  <sebastian@breakpoint.cc> (cecddeac)

        * base64val: Add support to decode base64 safe URL.
        
        In the base64 safe URL dictionary the characters '+' and '/' are
        replaced by '-' and '_'.
        Add the characters to Index_64 to allow decoding if needed.
        
        Signed-off-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>

M	handler.c

2022-12-19 18:53:43 -0800  Cline, Wade  <wade.cline@intel.com> (7c4fa478)

        * mutt_oauth2: Print access token request message
        
        There are cases when using the 'authcode' grant where the authorization
        request will succeed but the access token request will fail (for
        example: if the user's web browser and terminal use different proxy
        settings).  The current implementation of the script does not inform
        the user that the authorization token is being exchanged for an access
        code, with the result that it can appear that a request has both
        succeeded (according to the browser) and failed (according to the
        terminal output) simultaneously.  Add a message to inform the user that
        a second request is being made so there is less potential for confusion.

M	contrib/mutt_oauth2.py

2022-12-12 15:05:18 -0800  Kevin McCarthy  <kevin@8t8.us> (16d8ad64)

        * Move MuttLisp boolean config note.
        
        I think it probably makes more sense to be inside the (if) function
        documentation than (equal).

M	doc/manual.xml.head

2022-12-07 15:51:36 -0800  Kevin McCarthy  <kevin@8t8.us> (ef2abed2)

        * Fix counters for external maildir 'T' flag changes.
        
        The maildir_check_mailbox() code was not updating the context deleted
        and trashed counts in those cases.  This could lead to messages marked
        as deleted, but no action being taken on a mailbox sync/close.
        
        wip: fix ctx counts for maildir 'T' flags updates.

M	mh.c

2022-12-07 12:58:40 -0800  Kevin McCarthy  <kevin@8t8.us> (d0faf2d4)

        * Remove reference to $mark_old inside $mail_check_recent.
        
        There doesn't appear to be any relationship between $mark_old and "new
        mail" status any more.
        
        Commit c26c2531 (from 2002) is the most recent commit that talked
        about reducing the meaning of $mark_old, and may have been the commit
        to make that separation.

M	init.h

2022-12-07 12:53:51 -0800  Kevin McCarthy  <kevin@8t8.us> (ba5e0dc2)

        * Add doc note to MuttLisp about boolean config vars.
        
        They evaluate to "yes" and "no", and so need an explicit comparison to
        those values when using the equal function.

M	doc/manual.xml.head

2022-11-19 13:20:25 -0800  Kevin McCarthy  <kevin@8t8.us> (2f35d2fd)

        * Reset header color after mutt_set_flag().
        
        I partially changed this to lazily update after a thread update in
        commit c9fa0414, but unfortunately didn't investigate the reason for
        the color update while setting a flag.  Since it was that way, I
        assumed it was for a purpose.
        
        However, it turns out there is no need to actively set the header
        color in that function.  Many places in Mutt already simply reset the
        color values to 0 to invalidate and cause a recheck later.
        
        Setting the color there so can even be detrimental, if the user has
        slow 'color index' lines.  For example doing a <tag-pattern>~A will
        cause the color to be computed for the *entire* mailbox.  Now, the
        user ought to not have a slow color index line, but if they do, this
        causes unnecessary pain.
        
        Note that the header->color doesn't have an actual "unset" value,
        which could also help performance.  Maybe in the future in master
        branch.

M	flags.c
M	mutt.h
M	protos.h
M	score.c

2020-04-26 10:43:24 -0700  Kevin McCarthy  <kevin@8t8.us> (a60b22fe)

        * Filter U+200C in pager.
        
        "U+200C ZERO WIDTH NON-JOINER" is generating '?' on some systems.

M	pager.c

2022-11-12 12:50:23 -0800  Kevin McCarthy  <kevin@8t8.us> (00093fd7)

        * automatic post-release commit for mutt-2.2.9

M	ChangeLog
M	VERSION

2022-11-12 12:44:13 -0800  Kevin McCarthy  <kevin@8t8.us> (b40c28ce)

        * Update UPDATING file for 2.2.9.

M	UPDATING

2022-11-12 12:39:11 -0800  Kevin McCarthy  <kevin@8t8.us> (a5296bcd)

        * Document the <1234> key syntax for bind.
        
        This is useful for octal values of greater (or less) than three
        digits.

M	doc/manual.xml.head

2022-11-06 19:19:40 -0800  Kevin McCarthy  <kevin@8t8.us> (3c0f8597)

        * Fix non-printable keyname printing to use <octal> syntax.
        
        The IsPrint() was grabbing values outside the range of a char.
        Instead, restrict the range and fall back to the <octal> syntax, which
        the muttrc actually accepts.

M	keymap.c

2022-11-07 14:32:59 -0800  Kevin McCarthy  <kevin@8t8.us> (52753702)

        * Move AM_PATH_GPG_ERROR before AM_PATH_GPGME.
        
        The former sets $GPGRT_CONFIG which the latter needs to find and use
        gpgrt-config instead of gpgme-config.

M	configure.ac

2022-11-07 09:01:58 -0800  Kevin McCarthy  <kevin@8t8.us> (012981e8)

        * Update gpgme autoconf files to the latest versions.
        
        GPGME is transitioning away from gpgme-config, to gpgrt-config, and
        the new autoconf files are required to make the transition.
        
        Thanks to Vincent Lefèvre for reporting the problem and helping test
        the required fixes.

M	m4/gpg-error.m4
M	m4/gpgme.m4

2022-11-06 08:48:32 -0800  Kevin McCarthy  <kevin@8t8.us> (80e79060)

        * Adjust manual concerning IMAP Fcc in batch mode.
        
        Remove the sentence saying it isn't supported from the Batch
        Composition Flow section of the manual.

M	doc/manual.xml.head

2022-11-05 13:14:09 -0700  Kevin McCarthy  <kevin@8t8.us> (57e3de6d)

        * automatic post-release commit for mutt-2.2.8

M	ChangeLog
M	VERSION

2022-11-05 12:37:33 -0700  Kevin McCarthy  <kevin@8t8.us> (44b9bd4f)

        * Update UPDATING file for 2.2.8 release.

M	UPDATING

2022-11-04 13:18:51 -0700  Kevin McCarthy  <kevin@8t8.us> (db16ce47)

        * Add explicit void to 0-parameter function definitions.
        
        These are the errors output with:
          -Werror=implicit-int -Werror=implicit-function-declaration
          -Werror=int-conversion -Werror=strict-prototypes
          -Werror=old-style-definition

M	autocrypt/autocrypt_acct_menu.c
M	background.c
M	charset.c
M	curs_lib.c
M	menu.c
M	monitor.c
M	pattern.c

2022-11-03 14:01:12 -0700  Kevin McCarthy  <kevin@8t8.us> (0838a8f4)

        * Clarify $uncollapse_new documentation.
        
        Indicate more clearly it is talking about "delivered" messages that
        arrive in a thread, not about the unread-status of those messages.

M	init.h

2022-11-01 20:22:06 -0700  Kevin McCarthy  <kevin@8t8.us> (b254f2fb)

        * Add a check for key->uids in create_recipient_set.
        
        For gpgme < 1.11.0, it used this function to create the encryption key
        list.  The '!' was interpreted differently back then, and it
        apparently didn't check if the returned key had any uids before
        referencing it.  Add a check to prevent a segv as in the public key
        block fix.

M	crypt-gpgme.c

2022-10-31 15:06:51 -0700  Kevin McCarthy  <kevin@8t8.us> (f0eb3586)

        * Fix public key block listing for old versions of gpgme.
        
        Commit 382355a5 accidentally removed the data import for legacy mode,
        which would cause it to produce empty output.

M	crypt-gpgme.c

2022-10-31 15:02:57 -0700  Kevin McCarthy  <kevin@8t8.us> (48b6ea32)

        * Fix gpgme crash when listing keys in a public key block.
        
        The gpgme code handling classic application/pgp assumed each key would
        have a uid.  Change it to check for a missing uid list.
        
        Also change it to list every uid (instead of only the first), and to
        put each one on a "uid" line in the output.
        
        The output is only for display, so the format change won't affect
        other parts of the code.
        
        Thanks to Mikko Lehto for the high quality bug report, detailing the
        exact place of the crash with a reproducing example and a workaround
        patch.

M	crypt-gpgme.c

2022-10-13 13:25:51 -0700  Kevin McCarthy  <kevin@8t8.us> (25b69530)

        * Allow Fcc'ing to IMAP in batch mode.
        
        There are some prompts that can cause it to abruptly fail, but it
        turns out SMTP has some of those too.
        
        For now, abort if $confirmcreate is set.
        
        Certificate prompts were fixed in commit c46db2be for 2.2.7.

M	imap/imap.c
M	send.c

2022-10-13 13:18:55 -0700  Kevin McCarthy  <kevin@8t8.us> (a1c86bd2)

        * Add fcc error handling in batch mode.
        
        If $fcc_before_send is set, then abort with an error message.
        
        If it's not set (the default), then continue on, as the message is
        already sent.

M	send.c

2022-10-09 11:13:15 -0700  Kevin McCarthy  <kevin@8t8.us> (9cfa36ea)

        * Fix scrolling when handling SIGWINCH in the index.
        
        The index had some (very very old) code which reset the scroll top
        during SIGWINCH handling.  This caused a recomputation of the top,
        which caused the index to jumble around randomly during resizing.
        
        The last few commits added SigWinch flag setting whenever
        mutt_endwin() was called, which meant this jumbling would occur much
        more often.  (For example when piping a message.)
        
        After looking more closely, this top reset seems to be unnecessary.  A
        full redraw needs to properly handle the case where "current" is
        outside the visible range, because a resize could occur in a called
        menu.  Additionally, the menu.c code does just fine without this, and
        is used for all the other standard menus in Mutt.
        
        Thanks to Vincent Lefèvre for helping test the SigWinch changes, and
        reporting this regression.

M	curs_main.c

2022-10-08 13:47:15 -0700  Kevin McCarthy  <kevin@8t8.us> (082ed14e)

        * Explicitly mention --with-sqlite3 in the INSTALL file.

M	INSTALL

2022-09-23 13:05:59 +0800  Kevin McCarthy  <kevin@8t8.us> (5649e381)

        * Set the curses resize policy to use tioctl()
        
        mutt_resize_screen() calls mutt_reflow_windows(), which records window
        sizes in those data structures.  After a endwin(), curses will also
        check the terminal size, but it if uses a different policy than Mutt,
        the screen will be drawn incorrectly.
        
        I looked into adding a config option to change this, but ran into a
        chicken-egg problem.  initscr() must be called before the config is
        processed, to allow for color setting.  However, use_env() must be
        called before initscr().  So for now, just set to policy to ignore the
        env vars, except as a fallback.

M	configure.ac
M	main.c

2022-09-21 13:03:22 +0800  Kevin McCarthy  <kevin@8t8.us> (fede64d0)

        * Remove unneeded calls in mutt_edit_file().
        
        The mutt_resize_screen() is no longer needed now that mutt_endwin()
        sets SigWinch.
        
        The keypad() and clearok() calls are generally only needed if a
        program takes over the screen unexpectedly (without Mutt having run
        endwin()).

M	curs_lib.c

2022-09-21 13:02:40 +0800  Kevin McCarthy  <kevin@8t8.us> (9fb2755d)

        * Change a few cases of endwin() to call mutt_endwin().
        
        The remaining cases in the Mutt code are special cases, but these two
        should be fixed.  This ensures SigWinch is set.

M	commands.c
M	compress.c

2022-09-21 13:00:44 +0800  Kevin McCarthy  <kevin@8t8.us> (619db54f)

        * Add SigWinch = 1 to mutt_endwin().
        
        Since mutt_reflow_window() needs to be called on a resize, and it's
        possible for programs to block SIGWINCH being sent to Mutt, this is a
        fail-safe to ensure it's run.
        
        The previous commit moved SigWinch handling before refresh() in the
        menus, which should prevent double-refresh issues.

M	curs_lib.c

2022-09-19 18:41:48 +0800  Kevin McCarthy  <kevin@8t8.us> (925a2927)

        * Move SigWinch handling before refresh in menus.
        
        This will prevent an unneeded double-refresh after an endwin() when we
        set SigWinch in the next commit.
        
        In the pager, change RETWINCH handling to account for a sigwinch while
        in the handler.  Previously a redraw would occur and use/free the
        Resize data, but since the SigWinch check now occurs before the
        redraw, keep existing data.

M	curs_main.c
M	menu.c
M	pager.c

2022-08-30 15:31:24 -0700  Kevin McCarthy  <kevin@8t8.us> (e43a42bf)

        * Ensure pop_data is freed for mailbox and fetch-mail usage.
        
        <fetch-mail> was only free'ing the container and not the auth_list or
        timestamp used in authentication.
        
        Mailbox usage was never free'ing the pop_data object.
        
        Create a pop_free_pop_data() helper and use that in <fetch-mail>
        usage where the pop_data was being free'd before.
        
        Since the pop code always allocates and assigns a new pop_data object
        after each mutt_conn_find(), add a call to pop_close_mailbox() too.
        
        Just to make sure, reset connection->data before free'ing the pop_data
        in each case.

M	pop.c

2022-08-25 13:23:43 -0700  Kevin McCarthy  <kevin@8t8.us> (c46db2be)

        * Add error handling for cert prompts in batch mode.
        
        It looks like there are no batch mode checks before trying to throw up
        a curses menu for certificate prompts.
        
        This currently affects SMTP, and I guess either hasn't been an issue
        or people just learned to work around it.
        
        Mutt has no great way to deal with this, so at least for now display
        an error and abort verification gracefully as opposed to whatever was
        happening before (which could not have been pretty).
        
        Alas, this breaks my rule of adding translation strings in stable, but
        I couldn't find another appropriate string.

M	mutt_ssl.c
M	mutt_ssl_gnutls.c

2022-08-22 09:24:19 -0700  Ivan Vilata i Balaguer  <ivan@selidor.net> (56f1d398)

        * Updated Catalan translation.

M	po/ca.po

2022-08-07 10:20:17 -0700  Kevin McCarthy  <kevin@8t8.us> (4927240d)

        * automatic post-release commit for mutt-2.2.7

M	ChangeLog
M	VERSION

2022-08-07 10:15:32 -0700  Kevin McCarthy  <kevin@8t8.us> (7b41537e)

        * Update UPDATING file for 2.2.7 release.

M	UPDATING

2022-08-02 20:51:17 -0700  Kevin McCarthy  <kevin@8t8.us> (40228035)

        * Fix mutt_read_rfc822_line() to use is_email_wsp().
        
        ISSPACE() uses isspace() which is locale-dependent.  On some
        platforms, unexpected 8-bit chars, such as 0xa0 or 0x85 return true.
        
        When using $edit_headers, this can result in Subject: lines being
        truncated if a multi-byte character ending in one of these values is
        at the end of a line.
        
        There are probably other bugs that could be triggered by this, such as
        in IMAP parsing.  However, I need more time to investigate before
        making large-scale changes that could introduce new bugs.

M	parse.c

2022-08-04 10:25:26 +0200  Matthias Andree  <matthias.andree@gmx.de> (4d2b33ba)

        * Drop X509 *cert from sslsockdata, unused.
        
        Signed-off-by: Matthias Andree <matthias.andree@gmx.de>
        (cherry picked from commit 0d03501ac9ddd1a4a62a7274651d64da0c4c3865)

M	mutt_ssl.c

2022-07-29 19:52:45 -0700  Kevin McCarthy  <kevin@8t8.us> (a1a08067)

        * Change mutt_display_message() $pager to use %s if present.
        
        Other places in the code all use mutt_do_pager(), which uses
        mutt_expand_file_fmt().
        
        The use of %s was not documented (and likely not used since it's
        broken when displaying messages), so add documentation to the $pager
        option.

M	commands.c
M	init.h

2022-07-29 10:40:33 -0700  Kevin McCarthy  <kevin@8t8.us> (4f672027)

        * Overide SSL_CTX min/max protocol versions.
        
        Newer versions of OpenSSL disable old (insecure) protocols by default.
        Reset the allowed versions, so that Mutt's configuration variables
        enabling old protocols actually work if needed.
        
        Thanks to Matthias Andree for the patch, which this commit is based
        upon.

M	mutt_ssl.c

2022-03-04 15:26:56 -0800  Kevin McCarthy  <kevin@8t8.us> (b022931d)

        * Tighten $query_command parsing to allow empty name field.
        
        The documentation writes the output should be "each line containing a
        tab separated address then name then some other optional information".
        The wiki page at
        <https://gitlab.com/muttmua/mutt/-/wikis/MuttGuide/Aliases> also
        implies a single tab between each field.
        
        Since the function used strtok, consecutive tab delimeters were
        treated as a single delimiter.  This caused a missing name field to
        use the comment field as the name.
        
        Change the function to use strchr instead.  This is not without risk,
        as the functionality is old.  Who knows what all programs have been
        written that might assume initial, or multiple delimiters are
        acceptable...
        
        Thanks to Magnus Groß for reporting the problem along with a patch,
        which this commit is derived from.

M	query.c

2022-07-10 14:58:40 +0200  Matthias Andree  <matthias.andree@gmx.de> (135fb67e)

        * version.sh: fix robustness on git failure
        
        for instance, with untrusted directory under sudo.
        
        Signed-off-by: Matthias Andree <matthias.andree@gmx.de>

M	version.sh

2022-07-17 22:20:12 +0200  Matthias Andree  <matthias.andree@gmx.de> (607efef7)

        * de.po: Fix German certificate dialog translation.
        
        Remove the full-stop to ensure reader will continue reading rather
        than mistake this as a conclusion.
        
        Also, from: to: here translate to von: bis: (not an: which would be
        spatial not temporal).
        
        Finally, fix a mistranslation where SHA256 was translated as SHA1
        
        Reviewed by: Helge Kreutzmann <debian@helgefjell.de>
        Signed-off-by: Matthias Andree <matthias.andree@gmx.de>

M	po/de.po

2022-07-06 14:39:42 -0700  Kevin McCarthy  <kevin@8t8.us> (0614c38c)

        * Comment out undesirable default settings in smime.rc.
        
        Some distributions, such as Debian, use the contrib/smime.rc as a
        default system configuration file (under /etc/Muttrc.d).  However
        settings such as $smime_is_default and $crypt_autosign should not be
        enabled by default for everyone.
        
        Debian previously maintained a patch against the file, commenting out
        those settings, but the patch somehow got dropped and is causing
        confusion for Debian users.
        
        Since the settings aren't necessarily desirable for anyone who wants
        to use S/MIME, comment them out in the contrib file.

M	contrib/smime.rc

2022-06-09 09:22:03 -0700  Kevin McCarthy  <kevin@8t8.us> (97f8eee2)

        * Decrypt S/MIME when mime-forwarding with $forward_decrypt set.
        
        The code was performing a decode for S/MIME, but this had the effect
        of running attachments through the autoview routines.
        
        Change so it only performs a decrypt.  This is also how copying is
        handled in set_copy_flags(), so I believe the decode was just a
        mistake.

M	sendlib.c

2022-06-05 11:20:00 -0700  Kevin McCarthy  <kevin@8t8.us> (d1ee1314)

        * automatic post-release commit for mutt-2.2.6

M	ChangeLog
M	VERSION

2022-06-05 11:13:47 -0700  Kevin McCarthy  <kevin@8t8.us> (42c9d1ea)

        * Update UPDATING file for 2.2.6 release.

M	UPDATING

2022-05-27 14:58:23 -0700  Kevin McCarthy  <kevin@8t8.us> (44636260)

        * Fix $pgp_sort_keys sorting.
        
        Both gpgme and pgpkey used nonsensical comparison return values, for
        example: "return r > 0".
        
        Adjust numeric comparisons to use mutt_numeric_cmp() and have the
        comparator return the result of the actual comparison.
        
        Adjust the "trust" sorting of gpgme to be the same as classic-pgp:
        putting restrictions at the bottom, but reverse sorting validity,
        length and timestamp values so they come first in the list.

M	crypt-gpgme.c
M	pgpkey.c

2022-05-22 19:03:33 -0700  Kevin McCarthy  <kevin@8t8.us> (818ea32c)

        * Adjust browser and sidebar numeric sorting to use mutt_numeric_cmp()
        
        Large values shouldn't use subtraction into an integer return type, so
        just convert all of them to use the macro, to be safe.

M	browser.c
M	sidebar.c

2022-05-27 13:24:11 -0700  Kevin McCarthy  <kevin@8t8.us> (f8336984)

        * Fix mbrtowc() error handling in mutt_which_case().
        
        The function did not reset the increment value on a -2 return value.
        
        Increase the maximum conversion size to the string length, and check
        for -2.  Since we're looking at the whole string, we can then just
        terminate the loop on either value, assuming a case-sensitive search.
        
        mbrtowc() will return -2 if passed n==0, so add an explicit check for
        the end of string and a positive n count.

M	pattern.c

2022-05-27 13:22:22 -0700  Kevin McCarthy  <kevin@8t8.us> (def28317)

        * Fix mbrtowc() error handling in check_alias_name().
        
        The function did not reset the increment value on any error.  Increase
        the maximum conversion size to the string length, and check for -2.
        Since we're looking at the whole string, we can then just terminate
        the loop on a -2 return value.

M	alias.c

2022-05-26 11:29:15 -0700  Kevin McCarthy  <kevin@8t8.us> (51c67ba9)

        * Convert my_width() to use mbrtowc().
        
        This allows handling a single corrupted character vs an incomplete
        multibyte character differently, as other parts of Mutt do.

M	sendlib.c

2022-05-25 20:59:39 -0700  Kevin McCarthy  <kevin@8t8.us> (ca960228)

        * Fix header folding my_width() calculation.
        
        After calculating the width of a character, the routine would only
        increment the string pointer by one byte.  Any errors returned by
        mbtowc() would also increment the width by one.  This means multibyte
        characters would overcount width by the number of bytes minus one.
        
        Change it to check the return value and use that value to increment
        the string pointer.
        
        Change mbtowc() to look at the whole rest of the string instead of
        just MB_CUR_MAX, as the manpage says even MB_CUR_MAX may not be enough
        in some circumstances.
        
        Since we calculate strlen, use that as well as '\0' for the loop
        termination check.  Also check for mbtowc() returning 0 just for extra
        safety.
        
        Reset the internal mbstate_t before converting, and on any error.
        
        If mbtowc() returns an error, use replacment_char() as a substitue for
        width calcluation, as mutt_strwidth() and other parts of Mutt do.

M	sendlib.c

2022-05-25 09:53:07 -0700  Kevin McCarthy  <kevin@8t8.us> (67bb3d35)

        * Filter Arabic Letter Mark due to display corruption.
        
        Under GNU Screen, the directional marker causes display corruption in
        the index.
        
        This (along with past filters added) should perhaps be considered GNU
        Screen bugs.  They've been reported upstream a while ago, but so far
        not received any attention.  So for Mutt users' benefit it's better to
        filter them out for now.
        
        Thanks to Vincent Lefèvre for debugging and reporting the problem,
        along with providing historical information from similar past issues.

M	mbyte.c

2022-05-21 09:18:04 -0700  Kevin McCarthy  <kevin@8t8.us> (ceb6c4fc)

        * Fix browser completion path expansion to preserve a trailing slash.
        
        The browser lists the contents of a directory passed as 'f' when it
        has a trailing slash; without, it lists everything matching that name
        in the parent directory.
        
        Since the browser does its own relative path expansion, we can just
        use mutt_buffer_path_norel() to keep a trailing slash in 'f'.

M	browser.c

2022-05-21 09:07:23 -0700  Kevin McCarthy  <kevin@8t8.us> (599806a0)

        * Decouple expand_path() relpath vs trailing slash handling.
        
        This change was originally done for the next commit, to fix browser
        completion handling.  However, I discovered the browser does its own
        relative path expansion, and could just be fixed by using the _norel()
        version.
        
        Still, I think this change is a good idea in any case.  There may be a
        few more fixes needed that require relpath expansion while keeping
        trailing slashes.
        
        Since the number of flag parameters to expand_path would become
        excessive by adding a "remove_trailing_slash" paremeter, convert it to
        use a single 'flags' parameter instead.

M	hook.c
M	mutt.h
M	muttlib.c
M	protos.h

2022-05-20 08:51:05 -0700  Helge Kreutzmann  <debian@helgefjell.de> (5006b546)

        * Update de.po.

M	po/de.po

2022-05-19 12:36:06 -0700  Kevin McCarthy  <kevin@8t8.us> (80d90e0c)

        * Document $sendmail invocation behavior.
        
        This variable is handled differently from other "command" variables in
        Mutt.  It's tokenized by space and then executed via execvp().  This
        means spaces in command/arguments are not supported, and neither is
        shell quoting.
        
        I don't know if it was done this way out of some security concern, but
        it seems like using mutt_system() and mutt_buffer_quote_filename() for
        recipient arguments should at least be investigated.

M	init.h

2022-05-16 10:20:30 -0700  Kevin McCarthy  <kevin@8t8.us> (a8c7fba1)

        * automatic post-release commit for mutt-2.2.5

M	ChangeLog
M	VERSION

2022-05-16 10:16:07 -0700  Kevin McCarthy  <kevin@8t8.us> (c94b511a)

        * Update UPDATING file for 2.2.5.

M	UPDATING

2022-05-13 15:37:58 -0700  Kevin McCarthy  <kevin@8t8.us> (6688bfbf)

        * Set gsasl hostname callback value.
        
        This is needed for GSSAPI, and apparently DIGEST-MD5 too.
        
        The gsasl documentation is a little confusing, saying it "should be
        the local host name of the machine", however the imap/auth_gss.c code
        seems to be using the server name, and the msmtp source also uses the
        server name for this callback.
        
        Thanks to brian m. carlson and Gábor Gombás for reporting this issue
        in Debian ticket 1010915, and an additional thanks to brian for
        quickly testing the fix.

M	mutt_sasl_gnu.c

2022-05-06 12:51:56 -0700  Kevin McCarthy  <kevin@8t8.us> (9d5db7cb)

        * Force IR with gsasl SMTP PLAIN authentication.
        
        Debian ticket 1010658 showed a server violating RFC 4954 by sending
        non-base64 data in the 334 response when Mutt sends "AUTH PLAIN"
        (without IR).
        
        The msmtp source also seems to force IR with PLAIN because it found
        other broken servers.
        
        So the best option seems to be just handling PLAIN specially for now.

M	smtp.c

2022-04-30 12:41:43 -0700  Kevin McCarthy  <kevin@8t8.us> (c3baa83e)

        * automatic post-release commit for mutt-2.2.4

M	ChangeLog
M	VERSION

2022-04-30 12:38:09 -0700  Kevin McCarthy  <kevin@8t8.us> (4d082513)

        * Update UPDATING file for 2.2.4 release.

M	UPDATING

2022-04-30 11:11:04 -0700  Kevin McCarthy  <kevin@8t8.us> (7dec694f)

        * Document $header_cache behavior change wrt directories.
        
        Although not documented, Mutt would previously intepret a
        $header_cache value ending in '/' as a directory even if it didn't
        exist.  The new DT_PATH normalization prevents this possibility, so a
        directory will need to be created in advance.
        
        I'm not fond of "fixing" regressions with documentation, but I believe
        this is a small issue, easily worked around for first-time use, and
        the benefits of the normalization are worth this small change.

M	doc/manual.xml.head
M	init.h

2022-04-28 12:48:09 -0700  Kevin McCarthy  <kevin@8t8.us> (a20ed9b4)

        * When expanding local paths, normalize to remove a trailing '/'.
        
        Commit 986e9e74 normalized Maildir/mh paths upon opening, to aid in
        mailbox comparison issues that can crop up (as the IMAP path
        normalization does).
        
        Unfortunately, this caused other problems in cases where users were
        explicitly adding a trailing '/' to their config settings, such as
        with buffy mailboxes, or with $spoolfile.
        
        To normalize properly, we need to do as the IMAP code does - both on
        the context opening, and expand_path (as imap_expand_path() and
        imap_fix_path() do).
        
        This also helps other cases; for example, the file browser returns
        entries without a trailing '/', while tab completion in the editor
        menu appends a trailing '/'.
        
        Right now the only regression I'm aware of is with $header_cache on
        first use, which I will document in the next commit.  If it turns out
        there are more important regressions I may have to back this and the
        original commit out.

M	muttlib.c

2022-04-21 22:58:48 +0300  Emir SARI  <emir_sari@icloud.com> (b69aed8e)

        * Minor translation fixes

M	po/tr.po

2022-04-12 11:23:07 -0700  Kevin McCarthy  <kevin@8t8.us> (d9199322)

        * automatic post-release commit for mutt-2.2.3

M	ChangeLog
M	VERSION

2022-04-12 11:14:38 -0700  Kevin McCarthy  <kevin@8t8.us> (03f8c660)

        * Update UPDATING file for 2.2.3.

M	UPDATING

2022-04-10 11:05:48 -0700  Kevin McCarthy  <kevin@8t8.us> (efe4186a)

        * Fix read past end of buf in is_mmnoask().
        
        buf is size STRING while the environment variable is copied into a
        LONG_STRING, so lng can be past the end of buf.  Swap the comparison
        order to make sure they match (and thus ensuring buf[lng] isn't
        outside the buffer).

M	handler.c

2022-04-09 13:32:33 -0700  Kevin McCarthy  <kevin@8t8.us> (f8264135)

        * Fix strlen() assigns to be of type size_t where obvious.
        
        Ticket 405 had an almost-exploit enabled by sloppy assignment of
        strlen().  There were more details involved, of course, but this
        served as encouragement to clean up obvious "strlen assignment to int"
        in the rest of the code.
        
        Note this is not *all* cases, only those that were simple and obvious.
        In some cases, the code assigns strlen() to an int but also uses that
        variable to hold negative values for another reason.  In other cases,
        an API is involved (e.g. SASL) that make changing potentially
        dangerous.  And lastly, some functions were just a bit too complicated
        to risk introducing a bug.

M	charset.c
M	compose.c
M	copy.c
M	crypt-gpgme.c
M	edit.c
M	handler.c
M	hcache.c
M	imap/auth_cram.c
M	imap/imap.c
M	init.c
M	muttlib.c
M	parse.c
M	pgp.c
M	sendlib.c
M	smime.c

2022-04-09 09:54:38 -0700  Kevin McCarthy  <kevin@8t8.us> (195bcad0)

        * Flush iconv() in mutt_convert_string().
        
        The man page says this ought to be done, and other places in Mutt do
        so.

M	charset.c

2022-04-08 21:07:46 -0700  Kevin McCarthy  <kevin@8t8.us> (f58a25cc)

        * Add convert_string() size check.
        
        This is similar to the mutt_convert_string() fix in the last commit.
        In this case there was no integer overflow issue, but there was still
        a (remote) possibility of obl wrapping, so add a check.
        
        Also, ensure there is at least one byte to terminate ob by allocating "obl
        + 1" size buffer, but passing obl to iconv().
        
        Note that mutt_convert_string() uses a multiplier of MB_LEN_MAX, while
        this function used 4.  I thought MB_LEN_MAX might be too large, but
        Tavis Ormandy was able to give a counter-example (0x82 in TSCII (Tamil
        SCII) requires 4 3-byte UTF-8 codepoints).  Convert this function to
        use MB_LEN_MAX, like mutt_convert_string().

M	rfc2047.c

2022-04-08 20:19:27 -0700  Kevin McCarthy  <kevin@8t8.us> (f26d304b)

        * Fix integer overflow in mutt_convert_string().
        
        In the case of a *very* large message header (which is possible via a
        compressed encrypted message) it's possible to overflow the incorrect
        assignment of strlen() to an int local variable.
        
        Thanks to Tavis Ormandy for the bug report and patch, which this
        commit is based upon.
        
        Although Tavis wasn't able to find an exploit, it was almost possible
        to make ob small and obl big, which would have allowed attacker
        control of a heap corruption.
        
        Change the strlen() to assign directly to ibl (of type size_t).  This
        prevents signed to unsigned conversion of len to ibl, which make the
        attack almost possible.
        
        Note that ibl should reflect the number of bytes to be converted by
        iconv(), so the change of ibl to strlen() instead of (strlen() + 1) is
        intentional, and correct.
        
        ob is allocated with an additional byte for a trailing nul, which is
        appended after the conversion.

M	charset.c

2022-04-05 13:14:47 -0700  Kevin McCarthy  <kevin@8t8.us> (4ae494ca)

        * Fix uudecode cleanup on unexpected eof.
        
        Clean up iconv state and state->prefix handling instead of just
        returning.  This is done for the other encoding handlers.

M	handler.c

2022-04-05 11:05:52 -0700  Kevin McCarthy  <kevin@8t8.us> (e5ed080c)

        * Fix uudecode buffer overflow.
        
        mutt_decode_uuencoded() used each line's initial "length character"
        without any validation.  It would happily read past the end of the
        input line, and with a suitable value even past the length of the
        input buffer.
        
        As I noted in ticket 404, there are several other changes that could
        be added to make the parser more robust.  However, to avoid
        accidentally introducing another bug or regression, I'm restricting
        this patch to simply addressing the overflow.
        
        Thanks to Tavis Ormandy for reporting the issue, along with a sample
        message demonstrating the problem.

M	handler.c

2022-03-25 13:07:34 -0700  Kevin McCarthy  <kevin@8t8.us> (aa28abe8)

        * automatic post-release commit for mutt-2.2.2

M	ChangeLog
M	VERSION

2022-03-25 12:58:51 -0700  Kevin McCarthy  <kevin@8t8.us> (dcfbfb16)

        * Update UPDATING file for 2.2.2 release.

M	UPDATING

2022-03-05 11:17:40 -0800  Kevin McCarthy  <kevin@8t8.us> (8babf6c0)

        * Protect prompt completion memcpy() calls with a NULL check.
        
        The behavior of memcpy() is undefined when dest is NULL, even if n is
        0.  It's possible to trigger this, somewhat deliberately, for these
        two cases, so add a guard check.

M	enter.c

2022-03-05 09:31:21 -0800  Kevin McCarthy  <kevin@8t8.us> (7c8992aa)

        * Fix mutt.man formatting.
        
        Thanks for the fix from Mario Blättermann and the manpages-l10n
        project.

M	doc/mutt.man

2022-03-05 09:12:53 -0800  Kevin McCarthy  <kevin@8t8.us> (e65fdf56)

        * Fix query menu tagging behavior.
        
        rfc822_write_address() will automatically prepend ", " to the buf
        parameter if it is non-empty.  Since query_menu() just appended ", "
        to buf, the '\0' marker is at "curpos + 2", and that should be passed
        as the offset instead.
        
        Prior to this fix, tagging would result in two comma-space separators
        between each tagged entry.
        
        Since rfc822_write_address() does the work too, we could just change
        query_menu() to pass rfc822_write_address(buf, buflen, tmpa, 0) each
        time.  But for a stable-branch fix I'll make the smallest change.
        
        As a note, I presume this hasn't been reported because (almost) no one
        uses tagging in this menu.  That may be because it requires hitting
        <select-entry> after tagging, which is non-intuitive.  I think it
        would be worth changing to allow tagging and then hitting <exit> too.

M	query.c

2022-02-21 12:19:30 -0800  Kevin McCarthy  <kevin@8t8.us> (bce2c294)

        * Fix some mailbox prompts to use mailbox history ring.
        
        Commit b0570d76, in the 2.0 release, improved some of the mailbox
        prompt flow and logic, creating a separate function for mailbox
        prompting.  At the same time it changed "save/copy to mailbox" to use
        that function and thus the mailbox history ring.
        
        Unfortunately, this created a partition between some other prompts
        that used the filename history ring but were actually prompting for
        mailboxes.
        
        Change those prompts: edit-fcc, and imap create/rename mailbox to use
        the mailbox history ring.  This will allow values to be shared between
        them and prompts such as "open mailbox" and "save/copy to mailbox".
        
        Ordinarily I wouldn't commit this to stable, but that change broke at
        least one person's workflow badly.

M	compose.c
M	imap/browse.c

2022-02-19 10:48:43 -0800  Kevin McCarthy  <kevin@8t8.us> (c8109e14)

        * automatic post-release commit for mutt-2.2.1

M	ChangeLog
M	VERSION

2022-02-19 10:42:53 -0800  Kevin McCarthy  <kevin@8t8.us> (58b6b76a)

        * Update UPDATING file for 2.2.1 release.

M	UPDATING

2022-02-17 14:38:04 -0800  Kevin McCarthy  <kevin@8t8.us> (30d18234)

        * Make sure username is included in header and body cache paths.
        
        Commit 960afab4 changed URL generation to preserve the data originally
        in the mailbox URL, to fix some internal comparison problems.
        
        Unfortunately, it also affected header and body cache generation.
        Since those could easily be shared across multi-muttrc situations,
        it's important the username be part of the pathname.
        
        Thanks to exg on the #mutt IRC channel for reporting the regression!

M	account.c
M	account.h
M	bcache.c
M	imap/command.c
M	imap/imap.c
M	imap/util.c
M	mutt_socket.c
M	pop.c

2022-02-15 00:15:28 +0300  Emir SARI  <emir_sari@icloud.com> (6457ac67)

        * Fix ambiguity in translation

M	po/tr.po

2022-02-12 10:57:33 -0800  Kevin McCarthy  <kevin@8t8.us> (7160e05a)

        * automatic post-release commit for mutt-2.2.0

M	ChangeLog
M	VERSION
M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/el.po
M	po/eo.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fi.po
M	po/fr.po
M	po/ga.po
M	po/gl.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/nl.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/sv.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po

2022-02-12 10:49:21 -0800  Kevin McCarthy  <kevin@8t8.us> (a5175478)

        * Set release date for 2.2.0 in UPDATING file.

M	UPDATING

2022-02-11 13:37:27 +0100  Grzegorz Szymaszek  <gszymaszek@short.pl> (cc7578a1)

        * Update the Polish translation for Mutt 2.2.0

M	po/pl.po

2022-02-09 22:58:23 +0300  Emir SARI  <emir_sari@icloud.com> (1c47970f)

        * Improve Turkish translations

M	po/tr.po

2022-02-06 14:53:01 -0800  Kevin McCarthy  <kevin@8t8.us> (70958893)

        * Fix mutt_paddstr() to properly filter unprintable chars.
        
        The original version of this function had no "replacement character"
        functionality, so it simply directly called addnstr() to display the
        characters if everything was okay.
        
        Commit a080fd35 added replacement logic, similar to
        mutt_format_string(), but forgot to change addnstr to use the
        replacement character.
        
        This means garbage characters could goof up the mutt display, for
        things such as the subject in the compose menu.
        
        We could add calls to wcrtomb() like in mutt_format_string(), but
        mutt_addwch() already does this, and properly calls wcrtomb() a second
        time to add a shift sequence if needed.

M	curs_lib.c

2022-02-05 14:01:39 -0800  Kevin McCarthy  <kevin@8t8.us> (fe3dd705)

        * Change mailto_allow to be exact match only.
        
        The code was previously reusing mutt_matches_ignore(), but that allows
        prefixes.  For mailto accepted headers we should be more picky.

M	url.c

2022-02-05 13:54:19 -0800  Kevin McCarthy  <kevin@8t8.us> (5c3c6e52)

        * Filter headers passed via the command line.
        
        The values passed via '-s' and mailto urls were not sufficiently
        sanitized, allowing an embedded newline that could be used to inject a
        header.

M	main.c
M	parse.c
M	protos.h
M	url.c

2022-02-05 09:22:44 -0800  Kevin McCarthy  <kevin@8t8.us> (d3b4ff88)

        * Fix mbox.man asctime(3) reference.
        
        The section number should not be part of the BR text.
        
        Thanks to @hmartink and the manpage-l10n project for the bug report!

M	doc/mbox.man

2022-02-04 18:33:34 -0500  Aaron Schrab  <aaron@schrab.com> (7d2a53ee)

        * Clarify description of $local_date_header
        
        When I reexamined the documentation of the $local_date_header option, I
        wasn't very confident about what it actually does. Much of what I did
        get from it came from a vague recollection of the discussion around when
        it was added, and I referred back to the commit which added this to
        solidify that understanding.
        
        Viewing this as a user (without looking at the internal implementation),
        I don't think the date is being converted, to me that implies that it
        was received from somewhere else in some other format; rather I'd view
        it as being initially generated in the local timezone.
        
        The reference to the "sender's timezone" makes me think that this would
        be operating on dates in messages received from other people; I've
        changed that to "your" to help clarify that it's about messages created
        locally.
        
        Finally, add information about what is done if this option is unset,
        along with some reasoning on why someone might want to unset this.

M	init.h

2022-02-02 12:51:08 -0800  Kevin McCarthy  <kevin@8t8.us> (c2ed716b)

        * Don't queue IMAP close commands.
        
        Commit e7df4d5a changed the close commands to queue up, on the theory
        that it will always be followed by a SELECT or a LOGOUT.
        
        However, performing a <recall-message> while in the inbox will open a
        *new* connection.  mutt_conn_find() prepends the new conection to the
        Connections list.  The next mailbox opened will use that *new*
        connection.
        
        The effect will be the queued CLOSE won't occur before that mailbox is
        opened, and so "\Deleted" messages won't be expunged on the server
        right away.
        
        If the user had $move set and reopened their $spoolfile, they would
        find the read messages marked for delete but not yet expunged from the
        server.

M	imap/imap.c

2022-02-02 06:47:45 -0800  Kevin McCarthy  <kevin@8t8.us> (92686e5d)

        * Update Finnish translation.

M	po/fi.po

2022-01-31 06:31:43 +0100  Flammie Pirinen  <flammie@iki.fi> (b485d04f)

        * update Finnish translations

M	po/fi.po

2022-01-30 10:15:20 -0800  Ivan Vilata i Balaguer  <ivan@selidor.net> (553f016e)

        * Updated Catalan translation.

M	po/ca.po

2022-01-30 09:21:58 -0800  Vsevolod Volkov  <vvv@mutt.org.ua> (c7053420)

        * Updated Russian translation.

M	po/ru.po

2022-01-30 09:19:01 -0800  Vsevolod Volkov  <vvv@mutt.org.ua> (db9ac4ad)

        * Updated Ukrainian translation.

M	po/uk.po

2022-01-29 14:24:52 -0800  Kevin McCarthy  <kevin@8t8.us> (8a6472f0)

        * Fix argc==0 handling.
        
        At least on Debian Linux, after invoking getopt() with argc==0, optind
        seems to remain at the default value of 1.
        
        mutt_dotlock was checking for optind==argc to report a missing
        parameter, and would end up invoking the function with the first
        environment variable instead.
        
        mutt, pgpewrap, and mutt_pgpring were assuming argv[0] was non-null,
        so just add a check and hardcode the value in that case to avoid a
        possible segv.
        
        mutt_pgpring allows no arguments.  Its parameters to
        pgpring_find_candidates() would pass the environment list and a
        negative nhints in that case.  The code seem to handle the case, but
        set optind=argc to be clear about it.

M	dotlock.c
M	main.c
M	pgpewrap.c
M	pgppubring.c

2022-01-29 11:46:56 -0800  Helge Kreutzmann  <debian@helgefjell.de> (46ff6ccb)

        * Update de.po.

M	po/de.po

2022-01-29 09:34:04 -0800  Helge Kreutzmann  <debian@helgefjell.de> (17452c87)

        * Update de.po.

M	po/de.po

2022-01-28 12:38:00 -0800  Emir SARI  <emir_sari@icloud.com> (7ae08fd5)

        * Update Turkish translations.

M	po/tr.po

2022-01-28 20:15:02 +0100  Petr Písař  <petr.pisar@atlas.cz> (df4eb293)

        * Update Czech translation for mutt-2.2.0

M	po/cs.po

2022-01-28 09:34:39 -0800  Kevin McCarthy  <kevin@8t8.us> (0864ef75)

        * Update translation files copyright string.
        
        Thanks to Vincent Lefèvre for reminding me to do this too.

M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/el.po
M	po/eo.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fi.po
M	po/ga.po
M	po/gl.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/nl.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/sv.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po

2022-01-28 15:11:18 +0100  Vincent Lefevre  <vincent@vinc17.net> (7f5ff5f2)

        * Updated French translation.

M	po/fr.po

2022-01-27 15:35:30 -0800  Kevin McCarthy  <kevin@8t8.us> (821803cd)

        * Fix $status_format documentation of $sort_thread_groups expando.

M	init.h

2022-01-27 14:29:35 -0800  Kevin McCarthy  <kevin@8t8.us> (890eb88c)

        * Initial draft of UPDATING file changes for 2.2.0.

M	UPDATING

2022-01-27 13:04:37 -0800  Kevin McCarthy  <kevin@8t8.us> (23ef6eb1)

        * Update source file copyright lines based on commit history.
        
        This is based on the copyright-updater script.  That script only
        updates existing copyright lines in the headers.  Other copyright is
        stored in the commit history.

M	background.c
M	buffer.c
M	buffer.h
M	buffy.c
M	hcachever.pl
M	send.h
M	sidebar.c

2022-01-27 12:18:57 -0800  Kevin McCarthy  <kevin@8t8.us> (ed65fe18)

        * Update manual and program copyright notices.

M	COPYRIGHT
M	doc/manual.xml.head
M	doc/mutt.man
M	main.c

2022-01-27 14:18:06 +0100  Vincent Lefevre  <vincent@vinc17.net> (4f9eac94)

        * Updated French translation.

M	po/fr.po

2021-12-31 18:30:17 -0800  Kevin McCarthy  <kevin@8t8.us> (2e8b6fea)

        * Add very basic cd path completion.
        
        This uses existing code to partially complete, and then launch the
        browser for selection.
        
        Unfortunately, completing a path argument brings up other issues, such
        as quoting, which this currently doesn't handle.  It also might be
        better to rotate through completions rather than launching the file
        brower.
        
        Add a "select directory" mode to the browser, modeled on the IMAP
        "enter vs select a mailbox with children" behavior: using <view-file>
        to select the directory and <select-entry> to enter the directory.

M	browser.c
M	enter.c
M	init.c
M	mutt.h

2021-12-31 15:24:01 -0800  Kevin McCarthy  <kevin@8t8.us> (2362c114)

        * Simplify the mutt_select_file() call for MUTT_CMD completion.
        
        Flags never has both MUTT_CMD and MUTT_MAILBOX, so there is no need
        for the test.

M	enter.c

2021-12-31 15:10:25 -0800  Kevin McCarthy  <kevin@8t8.us> (bc01beeb)

        * Add memcpy on MUTT_CMD completion to invoke the file selector.
        
        It looks like commit 844a133f (21 years ago) accidentally removed the
        memcpy while refactoring, but without it the mutt_select_file() won't
        be called on the second tab keypress.

M	enter.c

2022-01-22 14:10:24 -0800  Kevin McCarthy  <kevin@8t8.us> (05b0dd2c)

        * Enable $rfc2047_parameters by default.
        
        20+ years later, Mutt still gets bug reports about attachment names in
        2047 encoded form.
        
        Although there is a tiny chance an attachment could legimately want to
        be named like that, it's far far more likely the sending MUA has
        incorrectly encoded the value.
        
        When a user has this problem, the "solution" is also difficult to
        find, unless they are initimately familiar with RFC2047 vs 2231.  So I
        think users would benefit much more from this being set by default.

M	init.h

2022-01-17 15:36:55 -0800  Kevin McCarthy  <kevin@8t8.us> (4015c9a0)

        * Set environ for sendmail execvp() call.
        
        The code previously tried to use execvpe(), but that's a glibc
        extension.  However, it's not hard to manually set environ before an
        execvp() call to accomplish the same thing.

M	sendlib.c

2022-01-17 09:54:11 +0100  Vincent Lefevre  <vincent@vinc17.net> (fcd3d956)

        * Updated French translation.

M	po/fr.po

2022-01-14 15:17:38 -0800  Kevin McCarthy  <kevin@8t8.us> (2387728b)

        * Convert SMTP cyrus sasl to use buffers.
        
        Use the smtp_get_auth_response() added for gsasl, to allow
        multi-response lines and arbitrary length server response lines.  The
        rfc notes that SASL lines are not constrained by the SMTP line length
        limits.
        
        Since everything was a bit tangled together before, change the output
        and base64 conversion to use buffers too.

M	smtp.c

2022-01-15 12:31:16 -0800  Robert Bartel  <r.bartel@gmx.net> (44269756)

        * Move hard_redraw() after sendmail invocation.
        
        If a curses gpg pinentry is displayed by the $sendmail program, the
        keypad() needs to called afterwards for it to re-enable function/arrow
        keys.

M	sendlib.c

2022-01-15 11:19:05 -0800  Kevin McCarthy  <kevin@8t8.us> (100d6f3b)

        * Revert "Add $reply_prefix."
        
        This reverts commit 9c1ce59874ce1c8e97d0c5bd71847596dafb1d50.
        
        The change is controversial, and probably ill-advised.  Thanks to
        everyone for the feedback.

M	globals.h
M	init.h
M	send.c

2022-01-13 14:35:20 -0800  Kevin McCarthy  <kevin@8t8.us> (5b8e4605)

        * Add config.h dependency for keymap_defs.h generation.
        
        Ensure the header is regenerated if configure is re-run.  The $(OPS)
        list might change as a result of re-configure, but the timestamps of
        those files won't.  However, config.h will change so we can check that
        as a dependency.

M	Makefile.am

2022-01-10 17:53:09 -0800  Kevin McCarthy  <kevin@8t8.us> (4eff6049)

        * Force resort_init if $reply_regexp changes.
        
        Simply changing real_subj isn't enough to make sure the change is
        reflected in the current index.  There may actually be a more subtle
        way to achieve this, but for now I'll just dump the subj_hash and
        force rethreading.

M	init.c
M	init.h

2022-01-10 14:37:06 -0800  Kevin McCarthy  <kevin@8t8.us> (9c1ce598)

        * Add $reply_prefix.
        
        Allow the user to modify the subject prefix used in a reply.
        Hopefully this would be used sparingly, but nothing prevented a user
        from manually modifying the prefix themselves before.

M	globals.h
M	init.h
M	send.c

2022-01-10 14:00:40 -0800  Kevin McCarthy  <kevin@8t8.us> (466d3b8b)

        * Localize $reply_regexp.
        
        This will allow translators to add additional reply prefixes common to
        their locale.
        
        Add more documentation to the option, to explain the parts of the
        regular expression.  Give an example of adding more prefixes.
        
        Note that the result of this is stored in the header cache.  Probably
        people rarely were affected by this before, but with the new
        localization, people may experiment and need to be aware to turn the
        header cache off while testing.

M	doc/makedoc.pl
M	init.c
M	init.h

2022-01-09 15:28:23 -0800  Kevin McCarthy  <kevin@8t8.us> (cd3a5c85)

        * Fix $reply_regexp default value.
        
        The default value happened to work, but didn't make logical sense.  It
        was using a bracket expression that *included* a backslash, and
        left-bracket, 0-9, and again a backslash.  The first ']' closed the
        bracket expression, and then '+' matched that 1 or more times,
        followed by ']'.  Fortunately the whole parenthisized expression had a
        '*' so it would repeat matching, but as far as I can tell, it was
        working accidentally.
        
        Because even the fixed version is hard to understand, add some
        explanation of the parts to the documentation.

M	init.h

2022-01-09 14:57:07 -0800  Kevin McCarthy  <kevin@8t8.us> (3ca96fab)

        * Fix manual generation string_unescape() of backslash values.
        
        Since the values are shown as if double-quoted, backslash also needs
        to be properly escaped.

M	doc/makedoc.pl

2021-12-30 12:58:28 -0800  Kevin McCarthy  <kevin@8t8.us> (2926cf8c)

        * Merge branch 'stable'

2021-12-30 12:50:49 -0800  Kevin McCarthy  <kevin@8t8.us> (31b18ae9)

        * automatic post-release commit for mutt-2.1.5

M	ChangeLog
M	VERSION

2021-12-30 11:09:31 +0300  Emir Sarı  <bitigchi@me.com> (da60500d)

        * Improve Turkish translations

M	po/tr.po

2021-12-28 13:42:43 -0800  Kevin McCarthy  <kevin@8t8.us> (7855611a)

        * Add pager REDRAW_FLOW redraw flag when popping a menu.
        
        A setting change or window resize could take place in the called menu,
        which will require reflowing the pager when returning to it.
        
        When converting to the menu stack, I left in manual REDRAW_FULL redraw
        assignments, to be cautious and because it wasn't causing an problems.
        However, with the REDRAW_FLOW added, the pager menu needs to have
        those assignments removed after a menu call.

M	menu.c
M	pager.c

2021-12-28 13:25:54 -0800  Kevin McCarthy  <kevin@8t8.us> (5c7e2bce)

        * Merge branch 'stable'

2021-12-27 12:59:49 -0800  Kevin McCarthy  <kevin@8t8.us> (938f91de)

        * Add config variable mentions to Forwarding and Bouncing Mail.
        
        Mention $forward_attribution_intro, $forward_attribution_trailer, and
        $forward_format.

M	doc/manual.xml.head

2021-12-27 12:25:24 -0800  Kevin McCarthy  <kevin@8t8.us> (752a1b44)

        * Merge branch 'stable'

2021-12-25 14:00:02 -0800  Kevin McCarthy  <kevin@8t8.us> (89681e9e)

        * Merge branch 'stable'

2021-12-23 17:30:27 -0800  Kevin McCarthy  <kevin@8t8.us> (4fd19957)

        * Add new gsasl files to POTFILES.in.

M	po/POTFILES.in

2021-12-15 17:50:00 -0800  Kevin McCarthy  <kevin@8t8.us> (68caf914)

        * Add GNU SASL support for authentication.
        
        It turns out Cyrus SASL's license may not be compatible with GPL
        programs, see Debian Bug 999672.
        
        So, add support for the GNU SASL library, using configure option
        --with-gsasl.
        
        I haven't touched the Cyrus SASL code in Mutt all that much in the
        past, but I've done my best to keep the gsasl code clean and simple.
        There are likely mistakes to be fixed and additions to be made,
        though.
        
        I queried the gsasl mailing list about the need for a socket
        wrapper (as is done for the cyrus code), and it seems this should no
        longer be needed.  As long as GSASL_QOP is left at the
        default (qop-auth), the client should ask for authentication, and not
        negotiate integrity or confidentiality.  (Thanks to Phil Pennock and
        Simon Josefsson for their reponses - although the blame is fully
        on *me* if this turns out to be incorrect).  Therefore there is no
        CONNECTION wrapping in this implementation.
        
        Add multiline response support for SMTP authentication (which is
        probably not actually needed).  Also add arbitrary line length for the
        SASL server responses (the RFCs note that for SASL, the protocol line
        lengths don't apply).

M	Makefile.am
M	ascii.h
M	configure.ac
M	doc/makedoc-defs.h
M	imap/Makefile.am
M	imap/auth.c
M	imap/auth.h
A	imap/auth_sasl_gnu.c
M	main.c
A	mutt_sasl_gnu.c
A	mutt_sasl_gnu.h
M	pop_auth.c
M	smtp.c

2021-12-21 18:29:26 -0800  Kevin McCarthy  <kevin@8t8.us> (e3faeb03)

        * Add mutt_socket_buffer_readln().
        
        This will be useful for SMTP and POP SASL reading, where line of
        arbitrary length are required to be supported.

M	mutt_socket.c
M	mutt_socket.h

2021-12-20 15:37:16 -0800  Kevin McCarthy  <kevin@8t8.us> (22736484)

        * Merge branch 'stable'

2021-12-19 21:45:12 -0500  Mike Frysinger  <vapier@gentoo.org> (a4da1664)

        * simplify envelope subject handling code a little
        
        Avoid excess defines.  Compiled code is the same.

M	init.c

2021-12-14 13:36:15 -0800  Kevin McCarthy  <kevin@8t8.us> (80ba3a49)

        * Merge branch 'stable'

2021-12-13 18:55:14 -0800  Kevin McCarthy  <kevin@8t8.us> (f1cc1309)

        * Merge branch 'stable'

2021-12-11 13:22:40 -0800  Kevin McCarthy  <kevin@8t8.us> (fcecddaa)

        * Merge branch 'stable'

2021-12-07 14:46:12 -0800  Kevin McCarthy  <kevin@8t8.us> (ac348e19)

        * Merge branch 'stable'

2021-12-05 12:02:34 +0000  Torsten Franz  <torsten.franz@ubuntu.com> (9dbde32c)

        * Update de.po

M	po/de.po

2021-12-02 15:44:37 -0800  Kevin McCarthy  <kevin@8t8.us> (32c03d3d)

        * Fix sidebar counters with $maildir_trash.
        
        On close, the sidebar decrements deleted messages, but should not when
        $maildir_trash is set.

M	mx.c

2021-12-02 15:36:59 -0800  Kevin McCarthy  <kevin@8t8.us> (29ed0c2e)

        * Improve the statusbar modified flag for $maildir_trash.
        
        Add a context counter for the trash status flag.  Compare that to the
        number of deleted messages to determine modified state.
        
        Note that "undeleting" a trashed message will set context->changed.
        Without that we couldn't do a simple counter comparison.  But with
        context->changed checked first, we can assume equal trash and deleted
        flags then means there are no "delete" modifications pending.

M	init.h
M	mutt.h
M	mx.c
M	status.c

2021-12-01 18:12:11 -0800  Kevin McCarthy  <kevin@8t8.us> (ede3cf58)

        * Ignore $delete when sync'ing with $maildir_trash set.
        
        When closing a mailbox, the $delete quadoption is not consulted to
        determine whether to write out the T flags.  However, for some reason,
        sync was doing so.
        
        Since we aren't "purging" the messages, the prompt doesn't make sense.
        Make close and sync consistent by skipping the $delete check for sync.

M	init.h
M	mx.c

2021-11-24 13:51:32 -0600  Aaron Poffenberger  <akp@hypernote.com> (e8a01c1a)

        * Fix unused variable warning.

M	mutt_ssl.c

2021-11-20 14:21:29 -0800  Kevin McCarthy  <kevin@8t8.us> (04a7f1d9)

        * Allow an empty To: address prompt.
        
        If the user has $askcc or $askbcc configured, they may want to put
        addresses in those without filling in the To field.
        
        Instead check to make sure at least one of the fields is filled in
        after all the prompt before aborting.

M	send.c

2021-11-11 15:05:33 -0800  Kevin McCarthy  <kevin@8t8.us> (543e1151)

        * Convert COLOR_DEFAULT constant to -1.
        
        Previously, "mono" assigned -1 to fg/bg to indicate "unset" values.
        
        NCurses uses -1 to indicate "default" color (when supported), but
        COLOR_DEFAULT was assigned the value -2 and swapped at the last
        moment.  While it worked, I personally found this confusing.
        
        To make the logic clearer, create a COLOR_UNSET constant with value
        -2, and switch COLOR_DEFAULT to -1.  Then remove the last-minute
        translation when allocating the color.
        
        Change the "not set" initialization and testing to use COLOR_UNSET for
        clarity.
        
        Because map_getvaluebyname() returns -1 for a missing value,
        create a new lookup function that returns the matching mapping_t or
        NULL if not found.

M	color.c
M	init.c
M	mapping.h

2021-11-08 20:45:03 +0100  Charalampos Kardaris  <ckardaris@outlook.com> (f210e9a0)

        * [Fix] poll to use PollFdsCount and no PollFdsLen
        
        PollFdsLen tracks the maximum elements of the pollfd struct before
        needing reallocation, whereas PollFdsCount tracks the number of actual
        elements in it. Polling has to be done only on the actual number of
        elements.

M	monitor.c

2021-10-26 14:42:17 -0700  Kevin McCarthy  <kevin@8t8.us> (623eeb26)

        * Add a few mutt variable configure dependency comments.
        
        Add dependency comments to a few variables where it might not be
        obvious are dependent on the feature being enabled.
        
        While reviewing the dependencies, I noticed a couple #if could be
        indented for more uniformity in the file.

M	init.h

2021-10-22 18:08:48 -0700  Kevin McCarthy  <kevin@8t8.us> (75be20d6)

        * Fix color object case insensitive comparisons.
        
        In most of the color code, mutt_getvaluebyname() is used to compare
        against valid tables, which is (ascii) case insensitive.
        
        However, 'uncolor' and 'color quoted' for some reason used case
        sensitive comparison.
        
        The uncolor code can use object comparison instead, as the matching
        Fields value was just retrieve.  For 'color quoted', switch to using
        ascii_strncasecmp() instead.

M	color.c

2021-10-20 14:30:48 -0700  Kevin McCarthy  <kevin@8t8.us> (9c1c9182)

        * Correct multipart/alternative manual section slightly.
        
        Step three only selects from enriched, plain, and then html; not _any_
        text type.
        
        Step four considers any text type as one that Mutt can handle
        internally.

M	doc/manual.xml.head

2021-10-19 18:48:47 -0700  Kevin McCarthy  <kevin@8t8.us> (60ab5f11)

        * Add internal mutt_ctime() implementation.
        
        ctime() is marked obsolescent in the POSIX guide, so we ought to stop
        using it to ensure future portability.

M	from.c
M	mx.c
M	protos.h

2021-10-12 13:31:13 -0700  Kevin McCarthy  <kevin@8t8.us> (534f3ae0)

        * Improve pattern compiler whitespace skipping.
        
        Commit 564b515c fixed a problem with nested patterns, where trailing
        whitespace could cause a compilation error.  That fix added missing
        SKIPWS() calls in a couple branches.
        
        However, the real problem is that the loop doesn't ensure whitespace
        is skipped *before* checking for *ps.dptr.
        
        Rather than relying on all the case branches (and "eater" functions)
        to skip the whitespace after processing, rearrange the logic so the
        SKIPWS() is after the switch statement.

M	pattern.c

2021-10-09 19:55:00 +0200  Vincent Lefevre  <vincent@vinc17.net> (6270278f)

        * Updated French translation.

M	po/fr.po

2021-10-07 17:40:50 -0700  Kevin McCarthy  <kevin@8t8.us> (986e9e74)

        * Remove trailing slashes when opening maildir/mh mailboxes.
        
        IMAP cleans this up already (and file-based mailboxes don't allow it).
        
        It's easy to have this happen by tab-completing a maildir mailbox at
        the change folder prompt.  Removing the slash makes the display more
        uniform, and prevents some problems such as $trash folder comparison.

M	mh.c

2021-10-07 13:02:29 -0700  Kevin McCarthy  <kevin@8t8.us> (14618717)

        * Note that IMAP mailboxes polling doesn't support flag counts.
        
        The IMAP protocol only supports unread and total counts, but the
        manual had no mention of this.

M	doc/manual.xml.head
M	init.h

2021-09-28 15:02:34 -0700  Kevin McCarthy  <kevin@8t8.us> (466432b5)

        * Add $attach_save_charset_convert quadoption.
        
        This prompts to allow charset conversion of received text-type
        attachments.
        
        Mutt automatically converts when sending to a value from
        $send_charset.  If an attachment were automatically converted from
        utf-8 to iso-8859-1 on the sending side, then on the receiving
        side (also 99.9% likely to be utf-8 nowadays) it may not be helpful to
        save the the originally utf-8 attachment as iso-8859-1.  This can be
        especially destructive for attached patches or translation updates.
        
        Add the quadoption, defaulting to ask-yes so people know about it.
        With a quadoption, it can be easily completely turned off or made the
        default if the user desires.
        
        Add code to skip the prompt if converting from ascii to extended
        ascii (e.g. utf-8 or iso-8859-*).  There may be others too but this
        should cover almost all cases nowadays.

M	attach.c
M	init.h
M	mutt.h
M	muttlib.c
M	protos.h
M	recvattach.c

2021-09-25 14:28:18 -0700  Kevin McCarthy  <kevin@8t8.us> (769e5086)

        * Remove unneeded type save/restores around mutt_decode_attachment().
        
        The type save/restore seems to have been copied around the other crypt
        code calls to mutt_decode_attachment().  Remove it, because
        mutt_decode_attachment() makes no such changes.
        
        Note run_decode_and_handler() *does* need to save/restore because it
        manually assigns to b->type itself.

M	crypt-gpgme.c
M	pgp.c
M	smime.c

2021-09-24 16:23:35 -0700  Kevin McCarthy  <kevin@8t8.us> (c0536334)

        * Improve smime_verify_one() error handling and general flow.
        
        mutt_decode_attachment() does not change offset, length, or type.  The
        previous commit added a const modifier to its BODY parameter to assert
        that point.
        
        The save/restore appears to be copy/pasted from other code.  The
        length/type are assigned to if the BODY is passed to a helper function
        after the decode, but that's not the case here.  Remove the
        backup/restore code of the sigbdy fields.
        
        The smime_invoke_verify() call uses the signedfile directly, not the
        STATE parameter.  Remove the code to swap s->fpin before calling
        smime_invoke_verify().
        
        Improve the error handling to properly close file handles and unlink
        all temp files.

M	smime.c

2021-09-24 19:12:35 -0700  Kevin McCarthy  <kevin@8t8.us> (2077f72e)

        * Assert mutt_decode_attachment() doesn't modify body fields.
        
        Some old smime (and other parts of the code) have out of date comments
        asserting mutt_decode_attachment() modifies the body length, offset,
        and type fields.
        
        Add a const modifier to the parameter and called functions to assert
        this is not the case.

M	crypt.c
M	handler.c
M	mutt_crypt.h
M	muttlib.c
M	protos.h

2021-09-23 14:58:54 -0700  Kevin McCarthy  <kevin@8t8.us> (d0d40a33)

        * Don't use subtraction for qsort numeric value comparisons.
        
        Subtraction can overflow, resulting in incorrect sorts.  This is
        especially a concern for the date and size sorting, whose fields are
        greater than an 'int' size.
        
        The index values should be okay, but it's better to be consistent and
        avoid any possible issues.
        
        Define a macro, mutt_numeric_cmp(), that uses direct comparison rather
        than subtraction.

M	imap/imap.c
M	lib.h
M	sort.c
M	thread.c

2021-09-23 13:29:25 -0700  Kevin McCarthy  <kevin@8t8.us> (4153ae96)

        * Fix alias menu multi-select documentation.
        
        The manual mistakenly said to use <select-entry>, which is not (and
        never has been) supported by the code.  Change it to <tag-entry>, and
        note that <Space> is bound to <tag-entry> in the alias menu.

M	doc/manual.xml.head

2021-09-23 13:14:46 -0700  Kevin McCarthy  <kevin@8t8.us> (64d09812)

        * Implement <select-entry> as <display-message> in index menu.
        
        The default keybindings of <display-message> overshadow those of
        <select-entry>.  However, for someone who rebinds (globally or just in
        the index menu), it's still possible to invoke <select-entry> inside
        the index.
        
        It's debatable if <display-message> is the only choice in this case.
        For instance, <attach-message> in the compose menu could conceivably
        make use of the function.  However that opens another set of issues,
        and as someone on mutt-users said is solving a problem no one has
        complained about.
        
        For now, I think <display-message> is the best choice outside of
        displaying an error message, so make it do that.

M	curs_main.c

2021-09-18 13:52:45 -0700  Kevin McCarthy  <kevin@8t8.us> (c1c94be1)

        * Use km_error_key() in index only for OP_NULL.
        
        Like other menus, just ignore unimplemented functions.

M	curs_main.c

2021-09-07 12:55:23 -0700  Kevin McCarthy  <kevin@8t8.us> (960afab4)

        * Generate URLs with user/password as parsed.
        
        This helps ensure they match for browser sticky-cursor, sidebar, and a
        few other places where a path is compared against
        something (e.g. $trash).
        
        Add two flags that track if the user/password came from the parsed
        URL.  If they were instead added to the account via $imap_user or
        $imap_pass, don't include those when generating a URL string as
        output.
        
        Change LSUB to also include the password, if present in the original
        connection URL.

M	account.c
M	account.h
M	imap/command.c
M	imap/util.c

2021-09-06 13:17:18 -0700  Kevin McCarthy  <kevin@8t8.us> (8bb11afe)

        * Ensure embedded IMAP passwords are stored in context->path.
        
        Without this, IMAP autoreconnect, background-edit Fcc, browser
        sticky-cursor, and sidebar "current" selection may not work properly.
        
        Change imap_qualify_path() to preserve the password if it is present
        in IMAP_MBOX for the generated URL.
        
        In almost all cases, DT_PATH types are run through
        mutt_pretty_mailbox(), which filters out the passwords, before
        displaying them in the UI.
        
        However there are a few cases where the context->path is displayed
        directly.  Create a new function, mutt_buffer_remove_path_password()
        to remove it and display that instead.

M	browser.c
M	imap/imap.h
M	imap/util.c
M	muttlib.c
M	mx.c
M	protos.h

2021-09-13 04:06:02 +0200  Vincent Lefevre  <vincent@vinc17.net> (d7d7b4b3)

        * Updated French translation.

M	po/fr.po

2021-09-10 13:25:58 -0700  Kevin McCarthy  <kevin@8t8.us> (49943c2a)

        * Merge branch 'stable'

2021-09-09 09:24:51 -0700  Kevin McCarthy  <kevin@8t8.us> (395a5a1d)

        * Merge branch 'stable'

2021-08-31 11:26:07 -0700  Kevin McCarthy  <kevin@8t8.us> (a6d83ff6)

        * Fix yesorno help prompt printing of choice.
        
        Commit d0b9bec8 added a '?' choice to print the variable controlling
        the prompt.  However, it didn't properly relocate the cursor after
        hitting '?'.  Make sure the "yes" or "no" is echoed in the collapsed
        MessageWindow.

M	curs_lib.c

2021-08-31 11:23:27 -0700  Kevin McCarthy  <kevin@8t8.us> (7358075a)

        * Add $compose_confirm_detach_first, default set.
        
        With the default keymap, hitting 'D' in the compose menu will remove
        parts and unlink owned files.  Mutt prevents removing all the parts,
        but if you have added attachments, this makes it very easy mis-type
        and accidentally nuke the message you've been composing.
        
        This option only checks for the first part - which is highly likely
        the main composed message.  It might be possible to try and make the
        check more intelligent, but I think a simple check will go a long way
        towards preventing disaster.

M	compose.c
M	init.h
M	mutt.h

2021-08-30 11:08:48 -0700  Kevin McCarthy  <kevin@8t8.us> (a5335121)

        * Add a comment about msn_seqset generation and header cache holes.

M	imap/message.c

2021-08-25 16:00:31 -0400  Craig Gallek  <cgallek@gmail.com> (f0ff78a5)

        * Use cms utility for SMIME encryption/decryption.
        
        The openssl smime utility only supports RSA keys for encryption (more
        specifically, the PKCS7 container that it uses can't be used with other
        key types).  The cms utility supports newer versions of the SMIME RFCs,
        including the use DH ephemeral-static algorithms for encrypting the
        symmetric key used during message encryption.
        
        This patch updates the suggested encryption/decryption commands, but
        does not change any of the commands used for signature
        generation/verification (as the smime sign/verify commands do support
        other key types).
        
        Debian seems to have already made this change[1] for the decryption path
        a while ago, but did not update the encryption command (current Debian
        patch for this file[2]).  There is a slight danger of updating the
        decryption command at the same time as the encryption command (as
        clients still trying to decrypt with smime could have problems reading
        messages encrypted with cms), but the existence of that Debian bug seems
        to imply that there is already a source of messages using the newer CMS
        format.
        
        I verified that I am now able to encrypt a message with public key type
        id-ecPublicKey.  Previously, this resulted in an error like:
        "encryption not supported for this key type:pk7_lib.c"
        
        [1] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=639533
        [2] https://sources.debian.org/patches/mutt/2.0.5-4.1/misc/smime.rc.patch/
        
        Signed-off-by: Craig Gallek <cgallek@gmail.com>

M	contrib/smime.rc

2021-08-24 13:18:22 -0700  Kevin McCarthy  <kevin@8t8.us> (27e61da5)

        * Merge branch 'stable'

2021-08-24 12:50:53 -0700  Kevin McCarthy  <kevin@8t8.us> (fa5f8810)

        * Merge branch 'stable'

2021-08-24 15:17:05 +0200  Vincent Lefevre  <vincent@vinc17.net> (67c16b7c)

        * Improve conststrings.c generation, mainly for GNU Autoconf 2.71.
        
        With GNU Autoconf 2.71, the "ac_cs_config=" line in config.status may
        contain sequences like '\'' when a configure argument has spaces in it,
        for instance CFLAGS with several options. Thus it is not sufficient to
        get this line with grep; one needs to eval it and output the result.
        
        GNU Autoconf 2.69 was including the whole $ac_cs_config value inside
        double quotes, and the previous code also had issues with configure
        arguments containing special characters (but spaces were fine).

M	Makefile.am

2021-08-24 02:29:55 +0200  Vincent Lefevre  <vincent@vinc17.net> (898eb3ca)

        * Updated French translation.

M	po/fr.po

2021-08-20 13:37:39 -0700  Kevin McCarthy  <kevin@8t8.us> (a7eabb26)

        * Merge branch 'stable'

2021-08-20 20:43:41 +0100  Edmund Grimley Evans  <edmund.grimley.evans@gmail.com> (2adf634c)

        * Update Esperanto translation.

M	po/eo.po

2021-08-16 18:41:23 -0700  Kevin McCarthy  <kevin@8t8.us> (4cce210a)

        * Add robustness checks to file attach functions.
        
        The compose fix in stable prevented an issue trying to attach a NULL
        filename, but the functions are called in other places.  For
        robustness sake, add checks to the functions too.

M	sendlib.c

2021-08-16 18:34:00 -0700  Kevin McCarthy  <kevin@8t8.us> (b7128e2a)

        * Merge branch 'stable'

2021-08-11 15:02:30 -0400  Craig Gallek  <cgallek@gmail.com> (3003857c)

        * Prompt for password when using encrypted client certificate
        
        This already worked when compiled against openssl, but not with gnutls.
        
        Signed-off-by: Craig Gallek <cgallek@gmail.com>

M	mutt_ssl_gnutls.c

2021-08-14 15:38:20 -0700  Kevin McCarthy  <kevin@8t8.us> (c9fa0414)

        * Lazily update header colors after a thread-flag update.
        
        Although there are other issues with threads and ~() color patterns,
        this helps with collapsed thread coloring.  The thread-flag update can
        change the matching pattern, but that should be determined after all
        the thread messages are changed.
        
        For example, a collapsed thread with deleted messages and a color
        pattern '~v ~(~D)' should display differently after <undelete-thread>.
        Changing it to update colors lazily allows correct coloring (for that
        case).

M	flags.c
M	mutt.h
M	protos.h
M	score.c

2021-08-03 11:08:22 -0700  Kevin McCarthy  <kevin@8t8.us> (5aa75ed2)

        * Add $sort_thread_groups for top-level thread sorting.
        
        closes #368.
        
        Rename THREAD->sort_key to sort_aux_key, to make the fields more
        distinct.  Add THREAD->sort_group_key for caching the top-level sort
        HEADER.  An additional value is needed to allow propagating up values,
        for place-holder threads, and for "last" sort handling.
        
        Add recalc_aux_key and recalc_group_key bits to THREAD, in addition to
        sort_children.  These are used to allow separate flagging of either
        the group key or aux key needing to be recalculated.  Adding these two
        fields helped me keep better track of how the subthread sorting was
        working, because I'm just not as smart the people who originally wrote
        the threading code.  :-)
        
        Fix up some of the logic with rescoring, and "first_message" to take
        the new config vars into account.
        
        Add %T expando to $status_format, and change the default to
        conditionally show the value based on whether $sort is "threads" and
        $sort_thread_groups is not "aux".
        
        Lastly, a thank you to Eric Blake.  He implemented separate
        thread/subthread sorting in the NeoMutt code, after suggesting it on
        the #mutt IRC channel a couple months ago.  When ticket 368 was opened
        he pointed me at his work and offered to port.  However, I couldn't
        pass up the opportunity to learn more about the thread code myself, so
        I declined his offer.
        
        Although no copy/pasting was done, the basic of structure of the
        mutt_sort_subthreads() changes is the same, and I did look at his
        modifications to the function for guidance.  Thank you Eric!

M	compose.c
M	curs_main.c
M	init.c
M	init.h
M	mutt.h
M	score.c
M	sort.h
M	status.c
M	thread.c

2021-07-31 18:34:28 -0700  Kevin McCarthy  <kevin@8t8.us> (b879daa7)

        * Make index sort compare functions independent from config variables.
        
        Previously, the various compare functions used the macros AUXSORT and
        SORTCODE internally.  Those macros performed auxilliary sort using the
        AuxSort global, and also directly referenced SortAux and Sort to
        determine whether to reverse the result.
        
        This made the compare functions inflexible to handle other uses, such
        as $sort_thread_groups, which will be introduced in the next commit.
        
        Instead, introduce helper functions in sort.c and thread.c that call
        the compare functions, and have their own logic for auxilliary sort
        and reverse.
        
        Remove the no longer needed Sort=SortAux assignment around thread
        sorting, and change mutt_sort_subthreads() to reference SortAux
        instead.

M	sort.c
M	thread.c

2021-07-28 15:44:57 -0700  Kevin McCarthy  <kevin@8t8.us> (02298c19)

        * Improve generic menu type handling.
        
        Some of the menus are directly of MENU_GENERIC type.  In a few places,
        Mutt handles those inefficiently or slightly incorrectly.
        
        Remove double "generic" lookups when Mutt is in a generic menu.
        
        Fix the help menu to not show unbound or "generic bindings" for a
        generic menu.
        
        For exec completion, always add generic functions to the possible
        completion list.

M	help.c
M	init.c
M	keymap.c

2021-07-25 14:45:56 -0700  Kevin McCarthy  <kevin@8t8.us> (4021ab59)

        * Break the menu OPS/funcs and keybindings into separate tables.
        
        Move the "extra" keybindings added manually inside km_init() into the
        keybinding tables instead.
        
        This allows the documentation in the manual to be generated correctly.
        
        It also corrects a small problem with duplicate OPS in the struct
        binding_t table.  The exec completion and unbound list in the help
        menu iterated the active binding_t table and assumed each OP appears
        only once.  When '\n' and '\r' were both added to the binding_t table,
        this broke the assumption and caused those to misbehave.

M	doc/gen-map-doc
M	functions.h
M	help.c
M	init.c
M	keymap.c
M	keymap.h

2021-07-22 15:44:42 -0700  Kevin McCarthy  <kevin@8t8.us> (f4ff768c)

        * Enable nonl() mode for ncurses.  closes #362.
        
        This patch is based on the patch from Mike Frysinger, archived from
        the old trac system at:
        https://gitlab.com/muttmua/trac-tickets/-/blob/master/attachments/3494/mutt-enter-return-hg-6658.patch
        
        This version creates a new key symbol, <KeypadEnter> for the KEY_ENTER
        value returned by getch().  According to Vincent Lefèvre's research,
        that corresponds to the "key pad" Enter key.  If KEY_ENTER is not
        defined, it binds the symbol to "\n".  It does this after the
        KeyNames[] definitions of <Enter> and <Return> so they remain the
        default shown by <what-key>.
        
        Since Mutt already accepts KEY_ENTER at the y/n prompt, add it for all
        the built-in operations too.
        
        Bindings with "\r" and "\n" in the binding_t structures don't need
        "<enter>" and "<return>" to be re-specified in km_init(), so remove
        those.  Instead add the "<KeypadEnter>" bindings there.
        
        Remove unnecessary Alias menu bindings for OP_GENERIC_SELECT_ENTRY in
        km_init().
        
        As a note: I don't believe non-extended key symbol bindings need to be
        bound inside km_init().  I'm not clear why this was done, or what
        purpose it serves.  I'll do a bit more research, but if I can't
        uncover any issues, will move them inside the binding_t structures in
        another commit.

M	doc/gen-map-doc
M	doc/manual.xml.head
M	functions.h
M	keymap.c
M	main.c
M	mutt_curses.h

2021-07-22 12:12:15 -0700  Kevin McCarthy  <kevin@8t8.us> (e0232be7)

        * Revert "Silence strfcpy() warning in dotlock_deference_symlink()."
        
        This reverts commit 8970a4793c302c0bb8619a5dde56c8ca8de20532.
        
        I didn't like making this nonsensical change, just to silence the
        compiler.  The last commit should turn off the warning for systems
        with memccpy().

M	dotlock.c

2021-07-22 12:10:16 -0700  Kevin McCarthy  <kevin@8t8.us> (2caacce6)

        * Use memccpy() in the strfcpy macro if it's available.
        
        Thanks to Ian Collier for making this suggestion!
        
        It's more efficient and disables unhelpful compiler warnings about
        strncpy(), since strfcpy is terminating the string itself.
        
        If memccpy() is unavailable, use strncpy() but keep the old behavior
        of strncpy() length C instead of C-1, as I believe it tickles less
        compiler warnings.
        
        Add parenthesis around macro parameter uses, to be safe.  Thanks to
        Vincent Lefèvre for pointing that out.

M	configure.ac
M	dotlock.c
M	lib.h

2021-07-22 11:57:32 +0200  Vincent Lefevre  <vincent@vinc17.net> (abd78fb4)

        * Fix typo in comment and function name: deference -> dereference.

M	dotlock.c

2021-07-21 13:26:25 -0700  Kevin McCarthy  <kevin@8t8.us> (8970a479)

        * Silence strfcpy() warning in dotlock_deference_symlink().
        
        The compiler is being a bit strange, only picking out and warning
        about the 'strfcpy (d, pathptr, l);' line at the bottom of the
        function, even though the source and dest are the same size.
        
        It seems a shame to leave just this last one, since all the other
        warnings (at least on Debian) have been vanquished.
        
        So, to calm the compiler down, "russian doll" the buffer size down the
        call stack "dotlock_dispatch() -> dotlock_prepare() ->
        dotlock_deference_symlink()".

M	dotlock.c

2021-07-19 10:21:16 -0700  Kevin McCarthy  <kevin@8t8.us> (3f9e99b2)

        * Add dprint for a backtick expansion with non-0 exit code.
        
        We don't want to abort, because that would change long-standing
        behavior, and in some circumstances a non-0 exit code might be
        expected.
        
        However, to make a potential unexpected problem easier to debug, add a
        dprint.
        
        This is also the behavior of mutt_FormatString() for a format pipe.

M	init.c

2021-07-17 15:34:41 -0700  Kevin McCarthy  <kevin@8t8.us> (1588a078)

        * Use SEEK_SET and SEEK_END for fseek/fseeko whence parameter.
        
        Thanks to Vincent Lefèvre for pointing out the incorrect usage.  POSIX
        does not specify the actual values (although they are evidently
        commonly in use).

M	attach.c
M	buffy.c
M	copy.c
M	crypt-gpgme.c
M	crypt.c
M	edit.c
M	handler.c
M	listmenu.c
M	mbox.c
M	pager.c
M	parse.c
M	pattern.c
M	pgp.c
M	postpone.c
M	sendlib.c
M	smime.c

2021-07-16 14:00:01 -0700  Kevin McCarthy  <kevin@8t8.us> (df727efb)

        * Rewrite mutt_apply_replace() to use buffers.
        
        This removes the size truncation limit.  It also removes a compiler
        warning about strncpy truncation.

M	muttlib.c

2021-07-13 14:43:47 -0700  Kevin McCarthy  <kevin@8t8.us> (f80f3ea1)

        * Increase scratch buf size in mutt_canonical_charset().
        
        This siliences warnings about the destination being smaller than the
        source when copying.

M	charset.c

2021-07-13 14:27:30 -0700  Kevin McCarthy  <kevin@8t8.us> (a6047765)

        * Change hdrline make_from(_addr) to use snprintf for from.
        
        The other fields all use snprintf().  For some reason the strfcpy in
        this case is tickling a compiler warning, so change the from to use
        snprintf too.

M	hdrline.c

2021-07-13 13:15:38 -0700  Kevin McCarthy  <kevin@8t8.us> (658e8e94)

        * Silence compiler warning in _mutt_buffer_select_file().
        
        Using a constant offset apparently allows the compiler to be smart
        enough to detect a potential problem, but it isn't smart enough to see
        we've already determined lastdirlen is non-zero.

M	browser.c

2021-07-12 19:40:08 -0700  Kevin McCarthy  <kevin@8t8.us> (6ecdb091)

        * Use memcpy in fseek_last_message() instead of strncpy.
        
        We are copying raw bytes and don't care about embedded nuls, so
        eliminate a compiler warning by using memcpy.  BUFSIZ is guaranteed to
        be at least 256.
        
        Adjust the weird BUFSIZ + 9 size, which was added by an old commit
        86f376dc that appears to have been a dead end.  Also remove the no
        longer relevant comment next to the strncpy.
        
        Although it may be "safer" to use strlen() for the mutt_strncmp()
        parameter, the code is performing this comparison over and over.  We
        already hardcode 7 in the buffer size and memcpy.  So, make this loop
        faster by hardcoding it here too.

M	buffy.c

2021-07-12 18:22:42 -0700  Kevin McCarthy  <kevin@8t8.us> (9b0a2631)

        * Fix mutt_sasl buffer size to hold ip_port strings.
        
        The output buffer wasn't quite big enough to hold the maximum size
        input buffer.

M	mutt_sasl.c

2021-07-12 18:06:01 -0700  Kevin McCarthy  <kevin@8t8.us> (10ef9aae)

        * Silence imap_make_date() warning by switching to a BUFFER.

M	imap/imap_private.h
M	imap/message.c
M	imap/util.c

2021-07-12 17:39:00 -0700  Kevin McCarthy  <kevin@8t8.us> (1977fbb4)

        * Silence compiler "may be uninitialized" warnings.
        
        For both of these cases, there is no actual bug.  But set them to 0 to
        make the compiler happy.

M	copy.c
M	imap/message.c

2021-07-17 15:13:44 -0700  Kevin McCarthy  <kevin@8t8.us> (2803adb2)

        * Merge branch 'stable'

2021-07-12 11:03:58 -0700  Kevin McCarthy  <kevin@8t8.us> (a1e71e64)

        * Merge branch 'stable'

2021-07-12 10:41:50 -0700  Kevin McCarthy  <kevin@8t8.us> (d5e626ce)

        * Merge branch 'stable'

2021-07-09 17:52:32 +0200  Vincent Lefevre  <vincent@vinc17.net> (2a9220b2)

        * Updated French translation.

M	po/fr.po

2021-07-09 06:09:48 -0700  Kevin McCarthy  <kevin@8t8.us> (6e7b6436)

        * Merge branch 'stable'

2021-07-06 13:12:50 -0700  Kevin McCarthy  <kevin@8t8.us> (d0b9bec8)

        * Add a help choice '?' to the yes or no prompt for quadoptions.
        
        The prompt currently just prints "See $%s for more information." where
        %s is the variable name.  This will at least give a pointer to what
        variable can be adjusted to change the prompt behavior.
        
        A handful of boolean variables also control prompt display.  Add a
        help choice for those too using the function mutt_query_boolean().

M	crypt-gpgme.c
M	curs_lib.c
M	curs_main.c
M	imap/imap.c
M	imap/message.c
M	init.c
M	muttlib.c
M	pgp.c
M	protos.h

2021-07-01 14:20:17 -0700  Kevin McCarthy  <kevin@8t8.us> (ab6bbb5b)

        * Filter out group delimiters for encrypt keylist generation.
        
        The group display-name and end delimiter shouldn't be included when
        generating the keylist.
        
        Also, filter them out for autocrypt operations.

M	autocrypt/autocrypt.c
M	crypt.c
M	protos.h
M	sendlib.c

2021-07-01 07:36:40 +0200  Aitor Soroa  <a.soroa@gmail.com> (9923ee67)

        * contrib/markdown2html: properly deal with lead-ins
        
        When matching lead-ins, make sure they are not quoted.

M	contrib/markdown2html

2021-07-01 07:34:34 +0200  Aitor Soroa  <a.soroa@gmail.com> (6943c01d)

        * contrib/markdown2html: properly deal with missing context
        
        Check that the proper variables exist e.g. "if prev is not None" instead of "if not prev". The latter causes malcfunctions when the variable is an e,pty string.

M	contrib/markdown2html

2021-07-01 07:49:50 +0200  Aitor Soroa  <a.soroa@gmail.com> (f891746f)

        * contrib/markdown: fix bug when dealing with quotelead classes
        
        The script tries to match previously written '<p>{.quotelead}' string
        without success, as '<p>' gets converted to '&lt;p&gt;' when creating the
        HTML version.

M	contrib/markdown2html

2021-06-30 20:25:45 +0200  Vincent Lefevre  <vincent@vinc17.net> (9888ab2f)

        * Exit with a failure for any usage or version write error.

M	main.c

2021-06-30 17:04:20 +0200  Vincent Lefevre  <vincent@vinc17.net> (1d2061b2)

        * Really fix usage and version write error checking.
        
        This had to be done for 'mutt -vv' too (in addition to -h and -v).
        No longer set errno = 0, unneeded due to the ferror() test.
        See issue #358.

M	main.c

2021-06-30 13:50:23 +0200  Vincent Lefevre  <vincent@vinc17.net> (768ba86a)

        * Fix usage and version write error checking.
        
        "fflush (stdout)" is needed to detect most errors (only a closed stdout
        could be detected otherwise). A ferror test is also needed to avoid
        false positives since the C standard allows errno to be set even in
        the absence of errors.

M	main.c

2021-06-29 13:23:09 -0700  Kevin McCarthy  <kevin@8t8.us> (e6bcc2de)

        * Add usage and version write error checking.
        
        'mutt -v' and 'mutt -h' did not check to ensure output actually
        printed to stdout.
        
        Technically, this is a lazy check, because many things can set errno,
        and it only checks errno at the end, rather than the return value of
        each write call.  I'm compromising correctness for code readability in
        this case, given these are just help and version output commands.

M	main.c

2021-06-29 12:29:42 -0700  Kevin McCarthy  <kevin@8t8.us> (72fecfd6)

        * Check stdout is a terminal in curses mode.
        
        Mutt uses the standard initscr(), which writes to stdout.  Ensure it's
        available (e.g. hasn't been closed or redirected).

M	main.c

2021-06-28 15:11:24 -0700  Kevin McCarthy  <kevin@8t8.us> (b5359339)

        * Add a hard redraw after oauth authentication.
        
        The sample contrib program can use gpg to decrypt a token.  This may
        pop up a curses agent prompt, requiring a hard redraw.
        
        It may be that we should be calling a hard redraw after any fork/exec.
        I don't know if this will cause more problems, so for now I'll just
        patch this one place.  But that is something to consider.

M	account.c

2021-06-28 15:07:15 -0700  Kevin McCarthy  <kevin@8t8.us> (e985ad2a)

        * Fix classic pgp decrypt_part() hard redraw on error.
        
        Ensure the hard redraw is set even if the decryption fails.  The agent
        prompt still may have appeared.
        
        Since we don't need to set environment variables afterwards, directly
        check the OPTUSEGPGAGENT option for the post-check.

M	pgp.c

2021-06-20 14:33:36 -0700  Kevin McCarthy  <kevin@8t8.us> (5cc548e1)

        * Merge branch 'stable'

2021-06-18 14:53:12 -0700  Kevin McCarthy  <kevin@8t8.us> (80ed1d85)

        * Reset SIGPIPE signal handler in child process before exec().
        
        Ignored signals, such as SIGPIPE in Mutt, are inherited by child
        processes.  This can cause incorrect behavior in filter-like programs
        that expect SIGPIPE to be the default value of "Term".
        
        A couple other places in Mutt already reset SIGTERM, SIGTSTP, and
        SIGCONT, with a comment mentioning it really wasn't necessary.  Since
        I don't much like messing with signals, I'll leave those resets in.
        
        Extract those plus SIGPIPE into a new function,
        mutt_reset_child_signals() and add that before each exec call.
        
        Thanks to Vincent Lefèvre for reporting the issue and for the initial
        patch, which this commit is based upon.

M	background.c
M	filter.c
M	mutt_tunnel.c
M	protos.h
M	sendlib.c
M	signal.c
M	system.c

2021-06-13 15:56:58 +0200  Rene Kita  <mail@rkta.de> (9155c657)

        * Add $pager_skip_quoted_context option.
        
        Using <skip-quoted> the first unquoted line becomes the new top line
        displayed in the pager. This leaves the user with no context to know
        what the answer refers to.
        
        Add an option to keep some lines of context when using <skip-quoted>.
        
        With $pager_skip_quoted_context set to 5, <skip-quoted> will show at
        most 5 lines of the previous quote. If the previous quote is shorter
        than 5 lines the whole quote will be displayed.
        
        This option defaults to 0 to remain backwards compatible.

M	globals.h
M	init.h
M	pager.c

2021-06-17 02:08:09 +0200  Vincent Lefevre  <vincent@vinc17.net> (4595cdb6)

        * Updated French translation.

M	po/fr.po

2021-06-13 14:58:47 -0700  Kevin McCarthy  <kevin@8t8.us> (86700b01)

        * Suggested translation changes.
        
        These were forwarded to mutt-po by Helge Kreutzmann, from his
        translation team.
        
        I've added comments to a couple places where the meaning was unclear.

M	OPS
M	autocrypt/autocrypt.c
M	compose.c
M	edit.c
M	muttlib.c
M	pattern.c
M	pop.c

2021-06-13 14:16:44 -0700  Kevin McCarthy  <kevin@8t8.us> (94d0285c)

        * Merge branch 'stable'

2021-06-13 14:12:30 -0700  Kevin McCarthy  <kevin@8t8.us> (3cf7a149)

        * Directly add full mailbox to GPG search hints.
        
        The code previously called (crypt/pgp)_add_string_to_hints(), which
        performs a strtok() using " ,.:\"()<>\n" and discards parts of size 3
        or less.
        
        This makes sense for personal fields, and random "stuff" entered in
        the getkeybystr() prompt.  But it doesn't make a lot of sense for the
        mailbox.
        
        There's no advantage I can see in chopping off and discarding the
        domain name for getting more relevant results.
        
        Ordinarily, I wouldn't bother fixing this, but in ticket 354 someone
        is experimenting with alternative backends, and they would like the
        full email address listed in the hints.

M	crypt-gpgme.c
M	pgpkey.c

2021-12-30 12:47:09 -0800  Kevin McCarthy  <kevin@8t8.us> (6fbb59cf)

        * Update UPDATING file for 2.1.5.

M	UPDATING

2021-12-27 13:45:21 -0800  Kevin McCarthy  <kevin@8t8.us> (a89a677c)

        * Reflow pager when setting $wrap.
        
        I somehow missed $wrap when adding commit 0636c24b.
        
        Lineinfo needs to be recomputed since color matching can change with
        the line wrapping change.

M	init.h

2021-12-26 15:43:27 -0800  Kevin McCarthy  <kevin@8t8.us> (c74cbba7)

        * Include <term.h> before invoking tigetstr() and tigetflag().
        
        On NetBSD, a segv was occurring in mutt_ts_capability() because
        tigetstr() was implicitly declared and thus defaulted to return type
        int.  The 8-byte (char *) actually returned was being converted to a
        4-byte int before being assigned to the (char *) variable.  This
        resulted in a corrupted pointer, causing a segv when dereferenced.
        
        I thought C99+ should warn about implicit declarations.  Although
        configure.ac AC_PROG_CC_C99 asserts the compiler can handle C99,
        perhaps it doesn't put the compiler in the mode to strictly enforce
        it.  (Thanks to rkta on IRC for the input).
        
        The solution, as the man page notes, is to include <term.h> before
        invoking those functions.
        
        Unfortunately term.h pollutes the namespace with all sorts of defines.
        Currently that include columns and lines, which are used inside Mutt.
        
        To help prevent issues, create Mutt wrappers for the functions and
        split them into a separate file, curs_ti_lib.c, that #include
        <term.h>, rather than just adding #include <term.h> to mutt_curses.h
        
        Apparently on some older platforms, #include <curses.h> would also
        include term.h, so make sure columns in undef'ed in mutt_curses.h.  (I
        think we would have heard about that problem already, but just in
        case.)
        
        A huge thank you to rahl on IRC for debugging this issue, and working
        with me over IRC to test various suggestions until the issue was
        found.  I didn't have access to a NetBSD instance, so rahl saved me
        much time and effort, and was crucial to fixing this bug.

M	Makefile.am
M	configure.ac
M	curs_main.c
A	curs_ti_lib.c
M	keymap.c
M	mutt_curses.h
M	po/POTFILES.in

2021-12-24 21:12:58 -0800  Kevin McCarthy  <kevin@8t8.us> (f58795c9)

        * Fix mutt_ts_capability() fallback list loop.
        
        The for loop termination check should be '*termp', not 'termp'.  termp
        starts as &known[0], so to check for the NULL terminator, we need to
        look at *termp.
        
        Since *termp is now checked in each loop, it no longer needs to be in
        the if check inside the loop, so remove it there.
        
        This hasn't been blowing up because the mutt_strncasecmp() check
        inside the loop was also incorrect.  It should be scanning for a
        matching entry, but was looking for non-zero (nonmatching) retval.
        Since term can't match both the first and second entries, it would
        always return 1 and would never get to the loop NULL terminator.

M	curs_main.c

2021-12-20 14:13:29 -0800  Kevin McCarthy  <kevin@8t8.us> (c60ffa27)

        * Fix SMTP response text potential buffer overread.
        
        mutt_socket_readln() returns the number of bytes, including the '\0'.
        smtp_code() only verifies 4 bytes (or a minimum strlen() of 3).
        
        The smtp_get_resp() and smtp_auth_sasl() were both looking at "buf+4"
        without verifying the string went past "buf+3".
        
        Note RFC 4954 and 5321 say there should be a trailing space on a
        response code with no text.  But if the server neglected that, buf+4
        would try to read or decode past the read data.

M	smtp.c

2021-12-13 19:31:04 -0800  Kevin McCarthy  <kevin@8t8.us> (5b318bc8)

        * Space unstuff flowed text for $send_multipart_alternative_filter.
        
        Mutt tries to hide the format=flowed stuff/unstuff processing from the
        user in other cases (when editing, viewing, piping, and printing, for
        instance).  It should also do this when piping the content to the
        alternative filter.

M	compose.c
M	protos.h
M	send.c
M	sendlib.c

2021-12-13 15:43:00 -0800  Kevin McCarthy  <kevin@8t8.us> (91474fdf)

        * Don't force SMTP authentication without a username or client cert.
        
        See Debian bug 1001013.  This is a regression from commit 191b0513,
        which fixed SMTP client certification authentication (see GitLab
        ticket 336).  However, that commit assumed the server wouldn't
        advertise AUTH if it wasn't needed, which the Debian ticket shows is
        not always the case.
        
        Client certificate support still relies on AUTH properly being set.
        
        Add a check for either the username or a cert before calling
        smtp_auth().  The username check was removed by the above mentioned
        commit, but more importantly the username is no longer set by the
        OpenSSL/GnuTLS client cert code.  (Which was the main problem
        addressed by the commit).  So there shouldn't be an issue with adding
        the username check back.

M	smtp.c

2021-12-11 13:15:27 -0800  Kevin McCarthy  <kevin@8t8.us> (93ef06ae)

        * automatic post-release commit for mutt-2.1.4

M	ChangeLog
M	VERSION

2021-12-11 13:11:39 -0800  Kevin McCarthy  <kevin@8t8.us> (138abb63)

        * Update UPDATING for 2.1.4.

M	UPDATING

2021-12-07 14:28:18 -0800  Kevin McCarthy  <kevin@8t8.us> (cc117960)

        * Loosen imap_open_mailbox() SELECT response data parsing.
        
        DavMail is putting more than one space between '*' and the EXISTS
        count, e.g. '*  5 EXISTS'
        
        Strictly speaking, this is disallowed by RFC3501 (see Section 9, Note
        2).  However, there is also no good reason for imap_open_mailbox() to
        be stricter than the untagged handler, which correctly extracts the
        count.
        
        Add a check to make sure we are looking at an untagged response, and
        then use imap_next_word() rather than just incrementing by two.
        
        Thank you to Michael Gernoth (@stargo) for debugging this issue,
        creating a merge request with a possible fix, and helping to test this
        commit.

M	imap/imap.c

2021-09-10 13:18:49 -0700  Kevin McCarthy  <kevin@8t8.us> (987dde4c)

        * automatic post-release commit for mutt-2.1.3

M	ChangeLog
M	VERSION

2021-09-10 13:12:50 -0700  Kevin McCarthy  <kevin@8t8.us> (a7d54a9f)

        * Update UPDATING for 2.1.3.

M	UPDATING

2021-09-08 09:29:09 -0700  Kevin McCarthy  <kevin@8t8.us> (a547111a)

        * Reduce sorting when expunging QRESYNC VANISHED records.
        
        There is no need to perform expensive sorting (e.g. by thread), which
        will just need to be done again after the mailbox is opened.

M	imap/message.c

2021-09-08 07:37:37 -0700  Kevin McCarthy  <kevin@8t8.us> (57c1017d)

        * Clean up more context fields on a QRESYNC reset.
        
        Reset ctx->size.
        
        Clear all hash structures.  Currently imap_expunge_mailbox() triggers
        a resort, which can populate some of these hashes.  The next commit
        will change that, but it's better to make sure there are no remnants
        in any hashes to avoid memory corruption.

M	imap/message.c

2021-09-08 04:15:11 -0700  Kevin McCarthy  <kevin@8t8.us> (1c819fd6)

        * QRESYNC: don't increment msn for missing headers.
        
        Commit 74ce032f moved the msn increment outside the check for a
        missing header.  The idea was that a header-cache hole needed to be
        accounted for.  However, a header can also be missing just by a VANISH
        happening the last time the mailbox was open.
        
        Since the header won't be in the uid_hash, cmd_parse_vanished() can't
        decrement subsequent msns, so it need to be done in this loop.
        
        If there is a header cache hole, or another problem, verify_qresync()
        will detect a problem and try again without QRESYNC.
        
        However if there were an actual stored "blank", do increment, since
        there was no UID to process a vanish on.

M	imap/message.c

2021-09-07 21:42:07 -0700  Kevin McCarthy  <kevin@8t8.us> (fa2fef46)

        * Fix compare_uid() to work with large UID values.
        
        The function was pulled from the other sort methods used in mutt.  But
        those don't work properly for a 32-bit unsigned value.  If the
        difference between two UID values is greater than a signed int can
        represent, it will sort improperly.
        
        Some of the other sort functions need to be fixed too, but that can be
        done in master.

M	imap/imap.c

2021-08-24 12:58:36 -0700  Kevin McCarthy  <kevin@8t8.us> (9a92dba0)

        * automatic post-release commit for mutt-2.1.2

M	ChangeLog
M	VERSION

2021-08-24 12:54:51 -0700  Kevin McCarthy  <kevin@8t8.us> (a86338a8)

        * Update UPDATING file for 2.1.2.

M	UPDATING

2021-08-21 18:42:33 -0700  Kevin McCarthy  <kevin@8t8.us> (74ce032f)

        * Preserve QRESYNC seqset holes when restoring from header cache.
        
        It's possible for there to be holes in the MSN sequence, and also in
        the header cache.  When iterating through the seqset, preserve those
        by incrementing msn even if the result isn't found in the header
        cache (because it is 0 or because the record is missing in the header
        cache).

M	imap/message.c

2021-08-21 14:55:43 -0700  Kevin McCarthy  <kevin@8t8.us> (b0f54225)

        * Don't include inactive messages in msgset generation.
        
        Currently only deleted messages that will be expunged are marked
        inactive, so it shouldn't be an issue.  However, before the previous
        commit (changing sorting by UID), I think there was a possibility for
        a bug if trailing expunge-marked messages with MAXINT index were also
        marked inactive.
        
        The sort change fixes that, but to make the code clearer just remove
        the possibility of inactive messages being included.

M	imap/imap.c

2021-08-21 13:00:12 -0700  Kevin McCarthy  <kevin@8t8.us> (647efbd1)

        * Sort headers by UID when generating a msgset sequence.
        
        When there is a hole in the header cache, the UID numbers are no
        longer guaranteed to increase with the index.  This can result in
        incorrect msgset values being sent to the server.
        
        Thanks to Pieter-Tjerk de Boer for reporting this problem, with a
        detailed description of the problem, and a suggested patch.
        
        Note to backporters:
        
        * this patch depends on the imap_disallow_reopen() added in commit
          6051760c2cf492ada1e06d910c0c2c05607c08bc for release 1.13.4.
        
        * the bug was introduced in release 1.9.0 so there is no need to
          backport earlier than that.

M	imap/imap.c
M	sort.h

2021-08-21 12:21:25 -0700  Pieter-Tjerk de Boer  <p.t.deboer@utwente.nl> (44f2619c)

        * Reset msn_begin on a QRESYNC failure retry.
        
        Since the msn_index will be regenerated differently, Mutt needs to
        scan for holes again.

M	imap/message.c

2021-08-20 13:28:55 -0700  Kevin McCarthy  <kevin@8t8.us> (a54bb201)

        * Properly free mail_followup_to when resending a message.
        
        This one has been in the code for quite a while!  Use the address free
        function to free all the parts instead of just FREE().

M	postpone.c

2021-08-16 18:31:11 -0700  Kevin McCarthy  <kevin@8t8.us> (eda54c6b)

        * Improve attach files handling of empty value.
        
        Hitting enter at the attach files prompt will still allocate an entry
        in the attachment array.  It might make sense to "abort" inside the
        prompt for that case, but it's a change of behavior to have the prompt
        do so.
        
        Instead, have the compose menu prompt skip NULL values.

M	compose.c

2021-07-13 14:44:29 -0700  Kevin McCarthy  <kevin@8t8.us> (6c0f75cc)

        * Fix strfcpy copy size in mutt_get_default_charset().
        
        If AssumedCharset contained a ':', the value could be larger than
        fcharset.  Ensure it's properly truncated.
        
        This also fixes a compiler warning.

M	charset.c

2021-07-13 14:30:33 -0700  Kevin McCarthy  <kevin@8t8.us> (19bdc79f)

        * Use strfcpy for edit_envelope() user-header subject.
        
        strncpy could leave an untruncated string.

M	send.c

2021-07-13 14:22:38 -0700  Kevin McCarthy  <kevin@8t8.us> (6637beb9)

        * Fix mutt_label_message to use strfcpy().
        
        strncpy could leave an unterminated string.

M	headers.c

2021-07-12 10:56:15 -0700  Kevin McCarthy  <kevin@8t8.us> (e2a89abc)

        * automatic post-release commit for mutt-2.1.1

M	ChangeLog
M	VERSION

2021-07-12 10:47:48 -0700  Kevin McCarthy  <kevin@8t8.us> (878e0388)

        * Update UPDATING file for 2.1.1 release.

M	UPDATING

2021-06-28 15:11:24 -0700  Kevin McCarthy  <kevin@8t8.us> (27f0a450)

        * Add a hard redraw after oauth authentication.
        
        The sample contrib program can use gpg to decrypt a token.  This may
        pop up a curses agent prompt, requiring a hard redraw.
        
        It may be that we should be calling a hard redraw after any fork/exec.
        I don't know if this will cause more problems, so for now I'll just
        patch this one place.  But that is something to consider.

M	account.c

2021-06-28 15:07:15 -0700  Kevin McCarthy  <kevin@8t8.us> (4035e100)

        * Fix classic pgp decrypt_part() hard redraw on error.
        
        Ensure the hard redraw is set even if the decryption fails.  The agent
        prompt still may have appeared.
        
        Since we don't need to set environment variables afterwards, directly
        check the OPTUSEGPGAGENT option for the post-check.

M	pgp.c

2021-07-09 11:49:26 +0200  Alexander Sulfrian  <asulfrian@zedat.fu-berlin.de> (94f5f35a)

        * listmenu: Fix parsing of list headers for mbox
        
        The parsing of the headers needs to skip the "From " lines at the start
        of the messages in mbox format. This now uses the same logic like
        mutt_read_rfc822_header in parse.c.

M	listmenu.c

2021-06-19 14:08:59 -0700  Kevin McCarthy  <kevin@8t8.us> (f5ccd687)

        * Fix menu.c sigwinch handling order.
        
        This fixes problems with a sigwinch that occurs during an external
        process, such as during a query menu lookup, or after exiting the
        background-edit landing page.  Without this change, the user would see
        a misdrawn screen and would need to press a key first.
        
        Change it so that the SigWinch flag is handled before reading input,
        so that the page is automatically redrawn.  This matches the behavior
        in the index, pager, and background-edit process list menu.

M	menu.c

2021-06-13 14:16:06 -0700  Kevin McCarthy  <kevin@8t8.us> (e1dfc2c4)

        * Fix getkeybyaddr() debug output.
        
        Add a NONULL wrapper and a newline at the end.

M	crypt-gpgme.c
M	pgpkey.c

2021-06-12 12:38:19 -0700  Ivan Vilata i Balaguer  <ivan@selidor.net> (9629d5d6)

        * Update Catalan translation.

M	po/ca.po

2021-06-12 10:48:43 -0700  Kevin McCarthy  <kevin@8t8.us> (4b100969)

        * automatic post-release commit for mutt-2.1.0

M	ChangeLog
M	VERSION
M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/el.po
M	po/eo.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fi.po
M	po/fr.po
M	po/ga.po
M	po/gl.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/nl.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/sv.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po

2021-06-12 10:40:18 -0700  Kevin McCarthy  <kevin@8t8.us> (bfccf9c6)

        * Update UPDATING file for 2.1.0 release.

M	UPDATING

2021-06-07 10:15:24 -0700  Vsevolod Volkov  <vvv@mutt.org.ua> (0b2be236)

        * Updated Russian translation.

M	po/ru.po

2021-06-07 10:14:14 -0700  Vsevolod Volkov  <vvv@mutt.org.ua> (6b458ebd)

        * Updated Ukrainian translation.

M	po/uk.po

2021-06-05 13:49:57 -0700  Kevin McCarthy  <kevin@8t8.us> (e8792708)

        * Minor UPDATING file fixes.

M	UPDATING

2021-06-05 13:48:05 -0700  Kevin McCarthy  <kevin@8t8.us> (bab86bf4)

        * Mention <browse-mailboxes> in the new-mail documentation.
        
        Add to the sentence mentioning '-y'.

M	doc/manual.xml.head

2021-06-03 10:40:22 +0200  Grzegorz Szymaszek  <gszymaszek@short.pl> (6a7f32a6)

        * Update the Polish translation for Mutt 2.1

M	po/pl.po

2021-05-31 16:55:39 +0200  Petr Písař  <petr.pisar@atlas.cz> (732efe2e)

        * Update Czech translatation for mutt-2.1.0

M	po/cs.po

2021-05-30 10:20:50 -0700  Helge Kreutzmann  <debian@helgefjell.de> (f0a64564)

        * Update de.po.

M	po/de.po

2021-05-29 12:39:25 -0700  Helge Kreutzmann  <debian@helgefjell.de> (b37d5aa1)

        * Update de.po.

M	po/de.po

2021-05-29 12:38:04 -0700  Kevin McCarthy  <kevin@8t8.us> (c728976c)

        * Revert "Update de.po."
        
        This reverts commit e450615f5b0a77539916d9e8542c9a64bca73c09.
        
        Author was not properly attributed.  Will reapply with author set.

M	po/de.po

2021-05-29 12:14:30 -0700  Kevin McCarthy  <kevin@8t8.us> (e450615f)

        * Update de.po.

M	po/de.po

2021-05-28 21:21:32 +0200  Flammie Pirinen  <flammie@iki.fi> (3d24855d)

        * Update Finnish translation

M	po/fi.po

2021-05-28 20:48:58 +0200  Eike Rathke  <erack@erack.de> (36fb911f)

        * Do not set From reverse name on postponed or to be resend messages
        
        Messages to be resend or resumed from postponed already had
        reverse names and alternates evaluated the first time they entered
        the compose menu and send-hook were already executed then. The
        user may also had edited the From to any other content before
        postponing or sending the message. Upon resuming, do not overwrite
        with a reverse_name lookup and do not remove the real name if
        reverse_realname=no is set.
        
        This restores the old behaviour and fixes the regression
        introduced with
        
            commit 961cf4bed679d9495cc3682d18496a53061d4581
            CommitDate: Mon Feb 1 14:00:56 2021 -0800
        
                Apply $reverse_name when tag-reply/forwarding too.

M	send.c

2021-05-28 20:29:03 +0300  Emir Sarı  <bitigchi@me.com> (ddd292b8)

        * Update Turkish translations

M	po/tr.po

2021-05-28 14:23:37 +0200  Greg Kroah-Hartman  <greg@kroah.com> (88845a41)

        * fix gcc-11 build warnings for H_TO_INTL()
        
        The macro H_TO_INTL() in mutt_idna.c, causes a lot of build warnings
        about the indentation of the if () line to try to warn the developer
        that it looks like this might be a bug:
        
        mutt_idna.c: In function ‘mutt_env_to_intl’:
        mutt_idna.c:327:5: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
          327 |     if (tag) *tag = #a; e = 1; err = NULL;              \
              |     ^~
        mutt_idna.c:333:3: note: in expansion of macro ‘H_TO_INTL’
          333 |   H_TO_INTL(return_path);
              |   ^~~~~~~~~
        mutt_idna.c:327:25: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
          327 |     if (tag) *tag = #a; e = 1; err = NULL;              \
              |                         ^
        mutt_idna.c:333:3: note: in expansion of macro ‘H_TO_INTL’
          333 |   H_TO_INTL(return_path);
              |   ^~~~~~~~~
        
        This goes on for many lines.
        
        Fix this up by properly indenting the lines so that gcc "knows" we mean
        well here.

M	mutt_idna.c

2021-05-28 14:38:41 +0300  Maxim Tarasov  <mu@magi.net.ru> (76276257)

        * Trim the ToC for the option list in the manual
        
        Currently, every variable is shown in the table of contents of the
        reference manual. Variable list is over 400 items long. This makes the
        ToC difficult to work with.
        
        Removing is done by adding an overwriting template for the parent of
        variables section (that is sect1 tag with id="variables"). In the
        DocBook source matching template calls another template named subtoc
        with two parameters: context (self element) and nodes (child
        sections). Normally a list of descendant nodes is passed here, but we
        don't want that and instead call subtoc with no parameters.
        
        This approach results in semantically correct code being generated in
        all modes.
        
        Note, that the ID (variables) will have to be kept in sync with XML
        generating code, but that is already hardcoded elsewhere.

M	doc/TODO
M	doc/mutt.xsl

2021-05-26 15:41:40 -0700  Kevin McCarthy  <kevin@8t8.us> (f60882fc)

        * Add debug statements around $hostname setting.
        
        This will make slowdowns due to DNS issues more obvious.

M	init.c

2021-05-26 15:30:20 -0700  Kevin McCarthy  <kevin@8t8.us> (30aea067)

        * Add draft 2.1.0 notes to UPDATING file.

M	UPDATING

2021-05-23 11:20:54 -0700  Kevin McCarthy  <kevin@8t8.us> (ff7c68cc)

        * Merge branch 'stable'

2021-05-23 11:19:02 -0700  Kevin McCarthy  <kevin@8t8.us> (9f40cc39)

        * Update irc channel to libera.chat.

M	doc/manual.xml.head

2021-05-14 18:55:00 -0600  Gregory Anders  <greg@gpanders.com> (4c786d87)

        * Add local_date_header option
        
        Add an option to convert the date used in the Date header into the local
        (sender's) timezone. This is the current behavior and the option
        defaults to true. Unsetting this option causes the date in the Date
        header to be formatted using the GMT timezone.
        
        This option is useful for privacy-sensitive users who may not wish to
        divulge their sending timezone.

M	init.h
M	mutt.h
M	sendlib.c

2021-05-04 11:03:32 -0700  Kevin McCarthy  <kevin@8t8.us> (791fc1c6)

        * Merge branch 'stable'

2021-05-04 10:55:15 -0700  Kevin McCarthy  <kevin@8t8.us> (481f3800)

        * automatic post-release commit for mutt-2.0.7

M	ChangeLog
M	VERSION

2021-05-04 10:38:24 -0700  Kevin McCarthy  <kevin@8t8.us> (bd29a9a0)

        * Merge branch 'stable'

2021-04-28 12:57:53 -0700  Kevin McCarthy  <kevin@8t8.us> (b24a1a25)

        * Add comments to the 2231 decode blocks.

M	rfc2231.c

2021-04-30 18:55:37 -0700  Kevin McCarthy  <kevin@8t8.us> (a10d0bb5)

        * Add sanitize call in print mailcap function.
        
        The mutt_rfc1524_expand_filename() function calls mutt_adv_mktemp(),
        which also calls the sanitizer.
        
        However, if the recv-mode suggested filename has a slash, it's better
        to sanitize before calling expand_filename() too, to preserve the
        entire filename (albeit with the slashes sanitized out).
        
        For example (ignoring name templates) if the file were called
        "either/or.pdf", pre-sanitizing would generate "either_or.pdf", while
        not doing so would generate "or.pdf".

M	attach.c

2021-04-27 13:37:21 -0700  Kevin McCarthy  <kevin@8t8.us> (98f0ca6b)

        * Add allow_8bit flag to sanitize_filename functions.
        
        This will allow "view" mailcap invocations and autoview invocations to
        display something reasonable for international file names.  Also add
        the flag to mutt_adv_mktemp(), which the mailcap viewer calls.
        
        Convert the 'slash parameter' to an ALLOW_SLASH flag.  This makes the
        flags consistent (both "allow" something not permitted by default),
        and invocations more readable.

M	attach.c
M	handler.c
M	lib.c
M	lib.h
M	muttlib.c
M	pop.c
M	protos.h
M	rfc1524.c

2021-04-29 12:54:41 -0700  Kevin McCarthy  <kevin@8t8.us> (fdee288a)

        * Modify makedoc.pl to read sort maps for the default value.
        
        Use the map tables to print out a correct default value for sort
        types.
        
        Remove the unneeded SORT_ALPHA type, for $sort_browser documentation,
        since we can do the lookup now.

M	doc/makedoc.pl
M	init.h
M	sort.h

2021-04-28 13:28:14 -0700  Kevin McCarthy  <kevin@8t8.us> (23b77a20)

        * Arrange sort maps by value instead of name.
        
        The value-to-name mapping uses the first match.  Grouping by value
        makes it more obvious when there are duplicates and which one will be
        printed out, e.g. when querying the value of a variable.

M	init.h

2021-04-28 13:21:17 -0700  Kevin McCarthy  <kevin@8t8.us> (bee3474f)

        * Move sort maps before vars in init.h.
        
        This is so makedoc.pl can read in the maps and use them to properly
        print out default values for the sort options.

M	init.h

2021-04-28 11:16:50 -0700  Kevin McCarthy  <kevin@8t8.us> (acb2bdd4)

        * Merge branch 'stable'

2021-04-25 15:01:07 -0700  Kevin McCarthy  <kevin@8t8.us> (515a315c)

        * Mention ~B in $thorough_search documentation.
        
        It affects ~b, ~B, and ~h.

M	init.h

2021-04-25 10:47:32 -0700  Kevin McCarthy  <kevin@8t8.us> (b2125bcd)

        * Keep file browser '..' entries at the top.
        
        This makes it easier to navigate up a directory when the file browser
        is sorted by a value other than "alpha".

M	browser.c

2021-04-24 15:10:22 -0700  Kevin McCarthy  <kevin@8t8.us> (2333015f)

        * Change browser sort "unsorted" to preserve the original order.
        
        Record entry numbers as they are added to the list, so re-sorting by
        "unsorted" can return to the original order.
        
        This is most useful for the mailboxes case, where "unsorted" should
        mean the order listed in the muttrc.

M	browser.c
M	browser.h
M	imap/browse.c

2021-04-24 14:56:39 -0700  Kevin McCarthy  <kevin@8t8.us> (f8984468)

        * Fix imap_add_folder() reallocation check.
        
        entrymax contains the number of slots allocated.  entrylen contains
        the current number of slots used.
        
        Note: there isn't a memory access bug here - it was merely
        reallocating too early.

M	imap/browse.c

2021-04-24 14:41:20 -0700  Kevin McCarthy  <kevin@8t8.us> (a877a29e)

        * Add $sort_browser_mailboxes configuration variable.
        
        This allows to control file browser sorting and mailbox browser
        sorting separately.

M	browser.c
M	browser.h
M	init.h
M	sort.h

2021-04-24 15:23:49 -0700  Kevin McCarthy  <kevin@8t8.us> (8b7dd25b)

        * Merge branch 'stable'

2021-04-23 18:35:30 -0700  Kevin McCarthy  <kevin@8t8.us> (30e657d3)

        * Improve sidebar drawing in small windows.
        
        Ensure the index window is given at least one column during reflow,
        truncating the sidebar width as necessary.
        
        Change the sidebar to use MuttSidebarWindow->cols instead of directly
        referencing SidebarWidth.

M	curs_lib.c
M	sidebar.c

2021-04-22 15:42:14 -0700  Kevin McCarthy  <kevin@8t8.us> (fe866a19)

        * Disable markers when wrap is at column 1.
        
        This can occur when the user resizes the window to a single column, or
        if they 'set wrap=1'.
        
        In that case, Mutt was outputting the '+' and setting the initial
        output to the second column.  However, if there is only one column,
        nothing would then be printed.  When trying to search or jump to end,
        Mutt would enter an infinite loop because no forward progress would be
        made in the file with each line.
        
        Disable the markers if there is only a single column, so at least one
        character of the message will get printed on each line.

M	pager.c

2021-04-19 18:53:30 -0700  Kevin McCarthy  <kevin@8t8.us> (8162c129)

        * Improve body_pattern and quoting when skipping down.
        
        The previous commit added the MUTT_TYPES flag to the search operation.
        However, adding the flag caused body_pattern and classify_quote
        matching to occur, as part of searching.
        
        Separate those two to only be done when MUTT_SHOWCOLOR is passed.  Keep
        the classify_quote() call in resolve_types(), since otherwise during a
        normal display we would end up matching the regexps twice.
        
        Add a flag so the computation only occurs once, instead of each time
        the line is shown.
        
        For continuation lines, we need to scan from the start of line.
        Otherwise body_patterns and proper quote level coloring won't appear
        if we jump down to the middle of a continuation line.
        
        As part of this commit, I noticed is_cont_hdr was not reset when
        handling a REDRAW_FLOW.  I believe this also fixes the old trac ticket
        issue 3744.

M	pager.c

2021-04-19 14:49:52 -0700  Kevin McCarthy  <kevin@8t8.us> (7bce3182)

        * Add MUTT_TYPES flag for pager search operation.
        
        This allows the display_line() search scanner to also determine the
        type of each line.  Without that, searching down would not be able to
        properly highlight header lines or quote lines.

M	pager.c

2021-04-19 14:48:01 -0700  Kevin McCarthy  <kevin@8t8.us> (f8e405b3)

        * Revert "Add type resolution when searching in the pager."
        
        This reverts commit aa308b67a983918eb59f1d7b5af543817c2cfd04.
        
        This may be what I want to push to master eventually, but this commit
        was accidental.  I need to test it more on a branch and add a better
        commit message before commiting to master.

M	pager.c

2021-04-19 14:45:01 -0700  Kevin McCarthy  <kevin@8t8.us> (aa308b67)

        * Add type resolution when searching in the pager.

M	pager.c

2021-04-19 14:20:47 -0700  Kevin McCarthy  <kevin@8t8.us> (4b6cd846)

        * Add a note about crypto operations being available interactively.
        
        They aren't available in batch mode.  This was mentioned in the "batch
        compose flow" section, but should be mentioned a bit more prominently
        in the manual.

M	doc/manual.xml.head

2021-04-18 14:54:02 -0700  Kevin McCarthy  <kevin@8t8.us> (10c66a53)

        * Mention 8-bit ansi color support in manual.

M	doc/manual.xml.head

2021-04-17 09:34:16 -0700  Kevin McCarthy  <kevin@8t8.us> (36a704cf)

        * Add cc, in-reply-to, and references to default mailto_allow list.
        
        Thanks to Gregory Anders for the ticket and suggested patch, which
        this commit is based upon.

M	doc/manual.xml.head
M	init.c

2021-04-13 18:02:31 -0700  Kevin McCarthy  <kevin@8t8.us> (0684a051)

        * Add a check to make sure pair doesn't overflow.
        
        It's not clear if COLOR_PAIRS can be larger than SHRT_MAX + 1, so make
        sure with a check.

M	color.c

2021-04-11 15:56:42 -0700  Kevin McCarthy  <kevin@8t8.us> (2d683201)

        * Fix ansi colors to use default bg/fg when not set.
        
        Note the ColorList stores COLOR_DEFAULT (-2) not -1, so we need to
        translate those values in mutt_alloc_ansi_color().  If the curses
        backend doesn't support default colors, we abort and just return color
        pair 0.

M	color.c
M	pager.c

2021-04-11 14:19:33 -0700  Kevin McCarthy  <kevin@8t8.us> (c20a5169)

        * Use bkgrndset() as ATTRSET() backend if available.
        
        This function allows more usable color pairs, because it passes the
        pair parameter separately.  The COLOR_PAIR() macro only returns 8-bits
        for a pair, limiting the total pairs used to 256 despite many systems
        having much larger COLOR_PAIRS values.
        
        In order to do this, separate out the pair and attrs values, instead
        of combining attr + COLOR_PAIR(pair) into a single value and storing
        that inside Mutt.  For the older calls, bkgdset() and attrset(), we
        call COLOR_PAIR() at the last minute.
        
        Add COLOR_ATTR to header cache sum calculation, since it is used in
        the HEADER now.

M	Makefile.am
M	color.c
A	color.h
M	commands.c
M	configure.ac
M	curs_main.c
M	hcache.c
M	hcachever.pl
M	menu.c
M	mutt.h
M	mutt_curses.h
M	mutt_menu.h
M	pager.c
M	protos.h
M	score.c
M	sidebar.c
M	thread.c

2021-04-10 11:33:58 +0200  Vincent Lefevre  <vincent@vinc17.net> (869c6cc4)

        * Updated French translation.

M	po/fr.po

2021-04-09 17:51:12 -0700  Kevin McCarthy  <kevin@8t8.us> (6a2e3dea)

        * Clarify -H usage in batch mode is not a "pass through" option.
        
        Mutt runs the file through mutt_prepare_template() in both cases,
        which will decrypt, remove signatures, strip multipart/alternatives.
        
        The documentation wasn't clear about this, and it might be
        misunderstood that -H is a "pass through" option.

M	doc/manual.xml.head
M	doc/mutt.man

2021-04-09 15:12:11 -0700  Kevin McCarthy  <kevin@8t8.us> (6c510773)

        * Add user-friendly error message if append to $trash fails.
        
        For the maildir case, this will then be displayed instead of a raw
        stat error message, in the case the mailbox disappears.

M	mx.c

2021-03-29 04:57:28 -0300  Marco Ippolito  <maroloccio@gmail.com> (9566a95c)

        * Fix documentation typo

M	doc/manual.xml.head

2021-03-27 19:14:10 -0700  Kevin McCarthy  <kevin@8t8.us> (4e01ccdb)

        * Stop batch mode emails with no argument or recipients.
        
        Closes #345.  There are checks in send.c to guard against a
        no-recipient email being sent, but there might be a my_hdr or other
        setting in the muttrc.  In that case, it would be surprising for an
        email to be sent.

M	main.c

2021-03-20 18:33:01 +0100  Vincent Lefevre  <vincent@vinc17.net> (8ac730a1)

        * Updated French translation.

M	po/fr.po

2021-03-19 14:35:53 -0700  Kevin McCarthy  <kevin@8t8.us> (5ee27795)

        * Merge branch 'stable'

2021-03-16 14:13:38 -0700  Kevin McCarthy  <kevin@8t8.us> (9b8cc85e)

        * Add SigInt handler for pattern functions.
        
        Allow, for example, a ~B against a huge mailbox to be interruped via
        ctrl-c.  This commit follows the same behavior as
        mutt_search_command() - not prompting and just interrupting.  We could
        add a prompt if it's really deemed necessary, but I think if they hit
        ctrl-c they want to stop the pattern operation now.
        
        Since it's not practical to roll back, leave the Context in the "in
        the middle" state too.  This may actually be desired.

M	pattern.c

2021-03-15 13:11:07 -0700  Kevin McCarthy  <kevin@8t8.us> (50f22244)

        * Turn off ~h header-only download when $message_cachedir is set.
        
        The initial pattern match will be slow, but then the body will be in
        the message cache.  This is the same as previous behavior, so a
        message cache user should not notice any change.
        
        Those not using a message cache will see improvements from the
        header-only download, but of course they will have to download the
        full headers each time.

M	pattern.c

2021-03-13 18:51:34 +0100  Vincent Lefevre  <vincent@vinc17.net> (5eb9dec8)

        * Updated French translation.

M	po/fr.po

2021-03-12 13:23:42 -0800  Kevin McCarthy  <kevin@8t8.us> (5cf52cd1)

        * Minor fixes to match_body_patterns().
        
        Change the end condition to compare against buflen.  I prefer this
        because we are not directly incrementing offset ourselves, but relying
        on the rational return values from regexec.  If the regex library
        (incorrectly) returned a nul-match at the '\0' terminator for
        instance, the new nul-match logic would assign offset just past the
        terminator.
        
        Remove the i=0 initialization during definition, because it doesn't
        use or need it.

M	pager.c

2021-03-12 13:08:29 -0800  Kevin McCarthy  <kevin@8t8.us> (64dba506)

        * Factor out match_body_patterns to make resolve_types() simpler.
        
        The body pattern matching part has been getting more complex, and is
        now too big to have its details sit amongst the resolve_types()
        logic.  Factor it out into a separate procedure.

M	pager.c

2021-03-10 18:10:39 -0800  Kevin McCarthy  <kevin@8t8.us> (63d29881)

        * Fix body color null_rx handling.
        
        The existing code did not work properly.  If the null_rx occurred
        before another matching entry in the list, it would be ignored.  If it
        occurred afterward, it could cause the entries to be created
        out-of-order which would affect the binary search later on when
        rendering.
        
        Instead, use the normal "match assignment" code, but if the best
        result is a null_rx match, simply discard it and increment the offset
        past the end of the null match.

M	pager.c

2021-03-10 15:09:49 -0800  Kevin McCarthy  <kevin@8t8.us> (53ffdb93)

        * Improve body color matching speed by caching future matches.
        
        On a *very* long body (or header_partial) lines with multiple color
        lines that match, performance can be degraded.  For instance if there
        were moderately expensive regexp matches against "A" "B" and "C".  A
        line with:
        
          A A A A A B A A C A A A B A A A C
        
        The B and C regexps were scanned again after every "A" match, despite
        that the result would be discarded again for the next A match.
        
        Change the color matching to cache the location of each color line
        match.  Discard the cache once the match offset passes that point.

M	mutt_curses.h
M	pager.c

2021-03-11 14:02:03 -0800  Kevin McCarthy  <kevin@8t8.us> (17774247)

        * Merge branch 'stable'

2021-03-09 18:19:21 -0800  Kevin McCarthy  <kevin@8t8.us> (847ce203)

        * Add <view-alt-pager> to compose menu.
        
        This mirrors the <view-pager> in the attachment menu (and just added
        to the compose menu), but adds it to the compose menu for alternative
        generation.

M	OPS
M	compose.c
M	doc/manual.xml.head
M	functions.h

2021-03-09 18:05:17 -0800  Kevin McCarthy  <kevin@8t8.us> (5a325ba4)

        * Add view-mailcap, view-pager, view-text to compose menu.
        
        These are less commonly needed, so don't bind them to a key.  But for
        those who need it, make them be available.

M	OPS
M	compose.c
M	functions.h

2021-03-10 18:58:22 +0100  Vincent Lefevre  <vincent@vinc17.net> (db80f61a)

        * Updated French translation.

M	po/fr.po

2021-03-05 18:52:48 -0800  Kevin McCarthy  <kevin@8t8.us> (191b0513)

        * Fix $ssl_client_cert usage with SMTP.
        
        The ssl and gnutls client-cert setup code was calling
        mutt_account_getuser().  This caused two problems.  First, it's not
        necessarily the case that there will be a username.  Second,
        populating the user would cause smtp_open() to check for AUTH
        capabilities and call smtp_auth - even if the user is already
        authenticated by the cert.  The server won't advertize AUTH if they
        already authenticated, causing a connection abort.
        
        Remove prompt for mutt_account_getuser() in the ssl and gnutls client
        certificate connection code.  The SASL code has callbacks, so I don't
        understand why it would need this.  Let's take it out and see if
        anyone screams 8-P.  If necessary, we can add a mutt_account_getuser()
        call to the very beginning of imap_auth_sasl().
        
        Revamp the openssl ssl_passwd_cb() prompt.  From the man pages, it
        appears to be used for the cert decryption.  There's no need to call
        mutt_account_getuser() and use the generic mutt_account_getpass() just
        to read a password in.  Instead create a callback function version to
        customize the prompt for a client cert with just the host.
        
        Change the SMTP authentication test to check if the AUTH capabilities
        are set, instead of if the user field is set before calling
        smtp_auth().

M	account.c
M	account.h
M	mutt_ssl.c
M	mutt_ssl_gnutls.c
M	smtp.c

2021-03-07 09:02:23 +0100  Olaf Hering  <olaf@aepfle.de> (fcc62991)

        * refresh de.po
        
        align with result of make update-po
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2021-03-06 13:59:54 -0800  Kevin McCarthy  <kevin@8t8.us> (2054ccf2)

        * Relocate po OPS files to bottom of POTFILES.in.
        
        This matches the pre-0.21 migration order, and will reduce the size of
        updates for the next release.

M	po/POTFILES.in

2021-03-06 22:26:21 +0100  Olaf Hering  <olaf@aepfle.de> (1267c1ca)

        * refresh de.po
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2021-03-06 11:22:19 -0800  Kevin McCarthy  <kevin@8t8.us> (8940dbe0)

        * Merge branch 'stable'

2021-03-04 12:24:42 -0800  Kevin McCarthy  <kevin@8t8.us> (a796a1bd)

        * Add -nonumbers to lynx options.
        
        This will remove the useless link and field numbers from output in the
        manual.txt.

M	doc/Makefile.am

2021-03-04 12:18:30 -0800  Kevin McCarthy  <kevin@8t8.us> (22bab8ff)

        * Don't install an empty manual.txt file.
        
        Closes #334.
        
        If all the html to txt programs we use (lynx, elinks, w3m) are missing
        from the system, the shell redirection willl create an empty file.
        
        Change the install step to use -s "FILE exists and has a size greater
        than zero".
        
        Thanks to Mitchell Blank Jr for the ticket and suggested fix.

M	doc/Makefile.am

2021-03-03 23:17:55 +0100  Vincent Lefevre  <vincent@vinc17.net> (9e338a19)

        * Updated French translation.

M	po/fr.po

2021-03-03 23:13:09 +0100  Vincent Lefevre  <vincent@vinc17.net> (fb5f052f)

        * Updated French translation.

M	po/fr.po

2021-03-03 12:18:51 -0800  Kevin McCarthy  <kevin@8t8.us> (1d13381f)

        * Don't leak fp when aborting mutt_make_message_attach().
        
        I forgot to close up the fp before returning.

M	sendlib.c

2021-03-01 18:19:08 -0800  Kevin McCarthy  <kevin@8t8.us> (16c381d8)

        * Prompt for retry on decrypt failure for mime message attachments.
        
        Closes #331.
        
        Change $forward_decyrpt to a quadoption, defaulting 'yes' for backward
        compatibility.  This will allow users to choose on a per-message
        attachment basis if desired.
        
        If decoding from $mime_forward_decode fails or decrypting from
        $forward_decrypt, notify the user and prompt to retry attaching
        without the decode/decrypt.
        
        $forward_decrypt directly invokes decryption and returns -1 on error,
        while $mime_forward_decode uses the handler rendering, which returns a
        non-fatal 1 (to allow message display of failing encrypted message).
        So prompt on either case.
        
        If they decline to retry, or the retry fails, return NULL only on a
        hard-fail (-1) return code.  They've been warned and can peek at the
        final result.
        
        The send generate_body() code was not checking for a NULL result.
        This seems like a bad idea, so add a check and error message in that
        case.

M	init.h
M	mutt.h
M	send.c
M	sendlib.c

2021-02-26 14:34:10 -0800  Kevin McCarthy  <kevin@8t8.us> (ad14641e)

        * Merge branch 'stable'

2021-02-24 14:59:19 -0800  Kevin McCarthy  <kevin@8t8.us> (e0d08c59)

        * Add a note about the '^' mailbox shortcut.
        
        Emphasize that it's not always set, for example in command-line mode,
        or when evaluating the muttrc at startup.

M	doc/manual.xml.head

2021-02-23 14:41:47 -0800  Kevin McCarthy  <kevin@8t8.us> (b412d83b)

        * Merge branch 'stable'

2021-02-20 13:08:54 -0800  Kevin McCarthy  <kevin@8t8.us> (7fd331fd)

        * Scan OPS files directly for gettext translation strings.
        
        Previously, gettext's po/Makefile.in.in was modified to separately
        scan and merge a generated file: keymap_alldefs.h.  Gettext doesn't
        recommend nor provide support for scanning generated files.
        
        However, there is no reason we have to scan the generated file.
        Instead move the N_() markers and L10N comments into the OPS files.
        Then simply add the OPS files to po/POTFILES.in.
        
        Add a '--language=C' option to xgettext to avoid a warning about the
        OPS files not have any known language suffix.
        
        Modify gen_defs and doc/gen-map-doc to deal with the new format of the
        OPS files.

M	OPS
M	OPS.CRYPT
M	OPS.MIX
M	OPS.PGP
M	OPS.SIDEBAR
M	OPS.SMIME
M	doc/gen-map-doc
M	gen_defs
M	po/Makevars
M	po/POTFILES.in

2021-02-18 15:40:39 -0800  Kevin McCarthy  <kevin@8t8.us> (d4e13e4b)

        * Fix gettext update problems.
        
        The keymap_alldefs.h file was previously generated and scanned inside
        po/Makefile.in.in as an additional POTFILES files build dependency and
        step.
        
        The file can't be scanned by just adding it to po/POTFILES.in because
        it's a generated file that will be in the build directory.  The next
        commit will instead add the OPS* files directly to POTFILES.in to be
        scanned.
        
        For this commit, remove the generation of keymap_alldefs.h.
        
        Remove the redundant ALL_LINGUAS setting from configure.ac.  Reformat
        the LINGUAS file to be on one line, as the documentation shows.  I
        think it was okay before, but just to be safe.
        
        Fix L10N scanning by adding '--add-comments=L10N' to XGETTEXT_OPTIONS
        in po/Makevars.
        
        Set MSGID_BUGS_ADDRESS to silence a warning.
        
        Add gettext.h to the Makefile.am EXTRA_DIST list.
        
        Remove -Iintl flags from all Makefile.am files, since the intl
        directory is no longer bundled in Mutt.

M	Makefile.am
M	autocrypt/Makefile.am
M	configure.ac
M	imap/Makefile.am
M	po/LINGUAS
M	po/Makevars

2021-02-19 00:20:42 +0100  Vincent Lefevre  <vincent@vinc17.net> (8d94928e)

        * Remove the AM_GNU_GETTEXT_VERSION line as it makes autoreconf fail with gettext < 0.21 because autopoint complains that gettext is too old.
        
        Using this line with a version smaller than 0.21 makes autopoint itself
        fail, thus does not solve the problem.

M	configure.ac

2021-02-19 00:02:15 +0100  Vincent Lefevre  <vincent@vinc17.net> (33fe78af)

        * Add AM_GNU_GETTEXT_VERSION line to avoid a warning from autoreconf.

M	configure.ac

2021-02-07 18:27:47 -0800  Kevin McCarthy  <kevin@8t8.us> (ccc18061)

        * Update gettext to version 0.21.
        
        Run 'gettextize -f --no-changelog' to update to 0.21.
        
        This removes the entire intl directory, and relies on an external
        libintl only.
        
        $(INTLLIBS) should now be referred to as $(LIBINTL), so change all
        references.
        
        Unfortunately, some of the gettext m4 files were modified and "mutt
        customized" in the past.  I'm trying to keep them in a pristine state
        after this upgrade.  glibc21.m4, lcmessage.m4, codeset.m4 have also
        been removed.
        
        Manually call AM_ICONV in configure.ac.  This was previously called
        in the modified "MUTT_AM_GNU_GETTEXT" but the result $am_cv_func_iconv
        is tested just below.
        
        locale.h is a standard library defined by C99.  The gpgme and pgp code
        wrapped those includes in HAVE_LOCALE_H checks, but that check was
        performed inside of gettext.m4.  Remove the check inside those
        files (locale.h is already included unconditionally elsewhere in
        Mutt).
        
        Copy the sample gettext.h file and include that instead, as suggested
        by the gettext documentation.
        
        unistd.h is also a standard posix header, so remove HAVE_UNISTD_H
        checks inside mutt too.
        
        Create po/LINGUAS file listing available languages.
        
        Create po/Makevars from the template and customize for Mutt.
        
        Set PO_DEPENDS_ON_POT to no to prevent po file rebuilds.  According to
        the gettext manual, with this set, "PO files can be accidentally
        updated even if a POT file is not updated" when using git.

M	.gitignore
M	ABOUT-NLS
M	INSTALL
M	Makefile.am
A	config.rpath
M	configure.ac
M	crypt-gpgme.c
M	crypt.c
A	gettext.h
D	intl/COPYING.LIB-2
D	intl/COPYING.LIB-2.1
D	intl/ChangeLog
D	intl/Makefile.in
D	intl/VERSION
D	intl/bindtextdom.c
D	intl/cat-compat.c
D	intl/config.charset
D	intl/dcgettext.c
D	intl/dcigettext.c
D	intl/dcngettext.c
D	intl/dgettext.c
D	intl/dngettext.c
D	intl/explodename.c
D	intl/finddomain.c
D	intl/gettext.c
D	intl/gettext.h
D	intl/gettextP.h
D	intl/hash-string.h
D	intl/intl-compat.c
D	intl/l10nflist.c
D	intl/libgettext.h
D	intl/libgnuintl.h
D	intl/libintl.glibc
D	intl/linux-msg.sed
D	intl/loadinfo.h
D	intl/loadmsgcat.c
D	intl/localcharset.c
D	intl/locale.alias
D	intl/localealias.c
D	intl/ngettext.c
D	intl/plural.c
D	intl/plural.y
D	intl/po2tbl.sed.in
D	intl/ref-add.sin
D	intl/ref-del.sin
D	intl/textdomain.c
D	intl/xopen-msg.sed
M	lib.h
M	m4/Makefile.am
M	m4/README
D	m4/codeset.m4
M	m4/gettext.m4
D	m4/glibc21.m4
A	m4/host-cpu-c-abi.m4
M	m4/iconv.m4
A	m4/intlmacosx.m4
D	m4/lcmessage.m4
A	m4/lib-ld.m4
A	m4/lib-link.m4
A	m4/lib-prefix.m4
A	m4/nls.m4
A	m4/po.m4
M	m4/progtest.m4
M	mutt.h
M	pgp.c
A	po/LINGUAS
M	po/Makefile.in.in
A	po/Makevars
A	po/Rules-quot
A	po/boldquot.sed
A	po/en@boldquot.header
A	po/en@quot.header
A	po/insert-header.sin
A	po/quot.sed
A	po/remove-potcdate.sin
M	smime.c

2021-02-17 15:47:49 -0800  Kevin McCarthy  <kevin@8t8.us> (9635fad4)

        * Add backlinks for $fcc_before_send and self_encrypt options.
        
        Make sure the $fcc_before_send's behavior changes to $fcc_clear and
        $fcc_attach is mentiond in those options too.
        
        Add a "see also" in $fcc_clear to the self_encrypt options.

M	init.h

2021-02-13 12:31:59 -0800  Helge Kreutzmann  <debian@helgefjell.de> (0ced35e0)

        * Update de.po.

M	po/de.po

2021-02-07 19:51:34 -0800  Kevin McCarthy  <kevin@8t8.us> (106ff19a)

        * Merge branch 'stable'

2021-02-05 15:34:37 -0800  Kevin McCarthy  <kevin@8t8.us> (e5c6a054)

        * Save CurrentFolder in background edit scope.
        
        The CurrentFolder can actually be used to resolve an fcc-hook at fcc
        time.  We would want to use the folder they started composing in, to
        be consistent with expectations.

M	doc/manual.xml.head
M	send.c
M	send.h

2021-02-05 14:09:28 -0800  Kevin McCarthy  <kevin@8t8.us> (56f4c0b8)

        * Change attach inline forward messages default CH flag.
        
        Fix it to be CH_DECODE instead of CH_XMIT.
        
        I believe this was a mistake from a long time ago.  The CH_XMIT flag
        is used in mutt for:
        - mutt_save_message() -> set_copy_flags() when decoding
        - pre-send conversion to 7 bit
        - mutt_make_message_attach() (for index mime-forwarding)
        - message bouncing
        
        Using it for *inline* forwarding in the attachment menu doesn't make
        sense.  Both include_forward() in send.c, and include_header() in
        recvcmd.c use CH_DECODE.  It seems reasonable to decode headers when
        inline forwarding from the attachment menu (as is done from the
        index), so I'm guessing that was what was meant here too.

M	recvcmd.c

2021-02-04 18:02:06 -0800  Kevin McCarthy  <kevin@8t8.us> (18c29a84)

        * Filter ANSI sequences when forwarding too.
        
        Add a MUTT_CM_FORWARDING flag to correspond with the MUTT_CM_REPLYING
        flag.  Check those to turn on ANSI filtering.
        
        In order to guard against other accidental prefix setting without one
        of those flags, also check s->prefix to enable ANSI filtering (and
        prefix printing) too.
        
        Add missing MUTT_CM_REPLYING flags to the recvcmd.c reply functions.
        
        While updating the recvcmd.c reply code, I noticed CH_REORDER wasn't
        enabled with OPTWEED, like in the send.c code (and everywhere else),
        so add the missing flag.

M	copy.c
M	copy.h
M	handler.c
M	mutt.h
M	recvcmd.c
M	send.c

2021-02-03 15:50:49 -0800  Kevin McCarthy  <kevin@8t8.us> (1a9fea6f)

        * Add explicit flag to check for postponed message on <mail>.
        
        This used to check for:
          !flags && !msg
        which was still relatively clear that it was a unique situation (just
        for <mail> in the index and pager).
        
        With the addition of background editing, it became:
          (sctx->flags == SENDBACKGROUNDEDIT) && !sctx->msg
        This is less intuitively understood to be just for the <mail> case,
        and thus perhaps easy to create a bug in the future.
        
        Create an explicit flag, SENDCHECKPOSTPONED to perform the check, and
        enable for the <mail> operation in the index and pager.

M	curs_main.c
M	mutt.h
M	pager.c
M	send.c

2021-02-02 12:56:33 -0800  Kevin McCarthy  <kevin@8t8.us> (acf11418)

        * Merge branch 'stable'

2021-02-01 15:15:17 -0800  Kevin McCarthy  <kevin@8t8.us> (09f077c9)

        * Change REPLYTO handling to directly add the my_hdr.
        
        Don't send the header through the muttrc parser, to avoid issues with
        unexpected evaluation of an environment variable.

M	init.c

2021-01-28 18:02:47 -0800  Kevin McCarthy  <kevin@8t8.us> (961cf4be)

        * Apply $reverse_name when tag-reply/forwarding too.
        
        Enable $reverse_name for tag actions in the attach menu too.  Since
        the ATTACH_CONTEXT is a different structure, move both single and
        tagged action handling into recvcmd.c

M	alias.c
M	protos.h
M	recvcmd.c
M	send.c

2021-01-27 15:02:10 -0800  Kevin McCarthy  <kevin@8t8.us> (ab6d0dc5)

        * Merge branch 'stable'

2021-01-27 13:38:53 -0800  Kevin McCarthy  <kevin@8t8.us> (3e35377e)

        * Fix small error in mutt_resize_term().
        
        Commit 547b25a2 accidentally removed the default value setting if
        LINES or COLUMNS are null.  Also, set default values if the atoi
        fails.

M	resize.c

2021-01-26 18:36:20 -0800  Kevin McCarthy  <kevin@8t8.us> (d1729b7c)

        * Create mutt_atolofft() to parse body->length field.
        
        This will allow proper range checking on the number, and set it to -1
        if it's out of range.

M	muttlib.c
M	parse.c
M	protos.h

2021-01-26 12:58:54 -0800  Kevin McCarthy  <kevin@8t8.us> (5d73e4cf)

        * Convert all mutt_atoX functions to behave strictly.
        
        * Remove the automatic conversion of NULL and '\0' to 0.  Add a flag
          for the cases that require lax evaluation.
        
        * Make trailing characters generate an error by default for the
          mutt_atouX functions.  Add a flag for that case.  Most of the IMAP
          code parses numbers out of a stream, so add the flag to those
          calls.
        
        * The mutt_atouX functions were also behaving incorrectly with
          invalid input, e.g. "ABC", returning and setting 0.  Fix them to
          return an error in those cases.
        
        * Add a mutt_atoll() function, to be used in the next commit.
        
        * Change converters to store 0 on error.  atos, atoi, and atoui were
          already doing this, but the others were not.

M	curs_main.c
M	edit.c
M	gnupgparse.c
M	imap/command.c
M	imap/imap.c
M	imap/message.c
M	imap/util.c
M	init.c
M	lib.c
M	lib.h
M	main.c
M	menu.c
M	mh.c
M	parse.c
M	resize.c
M	rfc2231.c
M	score.c
M	smtp.c
M	url.c

2021-01-27 07:27:31 -0800  Kevin McCarthy  <kevin@8t8.us> (7737b353)

        * Merge branch 'stable'

2021-01-24 15:01:33 -0800  Kevin McCarthy  <kevin@8t8.us> (3d6e7df7)

        * Fix hdr_order to use the longest match.
        
        Previously, Mutt would find the first match and use that.
        
        However, the example shown in the manual:
          hdr_order From Date: From: To: Cc: Subject:
        gives the expectation that an mbox From_ line would print first, then
        the Date:, and then the From: header.
        
        Change the matcher to scan all HeaderOrderList entries and use the
        longest match.
        
        Update the documentation to make it clear From_ lines are printed out
        with other "real" headers, and can be manipulated via ignore and
        hdr_order commands.

M	copy.c
M	doc/manual.xml.head

2021-01-23 18:14:02 -0800  Kevin McCarthy  <kevin@8t8.us> (c6700b05)

        * Fix double spacing after group display-name in pager and message.
        
        Edit-headers and message writing uses mutt_write_rfc822_header() ->
        mutt_write_address_list(), which renders each address one by one and
        outputs to a file.  rfc822_write_address_single() already appends a
        space after the group display-name colon delimiter.
        
        Rendering to the pager uses a different code path:
        address_header_decode() -> format_address_header().  The logic is very
        similar to mutt_write_address_list() except it renders to memory.  It
        also needs to avoid re-appending a space after the group display-name.

M	copy.c
M	sendlib.c

2021-01-23 15:00:12 -0800  Kevin McCarthy  <kevin@8t8.us> (075a4c70)

        * Restrict mime header date writing to protected headers.
        
        The previous code would generate and print a date header for
        autocrypt.  This wouldn't really cause a problem, but is incorrect.
        
        Check explicitly for a passed in date parameter in
        MUTT_WRITE_HEADER_MIME mode.

M	sendlib.c

2021-01-23 14:31:19 -0800  Kevin McCarthy  <kevin@8t8.us> (94628052)

        * Mention C99 libc requirement in INSTALL file.

M	INSTALL

2021-01-22 15:15:56 -0800  Kevin McCarthy  <kevin@8t8.us> (e72c8ce1)

        * Tighten up group list parsing a bit more.
        
        The display-name is not optional for a group, so don't start a group
        list if the display-name is empty.
        
        Groups can't be nested, so terminate a previous group list if the
        terminator was left off.

M	rfc822.c

2021-01-16 15:46:54 -0800  Kevin McCarthy  <kevin@8t8.us> (46f86782)

        * Make some small fixes to the -nonotify commit.
        
        Fix logic error in mutt_buffy_check().
        
        Add -nonotify flag to the configuration command list in the manual
        too.
        
        Add line wraps to the muttrc.man mailboxes options, to make the
        synopsis more readable within 80 columns.

M	buffy.c
M	doc/manual.xml.head
M	doc/muttrc.man.head

2021-01-16 20:53:57 +0100  Rene Kita  <git@rkta.de> (26770eac)

        * Add -nonotify argument to mailboxes command
        
        -nonotify allows to disable notifications for mailboxes.
        
        -notify can be used to re-enable notifications for a previously disabled
        mailbox.
        
        A typical use case are mailboxes for mailing lists. The User may want to
        get notified about new mail in their work mailbox, but not get disrupted
        by new mail received from the mailing list.
        
        This patch allows individual configuration for all mailboxes.

M	buffy.c
M	buffy.h
M	doc/manual.xml.head
M	doc/muttrc.man.head
M	imap/command.c
M	imap/imap.c

2021-01-21 12:42:45 -0800  Kevin McCarthy  <kevin@8t8.us> (933f3462)

        * Merge branch 'stable'

2021-01-20 11:51:58 +0100  Vincent Lefevre  <vincent@vinc17.net> (d5a18cca)

        * Updated French translation.

M	po/fr.po

2021-01-18 14:47:32 -0800  Kevin McCarthy  <kevin@8t8.us> (feb30961)

        * Fix warning; minor code cleanup.
        
        random_dev isn't used anymore (after removing the %R expando).
        
        I originally had local variables in some of the case statements, and
        forgot to pull out the curly brackets when I moved those to the top of
        the function.

M	messageid.c

2021-01-18 14:02:37 -0500  Remco Rĳnders  <remco@webconquest.com> (8641fb2a)

        * Remove %R format for $message_id_format

M	init.h
M	messageid.c

2021-01-18 13:54:13 -0500  Remco Rĳnders  <remco@webconquest.com> (dadc0130)

        * Provide %x format for $message_id_format
        
        The expando format %x generates one pseudorandom byte and puts the
        output in a lowercase hex formatted string of length two.
        
        # Conflicts:
        #	init.h
        #	messageid.c

M	init.h
M	messageid.c

2021-01-17 19:39:01 -0800  Kevin McCarthy  <kevin@8t8.us> (5f5d33f8)

        * Change $message_id_format year expando from %y to %Y.
        
        So that it matches the strftime() 4-digit year.
        
        Thanks to Vincent Lefèvre for noting the discrepancy.

M	init.h
M	messageid.c

2021-01-15 15:56:45 -0800  Kevin McCarthy  <kevin@8t8.us> (1f188287)

        * Add $message_id_format for customizing generated Message-IDs.
        
        Provide expandos for the new (2.0+) format and the old format.  Add %r
        and %R to generate fixed size 4-char Base64 blocks from the
        pseudo-random generator, or from /dev/urandom.
        
        The format string allows external filters, for complete control.

M	globals.h
M	init.h
M	messageid.c

2021-01-15 13:21:27 -0800  Kevin McCarthy  <kevin@8t8.us> (b5a807ca)

        * Move mutt_gen_msgid() over to messageid.c.

M	Makefile.am
A	messageid.c
M	po/POTFILES.in
M	sendlib.c

2021-01-17 11:05:36 -0800  Kevin McCarthy  <kevin@8t8.us> (d4305208)

        * Add group terminator if it is left off.
        
        If there is no terminating ";" add one to the list, to make the text
        re-rendering correct.

M	rfc822.c

2021-01-17 10:53:19 -0800  Kevin McCarthy  <kevin@8t8.us> (939b02b3)

        * Don't allocate a group terminator unless we are in a group-list.
        
        This will reduce memory allocation for garbage/spam address lists.
        
        It also makes no sense to store a terminator when there wasn't a
        display-name indicating the start of a group.

M	rfc822.c

2021-01-17 13:05:46 -0800  Kevin McCarthy  <kevin@8t8.us> (59a09320)

        * Merge branch 'stable'

2021-01-10 19:48:17 -0800  Kevin McCarthy  <kevin@8t8.us> (53181e6b)

        * Remove configure test for va_copy.
        
        Its presence is also dictated by the C99 specification.

M	configure.ac
D	m4/funcs.m4

2021-01-10 14:25:23 -0800  Kevin McCarthy  <kevin@8t8.us> (73ee27cb)

        * Remove snprintf and vsnprintf configure checks.
        
        There was a period of time where C99 was standardized but some systems
        still didn't include a correctly working version of those two
        functions.  But I think we are long past that point now.
        
        Remove the checks and replacement code.

M	Makefile.am
M	configure.ac
M	dotlock.c
M	protos.h
D	snprintf.c

2021-01-13 19:15:32 -0800  Kevin McCarthy  <kevin@8t8.us> (d35bee80)

        * Merge branch 'stable'

2021-01-10 10:25:06 -0800  Kevin McCarthy  <kevin@8t8.us> (564af512)

        * Fix check for empty colors left.
        
        Because pair "0" is reserved (and we start searching at index 1), we
        only have access to (COLOR_PAIRS - 1) pairs.
        
        Also, don't increment UserColors during the check, because that would
        incorrectly inflate the number of color pairs allocated if none are
        available.  That would delay or even remove the ability to reallocate
        pairs after future color pair frees.
        
        It actually would make more sense to just check (index > COLOR_PAIRS -
        1).  But since UserColors is incremented here, and is used in dprint
        statements, keep the check consistent.

M	color.c

2021-01-09 09:42:51 -0800  Kevin McCarthy  <kevin@8t8.us> (1ffe93ef)

        * Move empty color slot finding into initial compare loop.
        
        There is no need to scan the list again to find the place for a new
        entry, since we already do to check for duplicates.
        
        Store the last pointer in the initial loop, and calculate the lowest
        available index at the same time.

M	color.c

2021-01-08 18:23:09 -0800  Kevin McCarthy  <kevin@8t8.us> (7731d992)

        * Add code to free ansi colors.
        
        The 256 color ansi-escape sequence commit can create many more
        potential ansi colors than the 8-color version, so they shouldn't be
        allowed to just accumulate.
        
        Free ansi colors when exiting the pager.  The pager can be called
        nested, so this could prematurely free the colors, but they will be
        automatically reallocated.
        
        Ansi and overlay colors shouldn't be refcounted like normal colors, so
        add a bit field for both.
        
        For now, we just let overlay colors accumulate, as before.  If this
        becomes a problem, we could periodically flush them, the same way as
        ansi colors - perhaps when changing mailboxes.
        
        Change ColorList to be sorted by index.  This removes the O(n^2) loop
        just to find the next available index.
        
        Likewise, improve the mutt_free_color() loop to keep track of the last
        pointer instead of relooping.

M	color.c
M	pager.c
M	protos.h

2021-01-08 19:11:34 -0800  Kevin McCarthy  <kevin@8t8.us> (00b70ff0)

        * Merge branch 'stable'

2021-01-07 14:16:28 +0200  Matti Niemenmaa  <matti.niemenmaa+git@iki.fi> (b0bc42ff)

        * pager: Parse 256-color "ANSI" escapes

M	pager.c

2021-01-07 14:20:42 +0200  Matti Niemenmaa  <matti.niemenmaa+git@iki.fi> (1b20dd42)

        * pager: Don't accept color code 8
        
        38 and 48 are not valid color specifications: 30–37 and 40–47 specify
        the eight foreground and background colors while 39 and 49 are used to
        mean "reset to default".
        
        38 and 48 are in use to specify 8-bit or 24-bit colors, but those cases
        require special handling.

M	pager.c

2021-01-03 15:33:46 -0800  Kevin McCarthy  <kevin@8t8.us> (a3db7ccb)

        * Add configure checks for gssapi library and functions.
        
        rkta on irc reported a build failure because the gss headers were not
        present.  Add explicit checks for the required headers.  Also add a
        check for gss_init_sec_context() when using the output of krb-config
        to configure flags.
        
        Abort configure if the library/header checks don't pass.  It would
        previously continue on, setting USE_GSS and need_gss, which would just
        result in a build error.

M	configure.ac
M	m4/gssapi.m4

2021-01-01 18:51:32 -0800  Kevin McCarthy  <kevin@8t8.us> (e4a8abe8)

        * Remove obsolete AC_HEADER_STDC and STDC_HEADERS checks.
        
        The autoconf macro is obsolete in 2.70.  Also, we now assume at least
        C99 so there is no point in checking for ANSI C89 header files.
        
        Fix up code to assume STDC_HEADERS is always true, removing the
        reference to it at the same time.

M	configure.ac
M	m4/gettext.m4
M	mutt_curses.h
M	protos.h
M	regex.c

2021-01-01 18:13:59 -0800  Kevin McCarthy  <kevin@8t8.us> (475e800f)

        * Replace AC_OUTPUT_COMMANDS with AC_CONFIG_COMMANDS.

M	m4/gettext.m4

2021-01-01 18:05:04 -0800  Kevin McCarthy  <kevin@8t8.us> (b04bf448)

        * Convert AC_TRY_LINK to AC_LINK_IFELSE.

M	m4/codeset.m4
M	m4/curslib.m4
M	m4/funcs.m4
M	m4/gettext.m4
M	m4/iconv.m4
M	m4/lcmessage.m4

2021-01-01 15:49:05 -0800  Kevin McCarthy  <kevin@8t8.us> (a01316d9)

        * Convert AC_TRY_COMPILE to AC_COMPILE_IFELSE.

M	m4/funcdecl.m4
M	m4/iconv.m4

2021-01-01 14:04:01 -0800  Kevin McCarthy  <kevin@8t8.us> (9bb70dbc)

        * Remove obsolete AC_ISC_POSIX call.

M	m4/gettext.m4

2021-01-01 12:51:17 -0800  Kevin McCarthy  <kevin@8t8.us> (47dc3b08)

        * Replace AC_HELP_STRING with AS_HELP_STRING.

M	configure.ac
M	m4/gettext.m4
M	m4/gpg-error.m4
M	m4/gpgme.m4
M	m4/iconv.m4

2021-01-01 12:45:18 -0800  Kevin McCarthy  <kevin@8t8.us> (2754a057)

        * Replace AC_ERROR with AC_MSG_ERROR.

M	m4/curslib.m4

2021-01-01 10:08:38 -0800  Kevin McCarthy  <kevin@8t8.us> (cbc0957e)

        * Update deprecated AC_CHECK_TYPE usage.

M	configure.ac

2021-01-01 12:33:22 -0800  Kevin McCarthy  <kevin@8t8.us> (c58d307d)

        * Update config.status invocation.
        
        The files are now specified on the command line, instead of via the
        CONFIG_FILES env var.
        
        This is the first of a series of patches updating obsolete autoconf
        macros and usages.  The 2.70 release sqawks very loudly at those
        constructs, so best to start updating them.

M	intl/Makefile.in
M	po/Makefile.in.in

2020-12-30 14:31:11 -0800  Kevin McCarthy  <kevin@8t8.us> (4c6a0954)

        * Merge branch 'stable'

2020-12-29 14:28:23 -0800  Kevin McCarthy  <kevin@8t8.us> (625666ef)

        * Update header cache checking order and --with options.
        
        Automatically scan in the order: kyotocabinet, tokyocabinet, lmdb,
        qdbm, gdbm, bdb.
        
        Turn all the backend options into '--with' options and add a dir
        parameter.  Specifying a single --with option declares the desired
        backend, turning off scanning.  Specifying --without skips scanning
        for a backend.
        
        Update the INSTALL file to make that clear.  This actually wasn't even
        clear to me until I studied it now, and for years I've been using an
        obfuscated combination of --without and --with to specify the backend,
        when I just needed to use --with.

M	INSTALL
M	configure.ac

2020-12-29 13:28:30 -0800  Kevin McCarthy  <kevin@8t8.us> (d6c7a1a5)

        * Merge branch 'stable'

2020-12-28 18:39:19 -0800  Kevin McCarthy  <kevin@8t8.us> (7932020f)

        * Fix freebsd build on srht.
        
        Looks like the db5 package does install in a wacky place.  For now,
        just use kyotocabinet (which appears to install under /usr/local).

M	.builds/freebsd.yml

2020-12-28 18:24:10 -0800  Kevin McCarthy  <kevin@8t8.us> (a62d11d2)

        * Add non-zero length for gdbm and lmdb configure tests.
        
        In $db_requested=auto mode, the variables may be unset.

M	configure.ac

2020-12-28 15:57:04 -0800  Kevin McCarthy  <kevin@8t8.us> (60bd4a85)

        * Simplify BDB configure.ac check.
        
        Remove the long list of directory and library names to scan, and just
        look for -ldb and db.h.  Use $with_bdb to search an alternative
        directory, just as the other header cache library searches do.
        
        If someone screams, we can enhance a *little* bit, but I think this is
        sufficient, and more important, maintainable.

M	configure.ac

2020-12-25 10:21:13 -0800  Kevin McCarthy  <kevin@8t8.us> (4032fd8a)

        * Merge branch 'stable'

2020-12-23 09:44:14 -0800  Kevin McCarthy  <kevin@8t8.us> (658d28b2)

        * Fix declaration of mutt_decode_base64().
        
        Thanks to Charles for reporting the problem!

M	protos.h

2020-12-23 17:17:26 +0100  Olaf Hering  <olaf@aepfle.de> (3e24f802)

        * refresh de.po
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2020-12-21 15:34:58 -0800  Kevin McCarthy  <kevin@8t8.us> (03e17ef7)

        * Correct length to use LOFF_T.
        
        This is a part two, made in master, to the stable branch commit
        11b18027.  These are mostly length adjustments to use LOFF_T, matching the
        BODY->length type.
        
        An argument could be made for size_t instead, and a few places in Mutt
        do assign between those types.  I've used LOFF_T because off_t is a
        signed integer.  Some changes in this commit affect loops that
        decrement a length pointer while > 0.  Switching to a size_t could
        create a wraparound infinite loop bug.
        
        This also changes the Content-Length header parser to use atoll()
        intead of atol().  I noticed from the man page that atol() doesn't
        seem to return -1 on error.  But I've kept the check anyway.

M	copy.c
M	crypt-gpgme.c
M	edit.c
M	handler.c
M	imap/message.c
M	mbox.c
M	parse.c
M	pattern.c
M	pop.c

2020-12-22 18:04:32 -0800  Kevin McCarthy  <kevin@8t8.us> (a4a2a1ed)

        * Merge branch 'stable'

2020-12-20 17:48:09 +0000  Christoph Berg  <cb@df7cb.de> (c1ae18c0)

        * Fix a typo in de.po

M	po/de.po

2020-12-20 03:58:21 +0100  Vincent Lefevre  <vincent@vinc17.net> (ef4e63a5)

        * Typo in a L10N text.

M	imap/command.c

2020-12-20 03:43:14 +0100  Vincent Lefevre  <vincent@vinc17.net> (7c6cbecc)

        * Updated French translation.

M	po/fr.po

2020-12-18 10:15:24 -0800  Kevin McCarthy  <kevin@8t8.us> (1598baa2)

        * Add a sanity check for qresync.
        
        If it fails, force a redownload without qresync, to set the uid_seqset
        to a correct state.
        
        Note the headers should almost all be in the header cache, so this
        isn't a huge penalty, but ensures no duplicates occur (the most common
        issue if something goes wrong).

M	imap/message.c

2020-12-16 15:14:29 -0800  Kevin McCarthy  <kevin@8t8.us> (09a1abe3)

        * Add a batch composition flow section to the manual.

M	doc/manual.xml.head

2020-12-15 12:58:24 -0800  Kevin McCarthy  <kevin@8t8.us> (a832cb5a)

        * Create $ssl_verify_host_override.
        
        This allows manually specifying the host name to verify a server
        certificate against.
        
        I'm not sure I like the idea, but since Mutt already allows turning
        hostname verification off, it's not any worse to leave it on but
        manually set the expected hostname in the certificate.
        
        Thanks to eudyptes-pachyrynchus for the merge request, which prompted
        me to take another look at the ticket.

M	globals.h
M	init.h
M	mutt_ssl.c
M	mutt_ssl_gnutls.c

2020-12-10 14:07:19 -0800  Kevin McCarthy  <kevin@8t8.us> (b860ea2f)

        * Add "headers" parameter to mx_open_message().
        
        This will allow some operations to retrieve only headers, such as ~h
        pattern matching or the new list menu.
        
        Modify the IMAP and POP3 implementation to retrieve only headers when
        the parameter is set.
        
        Headers-only will use the message cache if one exists, but will not
        populate the message cache (since the body of the message is not
        downloaded.)

M	commands.c
M	compress.c
M	copy.c
M	imap/imap_private.h
M	imap/message.c
M	listmenu.c
M	mailbox.h
M	mbox.c
M	mh.c
M	mutt.h
M	mx.c
M	parse.c
M	pattern.c
M	pop.c
M	postpone.c
M	recvattach.c
M	send.c
M	sendlib.c

2020-12-10 20:19:08 +0100  Olaf Hering  <olaf@aepfle.de> (c6868e1f)

        * mention system muttrc in man page
        
        mutt uses either the Muttrc owned by the sysadmin, or its own Muttrc.
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	doc/Makefile.am
M	doc/mutt.man

2020-12-09 15:08:31 -0800  Kevin McCarthy  <kevin@8t8.us> (c8663d49)

        * Parse headers on demand for the list menu.
        
        This will be a bit slower over IMAP from the index, but it removes
        storing all the new headers in the header cache.  Since those are not
        used for anything except the list menu, and the list menu is
        infrequently used, it's a bit wasteful to store them in the header
        cache.

M	hcache.c
M	imap/message.c
M	listmenu.c
M	mutt.h
M	muttlib.c
M	parse.c
M	protos.h

2020-12-09 20:00:57 +0100  Grzegorz Szymaszek  <gszymaszek@short.pl> (1f67773f)

        * Improve the Polish translation of OP_TOGGLE_WRITE

M	po/pl.po

2020-12-07 14:59:10 -0800  Kevin McCarthy  <kevin@8t8.us> (f7b469ee)

        * Merge branch 'stable'

2020-12-07 13:18:16 -0800  Kevin McCarthy  <kevin@8t8.us> (8a34338a)

        * Merge branch 'stable'

2020-12-07 17:36:30 +0000  dgc  <dgc.gitlab@bikeshed.us> (59dc711f)

        * Add manual xml for list menu

M	doc/manual.xml.head

2020-12-07 08:53:35 +0100  Olaf Hering  <olaf@aepfle.de> (25d2877f)

        * refresh de.po
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2020-12-07 02:09:07 +0100  Vincent Lefevre  <vincent@vinc17.net> (b95a1d68)

        * Updated French translation.

M	po/fr.po

2020-11-26 15:21:05 -0800  Kevin McCarthy  <kevin@8t8.us> (42331065)

        * Add <skip-headers> to skip past message headers in pager.
        
        This is based on <skip-quoted>, and is bound to 'H' by default.
        
        I've added an error message in case there is no text past the headers,
        just to cover the logical case.  I don't think Mutt allows that to
        happen for text passed to the pager, but just in case.

M	OPS
M	doc/manual.xml.head
M	functions.h
M	pager.c

2020-12-06 12:56:45 -0800  Kevin McCarthy  <kevin@8t8.us> (c23921bc)

        * Fix list menu label alignment.
        
        Use mutt_strwidth() to find the maximum label length.
        
        Use mutt_FormatString() and mutt_format_s() to align the label.

M	listmenu.c

2020-12-06 21:47:35 +0100  Vincent Lefevre  <vincent@vinc17.net> (067d802c)

        * Updated French translation.

M	po/fr.po

2020-12-06 11:20:06 -0800  Kevin McCarthy  <kevin@8t8.us> (aa85a70f)

        * Add new listmenu.c to POTFILES.in.

M	po/POTFILES.in

2020-12-06 20:03:02 +0100  Vincent Lefevre  <vincent@vinc17.net> (64fce068)

        * Updated French translation for the master branch.

M	po/fr.po

2020-12-06 02:14:27 +0000  dgc  <dgc.gitlab@bikeshed.us> (c92a06c0)

        * abstract some List-* header processing
        
        List-Post parsing is inline in the List-Post header handler. This moves
        it to some separate functions so that we can use it for other purposes.

M	Makefile.am
M	OPS
M	curs_main.c
M	doc/manual.xml.tail
M	functions.h
M	hcache.c
M	imap/message.c
M	keymap.c
M	keymap.h
A	listmenu.c
M	mutt.h
M	muttlib.c
M	pager.c
M	parse.c
M	protos.h

2020-12-04 11:05:35 -0800  Kevin McCarthy  <kevin@8t8.us> (6fe98cf5)

        * Merge branch 'stable'

2020-12-03 13:47:50 -0800  Kevin McCarthy  <kevin@8t8.us> (9518a0ab)

        * Add a mutt_error() when copy/save messages fails.
        
        Avoid using "part" translations for the tag/untagged copy/save
        combinations, even though that makes the code longer.

M	commands.c

2020-12-03 13:40:51 -0800  Kevin McCarthy  <kevin@8t8.us> (8d1f22a1)

        * Refresh index if a tagged save aborts in the middle.
        
        Make the sure the index message flags and status line are properly
        redrawn in that case.

M	curs_main.c

2020-12-02 13:22:52 -0800  Kevin McCarthy  <kevin@8t8.us> (d52b69bb)

        * Merge branch 'stable'

2020-12-01 14:21:31 -0800  Kevin McCarthy  <kevin@8t8.us> (1ec642e2)

        * Fix memory leak in imap_copy_messages().
        
        mx.mbox (allocated by imap_parse_path) was not always freed before
        return.
        
        The sync_cmd and cmd buffers were also not always freed.  One case was
        on retrying after creating the mailbox, which would overwrite the
        allocated pointers.
        
        As long as I'm touching the buffers, convert them to use the buffer
        pool.  I think the mutt_buffer_clear() at the beginning of the retry
        loop isn't necessary, but will keep it to make it clear any existing
        values won't be reused a second time through the loop.

M	imap/message.c

2020-12-01 21:36:06 +0100  Vincent Lefevre  <vincent@vinc17.net> (0a836cee)

        * Fix typos in the manual, found by codespell.

M	doc/manual.xml.head

2020-11-29 19:10:40 -0800  Kevin McCarthy  <kevin@8t8.us> (20334587)

        * Add mutt_buffer_rewind() function.
        
        This makes it a bit clearer what the assignment is doing, and reduces
        direct dptr manipulation a bit.

M	buffer.c
M	buffer.h
M	init.c
M	mutt_lisp.c
M	muttlib.c

2020-11-30 15:48:30 -0800  Kevin McCarthy  <kevin@8t8.us> (e1c962aa)

        * Fix a few mutt_extract_token() callers dest parameters.
        
        Some callers performed a mutt_buffer_init(), called
        mutt_extract_token() and then assumed that the buffer->data would
        never be NULL.  Prior to the "fix" in commit f420be68, this was not
        true, even if MoreArgs() returns true, because the argument could be
        just ''.
        
        The parse_keymap() change fixed a possible segv.  Don't use the buffer
        pool, because it returns buf->data to the caller.
        
        I don't believe the other two would segv, but they did still rely on
        the old behavior where the the buffer would have a '\0' appended
        always.  So, change them to use the buffer pool to be cleaner.

M	init.c
M	keymap.c

2020-11-30 18:22:52 -0800  Kevin McCarthy  <kevin@8t8.us> (93a622ec)

        * Merge branch 'stable'

2020-11-29 15:34:33 -0800  Kevin McCarthy  <kevin@8t8.us> (25106303)

        * Merge branch 'stable'

2020-11-30 00:09:37 +0100  Vincent Lefevre  <vincent@vinc17.net> (0149944d)

        * Updated Project-Id-Version to 2.0.2.

M	po/fr.po

2020-11-30 00:06:56 +0100  Vincent Lefevre  <vincent@vinc17.net> (679c8184)

        * Updated French translation.

M	po/fr.po

2020-11-25 13:59:55 -0800  Kevin McCarthy  <kevin@8t8.us> (21ebc162)

        * Merge branch 'stable'

2020-11-25 10:24:22 -0800  Kevin McCarthy  <kevin@8t8.us> (239261b5)

        * Surround new and old debug functions with #ifdef DEBUG.
        
        The new function directly references debugfile, so needs the ifdef.
        The old function compiles fine, but since it's not used, put it inside
        the ifdef too.
        
        Thanks to Ian Allen for reporting the problem.

M	lib.c

2020-11-20 09:33:41 -0800  David Champion  <dgc@extrahop.com> (a3011236)

        * add dprintf(n, fmt, ...) debugging macro
        
        dprintf(n, fmt, ...) is a more natural form of
        dprint(n, (debugfile, fmt, ...)). It prints code location in the debug
        file where possible.
        
        I believe this approach, while common, was not previously used because
        we were trying to be C90-compatible.  C90 doesn't provide variadic
        macros.  Now we require C99, so it makes sense to add this pattern.

M	lib.c
M	lib.h

2020-11-23 11:04:08 -0800  Kevin McCarthy  <kevin@8t8.us> (49545f61)

        * Add configure error if C compiler doesn't support C99.
        
        We added the test, but did not check to ensure it was found.  Thanks
        to Oswald Buddenhagen for pointing out the missing check.  He
        suggested the AC_PROG_CC might be redundant, but the info page seems
        to indicate AC_PROG_CC_C99 checks the properties of an already located
        compiler, so I'm leaving AC_PROG_CC in.
        
        Also, remove the $U check just below.  Commit 64b1460a removed the
        call to AM_C_PROTOTYPES, but forgot to remove the $U check too.

M	configure.ac

2020-11-18 15:49:44 -0800  Kevin McCarthy  <kevin@8t8.us> (474d368e)

        * Add <view-pager> function to attachment menu.
        
        This uses a copiousoutput mailcap entry, or falls back to raw text.
        
        The existing functions do not provide a way to use copiousoutput
        mailcap entries exclusively.  The default <view-attach> will use one
        for internally supported types if auto_view is configured, but there
        is no way to do so for other mime types (such as application/pdf).

M	OPS
M	attach.c
M	doc/manual.xml.head
M	functions.h
M	mutt.h
M	recvattach.c

2020-11-19 19:04:52 -0800  David Champion  <dgc@extrahop.com> (03803e67)

        * Allow debugging without debug file rotation.
        
        start_debug() takes a boolean indicating whether to rotate debug
        files.
        
        The -d option allows a negative number. If negative, debug files
        are not rotated. The debug level is the absolute value.
        
        This is useful for continuously watching (e.g. tail -f) the
        .muttdebug0 file.

M	doc/manual.xml.head
M	doc/mutt.man
M	init.c
M	main.c

2020-11-22 20:22:23 +1100  Cameron Simpson  <cs@cskk.id.au> (bb0cd944)

        * mutt.man: -H: clarify that a From_ line in the draft file is silently discarded

M	doc/mutt.man

2020-11-21 14:03:08 -0800  Kevin McCarthy  <kevin@8t8.us> (8c967ad5)

        * Clean up labels in imap_open_connection().
        
        Commit 04b06aaa was purposely kept minimal, to aid backporting the
        fix.  It kept the err_close_conn label, but there is no need for the
        label anymore.  Change all goto's to use the bail label.

M	imap/imap.c

2020-11-20 09:32:41 -0800  Kevin McCarthy  <kevin@8t8.us> (3d362fa2)

        * Merge branch 'stable'

2020-11-19 15:10:48 -0800  Kevin McCarthy  <kevin@8t8.us> (452dee69)

        * Merge branch 'stable'

2020-11-18 14:17:00 -0800  Kevin McCarthy  <kevin@8t8.us> (1fccc7d1)

        * Remove buffer_normalize_fullpath().
        
        This was supposed to normalize a path after relative path expansion.
        However, as Oswald Buddenhagen pointed out just before the release,
        its method of '..' expansion was incorrect with symlinks in play.
        Furthermore, it turned out mutt_pretty_mailbox() deals with '.' and
        '..'.
        
        The function was turned into a noop before the release, and I'm now
        pulling it out.

M	muttlib.c

2020-11-14 13:46:57 -0800  Kevin McCarthy  <kevin@8t8.us> (8dbc3b8d)

        * Merge branch 'stable'

2020-11-10 15:56:44 -0800  Kevin McCarthy  <kevin@8t8.us> (e832240e)

        * Fix IMAP UTF-7 for code points >= U+10000.
        
        The 20-year old utf7 conversion functions punted on those values,
        which was understandable for when they were written.  We now have
        emojis and increasing number of characters that might be used in a
        mailbox.
        
        Add encode/decode logic using UTF-16 surrogate pairs.
        
        Thanks to Jeff Sipek for reporting this issue, and for giving pointers
        about how the values should be handled.

M	imap/utf7.c

2021-05-04 10:50:51 -0700  Kevin McCarthy  <kevin@8t8.us> (23ccbe39)

        * Update UPDATING file for 2.0.7.

M	UPDATING

2021-05-03 13:11:30 -0700  Kevin McCarthy  <kevin@8t8.us> (7c4779ac)

        * Fix seqset iterator when it ends in a comma.
        
        If the seqset ended with a comma, the substr_end marker would be just
        before the trailing nul.  In the next call, the loop to skip the
        marker would iterate right past the end of string too.
        
        The fix is simple: place the substr_end marker and skip past it
        immediately.

M	imap/util.c

2021-04-28 10:59:03 -0700  Kevin McCarthy  <kevin@8t8.us> (e0f4d46b)

        * Filter unprintables for 2231 encoded continuations too.
        
        Changeset de8d8e8f a long time ago added the filter for 2047 and 2231
        encoded values, to prevent strange issues.  However, it looks like it
        missed the case where the value is broken into continuations.  Those
        are assembled and charset converted in rfc2231_join_continuations().
        Add a filter there too.

M	rfc2231.c

2021-04-24 15:20:02 -0700  Kevin McCarthy  <kevin@8t8.us> (8801dfe9)

        * Turn off pylint in gitlab-ci.
        
        It dynamically installs the latest pylint via pip, meaning it can
        start failing arbitrarily.
        
        It also appears to halt the build even on warnings.
        
        Since this is just checking a single contrib script, it's not worth my
        trouble.

M	.gitlab-ci.yml

2021-03-16 14:56:13 -0700  Kevin McCarthy  <kevin@8t8.us> (8eb29a4c)

        * Check if mutt_prepare_template() fails for -H command line arg.
        
        If the function fails, it will free the envelope, leading to a segv
        just below.
        
        Thanks to Phil Pennock for reporting the problem.

M	main.c

2021-03-10 18:31:42 -0800  Kevin McCarthy  <kevin@8t8.us> (dcf1d11f)

        * Fix resolve_types() newline removal and restoration.
        
        If the line had a '\n', the previous code would leave it off.  The
        "buf[nl] = '\n'" at the end of the function was overwriting the old
        nul character, but there was a new one where the original newline was.
        
        However, if there was not a '\n', the code was removing the nul string
        terminator, which could cause very bad things for searches, (which are
        the only things that use fmt after resolve_types).  Since this bug has
        been there for 12 years, I'm guessing the lines always contain a
        trailing '\n'.
        
        Now, there is a potential problem with behavior changes here...  This
        could have an effect on the QuoteRegexp or SearchRE matches.  It turns
        out SearchRE is compiled with REG_NEWLINE, but the other isn't.  Since
        QuoteRegexp is (typically) only looking at the start of a line, I'm
        going to take the risk of restoring the '\n'.

M	pager.c

2021-03-06 11:15:07 -0800  Kevin McCarthy  <kevin@8t8.us> (98f8cb83)

        * automatic post-release commit for mutt-2.0.6

M	ChangeLog
M	VERSION

2021-03-06 11:12:08 -0800  Kevin McCarthy  <kevin@8t8.us> (814f6d20)

        * Update UPDATING file for 2.0.6 release.

M	UPDATING

2021-02-25 14:19:19 -0800  Kevin McCarthy  <kevin@8t8.us> (de51ab4a)

        * Fix (un)setenv to not return an error with unset env vars.
        
        The code was returning -1 in those cases.  This can cause hook
        processors, such as send2-hook, to sleep 1 second without an error
        message being set and displayed.  It also causes the hook processor to
        abort executing subsequent matching commands.
        
        -1 should be reserved for syntax errors.  For setenv querying, change
        the return value to 0.  For unsetenv, generate a message and also
        change the return value to 0.
        
        <enter-command> checks if err->data is set to determine whether to
        print anything, and the behavior is used in the 'set' commands, so
        this is established correct behavior.

M	init.c

2021-02-05 15:34:37 -0800  Kevin McCarthy  <kevin@8t8.us> (0f8a2a13)

        * Save CurrentFolder in background edit scope.
        
        The CurrentFolder can actually be used to resolve an fcc-hook at fcc
        time.  We would want to use the folder they started composing in, to
        be consistent with expectations.

M	doc/manual.xml.head
M	send.c
M	send.h

2021-02-07 19:41:21 -0800  Kevin McCarthy  <kevin@8t8.us> (564b515c)

        * Fix pattern compilation error for ~( !~>(~P) )
        
        The problem is a nested recursive call followed by trailing
        whitespace.  Other codepaths ensure trailng whitespaces are processed
        when processing the argument, but the parenthesis calls did not.
        
        This meant the outer loop while check:
          while (*ps.dptr)
          {
            SKIPWS (ps.dptr);
            switch (*ps.dptr)
            {
              /* process (~P), for instance */
            }
          }
        would return true for the trailing space(s), the SKIPWS would skip
        over them, and then switch would try to evaluate '\0'.
        
        I think a better solution would be to rearrange the calls like:
          SKIPWS (ps.dptr);
          while (*ps.dptr)
          {
            switch (*ps.dptr)
            {
            }
            SKIPWS(ps.dptr);
          }
        to ensure any trailing whitespace is removed.
        
        However, that's a bit risky for a stable branch commit.  So instead,
        just explicitly add the SKIPWS for the ~() thread ops and for the ()
        groupings after processing the inside expression.

M	pattern.c

2021-02-02 12:47:24 -0800  Kevin McCarthy  <kevin@8t8.us> (ca272c39)

        * Fix contrib/markdown2html crash.
        
        The script crashes if the last line in the message ends with a colon.
        
        Thanks to Aitor Soroa (@asoroa) for the bug report and patch!

M	contrib/markdown2html

2021-01-27 14:55:35 -0800  Kevin McCarthy  <kevin@8t8.us> (6df1891b)

        * Fix another yesorno prompt, for autocrypt account creation.
        
        I seem to have trouble remembering that ctrl-g is one of the
        choices. :-(
        
        There is yet another autocrypt prompt for "enabling prefer-encryption"
        that *could* abort on ctrl-g.  But, since it's not really an "action"
        prompt, I'm keeping that one as a "no on ctrl-g".

M	autocrypt/autocrypt_gpgme.c

2021-01-27 09:31:58 +0100  Christopher Zimmermann  <madroach@gmerlin.de> (2342b4d1)

        * Correctly handle CTRL-G on remaining background_edit sessions prompt

M	curs_lib.c
M	curs_main.c

2021-01-21 12:31:43 -0800  Kevin McCarthy  <kevin@8t8.us> (da5e3282)

        * automatic post-release commit for mutt-2.0.5

M	ChangeLog
M	VERSION

2021-01-21 12:27:50 -0800  Kevin McCarthy  <kevin@8t8.us> (dd66f4ae)

        * Update UPDATING file for 2.0.5.

M	UPDATING

2021-01-17 10:40:37 -0800  Kevin McCarthy  <kevin@8t8.us> (4a2becbd)

        * Fix memory leak parsing group addresses without a display name.
        
        When there was a group address terminator with no previous
        addresses (including the group display-name), an address would be
        allocated but not attached to the address list.
        
        Change this to only allocate when last exists.
        
        It would be more correct to not allocate at all unless we are inside a
        group list, but I will address that in a separate commit to master.

M	rfc822.c

2020-12-01 14:21:31 -0800  Kevin McCarthy  <kevin@8t8.us> (464a9bc6)

        * Fix memory leak in imap_copy_messages().
        
        mx.mbox (allocated by imap_parse_path) was not always freed before
        return.
        
        The sync_cmd and cmd buffers were also not always freed.  One case was
        on retrying after creating the mailbox, which would overwrite the
        allocated pointers.
        
        As long as I'm touching the buffers, convert them to use the buffer
        pool.  I think the mutt_buffer_clear() at the beginning of the retry
        loop isn't necessary, but will keep it to make it clear any existing
        values won't be reused a second time through the loop.

M	imap/message.c

2021-01-13 19:06:49 -0800  Kevin McCarthy  <kevin@8t8.us> (b40c7f6c)

        * Fix imap memory leaks.
        
        The mx.mbox allocated by imap_parse_path() was not freed on error in a
        couple places.
        
        There is also a leak in imap_copy_message(), but this was fixed in
        master in commit 1ec642e2.  I'll cherry pick that into stable.

M	imap/imap.c

2021-01-08 19:04:18 -0800  Kevin McCarthy  <kevin@8t8.us> (b67ae9ce)

        * Fix color overlay when HAVE_COLOR is unset.
        
        mutt_merge_colors() and mutt_attrset_cursor() were not defined in that
        case, but are called in the menu and sidebar.
        
        Change mutt_merge_colors() to just combine attributes in that case.

M	color.c

2020-12-30 14:23:18 -0800  Kevin McCarthy  <kevin@8t8.us> (26f41dd1)

        * automatic post-release commit for mutt-2.0.4

M	ChangeLog
M	UPDATING
M	VERSION

2020-12-30 14:15:08 -0800  Kevin McCarthy  <kevin@8t8.us> (5cc62090)

        * Bump copyright notices.
        
        I'll run the update tool on source files in master a bit later.

M	COPYRIGHT
M	doc/manual.xml.head
M	doc/mutt.man
M	main.c

2020-12-29 13:13:09 -0800  Kevin McCarthy  <kevin@8t8.us> (b23f900b)

        * Fix smtp debug segfault on invalid SmtpAuthenticators list.
        
        sasl_client_start() sets the mech parameter only on success.  dprint()
        the whole mechlist on failure.

M	smtp.c

2020-12-24 15:33:57 -0800  Kevin McCarthy  <kevin@8t8.us> (48d08860)

        * Fix header cache BDB version checking.
        
        Update BDB versions up to 6.2.
        
        The scheme used here is, as Oswald nicely puts it, "totally insane",
        and seems to come straight from the initial header cache commit in
        c11667eaa3.
        
        For a stable release, I'm just going to add a few more Jenga pieces to
        the top.
        
        However, going forward this is unmaintainable.  Oswald reports using a
        simple check for "db.h" and "-ldb" for about two decades with no
        issues.  I will make that change in master later this week.

M	configure.ac

2020-12-21 15:30:01 -0800  Kevin McCarthy  <kevin@8t8.us> (11b18027)

        * Fix offset to use LOFF_T in a couple places.
        
        The BODY->hdr_offset was incorrectly of type long, which could result
        in corrupted >2gb mbox files in some circumstances.
        
        The uses in mh_rewrite_message() are not as serious, but they should
        still be of type LOFF_T.
        
        I found both of these fixes in a patch file,
        bug-676388-largefile.patch, in the openSUSE mutt src rpm.  It looks
        like Harald Koenig was the original author of a larger patch in that
        openSUSE ticket, which was reduced over time as fixes were made to
        Mutt.
        
        Note that patch file also incorrectly adjusted old_hdr_lines in mh.c.
        I've removed that part, as HEADER->lines is type int.
        
        Unfortunately, the BODY->hdr_offset type change will result in a
        header cache change (i.e. invalidation).  I'm not enthused about doing
        that during a stable release, but the change is important enough to
        merit it.

M	mh.c
M	mutt.h

2020-12-07 14:47:22 -0800  Kevin McCarthy  <kevin@8t8.us> (a7b839e5)

        * Ensure idata->check_status is cleared on mailbox close.
        
        I don't think this would cause any issues, but it should be cleared
        here in any case.

M	imap/imap.c

2020-12-07 13:03:41 -0800  Kevin McCarthy  <kevin@8t8.us> (b5ef1155)

        * Abort IMAP open if condstore/qresync updates fetch fails.
        
        An error in imap_cmd_step() was not being properly returned to the
        caller.

M	imap/message.c

2020-12-04 10:54:21 -0800  Kevin McCarthy  <kevin@8t8.us> (a51f058f)

        * automatic post-release commit for mutt-2.0.3

M	ChangeLog
M	VERSION

2020-12-04 10:48:04 -0800  Kevin McCarthy  <kevin@8t8.us> (c6f114f8)

        * Update UPDATING file for 2.0.3 release.

M	UPDATING

2020-12-02 13:03:06 -0800  Kevin McCarthy  <kevin@8t8.us> (3ba8dac0)

        * Fix pager dropped input on SigWinch flag handling.
        
        The code to process the SigWinch flag ocurred after, and would drop an
        input character when the flag was set outside of, km_dokey().  This
        could happen, for instance, when a pipe operation was invoked.
        
        Thanks to Vincent Lefèvre for uncovering the problem.

M	pager.c

2020-11-30 15:53:49 -0800  Kevin McCarthy  <kevin@8t8.us> (f420be68)

        * Ensure mutt_extract_token() never returns a NULL dest->data.
        
        Commit e5a32a61 removed a 'mutt_buffer_addch (dest, 0)' at the end of
        the function.  Most callers had been converted to use the buffer pool,
        and the call was strange since buffers self-terminate.
        
        However, this line covered up logic errors in some of the callers,
        which assumed the buffer->data could not be NULL afterwards.
        
        I will try to fix up callers with the logic errors in master.  This is
        to fix the problem in stable, and also ensure future callers don't
        make the same mistake.

M	init.c

2020-11-29 13:44:30 -0800  Kevin McCarthy  <kevin@8t8.us> (cfdcfa7f)

        * Fix REPLY_TO environment variable handling.
        
        Commit 4e153adf changed this code to reuse the function buffer
        variable, but forgot to rewind the buffer for parsing in
        parse_my_hdr().
        
        Additionally commit e5a32a61 removed an extra "null termination"
        mutt_buffer_addch() at the end of mutt_extract_token().  This caused a
        NULL value to be passed to the strpbrk() in parse_my_hdr(), causing a
        segv.  Change to use a buffer pool token parameter instead.
        
        I actually think, like with the previous IMAP mailbox handling, this
        method of adding a my_hdr is dangerous.  I'll look into refactoring it
        in master instead.
        
        Thanks to Paul Nevai for reporting the problem and tracking down the
        backtrace.

M	init.c

2020-11-29 10:48:22 -0800  Kevin McCarthy  <kevin@8t8.us> (dbdf481c)

        * Fix undefined NULL pointer arithmetic.
        
        clang 10 is giving a warning about arithmetic with a NULL pointer.  To
        prevent any problems, add checks in the BUFFER increase-size handling
        functions.

M	buffer.c

2020-11-25 13:46:47 -0800  Kevin McCarthy  <kevin@8t8.us> (9109eff8)

        * Fix exact-address recording of last value.
        
        If the last address was also terminated by a comma (e.g: foo@local,
        bar@local,) the exact-address was incorrectly overwriting the recorded
        value.

M	rfc822.c

2020-11-24 12:54:00 -0800  Kevin McCarthy  <kevin@8t8.us> (d73a83f7)

        * Fix exact-address handling when addr->personal is set.
        
        The exact-address compile-time option takes an exact copy of an
        address when it is parsed, and prints that out when outputting the
        address.  The idea is to preserve older "user@host (Name)" syntax.
        
        Unfortunately, when code tries to "update" the personal/name field, it
        needs to clear the exact-address copy for it to have any effect.
        
        An object-oriented design encapsulating the setting would help prevent
        this problem.  It might be desirable to create a C function instead,
        but callers would have to remember it, and such a thing isn't common
        in the Mutt codebase.
        
        Another patch (I'm still debating applying) changes the address parser
        to discard the exact-address copy when it exactly matches the
        mailbox.  However, that still won't fix every case (and it makes the
        parser even more difficult to follow.)
        
        So this commit (to stable) takes the straightforward approach.
        
        It fixes bugs in:
        
        * Alias creation.  The "personal name" prompt was ignored.
        
        * Autocrypt initialization from address setting with $realname.
        
        * $pgp_getkeys_command handling.
        
        * Query menu results.
        
        * "unset $reverse_realname" handling.
        
        * $from handling of $realname.
        
        * Bounce Resent-From handling of $realname.

M	alias.c
M	autocrypt/autocrypt.c
M	pgpinvoke.c
M	query.c
M	send.c
M	sendlib.c

2020-11-20 09:23:29 -0800  Kevin McCarthy  <kevin@8t8.us> (d9268908)

        * automatic post-release commit for mutt-2.0.2

M	ChangeLog
M	VERSION

2020-11-20 09:20:01 -0800  Kevin McCarthy  <kevin@8t8.us> (e4fd9247)

        * Update UPDATING file for 2.0.2.

M	UPDATING

2020-11-16 10:20:21 -0800  Kevin McCarthy  <kevin@8t8.us> (04b06aaa)

        * Ensure IMAP connection is closed after a connection error.
        
        During connection, if the server provided an illegal initial response,
        Mutt "bailed", but did not actually close the connection.  The calling
        code unfortunately relied on the connection status to decide to
        continue with authentication, instead of checking the "bail" return
        value.
        
        This could result in authentication credentials being sent over an
        unencrypted connection, without $ssl_force_tls being consulted.
        
        Fix this by strictly closing the connection on any invalid response
        during connection.  The fix is intentionally small, to ease
        backporting.  A better fix would include removing the 'err_close_conn'
        label, and perhaps adding return value checking in the caller (though
        this change obviates the need for that).
        
        This addresses CVE-2020-28896.  Thanks to Gabriel Salles-Loustau for
        reporting the problem, and providing test cases to reproduce.

M	imap/imap.c

2020-11-19 15:06:51 -0800  Keld Simonsen  <keld@keldix.com> (d4c97068)

        * Updated Danish translation.

M	po/da.po

2020-11-14 13:16:03 -0800  Kevin McCarthy  <kevin@8t8.us> (42e08237)

        * automatic post-release commit for mutt-2.0.1

M	ChangeLog
M	VERSION

2020-11-14 13:10:45 -0800  Kevin McCarthy  <kevin@8t8.us> (78fe7d4e)

        * Update UPDATING file for 2.0.1.

M	UPDATING

2020-11-12 09:42:28 -0800  Kevin McCarthy  <kevin@8t8.us> (894a49f6)

        * Clarify pattern completion uses <complete>.
        
        Some users may have bound tab to another function, so be specific.

M	UPDATING

2020-11-09 10:59:44 +0100  Remco Rĳnders  <remco@webconquest.com> (86d64caa)

        * Consistently use uint32_t (closes #294)

M	hcache.c
M	mutt_random.c

2020-11-07 12:18:03 -0800  Kevin McCarthy  <kevin@8t8.us> (3d08634b)

        * automatic post-release commit for mutt-2.0.0

M	ChangeLog
M	VERSION
M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/el.po
M	po/eo.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fi.po
M	po/fr.po
M	po/ga.po
M	po/gl.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/nl.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/sv.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po

2020-11-07 11:30:13 -0800  Kevin McCarthy  <kevin@8t8.us> (0c8f4357)

        * Add missing new header files to EXTRA_mutt_SOURCES.
        
        I forgot to add the mutt_lisp.h and mutt_random.h files there.

M	Makefile.am

2020-11-07 11:01:47 -0800  Kevin McCarthy  <kevin@8t8.us> (a374cea8)

        * Update UPDATING file for 2.0.

M	UPDATING

2020-11-06 14:31:57 -0800  Vsevolod Volkov  <vvv@mutt.org.ua> (3e9c605d)

        * Updated Russian translation.

M	po/ru.po

2020-11-06 14:29:11 -0800  Vsevolod Volkov  <vvv@mutt.org.ua> (3317883a)

        * Updated Ukrainian translation.

M	po/uk.po

2020-11-06 14:26:09 -0800  Ivan Vilata i Balaguer  <ivan@selidor.net> (32fcad9f)

        * Updated Catalan translation.

M	po/ca.po

2020-11-06 14:02:49 -0800  Kevin McCarthy  <kevin@8t8.us> (f5aa9382)

        * Disable normalization after expand_path().
        
        The algorithm used was incorrect, for '..' expansion with symlinks
        involved.  Furthermore, mutt_pretty_mailbox() takes care of this for
        us.
        
        To be conservative, just before the release, I'm leaving the function
        but converting it to a noop.  I'll pull the function out after the
        release.
        
        Thanks to Oswald Buddenhagen for pointing out the bug!

M	muttlib.c

2020-11-06 13:18:27 -0800  Kevin McCarthy  <kevin@8t8.us> (6704caf4)

        * Don't relative-path expand for fcc-hook and save-hook.
        
        "fcc-hook ~x. \\^" used to work, because mutt_addr_hook() calls
        mutt_make_string(), which performs backslash expansion.
        
        The same would happen for save-hook.
        
        Many thanks to Oswald Buddenhagen for reporting the issue.

M	hook.c
M	muttlib.c
M	protos.h

2020-11-04 23:01:55 +0100  Grzegorz Szymaszek  <gszymaszek@short.pl> (533c38f4)

        * Fix the Polish translation of “Attachments”
        
        I have misunderstood the “Atts” abbreviation for “Attributes”, while it
        actually means “Attachments”.

M	po/pl.po

2020-11-04 20:15:52 +0100  Grzegorz Szymaszek  <gszymaszek@short.pl> (cdc99643)

        * Update the Polish translation for Mutt 2.0

M	po/pl.po

2020-11-03 16:50:23 +0100  Flammie Pirinen  <tommi.pirinen@uit.no> (f26731fa)

        * updated finnish translation

M	po/fi.po

2020-11-03 07:11:00 -0800  Kevin McCarthy  <kevin@8t8.us> (e677c196)

        * Minor fix to UPDATING file.

M	UPDATING

2020-10-31 15:35:53 +0100  Petr Písař  <petr.pisar@atlas.cz> (d752a64c)

        * Czech translation updated for 2.0

M	po/cs.po

2020-10-29 14:46:30 -0400  Remco Rĳnders  <remco@webconquest.com> (f6fb0ca9)

        * Adjust Makefile.am to exclude BEWARE file

M	Makefile.am

2020-10-29 14:24:08 -0400  Remco Rĳnders  <remco@webconquest.com> (37a1950a)

        * Move contents from BEWARE to devel-notes.txt

D	BEWARE
M	doc/devel-notes.txt

2020-10-29 13:59:13 -0400  Remco Rĳnders  <remco@webconquest.com> (4fa19ba4)

        * Change instructions to subscribe to dev mail list

M	doc/devel-notes.txt

2020-10-25 15:07:55 -0700  Kevin McCarthy  <kevin@8t8.us> (9258922a)

        * Add a more explicit mention of ^G in the manual.
        
        It's a FAQ, so I think is worth emphasizing in the "getting started"
        section.

M	doc/manual.xml.head

2020-10-25 20:49:22 +0100  Christopher Zimmermann  <madroach@gmerlin.de> (cafe0fb5)

        * Allow to abort on question about multipart/alternative

M	send.c

2020-10-24 09:13:19 -0400  Remco Rĳnders  <remco@webconquest.com> (63e8ba68)

        * Updated Dutch translation.

M	po/nl.po

2020-10-23 15:50:06 -0700  Emir Sarı  <bitigchi@me.com> (d8bbd22c)

        * Update Turkish translations.

M	po/tr.po

2020-10-23 19:10:58 +0200  Olaf Hering  <olaf@aepfle.de> (18a07d14)

        * refresh de.po
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2020-10-22 19:41:14 -0700  Kevin McCarthy  <kevin@8t8.us> (e1089b5e)

        * Remove obsolete stamp-h.in.
        
        This file was used a long time ago (pre-1.0) when Makefile.in was
        checked in.
        
        We now generate Makefile.in from Makefile.am, and automake appears to
        use a different mechanism of time-stamping, using stamp-h + $counter.

D	stamp-h.in

2020-10-17 18:55:27 -0700  Kevin McCarthy  <kevin@8t8.us> (1036f0ed)

        * Add an initial change list for 2.0.0 to the UPDATING file.

M	UPDATING

2020-10-17 18:54:52 -0700  Kevin McCarthy  <kevin@8t8.us> (47fa1503)

        * Add the mailboxes history category to the manual.

M	doc/manual.xml.head

2020-10-14 14:29:27 +0200  Philipp Klaus Krause  <pkk@spth.de> (36640a88)

        * Since the string from strerror should never be modified, use const.

M	curs_lib.c

2020-10-12 15:34:44 -0700  Kevin McCarthy  <kevin@8t8.us> (1061dcbc)

        * Create $attach_save_dir.
        
        This will be used when saving attachments via
        mutt_save_attachment_list().
        
        Try to create the directory if it doesn't exist.  If we're unable to
        chdir or create the directory just continue on, using cwd.

M	globals.h
M	init.h
M	recvattach.c

2020-10-09 09:20:11 -0700  Kevin McCarthy  <kevin@8t8.us> (f8263764)

        * Fix mutt_oauth.py.README example.
        
        $imap_authenticators should be colon delimited.

M	contrib/mutt_oauth2.py.README

2020-10-06 13:39:55 +1100  Cameron Simpson  <cs@cskk.id.au> (0241b030)

        * doc/manual.xml.head: Most common mail sending keys: replace "compose" with "mail", incorrect function name

M	doc/manual.xml.head

2020-10-03 15:43:06 -0700  Kevin McCarthy  <kevin@8t8.us> (489ade5c)

        * Move MuttLisp example descriptions before the code.

M	doc/manual.xml.head

2020-10-01 13:33:55 -0700  Kevin McCarthy  <kevin@8t8.us> (ed9303a8)

        * More ansi/special cleanup.
        
        Relocate the checks for a->attr and special around the blocks that use
        them.

M	pager.c

2020-09-30 09:49:17 -0700  Kevin McCarthy  <kevin@8t8.us> (65b1ceab)

        * Don't do ansi coloring on a search result.

M	pager.c

2020-09-29 18:46:27 -0700  Kevin McCarthy  <kevin@8t8.us> (73a7bf2c)

        * Don't free and reuse ansi colors.
        
        You can't reallocate a color-pair to another color while the previous
        one is still on the screen.
        
        Since there are at most 64 ansi-color combinations, just let them
        accumulate.

M	pager.c

2020-09-29 14:20:24 -0700  Kevin McCarthy  <kevin@8t8.us> (a3a4d12f)

        * Fix $allow_ansi end-of-line handling for attachments.
        
        Attachment viewing doesn't set MUTT_SHOWCOLOR, but for proper display
        we need to call resolve_color() before clearing to end-of-line.

M	pager.c

2020-09-29 14:17:27 -0700  Kevin McCarthy  <kevin@8t8.us> (15372907)

        * Separate special color setting from $allow_ansi colors.
        
        The ColorDefs for MT_COLOR_BOLD and MT_COLOR_UNDERLINE should only be
        applied for the special formatting.  They shouldn't apply when
        $allow_ansi has a bold/underline sequence.
        
        Change the exclusive or operator to a regular or.  Exclusive or
        implies we are doing some kind of toggling, which we are not in this
        case.  It just confuses things.
        
        Don't make the ansi underline, reverse, and blink mutually exclusive.

M	pager.c

2020-09-23 11:08:03 -0700  Kevin McCarthy  <kevin@8t8.us> (b0ccf259)

        * Delay $hostname setting until after the muttrc is evaluated.
        
        Commit 5c5c34f2 made back in 1.6 changed Fqdn setting to use
        gethostname() and getaddrinfo() to get the canonical domain.  This is
        more accurate but can cause startup delays for systems where the DNS
        resolution is not set up properly.
        
        Because this occurred before muttrc reading, there was no workaround
        except to "fix DNS".
        
        Change Fqdn ($hostname) setting to occur after the muttrc and '-e'
        argument processing occur.
        
        This is a possible breaking change if users rely on $hostname inside
        their muttrc, for example 'source "muttrc.$hostname"'.  The workaround
        would be to put something like (depending on the system type): 'set
        hostname = `hostname --fqdn`' in the muttrc above that invocation.
        
        Also note that we still set Hostname (the internal variable) early,
        because it is used in more places than Fqdn, such as tempfiles.

M	init.c
M	init.h

2020-09-22 11:17:07 -0700  Kevin McCarthy  <kevin@8t8.us> (8a2fc801)

        * Note that $cursor_overlay affects tree colors too.
        
        Change the font on "default" to indicate that actual value allows for
        color overlays between the layers.

M	init.h

2020-09-20 18:46:48 -0700  Kevin McCarthy  <kevin@8t8.us> (9204b24e)

        * Reenable $ssl_force_tls.
        
        The next release will be 2.0, providing more justification for
        (reasonable) breaking changes.  In 2020, this should be the default.
        
        The documentation seems to already make appropriate warnings about
        $tunnel_is_secure.  Since that option is introduced this release,
        there is no need to worry about existing users with it unset.
        
        However, there were a couple stray double-quotes in the documentation
        for that, so clean those up in this commit.

M	doc/manual.xml.head
M	init.h

2020-09-19 15:31:36 -0700  Kevin McCarthy  <kevin@8t8.us> (2ce2fb7b)

        * Add refresh option to smime_keys man page.

M	doc/smime_keys.man

2020-09-18 09:39:18 -0700  Kevin McCarthy  <kevin@8t8.us> (34ba89ec)

        * Add missing full stops in smime_keys.man page.
        
        Thanks to hmartink and the manpage-l10n project for pointing out the
        issues.

M	doc/smime_keys.man

2020-09-16 09:44:07 -0700  Kevin McCarthy  <kevin@8t8.us> (e91313b8)

        * Remove casts for mutt_random_bytes() argument.
        
        Unneeded casts can hide issues later on, so take them out.

M	mutt_random.c
M	muttlib.c
M	sendlib.c

2020-09-15 14:32:19 -0700  Kevin McCarthy  <kevin@8t8.us> (ee2b9d1d)

        * Remove message-id security leaks section of manual.
        
        The message-id generator has been changed to use a combination of time
        and random components for the left side.

M	doc/manual.xml.head

2020-09-08 14:05:49 -0400  Remco Rĳnders  <remco@webconquest.com> (9da4e6e1)

        * Change Message-ID to be more unique and leak less information
        
        A Message-ID should be globally unique. Currently mutt generates this ID
        based on the current date and time, followed by ".G", followed by a letter
        A to Z (A for the 1st and 27th email sent, Z for the 26th, etc.), followed
        by the pid of the active mutt process, followed by "@" and the configured
        fqdn.
        
        This can lead to information being leaked as to an users email habits and
        activities, which might be undesirable.
        
        By replacing everything left of the "@" in the Message-ID with a Base64
        encoded timestamp and 64 bits of randomness, we no longer include this
        information.

M	sendlib.c

2020-08-31 13:48:51 -0400  Remco Rĳnders  <remco@webconquest.com> (b48233f7)

        * Use PRIu64 macro as format when printing uint64_t values

M	muttlib.c

2020-08-31 13:10:25 -0400  Remco Rĳnders  <remco@webconquest.com> (8ccd96db)

        * Implement LFRS113 PRNG functions
        
        - Instead of relying on random() implementations which can be of
        questionable quality or relying on the presence of /dev/urandom, we
        implement our own PRNG implementation that uses the LFRS113 PRNG algorithm
        by Pierre L'Ecuyer.
        
        We seed this PRNG with values based on time, pid and ppid. It is OK if not
        all seeds are of the highest quality as all four seeds would have to be
        known to predict the numbers generated. In addition to this, we also use
        /dev/urandom values (if available) that we mix into our four seeds.
        
        In case we are reseeding we will also reuse our existing state information
        for setting the new seed values.
        
        - Add a function to Base64 encode 96 random bits

M	Makefile.am
M	init.c
A	mutt_random.c
A	mutt_random.h
M	muttlib.c
M	sendlib.c

2020-09-13 00:05:22 +0100  isdtor  <isdtor@gmail.com> (56de020a)

        * Add note about $smime_default_key to use with GPGME.
        
        When using GPGME for S/MIME, the key id used should be the id
        displayed by "gpgsm --list-keys".

M	init.h

2020-09-06 15:39:07 -0700  Kevin McCarthy  <kevin@8t8.us> (4219d5f9)

        * Block signals during mbox-append operation.
        
        I first noticed this back in 2017, but no one replied to my query to
        mutt-dev and I forgot about it too.
        
        Thanks to Oswald Buddenhagen for the followup when he was going
        through the mailing list archives, confirming the mistake.
        
        I've also reviewed MUTT_APPEND and MUTT_NEWFOLDER uses to make sure
        the context is properly closed (and the signals restored).

M	mbox.c

2020-09-05 15:15:40 -0700  Kevin McCarthy  <kevin@8t8.us> (7157d009)

        * Removed unused mutt_expand_path()
        
        All usages now call mutt_buffer_expand_path().

M	muttlib.c
M	protos.h

2020-09-05 15:11:59 -0700  Kevin McCarthy  <kevin@8t8.us> (d76aebd2)

        * Convert _mutt_enter_string() to use buffer expand_path function.
        
        This is the last usage of mutt_expand_path().  Converting all of
        _mutt_enter_string() is a large project, so instead just localize to
        use a BUFFER for the mutt_expand_path() call.

M	enter.c

2020-09-05 14:10:18 -0700  Kevin McCarthy  <kevin@8t8.us> (4a2f1067)

        * Remove unused mutt_quote_filename().
        
        All callers now call the buffer function instead.

M	lib.c
M	lib.h

2020-09-04 19:46:02 -0700  Kevin McCarthy  <kevin@8t8.us> (bf68f089)

        * Convert mutt_create_alias and helpers to use buffer pool.
        
        This is working towards removing a few of the partially converted path
        functions, such as mutt_expand_path().

M	alias.c
M	protos.h

2020-09-06 23:21:15 +0200  Olaf Hering  <olaf@aepfle.de> (2d9c05c9)

        * Fix typos in de.po
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2020-09-04 14:16:21 -0700  Kevin McCarthy  <kevin@8t8.us> (c4fe5624)

        * Use muttmua ubuntu image for shellcheck.

M	.gitlab-ci.yml

2020-09-04 14:11:55 -0700  Kevin McCarthy  <kevin@8t8.us> (0f97dd3a)

        * Turn off shellcheck unused var warning for doc/instdoc.sh.

M	doc/instdoc.sh.in

2020-08-30 13:26:29 -0700  Kevin McCarthy  <kevin@8t8.us> (7ae6d9aa)

        * Disable relative expansion for signature and source pipes.
        
        Relative expansion shouldn't be performed when those values are to be
        executed as a pipe for the output.
        
        I believe this issue only affects $signature and the source command,
        so for now I'm disabling relative expansion for those two cases.  If
        there is too much more breakage, I will consider backing out the
        relative expansion and disabling the :cd command.
        
        Thanks to Aaron Schrab for reporting this issue.

M	init.c

2020-08-28 15:51:55 -0700  Kevin McCarthy  <kevin@8t8.us> (2ba1d11f)

        * Normalize expanded paths with '.' or '..' in them.
        
        This usage is not too likely, but to prevent strange looking mailbox
        paths, make sure the path is normalized after being expanded.

M	muttlib.c

2020-07-29 13:44:17 -0700  Kevin McCarthy  <kevin@8t8.us> (6fc79323)

        * Remove relative path expansion for some cases.
        
        Some paths, such as the folder browser, or certain hook values,
        should be expanded for shortcuts, but not for relative paths.
        
        Configuration variables that hold commands that search by PATH should
        also not be expanded.
        
        Create a separate call, and a separate data type for config vars.

M	browser.c
M	commands.c
M	doc/makedoc.pl
M	hook.c
M	init.c
M	init.h
M	muttlib.c
M	protos.h
M	recvattach.c

2020-07-26 19:10:57 -0700  Kevin McCarthy  <kevin@8t8.us> (0f455d51)

        * Change expand_path() to expand relative paths.
        
        The introduction of the "cd" command can make relative paths
        unreliable.  Change expand_path() to expand relative paths.
        
        Change pretty_mailbox() to contract relative paths, but only when the
        folder is outside of homedir, or when cwd is underneath the homedir.
        
        To try and keep the sidebar from changing, use the pretty_mailbox code
        to contract relative paths only.

M	muttlib.c
M	sidebar.c

2020-08-29 12:30:18 -0700  Kevin McCarthy  <kevin@8t8.us> (092bc204)

        * Merge branch 'stable' into master

2020-08-29 12:29:50 -0700  Kevin McCarthy  <kevin@8t8.us> (f34d0909)

        * automatic post-release commit for mutt-1.14.7

M	ChangeLog
M	VERSION

2020-08-27 15:11:25 -0700  Kevin McCarthy  <kevin@8t8.us> (55c09cfb)

        * Merge branch 'stable' into master

2020-08-25 12:29:14 -0400  Remco Rĳnders  <remco@webconquest.com> (20165b4e)

        * Remove always true conditional (#if 1)

M	main.c

2020-08-25 12:23:37 -0400  Remco Rĳnders  <remco@webconquest.com> (9ef96f1f)

        * Remove always true conditional (#if 1)

M	strcasestr.c

2020-08-25 12:16:52 -0400  Remco Rĳnders  <remco@webconquest.com> (ae3014e9)

        * Make returns after mx_fastclose_mailbox calls more consistent and cleaner

M	mx.c

2020-08-25 12:14:33 -0400  Remco Rĳnders  <remco@webconquest.com> (97398c4f)

        * Remove always true conditional (#if 1)

M	imap/imap.c

2020-08-22 07:43:15 -0700  William Yardley  <wyardley@users.noreply.github.com> (3f856d11)

        * refactor: update shell scripts for shellcheck warnings
        
        This updates shell scripts in the project to resolve shellcheck lint
        warnings.
        
        A couple of warnings are ignored instead, at least for now.

M	check_sec.sh
M	contrib/bgedit-detectgui.sh
M	contrib/iconv/make.sh
M	gen_defs
M	txt2c.sh

2020-08-24 12:12:39 -0700  William Yardley  <wyardley@users.noreply.github.com> (6f4c0f7a)

        * gen_defs: switch from $(()) to expr
        
        For greater compatibility with Solaris's Bourne shell, switch to "expr" for
        numeric evaluation

M	gen_defs

2020-08-21 21:43:23 -0700  William Yardley  <wyardley@users.noreply.github.com> (18dc7be4)

        * ci: enable shellcheck

M	.gitlab-ci.yml
M	Makefile.am

2020-08-25 09:00:26 -0700  Kevin McCarthy  <kevin@8t8.us> (2d1da9c0)

        * Merge branch 'stable' into master

2020-08-21 22:50:55 -0700  William Yardley  <wyardley@users.noreply.github.com> (2f5a9496)

        * mutt_oauth2: update for pylint / flake8 warnings
        
        * Update style to resolve some pylint / flake8 warnings
        * Run pylint / flake8 in CI

M	.gitlab-ci.yml
A	.pylintrc
M	contrib/mutt_oauth2.py

2020-08-21 15:22:50 -0700  Alexander Perlis  <aperlis@math.lsu.edu> (c0218ade)

        * Updates to contrib/mutt_oauth2.py and README.
        
        The newer version of the mutt_oauth2.py script incorporates the
        following changes:
         - Uses /usr/bin/env at top
         - Many formatting changes to appease pylint
         - Improvement to POP test error message output
        
        Also attached is a README that has instructions for both Microsoft and Google.

M	contrib/mutt_oauth2.py
M	contrib/mutt_oauth2.py.README

2020-07-23 19:15:11 +0300  Maxim Tarasov  <mu@magi.net.ru> (a563ce85)

        * Change hardcoded subject of replies
        
        This affects prefilled subject of a reply to an email with an empty
        subject.

M	send.c

2020-08-13 13:00:01 -0700  Kevin McCarthy  <kevin@8t8.us> (2bfb7fed)

        * Merge branch 'stable' into master

2020-08-13 19:07:10 +0200  Vincent Lefevre  <vincent@vinc17.net> (c994f365)

        * Updated French translation.

M	po/fr.po

2020-08-10 11:19:46 -0700  Kevin McCarthy  <kevin@8t8.us> (a84e8823)

        * Improve clarity of help format_line() splitting.
        
        Thanks to Zero King for the initial patch.  He says the original line
        confused some static analysis tools.
        
        I don't see anything wrong with the operator precedence, but as long
        as we are cleaning up the line, split assignment and conditional
        evaluation to make it even clearer.

M	help.c

2020-08-06 15:50:53 -0700  Kevin McCarthy  <kevin@8t8.us> (17df35f0)

        * Merge branch 'stable'

2020-08-04 11:03:08 -0700  Kevin McCarthy  <kevin@8t8.us> (8e8c586d)

        * Fix manual typo.

M	doc/manual.xml.head

2020-08-03 16:14:29 -0700  Kevin McCarthy  <kevin@8t8.us> (2fbc29ec)

        * Allow my_var assignments to reference the $my_var in the value.
        
        This is important for MuttLisp, where the current value could be used
        to determine the new assignment.

M	init.c

2020-08-01 19:55:26 -0700  Kevin McCarthy  <kevin@8t8.us> (312e9bd9)

        * Fix MuttLisp extract_token() call to remove trailing whitespace.
        
        MoreArgs() doesn't look for whitespace, and so assumes
        mutt_extract_token() will remove trailing whitespace too.

M	init.c

2020-07-27 08:56:10 +0200  Olaf Hering  <olaf@aepfle.de> (7fe1aaad)

        * refresh de.po
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2020-07-26 03:04:33 +0300  Maxim Tarasov  <mu@magi.net.ru> (0b3fc03c)

        * Fix man section in reference to mutt_dotlock

M	init.h

2020-07-26 03:00:54 +0300  Maxim Tarasov  <mu@magi.net.ru> (661bd665)

        * Update mutt.1 manpage
        
        * Change the wording for some options to be imperative.
        
        * Rename parameters to be descriptive ("draft" instead of "file").
        
        * Mention possible values for -m parameter.
        
        * Change "file [...]" to "file ..." as ellipsis already implies it's
          optional.
        
        * Format entries in the SYNOPSIS to avoid wrapping inside square
          brackets.
        
        * Space out examples in -a description.
        
        * Use consistent formatting everywhere: options using B, paths and
          option values using I, manual references using BR.
        
        * Group together descriptions of EDITOR and VISUAL environment
          variables since they're closely related. Mention the default editor.
        
        * Add references to these environment variables: EGDSOCKET, RANDFILE,
          LC_ALL, LC_CTYPE, LANG, and TEXTDOMAINDIR.
        
        * Clarify the way TMPDIR is used.
        
        * Add ~/.muttdebug0 to the FILES section.
        
        * Add missing manual pages to the SEE ALSO section. Sort the list.
        
        * Add line breaks after sentences (this is recommended in roff manual
          to enable sentence processing; sentences are double spaced
          automatically).

M	doc/mutt.man

2020-07-26 13:47:06 +0000  Asif Talybov  <talybov.asif@yandex.ru> (be906781)

        * Update russian translation - add a missing character and fix typo

M	po/ru.po

2020-07-25 16:08:03 -0700  Kevin McCarthy  <kevin@8t8.us> (317abd8f)

        * Fix a few typos in the manual.

M	doc/manual.xml.head
M	init.h

2020-07-25 16:07:14 -0700  Kevin McCarthy  <kevin@8t8.us> (9ab12e1e)

        * Add missing commands in the muttrc.man page.

M	doc/muttrc.man.head

2020-07-25 14:25:43 -0700  Kevin McCarthy  <kevin@8t8.us> (692a6069)

        * Add empty-request lines to muttrc.man for spacing.
        
        Adding them makes it a bit easier to see where the different commands
        stop and start.

M	doc/muttrc.man.head

2020-07-25 13:03:09 -0700  Kevin McCarthy  <kevin@8t8.us> (9edbbac1)

        * Change POP3 oauth to not use initial response.
        
        The Microsoft documents indicate their implementation requires a
          > AUTH XOAUTH2
          < +
          > token
        sequence.
        
        I don't have their services configured to test, but it's safer to
        assume not all implementations will support initial response.
        
        I did test Gmail's and they are fine with the second round trip.

M	pop_auth.c

2020-07-25 09:29:21 -0700  Kevin McCarthy  <kevin@8t8.us> (e050c314)

        * Improve w3m invocation for manual.txt generation.
        
        This fix is also from Ambrose Li (@gniw).  The invocation makes sure
        w3m won't attempt a remote connection if manual.html doesn't exist and
        a proxy is configured, by using manual.txt as stdin.
        
        It also gives a non-zero exit status in that case, and makes sure
        input is processed as utf-8.

M	doc/Makefile.am

2020-07-25 04:18:03 +0300  Maxim Tarasov  <mu@magi.net.ru> (daab98e3)

        * Change \fC to \fB during muttrc.man generation
        
        \fC is not actually a valid escape sequence. Using it results in
        misplaced underlined formatting.

M	doc/makedoc.pl

2020-07-24 16:02:32 -0700  Kevin McCarthy  <kevin@8t8.us> (a21c9fc1)

        * Merge branch 'stable'

2020-07-23 17:11:47 +0300  Maxim Tarasov  <mu@magi.net.ru> (6479ec5c)

        * Mention $XDG_CONFIG_HOME in the manpage
        
        Mutt supported processing $XDG_CONFIG_HOME/mutt/muttrc for a while
        now, but mutt(1) man page hasn't been updated to reflect that.
        
        This will also replace .IP with .TP to use one line per file name and
        highlight file names with .I which is common practice in manual
        formatting.

M	doc/mutt.man

2020-07-22 18:46:51 -0700  Kevin McCarthy  <kevin@8t8.us> (3c2501e5)

        * Fix redraw_motion() redraw bug.
        
        Commit e2a28006 moved the cur_color assignment so that $arrow_cursor
        could also use the value for overlays.
        
        Unfortunately, it at the same time moved the call *after* the call to
        mutt_window_move(), which would introduce a drawing bug if
        menu->color() went across IMAP.
        
        The previous commit removed overlays for $arrow_cursor, also removing
        the need for cur_color to be assigned for both.  Move it back to where
        it was before.

M	menu.c

2020-07-22 18:22:03 -0700  Maxim Tarasov  <mu@magi.net.ru> (12ff55e2)

        * Add color overlay to print_enriched_string().
        
        It is called by main menu drawing routines and contains its own
        conditional coloring of a tree component. As is, everything in there
        gets overwritten by the indicator. Furthermore, do_color parameter
        specifically disables any coloring in order for indicator highlight to
        overwrite everything else.
        
        We need to merge three colors here:
        
        1) index color;
        2) tree color, that is drawn within menu using its own color;
        3) indicator color, that, if active, is drawn over both of them.
        
        Combining these colors is implemented in that order.
        
        After some testing, I think it doesn't make sense to merge colors when
        $arrow_cursor is on. This part is reverted to the original behavior.
        
        Make print_enriched_string() coloring behavior self-contained, instead
        of assuming the proper base_color is already set.  This makes the
        callers simpler and allows them to only handle $arrow_cursor logic.

M	menu.c

2020-07-21 14:40:50 -0700  Maxim Tarasov  <mu@magi.net.ru> (aa8e6d4c)

        * Fix cursor overlay logic.
        
        Attributes should always be merged, not only when indicator background
        or foreground is set.

M	color.c

2020-07-20 19:43:58 -0700  Kevin McCarthy  <kevin@8t8.us> (e12028bd)

        * Don't increment color refcount for overlays.
        
        Add a ref parameter, setting to 0 for the overlays.
        
        The pager also allocates temporary colors, but seems to take the
        trouble to try and free them too.

M	color.c
M	pager.c
M	protos.h

2020-07-20 18:22:41 -0700  Kevin McCarthy  <kevin@8t8.us> (f2e96586)

        * Add $cursor_overlay, default unset, to control overlaying.
        
        Although I think the new behavior is desirable, experience has shown
        that changes need to be controlled by an option and usually defaulting
        the same as before.

M	color.c
M	init.h
M	menu.c
M	mutt.h
M	protos.h
M	sidebar.c

2020-07-20 22:50:10 +0300  Maxim Tarasov  <mu@magi.net.ru> (e2a28006)

        * Add cursor overlay capability.
        
        Currently, when the indicator line is over an unread message, full
        indicator color definition is used, and the line is no longer
        displayed bold. It's harder to notice when using default reverse style
        for the indicator, but it becomes much more prominent when you have
        black on white display and only subtle change in the indicator
        background.
        
        We could improve this by merging indicator color definition with color
        definition of the underlying menu item. Here is how it's done:
        
        1. First color definitions for the indicator and underlying menu item
        are taken and split back to foreground, background and attributes
        (meaning bold, underline, etc.).
        2. If indicator does not specify foreground or background color, new
        color pair is created by using underlying menu item as base. Else
        indicator's own foreground and background are used (current behavior).
        3. Then attributes of both colors are combined together. For example,
        if indicator has 'underline' and menu item has 'bold' result will be
        highlighted as 'bold underline'.
        4. The resulting color is used in place of MT_COLOR_INDICATOR when
        highlighting things in menu.c.
        
        Combining attributes this way makes sense to me, because indicator is
        meant to _indicate_, meaning increasing information density. It also
        looks better when moving through the list containing differently
        styled items.
        
        This patch affects indicator, sidebar_highlight, and sidebar_indicator
        color objects.

M	color.c
M	menu.c
M	protos.h
M	sidebar.c

2020-07-15 19:44:52 -0700  Kevin McCarthy  <kevin@8t8.us> (40ce20c8)

        * Add first version of MuttLisp.
        
        This is somewhat simple enhancement to muttrc processing, not a
        full-blown embedded scripting language.  There are no variables,
        functions, types, or abilities that compete with macros.
        
        MuttLisp can be invoked using the "run" command.  If
        $muttlisp_inline_eval is set, it can also be invoked with a bare
        parenthesis expression as a command argument.
        
        $muttlisp_inline_eval defaults unset, to avoid breaking existing
        configurations, which might have bare parenthesis arguments for
        regexps.

M	Makefile.am
M	doc/manual.xml.head
M	init.c
M	init.h
M	keymap.c
M	mutt.h
A	mutt_lisp.c
A	mutt_lisp.h
M	muttlib.c
M	po/POTFILES.in

2020-07-19 13:44:47 -0700  Kevin McCarthy  <kevin@8t8.us> (c5c448d4)

        * Merge branch 'stable'

2020-07-14 14:42:30 -0700  Kevin McCarthy  <kevin@8t8.us> (c037a5a9)

        * Add mutt_oauth2.py and README file.
        
        This was contributed by Alexander Perlis to the mutt-dev mailing list.
        
        mutt_oauth2.py.README contains the contents of his introduction email
        for the script.

M	contrib/Makefile.am
A	contrib/mutt_oauth2.py
A	contrib/mutt_oauth2.py.README
M	doc/manual.xml.head

2020-07-13 12:43:39 -0700  Kevin McCarthy  <kevin@8t8.us> (35d63818)

        * Improve GPGME inline processing.
        
        Properly deal with multiple blocks:
        
        * Extract the inline block to armored_data, instead of the entire
        message.  Use the code from pgp.c to find the block boundaries.
        
        * The copy_clearsigned() function, probably originally ported from the
        classic code too, assumes the first blank line starts the clear text.
        But this is only true if the passed in data is just the block.
        
        * Use the Charset armor header if found for encrypted content
        conversion, as pgp.d does.
        
        * Reset all states in each loop.
        
        It looks like the pgp.c code wasn't resetting pgp_keyblock and
        gpgcharset, so reset those in pgp.c too.

M	crypt-gpgme.c
M	pgp.c

2020-07-13 08:45:01 +0200  Olaf Hering  <olaf@aepfle.de> (04490360)

        * update de.po
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2020-07-12 10:50:51 -0700  Kevin McCarthy  <kevin@8t8.us> (69afc2f0)

        * Try to improve "fcc to an imap mailbox" warning message.
        
        Add a "Warning: prefix", and print a followup message indicating the
        mailbox is being skipped.
        
        Previously, the message might leave the impression the send was
        aborted too.

M	send.c

2020-07-11 12:59:26 -0700  Kevin McCarthy  <kevin@8t8.us> (0e826090)

        * Merge branch 'stable'

2020-07-10 13:41:53 -0700  Kevin McCarthy  <kevin@8t8.us> (c94f43f9)

        * Fix mutt_print_attachment_list() to unstuff format=flowed.
        
        Several of the cases are covered by the pipe fixes in the last commit.
        
        The last case is similar to the mutt_view_attachment case.  Since the
        send-mode file might be modified, change it to always save to a
        tempfile and then unstuff the tempfile.

M	attach.c

2020-07-09 19:31:48 -0700  Kevin McCarthy  <kevin@8t8.us> (b8217c6b)

        * Fix mutt_pipe_attachment_list() to unstuff format=flowed.
        
        The pipe routines are not used in other places (except printing
        attachments - to be handled next), so just directly modify them.
        
        Take care to space-stuff the filter output, since it replaces the
        space-stuffed compose part.

M	attach.c
M	recvattach.c

2020-07-08 19:07:55 -0700  Kevin McCarthy  <kevin@8t8.us> (104768bf)

        * Fix mutt_save_attachment_list() to unstuff format=flowed.
        
        Directly modifying mutt_save_attachment was awkward for several
        reasons.  So instead implement a proxy function.  It's ugly but
        straight-forward.

M	recvattach.c

2020-07-06 15:18:42 -0700  Kevin McCarthy  <kevin@8t8.us> (0600ebae)

        * Fix mutt_view_attachment() to unstuff format=flowed.
        
        This is used in receive mode for <view-text> and <view-mailcap>.
        I don't think those are accessible from the compose menu, but the code
        allows it.  So fix up the send-case too.
        
        Since we may need to unstuff the send-mode file, make a copy instead
        of symlinking.  Also clean up the code to just sanitize the filename
        regardless.

M	attach.c

2020-07-06 10:39:06 -0700  Kevin McCarthy  <kevin@8t8.us> (e8436a01)

        * Factor out stuff/unstuff routines for attachment handling.

M	rfc3676.c
M	rfc3676.h

2020-07-09 19:25:52 +0000  Emir  <emir_sari@msn.com> (00838646)

        * Update Turkish translations.

M	po/tr.po

2020-07-08 12:59:36 -0700  Kevin McCarthy  <kevin@8t8.us> (b108d1b7)

        * Merge branch 'stable'

2020-07-06 20:17:59 -0700  Kevin McCarthy  <kevin@8t8.us> (b48f8e1e)

        * Directly add/remove mailboxes for IMAP.
        
        The LSUB processor along with <subscribe> and <unsubscribe> would
        construct a mailboxes command and send it to the muttrc parser.
        
        Since the poll/label refactor it's much easier to just directly call
        the functions, and is much more secure.  So do that instead.

M	buffy.c
M	buffy.h
M	imap/command.c
M	imap/imap.c

2020-06-30 15:31:19 -0700  Kevin McCarthy  <kevin@8t8.us> (25f82cf6)

        * Create $copy_decode_weed, $pipe_decode_weed, $print_decode_weed.
        
        $weed covers a bit too much functionality.  It makes sense for it to
        control the display of messages in the pager, along with forwarding
        and replying.  But (in my opinion) piping and copy/save-decode are
        something users might like to set differently without affecting the
        rest of Mutt's behavior.
        
        $copy_decode_weed affects the <decode-copy> and <decode-save>
        functions.  I've defaulted this *unset*, despite that it breaks
        backward compatibility, because I believe the header weeding is
        surprising to users and loses important information when copy/saving a
        message.
        
        $pipe_decode_weed affects <pipe-message> when $pipe_decode is set.
        I've default this *set* for backward compatibility.
        
        $print_decode_weed affects <print-message> when $print_decode is set.
        I've default this *set* for backward compatibility.

M	commands.c
M	doc/manual.xml.head
M	init.h
M	mutt.h

2020-06-27 15:04:45 -0700  Kevin McCarthy  <kevin@8t8.us> (3cacfb12)

        * Consider $reply_to before $reply_self.
        
        This is based on Derek Martin's patch in Trac ticket 2304.
        
        I've modified it to:
        
        * default to the value set by OPTREPLYSELF if the
          $ignore_list_reply_to short-circuit fires.
        
        * only apply the "from==reply_to" short circuit when $reply_self would
          indicate replying to from.
        
        * improve the "from==reply_to" short circuit to also fire when the
          display names are equal.
        
        The discussion in the trac ticket was somewhat contentious.  This
        isn't particularly an area in the code I'm eager to touch.  However,
        there are three points worth noting:
        
        1) Mail-Followup-To is considered before $reply_self, so it makes some
        sense for Reply-To to also be.
        
        2) $reply_to is a quadoption, allowing the header to be declined and
        then using $reply_self if appropriate.
        
        3) $reply_self is a boolean.  Previously, the only way to evaluate
        reply_to in these cases is to set $reply_self.  Most users probably
        don't want that set by default, making that a poor workaround.
        
        If this becomes sore point, I'll revert, but I don't believe the
        change will be controversial in practice.

M	send.c

2020-06-28 11:55:31 -0700  Kevin McCarthy  <kevin@8t8.us> (2311519a)

        * Disable hook "command" argument expansion of config variables.
        
        From my email to mutt-dev:
        
          I've been thinking about this a *lot* more, and digging into past
          commits.  It looks like the escaping has pretty consistently been
          intended for value completion and queries.  See commits 3c00eb7a and
          032dcbeb.
        
          I don't believe the escaping is useful for variable expansion as
          part of mutt_extract_token() - even for the hook "command" argument
          case.  The escaping is targeted only for an expression surrounded by
          double quotes (as is generated by completion and queries).  It
          doesn't escape single quotes or spaces, for instance.
        
        Thanks also to Oswald Buddenhagen and Cameron Simpson for their
        feedback.

M	hook.c
M	init.c

2020-06-26 12:31:22 -0700  Kevin McCarthy  <kevin@8t8.us> (e53ae9ed)

        * Escape config vars when expanding hook "command" argument.
        
        The "command" parameter of folder, send, send2, account, reply, and
        message hooks is run through mutt_extract_token() twice.  Once when
        parsing the hook command initially, and once via mutt_parse_rc_line()
        when the actual hook fires.
        
        In theory, Mutt users should be aware of this, and should place all
        their command strings with configuration variables in single-quotes,
        to delay expansion until execution.
        
        But in reality Mutt has been escaping configuration variables as part
        of mutt_extract_token() for many years.
        
        The previous commit turned the escaping off, because it damages
        "backup" assignments to a $my_ variable, and I believe is confusing
        behavior.
        
        But for hooks, users now expect the escaping behavior (for
        double-quoted or unquoted command strings).
        
        Note that mutt_parse_hook() also passed the MUTT_TOKEN_SPACE flag, but
        neglected to do so for message-hook.  Since all other "command"
        argument hooks were included, and were added to the list over the
        years, I believe this was an accidental oversight.

M	hook.c
M	init.c
M	mutt.h

2020-06-25 15:13:48 -0700  Kevin McCarthy  <kevin@8t8.us> (e5a32a61)

        * Convert var_to_string() to use a buffer, and disable auto-escaping.
        
        Inside mutt_extract_token(), expanding a configuration variable used a
        fixed size LONG_STRING.  This would truncate long values, such as
        oauth_refresh, which may have a large token embedded in them.
        
        Convert var_to_string() to use a BUFFER parameter instead.
        
        var_to_string() also performed escaping, which is not always helpful.
        Disable the escaping inside.  Add it back in
        mutt_var_value_complete(), via the pretty_var() call.
        
        The escaping may also be useful for hook "command" parameters.  Since
        Mutt has had the escaping behavior there for years, removing it will
        likely break configurations.  This will be added back in the next
        commit.

M	init.c

2020-06-24 18:44:18 -0700  Kevin McCarthy  <kevin@8t8.us> (110562b3)

        * Add tab-completion menu for patterns.
        
        This is based upon the patch from TAKAHASHI Tamotsu, maintained by
        Vincent Lefèvre.
        
        The push/pop menu operations take care of most redraw operations, so
        remove those from the patch.  Change post-search to '|= REDRAW_MOTION'
        instead of assigning so it doesn't overwrite a full redraw.
        
        Add L10N for the new help strings.
        
        Add a format string and configuration variable for the menu.
        
        Add the multi-character thread patterns.
        
        Doing the above required some structural changes to the menu, so I
        rewrote it in a more common style used elsewhere in Mutt.

M	curs_main.c
M	enter.c
M	globals.h
M	init.h
M	pattern.c
M	protos.h

2020-06-24 02:03:40 +0200  Vincent Lefevre  <vincent@vinc17.net> (bb407ec3)

        * Add a missing comma in the manual.

M	doc/manual.xml.head

2020-06-24 01:48:29 +0200  Vincent Lefevre  <vincent@vinc17.net> (5b3b7a80)

        * Correct wording in a comment.

M	mutt_tunnel.c

2020-06-22 18:31:47 -0700  Kevin McCarthy  <kevin@8t8.us> (c9b58e3d)

        * Add $tunnel_is_secure config, defaulting set.
        
        The config variable is to resolve an ambiguity in Mutt about whether
        using $tunnel is secure.
        
        On the one hand, the examples in the manual show using ssh or a direct
        pipe to a program.  Many users do this to connect to an IMAP server
        with PREAUTH configured, relying on the tunnel to be secured by ssh or
        by the fact that it's a local pipe.
        
        On the other hand, the Mutt connection code still respects
        $ssl_starttls and $ssl_force_tls, as if the $tunnel connection were
        not already secured.
        
        After some discussion on mutt-dev, it seemed the best idea to assume
        the connection is secure by default, in order to not break IMAP
        PREAUTH connections, but to provide a configuration variable in case
        there are situations where it is not.
        
        Thanks to Aaron Schrab for the original idea of setting conn->ssf for
        $tunnel in his patch to ticket 250.

M	doc/manual.xml.head
M	imap/imap.c
M	init.h
M	mutt.h
M	mutt_socket.h
M	mutt_tunnel.c

2020-06-23 10:45:01 -0700  Kevin McCarthy  <kevin@8t8.us> (0e428dd5)

        * Merge branch 'stable'

2020-06-22 12:46:08 -0700  Kevin McCarthy  <kevin@8t8.us> (22d7a1b3)

        * Merge branch 'stable'

2020-06-21 15:17:04 +0200  Vincent Lefevre  <vincent@vinc17.net> (e807360d)

        * Updated French translation.

M	po/fr.po

2020-06-20 14:12:43 -0700  Kevin McCarthy  <kevin@8t8.us> (43184600)

        * Improve warning message for possible STARTTLS response injection.
        
        Thanks to Vincent Lefèvre for the improved wording, and to Cameron
        Simpson for his suggestions too.

M	mutt_ssl.c
M	mutt_ssl_gnutls.c

2020-06-20 22:30:20 +0200  Olaf Hering  <olaf@aepfle.de> (db656f46)

        * Update de.po
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2020-06-20 06:55:47 -0700  Kevin McCarthy  <kevin@8t8.us> (4adb274a)

        * Merge branch 'stable'

2020-06-19 15:00:53 -0700  Kevin McCarthy  <kevin@8t8.us> (73b70169)

        * Add recommendation to use $ssl_force_tls.

M	init.h

2020-06-19 14:39:33 -0700  Kevin McCarthy  <kevin@8t8.us> (a400fc3f)

        * Add L10N comment for unencrypted PREAUTH warning.
        
        I forgot to add one while trying to get the fix out.

M	imap/imap.c

2020-06-18 14:18:48 -0700  Kevin McCarthy  <kevin@8t8.us> (fee31356)

        * Merge branch 'stable'

2020-06-15 12:27:24 +0200  Vincent Lefevre  <vincent@vinc17.net> (75be2b07)

        * Updated French translation.

M	po/fr.po

2020-06-14 14:18:49 -0700  Kevin McCarthy  <kevin@8t8.us> (64c1d9ac)

        * Merge branch 'stable'

2020-06-11 16:11:36 -0700  Kevin McCarthy  <kevin@8t8.us> (c7a872d1)

        * Add basic XOAUTH2 support.
        
        This still relies on an external script to obtain the resource access
        token.  Since XOAUTH2 should be slowly going away, use the same
        refresh_commands as with OAUTHBEARER.
        
        Unlike OAUTHBEARER, XOAUTH2 must be explicitly added to the
        $imap/smtp/pop_authenticators list.
        
        To keep the shared functions simpler, convert them to use buffers.
        
        RFC 7628 indicates that upon authentication failure the clients should
        be sending an BASE 64 encoded '^a' ("AQ=="), to terminate the SASL
        session, so change all the handlers to do that and read the following
        response.  The RFC doesn't comment about a line terminator being
        required, but I assume it is, so add that too.

M	account.c
M	account.h
M	doc/manual.xml.head
M	imap/auth.c
M	imap/auth.h
M	imap/auth_oauth.c
M	imap/command.c
M	imap/imap_private.h
M	pop_auth.c
M	smtp.c

2020-06-08 12:57:43 -0700  Kevin McCarthy  <kevin@8t8.us> (5b844328)

        * Perform small cleanups in gnutls.c.
        
        These are some cleanups I started making during the stable branch
        fixes committed yesterday.  It seemed a better idea to perform this
        amount of change in master rather than in stable, so they are in this
        separate commit.
        
        Fix the function-call spacing style.
        
        Change the #define CERTERR values to match the pattern used elsewhere
        in mutt.
        
        Use safe_calloc() instead of calloc.
        
        Add a few error checks in tls_get_client_cert(), and change to
        directly extract the CN using gnutls_x509_crt_get_dn_by_oid().
        
        Use a do-while around the gnutls_handshake() instead of repeating it.

M	mutt_ssl_gnutls.c

2020-06-08 23:24:18 +0200  Vincent Lefevre  <vincent@vinc17.net> (4938c97a)

        * Updated French translation.

M	po/fr.po

2020-06-07 12:30:01 -0700  Kevin McCarthy  <kevin@8t8.us> (8799adcf)

        * Merge branch 'stable'

2020-06-06 16:17:07 +0200  Vincent Lefevre  <vincent@vinc17.net> (dcc59c63)

        * French translation: correction and improvement.

M	po/fr.po

2020-06-06 15:57:03 +0200  Vincent Lefevre  <vincent@vinc17.net> (d4cb383e)

        * Updated French translation.
        
        Note: I initially translated "forward" as "faire suivre", but this is
        no longer possible now that the past participle "forwarded" is used.
        The translated term is now "transférer" (like in Thunderbird).

M	po/fr.po

2020-06-02 15:59:12 -0700  Kevin McCarthy  <kevin@8t8.us> (14709d7d)

        * Change postpone mode to write Date header too.
        
        This will ensure that postponed protected headers will match, in case
        Mutt later adds checks about that.
        
        I can't see any reason to not include it for the two other
        cases (searching and edit draft).

M	sendlib.c

2020-06-02 15:48:59 -0700  Kevin McCarthy  <kevin@8t8.us> (82b5c697)

        * Add other headers to written Protected Headers.
        
        In order to avoid $edit_headers, <resend-message>, or other places
        setting env->date and inadvertantly generating a wrong Date header,
        store the "protected headers" generated date header in the sctx, in
        addition to mime_headers.
        
        I initially removed env->date setting from mutt_parse_rfc822_line(),
        thinking it a more elegant solution, but unfortunately protected
        headers reading needs it to be there.  We don't currently print or
        compare the headers, but might wish to in the future.
        
        Explicitly pass in a date parameters to mutt_write_rfc822_header() to
        make each caller conscious of where the date is coming from.

M	crypt.c
M	headers.c
M	main.c
M	pattern.c
M	protos.h
M	send.c
M	send.h
M	sendlib.c

2020-06-01 18:48:41 -0700  Kevin McCarthy  <kevin@8t8.us> (b0faa8d2)

        * Modify mutt_make_date() to append to a buffer.
        
        Remove the "Date: " prefix and the trailing newline, and convert
        callers to add those.
        
        This will be needed for protected headers Date support, where we will
        have to generate and store the date inside mutt_protect().

M	copy.c
M	protos.h
M	sendlib.c

2020-06-01 13:50:41 -0700  Kevin McCarthy  <kevin@8t8.us> (82e80422)

        * Move protected-headers parameter cleanup out to send.c cleanup.
        
        Remove it in the same place that the mime-headers are removed.  This
        is so that the parameter doesn't stay in there if we loop back to the
        compose menu on failure and the sender toggle encrption off.

M	crypt.c
M	send.c

2020-06-01 13:40:25 -0700  Kevin McCarthy  <kevin@8t8.us> (f07fa1a1)

        * Update the terminology and link for protected headers.

M	init.h

2020-06-01 13:27:38 -0700  Kevin McCarthy  <kevin@8t8.us> (e7ed170c)

        * Change default of $crypt_protected_headers_subject to "...".
        
        The most recent protected headers draft now specifies the obscured
        subject be "...".  See https://github.com/autocrypt/protected-headers
        and
        https://datatracker.ietf.org/doc/draft-autocrypt-lamps-protected-headers/

M	init.h

2020-06-03 12:34:51 -0700  Kevin McCarthy  <kevin@8t8.us> (c5441904)

        * Add check for sqlite3_prepare_v3() in configure.ac
        
        I didn't realize the function was added so recently: sqlite
        3.20.0 (2017-08-01).
        
        Thanks to isdtor for pointing out the problem.

M	configure.ac

2020-05-29 10:54:56 -0700  Kevin McCarthy  <kevin@8t8.us> (44711a24)

        * Try to automatically reconnect to an open IMAP mailbox on error.
        
        For the Context, change cmd_handle_fatal() to flag idata->status on
        the error, but not close the mailbox and disconnect.
        
        Then have imap_check_mailbox() reconnect when IMAP_REOPEN_ALLOW is
        set (so the index is prepared to rebuild with all new headers).  Try
        to merge flag, envelope, and attach_del changes back in.  Replace the
        existing Context pointer with the new values, and swap out the idata
        passed in on success, so we don't continue to work with the wrong
        idata.
        
        The imap_check_mailbox() changes are purposely coded loosely to try
        and catch all sorts of errors - not just polling and imap_idle
        errors.
        
        Create a new check_mailbox() return code to indicate a reconnect.
        Display a more appropriate message in the index, but otherwise treat
        it the same as a REOPEN.

M	curs_main.c
M	imap/command.c
M	imap/imap.c
M	imap/imap_private.h
M	mailbox.h
M	mutt.h

2020-05-31 09:09:14 +0200  Grzegorz Szymaszek  <gszymaszek@short.pl> (878e261a)

        * Improve Polish translation of “undeleted” messages

M	po/pl.po

2020-05-29 15:46:29 -0400  Remco Rĳnders  <remco@webconquest.com> (4091cbcd)

        * Remove support for OpenSSL <0.9.5
        
        The current code provides a workaround for the absence of RAND_status in
        OpenSSL versions before 0.9.5. The comments in the code indicate these
        versions have to be supported, but as these versions are now more than
        20 years old, this no longer applies. Removing this support simplifies the
        code and on the small chance that anyone is still using such old versions,
        breaking their build will actually be doing them a favor given the known
        issues with these OpenSSL versions.

M	configure.ac
M	mutt_ssl.c

2020-05-27 15:25:13 -0700  Kevin McCarthy  <kevin@8t8.us> (e2d27aac)

        * Add myself to the contributor list in the manual.
        
        I didn't realize previous maintainers were in the list, so I guess I
        should add myself. :-)

M	doc/manual.xml.tail

2020-05-27 14:51:04 -0700  Kevin McCarthy  <kevin@8t8.us> (9723c62c)

        * Allow tagging string config vars as L10N.
        
        Translate them once in mutt_set_default().
        
        Modify makedoc.pl to remove the N_() tag, and to also note the type as
        "string (localized)".
        
        The makedoc.pl already will ignore L10N comment so add a basic comment
        above each config var in init.h.
        
        I'm not tagging $crypt_protected_headers_subject because the spec now
        says this should be "...".  I plan on implementing that change along
        with other fixes before the next release.

M	doc/makedoc.pl
M	init.c
M	init.h
M	po/POTFILES.in

2020-05-27 14:39:51 -0700  Kevin McCarthy  <kevin@8t8.us> (4aedee85)

        * Merge branch 'stable'

2020-05-26 13:57:18 -0700  Kevin McCarthy  <kevin@8t8.us> (d3fd97b4)

        * Merge branch 'stable'

2020-05-25 13:38:46 -0700  Kevin McCarthy  <kevin@8t8.us> (52f5694b)

        * Merge branch 'stable'

2020-05-25 12:59:50 -0700  Kevin McCarthy  <kevin@8t8.us> (cb9c683d)

        * Merge branch 'stable'

2020-05-24 13:34:33 -0700  Kevin McCarthy  <kevin@8t8.us> (cd3b529f)

        * Merge branch 'stable'

2020-05-23 14:41:50 -0700  Kevin McCarthy  <kevin@8t8.us> (0ac6b609)

        * Refactor mutt_buffer_strip_formatting() inside of pager.c.
        
        Rather than duplicate the logic, move the function back inside
        pager.c.  Add a parameter to optionally remove attachment markers.
        
        Inside fill_buffer(), use a stack-based buffer and directly assign the
        buffer.data back to fmt, to keep it as fast as before.

M	handler.c
M	muttlib.c
M	pager.c
M	pager.h
M	protos.h

2020-05-22 16:13:38 -0700  Kevin McCarthy  <kevin@8t8.us> (c44f0ce5)

        * Add cd command to change the current working directory.
        
        Original Author: Christoph Berg <myon@debian.org>
        Use cases are saving attachments to some other place and others.
        
        Modified by Kevin McCarthy:
        - Fix up documentation to use cmdsynopsis/command/arg.
        - Add muttrc.man entry.
        - Fix compilation error.
        - Clean up the parse_cd() function to use buffers and remove new
          translation strings.

M	doc/manual.xml.head
M	doc/muttrc.man.head
M	init.c
M	init.h

2020-05-19 13:14:48 -0700  Kevin McCarthy  <kevin@8t8.us> (b3ab8ca9)

        * Merge branch 'stable'

2020-05-18 05:35:32 +0200  Cyril Roelandt  <tipecaml@gmail.com> (5bbc6be5)

        * Add default keybindings for common operations.
        
        This adds the following bindinds:
        
        - ^P for "history up"
        - ^N for "history down"

M	functions.h

2020-05-17 13:01:35 -0700  Kevin McCarthy  <kevin@8t8.us> (6150d285)

        * Clean up Editor Menu interface inside Mutt.
        
        enter_filename() api:
        
        * Rename enter_fname() to _enter_fname()
        
        * Rename mutt_buffer_enter_mailbox() to mutt_enter_mailbox()
        
        * Rename mutt_buffer_enter_filenames() to mutt_enter_filenames()
        
        * Remove 'multiple' and 'fname buffer' parameters from
          mutt_enter_filenames().  Create a temp buffer, and enable multiple
          automatically.  This removes the possibility of mistakenly looking
          at an unpopulated 'fname' parameter for the result.
        
        * Create mutt_enter_filename().  This isn't used currently, but it
          makes sense to have a "single filename" api already set up with
          correct parameters.
        
        get_field() api:
        
        * Rename _mutt_buffer_get_field() to a static _get_field() function.
        
        * Remove _mutt_get_field() and make mutt_get_field() an actual
          function.
        
        * Remove the multiple/files/numfiles parameters, since this
          should only be done through mutt_enter_filenames().
        
        _mutt_enter_string() api:
        
        Add comments to mutt_enter_string() and _mutt_enter_string() headers.
        Noting that they should generally not be called directly.  List the
        functions that should be used inside Mutt.  Note the behavior of the
        multiple parameter.

M	autocrypt/autocrypt.c
M	commands.c
M	compose.c
M	curs_lib.c
M	curs_main.c
M	enter.c
M	protos.h
M	send.c

2020-05-17 12:37:24 -0700  Kevin McCarthy  <kevin@8t8.us> (95cf171e)

        * Fix attach-file tag operation to work when quitting browser.
        
        There was a disconnect between the compose menu and the behavior when
        selecting multiple files.  The select_file() operation populates the
        files and numfiles when hitting 'quit'.  The compose menu was
        incorrectly looking at the fname parameter, which won't be populated
        unless the user presses enter.
        
        The enter_string() menu makes the same mistake.  Change it to behave
        differently depending on whether multiple is set.
        
        The logic needs to be made clearer by changing the api.  I will do
        that in the next commit.

M	browser.c
M	compose.c
M	enter.c

2020-05-16 14:39:00 -0700  Kevin McCarthy  <kevin@8t8.us> (1f20684a)

        * Merge branch 'stable'

2020-05-16 11:15:37 -0700  Kevin McCarthy  <kevin@8t8.us> (a0bbc02e)

        * Merge branch 'stable'

2020-05-16 14:41:58 +0800  Martin Michlmayr  <tbm@cyrius.com> (5d4ec51a)

        * Fix typos

M	doc/makedoc.pl
M	doc/manual.xml.head
M	doc/muttrc.man.head

2020-05-15 18:23:32 -0400  Remco Rĳnders  <remco@webconquest.com> (a8824b55)

        * Fix sidebar_sort_method usage in documentation

M	init.h

2020-05-15 09:27:31 +0200  Vincent Lefevre  <vincent@vinc17.net> (e78d2b4f)

        * Updated French translation.

M	po/fr.po

2020-05-14 15:42:38 -0700  Kevin McCarthy  <kevin@8t8.us> (d1199f76)

        * Add Autocrypt error messages when trying to force send.
        
        If the account doesn't exist, or isn't enabled, display a message back
        in the compose menu.

M	autocrypt/autocrypt.c

2020-05-14 14:02:20 -0700  Kevin McCarthy  <kevin@8t8.us> (e3e0a0ba)

        * Change mailto handling to parse in-reply-to loosely.
        
        To fix ticket 241 without loosening in-reply-to email header parsing,
        add a direct call to mutt_parse_references().  Change the second
        parameter, which was not used, to indicate "allow nonbracketed" mode.

M	parse.c
M	protos.h
M	url.c

2020-05-14 12:01:21 -0700  Kevin McCarthy  <kevin@8t8.us> (194a60ae)

        * Adjust message-id extraction to retry more permissively on failure.
        
        It turns out some illegal message-id headers have neither angle
        brackets nor even an '@' in them.  So adopt a different approach.
        
        First try parsing the Message-ID header in a strict(ish) mode
        requiring angle brackets.  If that returns nothing, then try again in
        loose mode, which will basically grab the first non-comment token.
        
        Change References and In-Reply-To to keep the strict(ish) mode.  We
        might loose some parent references, but that won't cause much loss of
        functionality in Mutt, and also helps prevents parsing in "garbage"
        and passing that back in replies.
        
        Thanks to Oswald Buddenhagen for the suggested approach.

M	parse.c
M	protos.h
M	send.c

2020-05-13 15:52:30 -0700  Kevin McCarthy  <kevin@8t8.us> (99ba609f)

        * Loosen message-id parser to parse ids without angle brackets.
        
        To do this, we need to enhance the loop to skip over comments.  It
        does this using the rfc822 address parse_comment() routine.
        
        Keep parsing inside angle brackets non-strict, because of the history
        of trac tickets (1116, 1935, 3090) demonstrating message-ids with
        spaces inside the angle brackets, double-'@'s, or even completely
        missing '@'.
        
        However, in order to reduce the risk of extracting garbage, insist
        that message-id's outside of angle brackets at least have an '@'.
        
        Automatically add missing angle brackets so that Mutt will generate
        valid references/in-reply-to headers.

M	parse.c
M	rfc822.c
M	rfc822.h

2020-05-13 19:55:48 +0200  Vincent Lefevre  <vincent@vinc17.net> (ba2430af)

        * Update section "Terminal Keybindings" in the manual.
        
        Also list ^Q, ^S and ^Z.
        Note that not all bindings output by "stty -a" affect Mutt.

M	doc/manual.xml.head

2020-05-12 20:05:12 -0700  Kevin McCarthy  <kevin@8t8.us> (48a0e90e)

        * Add a brief section on stty to the manual.
        
        Place it at the bottom of the keybindings section.  It's by no means
        complete, but may be helpful to point some beginners in the right
        direction.

M	doc/manual.xml.head

2020-05-11 14:15:27 -0700  Kevin McCarthy  <kevin@8t8.us> (b0570d76)

        * Separate mailbox vs buffy-incoming for the "enter_fname" functions.
        
        Create mutt_buffer_enter_mailbox(), which turns on the MUTT_MAILBOX
        flag (renamed from MUTT_EFILE).  This uses the mailbox history file
        category, and turns on MUTT_SEL_FOLDER in the select_file browser.
        
        Add a do_incoming paramter and a new separate flag MUTT_INCOMING, so
        that buffy-completion can be enabled optionally for mailboxes.  It
        only makes sense for the change-folder operation, so disable it in
        other contexts (such as saving/copying a message, prompting for an Fcc
        mailbox, or an autocrypt scan mailbox).
        
        Change saving/copying a message to use the mailbox function, so that
        it shares the history file with other mailbox operations.  It would
        previously use the "file" history category.
        
        Create mutt_buffer_enter_filenames() to replace the enter_fname()
        prompt for files.
        
        Since nothing directly uses the _mutt_buffer_enter_fname() function
        anymore, rename and make it static.

M	autocrypt/autocrypt.c
M	commands.c
M	compose.c
M	curs_lib.c
M	curs_main.c
M	enter.c
M	mutt.h
M	protos.h
M	send.c

2020-05-11 13:12:23 -0700  Kevin McCarthy  <kevin@8t8.us> (d338650f)

        * Remove unused mutt_enter_fname() functions.
        
        All the callers use the buffer version.

M	curs_lib.c
M	protos.h

2020-05-09 18:43:55 -0700  Kevin McCarthy  <kevin@8t8.us> (64d67279)

        * Merge branch 'stable'

2020-05-09 21:21:20 +0200  Vincent Lefevre  <vincent@vinc17.net> (254e5eb5)

        * Updated French translation.

M	po/fr.po

2020-05-08 15:57:18 -0700  Kevin McCarthy  <kevin@8t8.us> (78ab1cca)

        * Add utime() loop for _maildir_commit_message().
        
        While fixing up mutt_decrease_mtime(), I thought about creating a
        helper function to loop for EINTR.  However, there is only one other
        place in the code that cares enough about utime succeeding to check
        the return value.
        
        maildir_commit_message() is used fairly often, so it's possible I
        might be writing useless error handling.  However there are
        reports (easily found by internet search) of some systems returning
        EINTR, so might as well fix this place too.

M	mh.c

2020-05-08 13:47:41 -0700  Kevin McCarthy  <kevin@8t8.us> (1aa61c2e)

        * Improve mutt_decrease_mtime() error handling.
        
        Add a check for utime failure.  Some non-posix implementations return
        EINTR.  Since editing messages is a very common operation in Mutt,
        take care to retry in that case so as not to introduce message
        composition failures.
        
        Make sure all callers check mutt_decrease_mtime()'s return value,
        since stat could also fail.

M	editmsg.c
M	headers.c
M	muttlib.c
M	send.c

2020-05-08 13:05:44 -0700  Kevin McCarthy  <kevin@8t8.us> (08294769)

        * Merge branch 'stable'

2020-05-07 19:41:43 -0400  Remco Rijnders  <remco@webconquest.com> (4717b041)

        * Remove commented out mutt_message_hook calls

M	recvcmd.c

2020-05-07 19:17:42 -0400  Remco Rijnders  <remco@webconquest.com> (ad5dcf17)

        * Clarify CH_WEED debug message

M	copy.c

2020-05-07 16:32:46 -0700  Kevin McCarthy  <kevin@8t8.us> (a9fdeeab)

        * Fix sed invocation in gen_defs to work with non-GNU sed.
        
        \n isn't supported on FreeBSD's version, so instead directly embed the
        newline.

M	gen_defs

2020-05-07 16:09:24 -0700  Kevin McCarthy  <kevin@8t8.us> (3745c59e)

        * Turn off check_sec.sh warning.
        
        The script is stupid, but still useful, so just add the tag to turn
        off the warning. :-)

M	signal.c

2020-05-07 16:01:46 -0700  Kevin McCarthy  <kevin@8t8.us> (b70676a2)

        * Add L10N strings to exit_handler().
        
        Since gettext() is not safe in the handler, cache them in advance.

M	main.c
M	protos.h
M	signal.c

2020-05-07 15:26:52 -0700  Kevin McCarthy  <kevin@8t8.us> (6c21b111)

        * Merge branch 'stable'

2020-05-07 15:10:44 +0200  Vincent Lefevre  <vincent@vinc17.net> (52751db2)

        * exit_handler: add explanation about the missing l10n translations.
        
        Details in commit 5835f4c0594ff94a2aa62ad122c4dc2871ee8492.

M	signal.c

2020-04-25 18:39:38 -0700  Kevin McCarthy  <kevin@8t8.us> (27439a7e)

        * Support domain-literal values in email adddresses.
        
        RFC 5322 defines the domain-literal:
        
           domain          =   dot-atom / domain-literal / obs-domain
        
           domain-literal  =   [CFWS] "[" *([FWS] dtext) [FWS] "]" [CFWS]
        
           dtext           =   %d33-90 /          ; Printable US-ASCII
                               %d94-126 /         ;  characters not including
                               obs-dtext          ;  "[", "]", or "\"
        
        RFC 5321 defines possible literal values in section 4.1.3.
        
        I think this was unnoticed (and possibly unimplemented) because it's a
        rare use-case.  However, Stuart Gathman @sdgathman in the
        ticket (#226) noted:
        
          The use case is replacing alpine with mutt for this fully
          decentralized usage:
        
          https://fedoramagazine.org/decentralize-common-fedora-apps-cjdns/
        
          The only requirements are to support IPv6 and IPv6 literals (to
          avoid use of DNS).
        
        Adding this slightly complicates the parser, because we can't wait to
        decide whether it's a domain-literal until parse_mailboxdomain(), but
        we also need to accommodate the CFWS.
        
        Break out a parse_domain() function, with partial duplication of
        parse_mailboxdomain()'s logic.
        
        Also, add parse_literal() to the outer parser, because we need to
        handle both name-addr and top level addr-spec.
        
        The RFC822Errors[] are currently unused (and broken), but add a new
        error code and message, in case those get fixed up and introduced to
        the code in the future.
        
        Disable IDNA encoding for domain-literals.

M	mutt_idna.c
M	rfc822.c
M	rfc822.h

2020-05-06 21:54:02 +0200  Grzegorz Szymaszek  <gszymaszek@short.pl> (a48328bd)

        * Fix the Polish translation of a message
        
        The “delete the current entry” message refers to any entries/items
        (“element”), not just to letters/messages (“list”).

M	po/pl.po

2020-04-25 01:28:30 +0900  Tamotsu TAKAHASHI  <ttakah@lapis.plala.or.jp> (f11a6b1f)

        * L10N: add more helpful comments on OPS entries.
        
        Now translators can see exactly where the entries came from.
        
        Also, OPS.* can have L10N comments. Add "/* L10N: blabla */" to OPS files.
        
        This commit would help translators a lot.
        
        For example, the msgid "delete the current account" once surprised me.
        I said, "What? Can mutt delete my account???"
        
        With this commit, I can see that "the account" is clearly the "autocrypt" account.
        
        ```
         #. L10N: Help screen description for OP_AUTOCRYPT_DELETE_ACCT
         #. #: ../OPS:8
         #: ../keymap_alldefs.h:29
         msgid "delete the current account"
        ```

M	doc/gen-map-doc
M	gen_defs

2020-05-05 13:32:59 +0200  Vincent Lefevre  <vincent@vinc17.net> (3b2c4b7c)

        * Updated French translation.

M	po/fr.po

2020-04-19 16:28:02 -0400  Remco Rijnders  <remco@webconquest.com> (c5b8dba7)

        * olen length requirement was too conservative
        
        When converting binary values to Base 64 encoding, we go from a 8 bit
        representation to a 6 bit representation. As a result, we need extra space
        to store the result compared to the input value being converted.
        
        In the current implementation, the requirements on the size of the output
        buffer are too conservative; We only have to check if the remaining space
        is larger than 4 (3 input bytes get converted into 4 Base64 encoded output
        bytes, plus allowing for a terminating '\0' character) rather than 10.

M	base64.c

2020-05-04 11:06:23 -0700  Kevin McCarthy  <kevin@8t8.us> (e6679dfa)

        * Change pattern "operator" to "modifier" in doc and L10N strings.
        
        Thanks to TAKAHASHI Tamotsu for pointing out the inconsistency.

M	UPDATING
M	doc/muttrc.man.head
M	init.h
M	pattern.c

2020-05-03 17:29:55 +0200  Vincent Lefevre  <vincent@vinc17.net> (f5a8419d)

        * Add missing blank lines in ChangeLog due to buggy update-changelog.

M	ChangeLog

2020-05-03 17:18:28 +0200  Vincent Lefevre  <vincent@vinc17.net> (986f6263)

        * Fix update-changelog rule (missing blank line in generated ChangeLog).

M	Makefile.am

2020-08-29 12:25:28 -0700  Kevin McCarthy  <kevin@8t8.us> (5fb17352)

        * Update UPDATING file for 1.14.7.

M	UPDATING

2020-08-27 15:03:08 -0700  Kevin McCarthy  <kevin@8t8.us> (2b30e41d)

        * Remove cur parameter for pager recall and make-key ops.
        
        For the recall operation, this can lead to a memory leak where the
        recalled message overwrites the sctx saved data.
        
        Arguably instead, the send_message setup could be more picky about
        saving cur, or recall-message could be careful to not overwrite the
        message-id.
        
        The context parameter isn't actually used for mail-key, and the
        curs_main.c doesn't pass it.  But I can't bring myself to make that
        change for a stable fix.

M	pager.c

2020-08-24 13:45:24 -0400  Remco Rĳnders  <remco@webconquest.com> (f8f760d8)

        * Fix segfault when imap server is unreachable

M	mx.c

2020-08-12 10:37:56 -0700  Kevin McCarthy  <kevin@8t8.us> (3548ec07)

        * Ensure SIGALRM interrupts connect() in batch mode.
        
        Mutt doesn't call mutt_signal_init() in batch mode, which mean no
        default handler for SIGALRM is set in that case.  The man pages seem
        to indicate SIGALRM by default should terminate the process, but
        ticket 273 reported no interruption occurring: Mutt just hung
        indefinitely.
        
        In any case, terminating isn't the desired behavior either.  Add a
        handler, as is done in imap_wait_keepalive() and send_msg().

M	mutt_socket.c

2020-07-29 13:54:19 -0700  Kevin McCarthy  <kevin@8t8.us> (05a2008e)

        * Fix List-Post header parser to handle multiple values.
        
        If the mailto url was in the second or greater position, beg was on
        the wrong character.  This would cause url_check_scheme() to fail to
        recognize the mailto.
        
        Change the loop to skip to the '<' on subsequent loops.  Keep the loop
        iterator the same, to ensure the list-post entries are comma
        separated.
        
        As a note, the parser is still not strictly following the RFC, but
        appears to work well enough in the "real world" that I'm not going to
        tweak it for now.

M	parse.c

2020-07-24 15:45:17 -0700  Kevin McCarthy  <kevin@8t8.us> (c3ae7ba5)

        * Prevent lynx from dumping a remote site if manual.txt is missing.
        
        Ambrose Li reported that if the xsltproc step fails in manual
        generation, lynx will dump a *remote* site to manual.txt, because
        manual.html does not exist.  w3m and elinks appear not to have this
        issue.
        
        Prevent lynx from doing this by adding '-localhost' flag.
        
        Ambrose also suggested prefixing './manual.html' instead should fix
        the problem, but to be conservative about not breaking anything I'm
        just adding the '-localhost' flag.

M	doc/Makefile.am

2020-07-15 19:47:11 -0700  Kevin McCarthy  <kevin@8t8.us> (62fab7bd)

        * Ensure a blackslash inside backquotes doesn't skip past eos.
        
        I'm not sure if this is possible because of the way the input is read
        by the muttrc parser, but fix the logic to ensure it can't happen.

M	init.c

2020-07-11 12:58:51 -0700  Kevin McCarthy  <kevin@8t8.us> (9bb7acf7)

        * automatic post-release commit for mutt-1.14.6

M	ChangeLog
M	VERSION

2020-07-11 12:55:01 -0700  Kevin McCarthy  <kevin@8t8.us> (e78fcc51)

        * Update UPDATING file for 1.14.6.

M	UPDATING

2020-07-07 21:09:03 -0700  Kevin McCarthy  <kevin@8t8.us> (222bd804)

        * Fix utimensat() to use cwd for relative paths.
        
        The utimensat() invocations were missing the AT_FDCWD parameter,
        meaning they would not work on relative paths.
        
        I can't remember whether I completely missed that difference from
        utime, or somehow thought all the paths would be full paths.  :-(
        
        In any case, Mutt currently does not expand relative paths in
        mutt_expand_path(), so the paths can most certainly be relative in
        those calls too.
        
        This caused a bug where atimes were not being properly reset for
        mailbox entries.

M	buffy.c
M	mbox.c
M	mx.c

2020-06-23 10:44:09 -0700  Kevin McCarthy  <kevin@8t8.us> (85ab28c9)

        * automatic post-release commit for mutt-1.14.5

M	ChangeLog
M	VERSION

2020-06-23 10:24:23 -0700  Kevin McCarthy  <kevin@8t8.us> (09cf1bca)

        * Update UPDATING file for 1.14.5 release.
        
        Amend notes for the 1.14.3 release, which also added $ssl_force_tls
        checking for an unencrypted IMAP PREAUTH connection.

M	UPDATING

2020-06-22 12:33:09 -0700  Kevin McCarthy  <kevin@8t8.us> (e37516c3)

        * Remove $ssl_starttls check for IMAP PREAUTH.
        
        Checking $ssl_starttls provides no real protection, because an
        attacker can just as easily spoof "* OK" and strip the STARTTLS
        capability as it can spoof "* PREAUTH".  The only way to really
        protect again the MITM is through $ssl_force_tls.
        
        Add documentation about STARTTLS, $tunnel, and the current PREAUTH
        exception when using $tunnel.
        
        The behavior of Mutt about $tunnel is somewhat inconsistent: is it
        considered secure or not?  For PREAUTH, to avoid breaking
        configurations, we assume it is secure.  But at the same time, Mutt is
        still negotiating STARTTLS for other $tunnel connections.
        
        This will be resolved in master for the next release; probably by
        adding a $tunnel_is_secure config variable defaulting "yes" and
        removing the STARTTLS negotiation in that case.

M	doc/manual.xml.head
M	imap/imap.c

2020-06-20 06:35:35 -0700  Kevin McCarthy  <kevin@8t8.us> (dc909119)

        * Don't check IMAP PREAUTH encryption if $tunnel is in use.
        
        $tunnel is used to create an external encrypted connection.  The
        default of $ssl_starttls is yes, meaning those kinds of connections
        will be broken by the CVE-2020-14093 fix.

M	imap/imap.c

2020-06-18 14:13:12 -0700  Kevin McCarthy  <kevin@8t8.us> (c94d2b00)

        * automatic post-release commit for mutt-1.14.4

M	ChangeLog
M	VERSION

2020-06-18 14:09:03 -0700  Kevin McCarthy  <kevin@8t8.us> (e6ec35de)

        * Update UPDATING file for 1.14.4.

M	UPDATING

2020-06-16 13:49:20 -0700  Kevin McCarthy  <kevin@8t8.us> (c547433c)

        * Fix STARTTLS response injection attack.
        
        Thanks again to Damian Poddebniak and Fabian Ising from the Münster
        University of Applied Sciences for reporting this issue.  Their
        summary in ticket 248 states the issue clearly:
        
          We found another STARTTLS-related issue in Mutt. Unfortunately, it
          affects SMTP, POP3 and IMAP.
        
          When the server responds with its "let's do TLS now message", e.g. A
          OK begin TLS\r\n in IMAP or +OK begin TLS\r\n in POP3, Mutt will
          also read any data after the \r\n and save it into some internal
          buffer for later processing. This is problematic, because a MITM
          attacker can inject arbitrary responses.
        
          There is a nice blogpost by Wietse Venema about a "command
          injection" in postfix (http://www.postfix.org/CVE-2011-0411.html).
          What we have here is the problem in reverse, i.e. not a command
          injection, but a "response injection."
        
        This commit fixes the issue by clearing the CONNECTION input buffer in
        mutt_ssl_starttls().
        
        To make backporting this fix easier, the new functions only clear the
        top-level CONNECTION buffer; they don't handle nested buffering in
        mutt_zstrm.c or mutt_sasl.c.  However both of those wrap the
        connection *after* STARTTLS, so this is currently okay.  mutt_tunnel.c
        occurs before connecting, but it does not perform any nesting.

M	mutt_socket.c
M	mutt_socket.h
M	mutt_ssl.c
M	mutt_ssl_gnutls.c

2020-06-14 14:17:45 -0700  Kevin McCarthy  <kevin@8t8.us> (34e3a1a3)

        * automatic post-release commit for mutt-1.14.3

M	ChangeLog
M	UPDATING
M	VERSION

2020-06-14 11:30:00 -0700  Kevin McCarthy  <kevin@8t8.us> (3e88866d)

        * Prevent possible IMAP MITM via PREAUTH response.
        
        This is similar to CVE-2014-2567 and CVE-2020-12398.  STARTTLS is not
        allowed in the Authenticated state, so previously Mutt would
        implicitly mark the connection as authenticated and skip any
        encryption checking/enabling.
        
        No credentials are exposed, but it does allow messages to be sent to
        an attacker, via postpone or fcc'ing for instance.
        
        Reuse the $ssl_starttls quadoption "in reverse" to prompt to abort the
        connection if it is unencrypted.
        
        Thanks very much to Damian Poddebniak and Fabian Ising from the
        Münster University of Applied Sciences for reporting this issue, and
        their help in testing the fix.

M	imap/imap.c

2020-06-06 20:03:56 -0700  Kevin McCarthy  <kevin@8t8.us> (f64ec1de)

        * Fix GnuTLS interactive prompt short-circuiting.
        
        tls_verify_peers() doesn't verify expiration dates.  So aborting early
        because of a 0 certstat and the leaf passing tls_check_preauth() does
        not mean subsequent intermediate certs are okay: they could be
        expired.
        
        In the saved-cert preauth loop, instead of just noting the
        tls_check_preauth() rc for the leaf, note the highest cert that passes
        preauth.
        
        Then, in the interactive loop (which goes in the opposite order, from
        CA to leaf) check that value instead.  Since we are trusting certs one
        by one, anything that passed in the previous loop will certainly pass
        the preauth check at the beginning of tls_check_one_certificate().

M	mutt_ssl_gnutls.c

2020-06-05 18:16:31 -0700  Kevin McCarthy  <kevin@8t8.us> (5fccf603)

        * Abort GnuTLS certificate check if a cert in the chain is rejected.
        
        GnuTLS is not checking dates because we disabled that in
        tls_negotiate().
        
        So if we don't do this, rejecting an expired intermediate cert will
        have no effect.  Certstat won't contain an expiration error, and
        tls_check_preauth() will only look at each subsequent cert in the
        chain's dates.

M	mutt_ssl_gnutls.c

2020-06-05 15:21:03 -0700  Kevin McCarthy  <kevin@8t8.us> (bb0e6277)

        * Fix GnuTLS tls_verify_peers() checking.
        
        * Change the function to pass the certstatus parameter by reference,
        and indicate success/failure of the function via the return value.  It
        was previously returning the certstatus, but was also returning 0 or
        the *unset* certstatus on error too.  Since a 0 certstatus means
        "success", this meant a gnutls_certificate_verify_peers2() failure
        would be regarded as a valid cert.
        
        * The gnutls_certificate_type_get() inside tls_verify_peers() checks
        the *client* certificate type.  Since it was only called if
        gnutls_certificate_verify_peers2() failed, I assume was either a
        mistake, or perhaps an attempt to give a special error message if the
        client cert was OpenPGP.  In either case, the error message was not
        very informative, so just remove the call and special error message.
        
        * Fix GNUTLS_E_NO_CERTIFICATE_FOUND check to be against verify_ret
        instead of certstat.
        
        * Fix gnutls_strerror() call to use verify_ret instead of certstat.
        
        * gnutls_certificate_verify_peers2() already calls and checks
        gnutls_auth_get_type(), so remove call at the beginning of
        tls_check_certificate().
        
        * gnutls_certificate_verify_peers2() also verifies the certificate
        type for the *server* is GNUTLS_CRT_X509.  Add a comment about that.

M	mutt_ssl_gnutls.c

2020-05-27 14:33:58 -0700  Kevin McCarthy  <kevin@8t8.us> (5ea51e88)

        * Fix doc install to check builddir first for bundled files.
        
        Although some of the built files are bundled in the tarball, someone
        could still try to build/install from a git checkout with a separate
        build directory.  There might be other circumstances too, so better to
        just add the check for now.

M	doc/Makefile.am

2020-05-26 13:51:56 -0700  Kevin McCarthy  <kevin@8t8.us> (0136dbd1)

        * Remove Muttrc and manual.txt from dist tarball files.
        
        The Muttrc needs to be generated because of docdir substitution.  The
        manual.txt may traditionally be generated by a different tool than the
        one on my machine (lynx), so force that to be regenerated too.
        
        It may still be necessary to just rebuild everything, but let's see if
        this will do for stable for now.

M	doc/Makefile.am

2020-05-25 13:37:20 -0700  Kevin McCarthy  <kevin@8t8.us> (6feaec02)

        * automatic post-release commit for mutt-1.14.2

M	ChangeLog
M	VERSION

2020-05-25 13:29:22 -0700  Kevin McCarthy  <kevin@8t8.us> (642a1cfd)

        * Update UPDATING file for release.

M	UPDATING

2020-05-25 12:44:43 -0700  Kevin McCarthy  <kevin@8t8.us> (f6fb5a17)

        * Fix mutt_pattern_comp() to not segv on a NULL pattern string.
        
        The change to mutt_parse_score() could now result in a NULL score
        pattern if the user specified ''.  It might be possible for this to
        happen elsewhere too, so just add a check at the top of
        mutt_pattern_comp() to handle the case.

M	pattern.c

2020-05-25 12:23:02 -0700  Kevin McCarthy  <kevin@8t8.us> (5761113a)

        * Fix buffer pool buffer truncation with my_hdr and score commands.
        
        The buffer pool is now used for command invocation, but unfortunately
        a couple cases of mutt_buffer_init() were hidden in the my_hdr and
        score command processors.
        
        This would result in a shortened buffer being returned to the pool and
        used later for something like the prompt - which expects LONG_STRING
        everywhere.
        
        Fix up the two places to instead copy the string over.  They don't
        need to grab a large buffer pool sized hunk of memory.
        
        Also, fix the mutt_buffer_pool_release() to resize upwards in case
        future code does this.  I should have done this originally, but was
        afraid it would paper over more serious issues.  :-/
        
        Thanks to Armin Wolfermann for reporting the problem.

M	buffer.c
M	init.c
M	score.c

2020-05-24 13:26:49 -0700  Kevin McCarthy  <kevin@8t8.us> (d8e518db)

        * Increase the buffer size in _mutt_get_field().
        
        Not doing so caused the subsequent _mutt_enter_string() to use the
        default buffer pool size of 1024 - negating the HUGE_STRING value
        passed into _mutt_get_field().
        
        (Once we fully transition to buffers, this awkwardness can go away...)

M	curs_lib.c

2020-05-19 12:26:55 -0700  Kevin McCarthy  <kevin@8t8.us> (c72f740a)

        * Add mitigation against DoS from thousands of parts.
        
        A demonstration attack using a million tiny parts will freeze Mutt for
        several minutes.  This is actually better than some other mail
        software, but can still be a problem at large levels.
        
        For now, set it to a very conservative 5000, but this can be adjusted
        up (or down) if necessary.
        
        Declare the previous stack-limit max depth as a constant too, and
        decrease it down to 50.  Change the handler to return non-fatal "1" on
        reaching the limit.

M	handler.c
M	mime.h
M	parse.c

2020-05-16 14:34:07 -0700  Kevin McCarthy  <kevin@8t8.us> (a4059dd2)

        * Document my release process.
        
        The old script contents is for mercurial so remove it.
        
        My process is not automated, but at least write it down.

M	build-release

2020-05-16 10:43:06 -0700  Kevin McCarthy  <kevin@8t8.us> (12cf5b46)

        * automatic post-release commit for mutt-1.14.1

M	ChangeLog
M	UPDATING
M	VERSION

2020-05-03 17:29:55 +0200  Vincent Lefevre  <vincent@vinc17.net> (b4936342)

        * Add missing blank lines in ChangeLog due to buggy update-changelog.

M	ChangeLog

2020-05-03 17:18:28 +0200  Vincent Lefevre  <vincent@vinc17.net> (274b1c5a)

        * Fix update-changelog rule (missing blank line in generated ChangeLog).

M	Makefile.am

2020-05-09 18:30:13 -0700  Kevin McCarthy  <kevin@8t8.us> (7bd57bc3)

        * Set AM_DISTCHECK_CONFIGURE_FLAGS to allow make distcheck to run.
        
        Add the '--with-homespool' flag, to allow it to run as non-root.

M	Makefile.am

2020-05-09 16:26:20 -0700  Kevin McCarthy  <kevin@8t8.us> (ba0c9f9e)

        * Fix doc installation directories.
        
        The conversion of makedoc.c to perl goofed up the documentation
        build/install process from a tarball.  A late commit, 3c575cab, tried
        to fix this, but didn't fix the problem when building with a separate
        srcdir.
        
        Previously, because makedoc didn't exist, all the documentation would
        be rebuilt, even though it was distributed in the tarball.
        
        Now the files don't need to be rebuilt, and so exist in $(srcdir)
        instead of the build directory.
        
        I'm a little bit unsure how this would all work, trying to install
        from git with a separate srcdir.  I think it would fail now.  However,
        I don't believe that's a common use case.
        
        If I'm wrong, then an alternative would be to go back to rebuilding
        everything.  This would be done by creating a new makedoc target, with
        rule 'cp $(srcdir)/makedoc.pl makedoc', and then changing all the
        other targets to depend on and invoke makedoc instead.

M	doc/Makefile.am

2020-05-08 12:48:19 -0700  Kevin McCarthy  <kevin@8t8.us> (30340e50)

        * Fix edit-message false-modified bug.
        
        The file was being stat() before the truncate, and
        mutt_decrease_mtime() only decreases if the sb.st_mtime is equal to
        the current time.  That means operations crossing the second boundary:
          time x:   stat
          time x+1: truncate, decrease_mtime
        would result in a false-modified bug if no changes were made during
        editing.
        
        The mutt_decrease_mtime() and callers need to be cleaned up for better
        error handling, but I will do that in master.

M	editmsg.c

2020-05-08 12:10:51 -0700  Kevin McCarthy  <kevin@8t8.us> (094a07fc)

        * Fix rc error setting in edit_one_message().
        
        In a couple places, the rc was not set before bailing on an error.
        With a default of 0, the original message would be marked for
        delete/purge.

M	editmsg.c

2020-05-07 15:23:12 -0700  Kevin McCarthy  <kevin@8t8.us> (51ed59a7)

        * Wrap 'saving fcc' message in curses and sendmailx check.

M	send.c

2020-05-02 15:16:46 -0700  Kevin McCarthy  <kevin@8t8.us> (020321ed)

        * automatic post-release commit for mutt-1.14.0

M	ChangeLog
M	VERSION
M	build-release
M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/el.po
M	po/eo.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fi.po
M	po/fr.po
M	po/ga.po
M	po/gl.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/nl.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/sv.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po

2020-05-02 14:58:03 -0700  Kevin McCarthy  <kevin@8t8.us> (3c575cab)

        * Add missing doc built distfiles.
        
        When building the 1.14.0 release tarball, I discovered a hidden
        dependency problem from switching to makedoc.pl.
        
        The manual.xml is not properly defined, and so trying to build the
        muttrc.man and mutt.info file errors out.  This was previously hidden
        because makedoc need to be compiled, forcing a rebuild.
        
        This problem derives because the stamp-* files (and most of the other
        documentation) are *included* in the tarball, except for muttrc.man
        and mutt.texi.  Those attempt to rebuild, but manual.xml doesn't
        exist.
        
        For now, include muttrc.man and mutt.texi in the dist files.
        
        A better solution requires some thought, but not while I'm trying to
        get a release out.

M	doc/Makefile.am

2020-05-02 11:16:31 -0700  Kevin McCarthy  <kevin@8t8.us> (bd776a65)

        * Fix 'gpg' -> 'GPG' in manual and autocrypt translation string.

M	autocrypt/autocrypt_gpgme.c
M	doc/manual.xml.head
M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/el.po
M	po/eo.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fi.po
M	po/fr.po
M	po/ga.po
M	po/gl.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/nl.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/sv.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po

2020-05-02 10:57:22 -0700  Kevin McCarthy  <kevin@8t8.us> (c6534102)

        * Update 'mutt -v' copyright date.
        
        Since the phrase contains "and others" the developers judged it was
        correct to increase the year number.

M	main.c
M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/el.po
M	po/eo.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fi.po
M	po/fr.po
M	po/ga.po
M	po/gl.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/nl.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/sv.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po

2020-05-02 10:39:05 -0700  Kevin McCarthy  <kevin@8t8.us> (c60c7f69)

        * Set UPDATING release date for 1.14.0.

M	UPDATING

2020-05-01 09:26:48 -0700  Kevin McCarthy  <kevin@8t8.us> (48e5c70f)

        * Ensure idata->reopen is clear when the mailbox is closed.
        
        Commit ab457327 accidentally introduced a performance regression in
        the 1.13.0 release.  The reason is that imap_sync_mailbox() was
        leaving IMAP_REOPEN_ALLOW set.  When a mailbox was closed, and another
        opened, the imap_open_mailbox() would be processed with the reopen
        set.
        
        The initial connection and exec statements would trigger a
        imap_cmd_finish().  That would then prematurely trigger fetching new
        mail, with the newMailCount misset, which would in turn generate a
        tiny uid_hash.  When the real download occurred, it would use the
        existing tiny hash, throttling performance.
        
        The regression commit removed what I thought was an unnecessary check,
        but it was guarding the fetch from happening at the wrong time during
        mailbox open too.
        
        The performance issue was already addressed by commit a8337951 in
        master, but I think it's good to wipe the entire state.  The removes
        other possible strange behavior.
        
        A HUGE thanks to Guilhem Moulin for his help on this issue.  Without
        all his work detailing the problem, creating automated testing, git
        bisecting, and logging, I would not have been able to find and fix the
        problem.

M	imap/imap.c

2020-05-01 03:55:39 -0700  Kevin McCarthy  <kevin@8t8.us> (67948d74)

        * Fix CONDSTORE/QRESYNC context flag counts on updates.
        
        read_headers_condstore_qresync_updates() differs from
        read_headers_normal_eval_cache() in that the FLAGS updates are issued
        for existing messages in the context.
        
        So cmd_parse_fetch() will process the flags *but* it will also
        increment/decrement context flag counters.
        
        Zero out the flags (as was being done for VANISHED handling), and let
        mx_update_context() set them properly afterwards.
        
        Thanks to Guilhem Moulin for reporting the issue and helping me test
        this fix.

M	imap/message.c

2020-04-30 16:57:01 +0200  Grzegorz Szymaszek  <gszymaszek@short.pl> (3a20ab36)

        * Improve the Polish translation

M	po/pl.po

2020-04-28 18:56:42 +0200  Grzegorz Szymaszek  <gszymaszek@short.pl> (99d67832)

        * Fix a typo in a message in the Polish translation

M	po/pl.po

2020-04-28 18:49:27 +0200  Grzegorz Szymaszek  <gszymaszek@short.pl> (8d8af9c2)

        * Improve a message in the Polish translation
        
        This makes the translation of “Unable to create SSL context” closer to
        the original meaning.

M	po/pl.po

2020-04-28 17:49:50 -0700  Kevin McCarthy  <kevin@8t8.us> (0fdc8668)

        * Document change to exact-address writing behavior.

M	UPDATING
M	doc/manual.xml.head

2020-04-28 15:23:29 -0700  Kevin McCarthy  <kevin@8t8.us> (b3fd56a4)

        * Turn off writing exact-addresses that require 2047-encoding.
        
        The full strdup'ed copy of the address can't be properly encoded
        without significant rework to parse, encode, and reassemble.
        (Additionally, IDNA is not being performed on the domain written in
        the exact-address string.)
        
        As an example, consider the current exact address behavior, given the
        three addresses:
          "ascii name" (comment) <addr@example.com>
          The ènd (comment) <addr2@example.com>
          "The ènd" (comment) <addr3@example.com>
        
        Before this commit, when sending Mutt would generate:
          "ascii name" (comment) <addr@example.com>
          The =?iso-8859-1?B?6G5kIChjb21tZW50KSA8YWRkcjJAZXhhbXBsZS5jb20+?=
          =?iso-8859-1?B?IlRoZSDobmQiIChjb21tZW50KSA8YWRkcjNAZXhhbXBsZS5jb20+?=
        
        The second address 2047 encodes everything starting with ènd,
        including the comment and address.  The third address is completely
        encoded.
        
        A "quick workaround" I proposed to the list was turning off
        encode_specials.  This results in:
          "ascii name" (comment) <addr@example.com>
          The =?iso-8859-1?B?6G5k?= (comment) <addr2@example.com>
          "The =?iso-8859-1?Q?=E8nd=22?= (comment) <addr3@example.com>
        
        That solves the second case, but in the third case 2047-encodes
        ènd" - including the trailing double quote.
        
        With this patch, we turn off writing the exact address if encoding is
        needed, generating:
          "ascii name" (comment) <addr@example.com>
          The =?iso-8859-1?B?6G5k?= <addr2@example.com>
          The =?iso-8859-1?B?6G5k?= <addr3@example.com>
        
        This reverts to Mutt-generated normalized form in the last two
        addresses, which require encoding.  For the first case it preserves
        the address as "typed" by the user.

M	rfc2047.c
M	rfc2047.h

2020-04-27 18:18:34 -0700  Kevin McCarthy  <kevin@8t8.us> (43204e7b)

        * Add contrib/bgedit-screen-tmux.sh.
        
        This script wraps running the editor inside a new GNU Screen or tmux
        session.
        
        The script is derived from Aaron Schrab's script posted to mutt-dev,
        but rewritten to run in a posix shell, automatically adjust between
        tmux and screen, and with a bit more error checking.

M	contrib/Makefile.am
A	contrib/bgedit-screen-tmux.sh
M	doc/manual.xml.head

2020-04-27 06:40:11 -0700  Ivan Vilata i Balaguer  <ivan@selidor.net> (d5d8b62a)

        * Updated Catalan translation.

M	po/ca.po

2020-04-26 07:02:47 -0700  Morten Bo Johansen  <mbj@mbjnet.dk> (0ab54fc7)

        * Updated Danish translation.

M	po/da.po

2020-04-25 07:08:05 -0700  Kevin McCarthy  <kevin@8t8.us> (0284e7dc)

        * Minor fix to polish translation.

M	po/pl.po

2020-04-25 14:30:52 +0200  Grzegorz Szymaszek  <gszymaszek@short.pl> (d19ed86c)

        * Update the Polish translation for Mutt 1.14

M	po/pl.po

2020-04-25 04:34:10 +0200  Vincent Lefevre  <vincent@vinc17.net> (8c960f97)

        * Fix typo in UPDATING.

M	UPDATING

2020-04-22 06:53:57 -0700  Kevin McCarthy  <kevin@8t8.us> (d9cb3438)

        * First draft of UPDATING file for 1.14 release.

M	UPDATING

2020-04-24 14:30:11 -0700  Kevin McCarthy  <kevin@8t8.us> (858d3f92)

        * Adjust comment on header.num_hidden field.
        
        Changeset 83be183b modified _mutt_traverse_thread() to update
        num_hidden in the entire thread, so that ~v will work properly when
        switching to a non-threaded view.

M	mutt.h

2020-04-24 14:20:16 -0700  Kevin McCarthy  <kevin@8t8.us> (3dfbff41)

        * Fix minor indentation problem in hcachever.pl.

M	hcachever.pl

2020-04-22 06:14:08 +0000  Tamotsu TAKAHASHI  <ttakah@gmail.com> (af8b26b7)

        * Update ja.po for 1.14

M	po/ja.po

2020-04-20 03:40:17 +0200  Vincent Lefevre  <vincent@vinc17.net> (9935e756)

        * fr.po: forgot a period

M	po/fr.po

2020-04-19 18:28:52 -0700  Kevin McCarthy  <kevin@8t8.us> (d31f5692)

        * Fix copyright address.

M	contrib/bgedit-detectgui.sh

2020-04-20 03:19:41 +0200  Vincent Lefevre  <vincent@vinc17.net> (190ef657)

        * fr.po: typo in a comment

M	po/fr.po

2020-04-20 03:07:34 +0200  Vincent Lefevre  <vincent@vinc17.net> (5672c160)

        * Updated French translation.

M	po/fr.po

2020-04-19 13:23:17 -0700  Kevin McCarthy  <kevin@8t8.us> (c1d58163)

        * Clarify sidebar sorting by path vs alpha/name.
        
        The former only sorts by the path.
        
        The latter two will sort by label if defined.

M	doc/manual.xml.head

2020-04-19 09:31:01 -0700  Kevin McCarthy  <kevin@8t8.us> (5eea506e)

        * Add contrib/bgedit-detectgui.sh from Eike Rathke.

M	contrib/Makefile.am
A	contrib/bgedit-detectgui.sh

2020-04-18 14:05:52 -0700  Kevin McCarthy  <kevin@8t8.us> (3179e93c)

        * Freshen up other configuration options in INSTALL.
        
        Remco's patch pointed out this file has been getting rather stale.  I
        haven't added all of the flags, but reordered them and added some of
        the major ones that were missing.

M	INSTALL

2020-04-18 11:50:45 -0400  Remco Rijnders  <remco@webconquest.com> (7299f6af)

        * Include instructions on how to build with sidebar support

M	INSTALL

2020-04-18 11:51:47 -0700  Remco Rijnders  <remco@webconquest.com> (749337e0)

        * Updated Dutch translation.

M	po/nl.po

2020-04-18 06:43:58 -0700  Vsevolod Volkov  <vvv@mutt.org.ua> (0fcf6a42)

        * Updated Russian translation.

M	po/ru.po

2020-04-18 06:42:10 -0700  Vsevolod Volkov  <vvv@mutt.org.ua> (e442d478)

        * Updated Ukrainian translation.

M	po/uk.po

2020-04-17 12:12:07 -0700  Petr Pisar  <petr.pisar@atlas.cz> (8a8e008d)

        * Updated Czech translation.

M	po/cs.po

2020-04-16 19:50:22 +0200  Olaf Hering  <olaf@aepfle.de> (37a94853)

        * Update de.po
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2020-04-16 09:42:01 -0700  Kevin McCarthy  <kevin@8t8.us> (653b20b8)

        * Add l10n comment above the revised translation string.

M	rfc1524.c

2020-04-16 08:58:24 +0200  Olaf Hering  <olaf@aepfle.de> (850aac1b)

        * Update error string in mailcap_path handling
        
        The code expects either 'mailcap_path' in muttrc, or MAILCAPS in environment.
        In this context a string 'mailcap path' is incorrect.
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	rfc1524.c

2020-04-15 20:26:20 +0200  Olaf Hering  <olaf@aepfle.de> (0cca6886)

        * refresh de.po
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2020-04-14 01:30:08 +0200  Vincent Lefevre  <vincent@vinc17.net> (a2f963fd)

        * Fix spelling mistake in manual.

M	doc/manual.xml.head

2020-04-14 01:07:29 +0200  Vincent Lefevre  <vincent@vinc17.net> (61867c9e)

        * Fix typo in manual.

M	doc/manual.xml.head

2020-04-12 13:13:43 -0700  Kevin McCarthy  <kevin@8t8.us> (c289e74c)

        * Remove ansi formatting from autoview generated quoted replies.
        
        If $allow_ansi is set, and the user has an autoview generating ansi
        output, it is helpful to strip out those sequences.
        
        This is based on Fabian's patch for ticket #218.  My version results
        in partially duplicated logic, but avoids tangling the handler with
        pager's internal fill_buffer() logic.

M	handler.c
M	muttlib.c
M	protos.h

2020-04-13 07:00:49 -0700  Kevin McCarthy  <kevin@8t8.us> (950cc435)

        * Add background.c to POTFILES.in.
        
        Thanks to Petr Pisar for pointing out the mistake.

M	po/POTFILES.in

2020-04-10 14:30:11 -0700  Kevin McCarthy  <kevin@8t8.us> (15ef4a13)

        * Document multipart/alternative inline part disposition for counting.
        
        An initial multipart/alternative's top-level inline parts are also
        counted via the "root" disposition.

M	doc/manual.xml.head

2020-04-10 13:37:42 -0700  Kevin McCarthy  <kevin@8t8.us> (cc895ebc)

        * Clarify $imap_fetch_chunk_size is referring to headers.
        
        !81 was opened because the documentation was confusing.  Hopefully
        this rewording will make it clear the "size" refers to number of
        headers per request.

M	init.h

2020-04-09 20:23:42 -0700  Kevin McCarthy  <kevin@8t8.us> (489a81ce)

        * Change default $background_format value.
        
        Move the status before the pid to more clearly separate it the
        from the subject.  Increase the pid width.
        
        Thanks to Aaron Schrab for both suggestions.

M	init.h

2020-04-09 23:25:02 +0200  Olaf Hering  <olaf@aepfle.de> (f1233d94)

        * refresh de.po
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2020-04-09 13:33:50 -0700  Kevin McCarthy  <kevin@8t8.us> (38ea4042)

        * Remove makedoc.c.
        
        The perl version seems to be working okay.  So it's a good time to
        remove this file, before the next release.

D	doc/makedoc.c

2020-04-09 11:22:07 -0700  Kevin McCarthy  <kevin@8t8.us> (53a1b4ce)

        * Convert "non-fatal" handler errors to return 1 instead of -1.
        
        When displaying a message, display a mutt_error() to warn of
        incomplete rendering.
        
        Fix mutt_copy_message() to check for ferror and feof errors on partial
        decode too.
        
        Clean up _mutt_append_message() to not pass a partial-decode along as
        a success.
        
        Modify the crypt handlers to return 1 if any kind of state message is
        displayed.  There is some fuzzyness about what a "fatal" error is, but
        for now just consider a handler error that notifies by
        state_attach_puts() as "non-fatal".

M	commands.c
M	copy.c
M	crypt-gpgme.c
M	handler.c
M	pgp.c
M	smime.c

2020-04-08 09:20:54 -0700  Kevin McCarthy  <kevin@8t8.us> (4fc97a20)

        * Display error if no imap authenticators are available.
        
        Without SASL enabled, and with an explicit value in
        $imap_authenticators not natively implemented by Mutt, no calls to
        authenticator->authenticate() were occuring.
        
        This resulted in the default r value of -1 passing through, which did
        not trigger the mutt_error() message after the loop.
        
        Without that message, an empty index would display with the
        "connecting" message still on the bottom, giving the appearance that
        Mutt is hung.

M	imap/auth.c

2020-04-07 19:30:46 -0700  Kevin McCarthy  <kevin@8t8.us> (4465a872)

        * Print progress meter when copying/saving tagged messages.
        
        When copying from local to IMAP, it would previously only display a
        percentage count for each individual message.  Suppress that by
        passing MUTT_QUIET.
        
        Note, this is only for "regular" copies.  IMAP server-side copies
        happen in a single command and can't display a progress meter.

M	commands.c

2020-04-06 15:58:58 -0700  Kevin McCarthy  <kevin@8t8.us> (8615cae9)

        * Add message/global to the list of known "message" types.
        
        This will allow Mutt to at least handle those messages the same as
        message/rfc822 body types.

M	mime.h
M	recvattach.c

2020-04-06 14:53:42 -0700  Kevin McCarthy  <kevin@8t8.us> (5df8b2a1)

        * Turn on READONLY flag for postpone count check.
        
        We don't manipulate the context, so I don't think this is fixing an
        actual bug.  But better to be explicit about it.

M	postpone.c

2020-04-06 14:46:53 -0700  Kevin McCarthy  <kevin@8t8.us> (a8337951)

        * Turn off REOPEN flag after imap open and sync operations.
        
        Leaving a just opened imap mailbox with REOPEN set can cause all sorts
        of problems.  Postpone.c had a memory corruption bug because of this.
        The background compose reply-flag setting code had to ensure it was
        turned off too.
        
        The main index worked around this by always ensuring
        mx_check_mailbox() was called right afterwards.  But after researching
        I can't see any reason to leave it open.
        
        imap_sync_mailbox() also leaves the REOPEN set, and I can't see a good
        reason for doing this either.  Both are memory corruption bugs just
        waiting to happen.
        
        With the flag turned off, remove the workaround calls to
        mx_check_mailbox() in postpone.c and send.c.

M	imap/imap.c
M	postpone.c
M	send.c

2020-04-02 20:05:01 -0700  Kevin McCarthy  <kevin@8t8.us> (ed2567d1)

        * Add "root" part logic for multipart/alternative counting
        
        Distinguish between the inline parts of a root multipart/alternative,
        which should also be considered as "root" parts, and those of a
        non-root multipart/alternative, which should be counted as "inline"
        parts.

M	mutt.h
M	parse.c

2020-04-02 14:30:08 -0700  Kevin McCarthy  <kevin@8t8.us> (3b9cc43f)

        * Add "root" disposition to attachments command.
        
        An initial inline part was previously always skipped, for the good
        reasons outlined by @dgc in #217.
        
        Unfortunately, some mail clients have started sending "attachments" as
        the root (and only) part, more and more lately.  Although this may be
        bad practice, Mutt should support counting these as "attachments".
        
        To do so without breaking existing configs, add a "root" disposition
        argument to the attachments command.  This will count an initial
        inline part in a message or multipart container.
        
        The existing code skipped counting for the "top-level" and recursive
        calls, so group both of these cases under "root".

M	doc/manual.xml.head
M	globals.h
M	init.c
M	parse.c

2020-04-03 14:11:13 -0700  Kevin McCarthy  <kevin@8t8.us> (434b55ee)

        * Change disabled crypto pattern op error message and return value.
        
        If mutt is compiled without crypto support, attempting to use one of
        the patterns ~g, ~G, ~k, ~V fails with the cryptic (pun intended)
        error message:
          "error: unknown op %d (report this error)."
        
        Since the op is known, just not enabled, and furthermore is an opaque
        number, it doesn't help the user understand what the problem is.
        
        Change the code to instead print out the pattern operator character
        that is disabled:
          "Pattern operator '~%c' is disabled."
        
        Almost all callers of mutt_pattern_exec() expect it to return 0 or 1.
        Returning -1 in the event of a disabled or bad op will lead to
        undesirable "matching" behavior.  Change to return 0 in the event of
        one of these errors, since none of the callers do (or can) handle the
        error in a meaningful way.

M	pattern.c

2020-04-01 14:36:05 -0700  Kevin McCarthy  <kevin@8t8.us> (b54ccb54)

        * Simplify _smime_getkeys()
        
        The code is basically duplicated for whether a key is specified or
        falling back to SmimeDefaultKey.  The calls to
        smime_void_passhphrase() can also be simplified to whenever the key
        changes.

M	smime.c

2020-03-31 19:26:53 -0700  Kevin McCarthy  <kevin@8t8.us> (98c1a45f)

        * Convert smime static key/cert variables to buffers.

M	smime.c

2020-03-31 16:19:00 -0700  Kevin McCarthy  <kevin@8t8.us> (0e71d0ee)

        * Create crypt glue cleanup method.
        
        Create stub classic smime and cleanup functions, which will be used in
        the next commit.

M	crypt-mod-pgp-classic.c
M	crypt-mod-pgp-gpgme.c
M	crypt-mod-smime-classic.c
M	crypt-mod-smime-gpgme.c
M	crypt-mod.h
M	cryptglue.c
M	main.c
M	mutt_crypt.h
M	smime.c
M	smime.h

2020-03-31 15:48:00 -0700  Kevin McCarthy  <kevin@8t8.us> (a9451f9d)

        * Convert LastSaveFolder to buffer.

M	commands.c
M	main.c
M	protos.h

2020-03-31 13:47:35 -0700  Kevin McCarthy  <kevin@8t8.us> (b94d291f)

        * Convert mutt_make_message_attach() to use buffer tempfile.
        
        This is the last caller of the old mutt_mktemp() function.

M	sendlib.c

2020-03-31 13:19:48 -0700  Kevin McCarthy  <kevin@8t8.us> (4e153adf)

        * Convert mutt_init() to use buffer pool for path operations.
        
        Convert getdnsdomainname(), called by mutt_init(), to accept a BUFFER
        parameter instead.

M	getdomain.c
M	init.c
M	protos.h

2020-03-31 12:23:51 -0700  Kevin McCarthy  <kevin@8t8.us> (e0dc7dec)

        * Add buffer.h as a dependency of hcversion.h.
        
        The recent BUFFER change needs to force a regeneration of hcversion.h.

M	Makefile.am

2020-03-30 19:46:12 -0700  Kevin McCarthy  <kevin@8t8.us> (0b6eb1ab)

        * Remove buffer->destroy.
        
        Fix backtick processing to append to tok instead of allocating and
        assigning to tok->data directly.

M	buffer.c
M	buffer.h
M	hcache.c
M	init.c

2020-03-30 19:00:38 -0700  Kevin McCarthy  <kevin@8t8.us> (b207c280)

        * Convert mutt_parse_rc_line() to use real buffer to hold the line.
        
        Previously, the parameter converted into a kind of read-only buffer,
        pointing to the char *line passed in.  The problem is that
        mutt_extract_token() backtick processing allocates and assigns a new
        token->data.
        
        As a result, buffer->destroy was added, whose sole purpose is to keep
        track of the read-only token buffer being reallocated so that it can
        be properly freed inside mutt_parse_rc_line().  (The char *line is
        allocated and freed in source_rc()).
        
        Remove the token parameter, and convert line to a const char *.  Copy
        that into a buffer-pool buffer, so the buffer can be modified
        "normally".
        
        Create a mutt_buffer_rc_buffer() function taking the line buffer
        parameter.  To make the source_rc() just a tiny bit faster, have it
        directly manage and call mutt_parse_rc_buffer() itself.
        
        Other callers likely don't need the speed, so remove their cumbersome
        creation/free of that parameter.
        
        The next commit will deal with removing buffer->destroy and fixing up
        backtick handling.

M	commands.c
M	hook.c
M	imap/command.c
M	imap/imap.c
M	init.c
M	protos.h

2020-03-30 16:17:03 -0700  Kevin McCarthy  <kevin@8t8.us> (0d8257cb)

        * Ensure rc_line err BUFFER is always dynamic.
        
        The mailboxes command changes started using standard mutt_buffer_*()
        functions, which will attempt to realloc err->data if the size is too big.

M	imap/command.c
M	imap/imap.c

2020-03-30 13:22:16 -0700  Kevin McCarthy  <kevin@8t8.us> (e84cf897)

        * Convert built-in editor to use mutt_buffer_expand_path().

M	edit.c

2020-03-30 11:21:20 -0700  Kevin McCarthy  <kevin@8t8.us> (18cef028)

        * Convert mutt_pipe_message() to use buffer pool.

M	commands.c

2020-03-30 11:11:39 -0700  Kevin McCarthy  <kevin@8t8.us> (ae5953a2)

        * Convert mutt_pipe_attachment_list() to use buffer pool.

M	recvattach.c

2020-03-29 15:17:32 -0700  Kevin McCarthy  <kevin@8t8.us> (1a0b525a)

        * Mention -nopoll in New Mail Detection manual section.
        
        Add a brief mention a couple times to help make more users aware of
        the flag.

M	doc/manual.xml.head

2020-03-29 14:49:41 -0700  Kevin McCarthy  <kevin@8t8.us> (3f0009f4)

        * Mention $status_format %B expando in background edit section.
        
        It's added to the default, but some users will have customized the
        value and may miss the new expando.

M	doc/manual.xml.head

2020-03-28 12:34:09 -0700  Kevin McCarthy  <kevin@8t8.us> (046a3cc1)

        * Merge branch 'stable'

2020-03-28 11:34:42 -0700  Kevin McCarthy  <kevin@8t8.us> (43f2270c)

        * automatic post-release commit for mutt-1.13.5

M	ChangeLog
M	VERSION

2020-03-27 15:13:15 -0700  Kevin McCarthy  <kevin@8t8.us> (febed0bc)

        * Fix up mailboxes documentation synopsis.
        
        Specify the flags as type "option", instead of as parameters.

M	doc/manual.xml.head

2020-03-25 15:07:48 -0700  Kevin McCarthy  <kevin@8t8.us> (1487ea64)

        * Add -label and -nopoll arguments to mailboxes command
        
        -nopoll allows adding the mailbox to the sidebar, or the mailbox
        browser menu, without incurring polling costs.
        
        -poll can be used to re-enable polling for a previously disabled
        mailbox.
        
        -label allows specifying an alternative string to show in the sidebar
        and mailbox browser menu.
        
        -nolabel removes a label from an existing mailbox.
        
        Change $sidebar_sort_method so that "alpha" and "name" will sort by
        the label if specified.  "path", however, will always sort by the
        actual mailbox path.

M	browser.c
M	buffy.c
M	buffy.h
M	doc/manual.xml.head
M	doc/muttrc.man.head
M	imap/browse.c
M	imap/imap.c
M	init.h
M	protos.h
M	sidebar.c

2020-03-24 19:42:43 -0700  Kevin McCarthy  <kevin@8t8.us> (1e9ab8b6)

        * Minor sidebar HilIndex and redraw cleanup.
        
        Ensure HilIndex is reset to -1 if all mailboxes are hidden, preventing
        <sidebar-open> from opening a hidden mailbox in that case.
        
        Previously, draw_sidebar() would still be triggered in that case,
        causing an empty loop to run and trailing space to be drawn.  But with
        this change TopIndex and BottomIndex will still be -1 in that case.
        
        Change the prepare_sidebar() return value to check if HilIndex is set,
        and if mutt_sb_draw() to clear out in that case.

M	sidebar.c

2020-03-24 19:23:41 -0700  Kevin McCarthy  <kevin@8t8.us> (67acdd72)

        * Add sidebar-first and sidebar-last functions.

M	OPS.SIDEBAR
M	curs_main.c
M	functions.h
M	pager.c
M	sidebar.c

2020-03-24 10:12:58 -0700  Kevin McCarthy  <kevin@8t8.us> (87f5f3f0)

        * Merge branch 'stable'

2020-03-22 15:06:40 -0700  Kevin McCarthy  <kevin@8t8.us> (970fbcb0)

        * Clarify PGP Pseudo-header S<id> duration.
        
        Due to the background edit changes, S<id> values are now assigned to
        the send-context, not to $pgp_sign_as.  The duration of the change is
        no longer permanent.

M	doc/manual.xml.head

2020-03-21 14:57:52 -0700  Kevin McCarthy  <kevin@8t8.us> (883ccfdf)

        * Fix typo "delimeter".

M	doc/manual.xml.head
M	pgp.c

2020-03-19 15:12:49 -0700  Kevin McCarthy  <kevin@8t8.us> (ab790a7d)

        * Add $fcc_delimiter, to allow multiple Fcc mailboxes.
        
        The variable defaults unset, to prevent breaking anyone's
        configuration.
        
        If set to a value, such as ",", $record and fcc-hook may list multiple
        mailboxes separated by the delimiter.  Mutt will tokenize and
        expand/prettify each separate mailbox.  At Fcc time, it will loop
        through trying to save to each mailbox.
        
        This patch introduces a bit more uglyness into init.c, which has to
        special-process for $record in a few places.  I don't like that, but I
        believe the feature is important enough to allow for the one-off
        behavior hack, because we are constrained by backwards compatibility.
        
        Add documentation notes about the resulting issues with '<' mailbox
        shortcut expansion, and with fcc-save-hook processing.  It is
        recommended to use fcc-hook to set multiple mailboxes in those cases
        instead.

M	compose.c
M	doc/manual.xml.head
M	globals.h
M	headers.c
M	hook.c
M	init.c
M	init.h
M	muttlib.c
M	postpone.c
M	protos.h
M	send.c

2020-03-16 14:59:43 -0700  Kevin McCarthy  <kevin@8t8.us> (0b971305)

        * Add $folder to send scope.
        
        It's hard to know where to draw the line on scope variables, but
        $folder seems likely to change across "account switches" and will
        affect Fcc pretty_mailbox and expansion.  The user can also manually
        change Fcc from the compose menu.
        
        If spoolfile or infile complaints come in, I can add that, but I'm not
        convinced those will commonly be an issue for sending emails.

M	doc/manual.xml.head
M	send.c
M	send.h

2020-03-08 14:41:22 -0700  Kevin McCarthy  <kevin@8t8.us> (5cf8a042)

        * Convert progress and socket_poll millis to unsigned long long.
        
        64-bit platforms should already be using a 64-bit tv_sec, so we should
        use the same for the millis values.

M	curs_lib.c
M	mutt_curses.h
M	mutt_socket.c

2020-03-06 14:35:19 -0800  Kevin McCarthy  <kevin@8t8.us> (3ac6f3ea)

        * Change mutt_FormatString() data parameter to type void *.
        
        All invocations pass a pointer parameter.  Perhaps at one point this
        was like the init.h combined usage.  But as with that, using an
        unsigned long is incorrect, and we've been lucky to get away with it.
        Since we don't need a union, just change it to void * to properly size
        the parameter.

M	addrbook.c
M	autocrypt/autocrypt_acct_menu.c
M	background.c
M	browser.c
M	compose.c
M	compress.c
M	crypt-gpgme.c
M	hdrline.c
M	history.c
M	muttlib.c
M	pgpinvoke.c
M	pgpkey.c
M	protos.h
M	query.c
M	recvattach.c
M	remailer.c
M	sidebar.c
M	smime.c
M	status.c

2020-03-06 13:51:49 -0800  Kevin McCarthy  <kevin@8t8.us> (435f0cdb)

        * Merge branch 'stable'

2020-03-05 17:06:26 +0000  Zero King  <l2dy@icloud.com> (e13e84f0)

        * Remove unreachable code

M	pgpewrap.c

2020-03-03 11:10:22 -0800  Kevin McCarthy  <kevin@8t8.us> (862ed68b)

        * Fix for $recall part 2.
        
        Fix the sctx->flags check further below too.  Now that
        SENDBACKGROUNDEDIT is added, a direct comparison is incorrect.

M	send.c

2020-03-03 10:18:45 -0800  Kevin McCarthy  <kevin@8t8.us> (63cb4e9f)

        * Fix $recall prompting.
        
        The background-edit added a flag for the <mail> operation, so the
        previous test for !flags now always fails.
        
        I don't see a more elegant fix, other than changing it to match
        SENDBACKGROUNDEDIT, plus the existing test for sctx->msg being NULL.
        
        Add a comment because the flag test is confusing otherwise.

M	send.c

2020-03-02 14:05:49 -0800  Kevin McCarthy  <kevin@8t8.us> (fa8702ff)

        * Add $status_format 'B' expando for backgrounded count.
        
        Add "%?B? Back:%B?" to the default $status_format.
        
        Rather than iterating ProcessList for each status bar refresh, just
        add a counter in background.c.

M	background.c
M	background.h
M	init.h
M	status.c

2020-03-01 18:07:02 -0800  Kevin McCarthy  <kevin@8t8.us> (86e18125)

        * Update send_ctx comment about the cur field.

M	send.h

2020-03-01 18:05:46 -0800  Kevin McCarthy  <kevin@8t8.us> (c045cbc9)

        * Add %i to $background_format.
        
        This will show the parent message id for replies and forwarded
        messages.

M	background.c
M	init.h

2020-03-01 14:22:26 -0800  Kevin McCarthy  <kevin@8t8.us> (c51e833a)

        * Refresh flag setting message.
        
        Despite MUTT_QUIET, there are still messages displayed by opening an
        IMAP mailbox, so refresh the message.

M	send.c

2020-03-01 14:20:39 -0800  Kevin McCarthy  <kevin@8t8.us> (1399257d)

        * Try to respect MUTT_QUIET for IMAP contexts too.
        
        There are still connection related messages, but at least reduce the
        number of messages.

M	imap/imap.c
M	imap/message.c

2020-03-01 12:09:17 -0800  Kevin McCarthy  <kevin@8t8.us> (14752ae2)

        * Use -1, not WAIT_ANY for waitpid() portability.

M	background.c

2020-02-27 13:00:49 -0800  Kevin McCarthy  <kevin@8t8.us> (48868326)

        * Add Background Editing sections to manual.

M	doc/manual.xml.head
M	init.h

2020-02-26 15:07:00 -0800  Kevin McCarthy  <kevin@8t8.us> (107f4334)

        * Add background flags to all other operations.
        
        - index and pager send operations.
        
        - query menu and resending.
        
        - recvattach operations.
        
        I initially thought there were complications, but the attachment menu
        decouples everything from the ATTACH_CONTEXT and doesn't free things
        before they are used.

M	background.c
M	curs_main.c
M	pager.c
M	query.c
M	recvattach.c
M	recvcmd.c
M	send.c

2020-02-26 19:45:18 -0800  Kevin McCarthy  <kevin@8t8.us> (d802c700)

        * Clean up background edit landing page.
        
        Try to get the OP_EXIT keybinding and print that instead.
        
        Manually center the strings, to avoid negative column computations.
        Allow overruns though - it's just a landing page.  The message is more
        important than a possible sidebar overwrite due to a tiny window.

M	background.c

2020-02-26 14:35:44 -0800  Kevin McCarthy  <kevin@8t8.us> (1cc04929)

        * Set reply flags when backgrounded.
        
        Store security and message_id fields to deal with replies without
        access to cur in the resumable part.
        
        Reopen the correct mailbox if it has changed.
        
        Display a message when setting reply flags, in case there is a
        noticeable pause.

M	edit.c
M	postpone.c
M	send.c
M	send.h

2020-02-22 14:15:50 -0800  Kevin McCarthy  <kevin@8t8.us> (92322ccf)

        * Confirm exiting if background edit processes exist.
        
        This prompt is in addition to the $quit prompt.  A bit annoying, but I
        believe necessary to combat muscle memory and avoid losing compose
        sessions.

M	background.c
M	background.h
M	curs_lib.c
M	curs_main.c
M	init.h
M	mutt.h

2020-02-19 19:30:41 -0800  Kevin McCarthy  <kevin@8t8.us> (d800ede1)

        * Pass sctx by reference to mutt_send_message_resume().
        
        This makes it more noticable that the parameter may be freed, and also
        prevents a use after free.

M	background.c
M	send.c
M	send.h

2020-02-19 16:34:05 -0800  Kevin McCarthy  <kevin@8t8.us> (6fe9b1d5)

        * Add background compose menu and $background_format config var.
        
        List the backgrounded sessions.  Allow the user to resume one, or exit
        the menu.
        
        Bind to 'B' by default in the index and pager menus.
        
        Remove the "<mail>" function autoresuming functionality, instead
        invoke the menu to resume backgrounded sessions.

M	OPS
M	background.c
M	background.h
M	curs_main.c
M	functions.h
M	globals.h
M	init.h
M	menu.c
M	mutt_menu.h
M	pager.c
M	send.h
M	signal.c

2020-02-17 14:40:57 -0800  Kevin McCarthy  <kevin@8t8.us> (33177255)

        * Save and restore a subset of config variables when backgrounding.
        
        Save all the booleans, quadoptions, along with:
          $record
          $postponed
          $envelope_from_address
          $from
          $sendmail
          $smtp_url
          $pgp_sign_as
          $smime_sign_as
          $smime_encrypt_with
        
        This is to prevent multiple background compose sessions from
        interfering with each other, along with account/folder changes made
        while in the index menu.

M	send.c
M	send.h

2020-02-16 12:30:54 -0800  Kevin McCarthy  <kevin@8t8.us> (0d66dd5f)

        * Add background edit landing page.
        
        The landing page waits for the $editor process to exit, or until the
        user presses <exit>, "q" by default.  If they press exit they are
        returned to the index.  If the $editor exits first, they are returned
        directly to the compose process.

M	background.c
M	compose.c
M	headers.c
M	send.c

2020-01-28 15:51:57 -0800  Kevin McCarthy  <kevin@8t8.us> (4af5c934)

        * Enable backgrounding a single <mail> function.
        
        Backgrounding exits to the index menu.  Re-invoking <mail> will resume
        the backgrounded session, if one exists, otherwise start a new
        session.
        
        This is just to get basic support going.  Multiple background edits, a
        landing page, a background compose menu list will be added next.

M	Makefile.am
A	background.c
A	background.h
M	compose.c
M	curs_main.c
M	edit.c
M	headers.c
M	init.h
M	main.c
M	mutt.h
M	protos.h
M	send.c
M	send.h

2020-02-03 13:25:30 -0800  Kevin McCarthy  <kevin@8t8.us> (9defa202)

        * Write out sctx sign_as values in mutt_write_fcc().

M	compose.c
M	protos.h
M	send.c
M	sendlib.c

2020-02-02 15:10:34 -0800  Kevin McCarthy  <kevin@8t8.us> (d3d0f3a2)

        * Change send_menus to set sctx instead of globals.
        
        Add a "cleared" bit for smime_crypt_alg.  Otherwise clearing the value
        in smime.c's menu would cause the compose menu and mutt_protect() to
        fall back to using SmimeCryptAlg.

M	compose.c
M	crypt-gpgme.c
M	crypt-gpgme.h
M	crypt-mod-pgp-classic.c
M	crypt-mod-pgp-gpgme.c
M	crypt-mod-smime-classic.c
M	crypt-mod-smime-gpgme.c
M	crypt-mod.h
M	crypt.c
M	cryptglue.c
M	mutt_crypt.h
M	pgp.c
M	pgp.h
M	send.h
M	smime.c
M	smime.h

2020-01-31 15:06:20 -0800  Kevin McCarthy  <kevin@8t8.us> (093cc268)

        * Change mutt_protect() to use sctx signas values.
        
        Pass the sctx into postpone_message() and save_fcc() to it can be
        passed to mutt_protect.
        
        Change compose menu to show the sctx values, but fall back to the
        globals.

M	compose.c
M	crypt.c
M	mutt_crypt.h
M	send.c

2020-01-30 16:12:10 -0800  Kevin McCarthy  <kevin@8t8.us> (88d3d6d4)

        * Use sctx->signas values in compose menu.
        
        todo: we need to fix the send_menus.
        We need to save/restore the globals in mutt_protect().

M	compose.c
M	headers.c
M	mutt_crypt.h
M	postpone.c
M	send.c
M	send.h

2020-01-30 15:19:49 -0800  Kevin McCarthy  <kevin@8t8.us> (c33d2e8b)

        * Pass sctx to mutt_builtin_editor() and mutt_edit_headers().
        
        This will be used to set the sctx signas instead of globals for header
        editing.

M	compose.c
M	edit.c
M	headers.c
M	protos.h
M	send.c

2020-01-30 15:06:36 -0800  Kevin McCarthy  <kevin@8t8.us> (3b3186c2)

        * Add send_ctx to compose menu and get_postponed().
        
        This will be used to store and use sctx for sign_as values.

M	compose.c
M	mutt.h
M	postpone.c
M	protos.h
M	send.c
M	send.h

2020-01-29 19:43:37 -0800  Kevin McCarthy  <kevin@8t8.us> (2b6fc1b4)

        * Refactor mutt_send_message() into multiple functions.
        
        The functions are delineated by points of editing where we want to
        resume.
        
        Create SEND_CONTEXT to contain all the state logic.

M	send.c
M	send.h

2020-01-29 15:46:02 -0800  Kevin McCarthy  <kevin@8t8.us> (541c722f)

        * Rename ci_send_message() to mutt_send_message().
        
        This fits the current naming conventions.  There are a few other "ci_"
        prefixed functions, but there's no need to tackle all those changes
        right now.

M	compose.c
M	curs_main.c
M	main.c
M	mutt.h
M	pager.c
M	query.c
M	recvcmd.c
M	send.c
M	send.h

2020-01-29 15:35:28 -0800  Kevin McCarthy  <kevin@8t8.us> (d46745e5)

        * Rename send_message() to invoke_mta().
        
        This will help distinguish mutt_send_message() and
        mutt_send_message_resume() from the actual invocation of the MTA.
        Otherwise the names are too similar and confusing.

M	send.c

2020-01-29 15:09:59 -0800  Kevin McCarthy  <kevin@8t8.us> (8bf37106)

        * Create send.h header.
        
        This will hold the send context, so we may as well pull the prototypes
        into the header file too.

M	Makefile.am
M	autocrypt/autocrypt.c
M	curs_main.c
M	group.c
M	main.c
M	pager.c
M	protos.h
M	query.c
M	recvcmd.c
M	send.c
A	send.h
M	sendlib.c
M	smime.c

2020-02-28 19:30:51 +0000  Zero King  <l2dy@icloud.com> (9c1f1e48)

        * Fix use of uninitialized buffer in imap_open_connection()

M	imap/imap.c

2020-02-23 13:00:43 -0800  Kevin McCarthy  <kevin@8t8.us> (1464f842)

        * Merge branch 'stable'

2020-02-21 12:35:08 -0800  Kevin McCarthy  <kevin@8t8.us> (758d406e)

        * Limit recurse depth when parsing mime messages.
        
        Limit to 100 depth to prevent a crash due to stack overflow.  If this
        turns out to be too large (or small), I'll adjust it.

M	handler.c
M	parse.c

2020-02-15 12:26:56 -0800  Kevin McCarthy  <kevin@8t8.us> (5f79e1c6)

        * Merge branch 'stable'

2020-02-12 18:21:36 -0800  Kevin McCarthy  <kevin@8t8.us> (f1808b6c)

        * Merge branch 'stable'

2020-02-08 19:16:33 -0800  Kevin McCarthy  <kevin@8t8.us> (83be183b)

        * Fix ~v tagging when switching to non-threaded sorting.
        
        Place num_hidden in all the collapsed thread messages, rather than
        just the visible ones (i.e. the root headers).
        
        This is a tweak to commit 0f8a079d, where I discovered the behavior
        inconsistent with the documentation.  I'm making this change in master
        due to the (tiny) behavior change.

M	thread.c

2020-02-10 15:34:59 -0800  Kevin McCarthy  <kevin@8t8.us> (8d77022b)

        * Merge branch 'stable'

2020-02-10 14:58:20 -0800  Kevin McCarthy  <kevin@8t8.us> (f2b05d7c)

        * Merge branch 'stable'

2020-02-10 14:43:00 -0800  Kevin McCarthy  <kevin@8t8.us> (7a1a121e)

        * Merge branch 'stable'

2020-01-22 19:09:55 -0800  Kevin McCarthy  <kevin@8t8.us> (7e0886af)

        * Add move-up and move-down functions to compose menu.
        
        This adds the ability to rearrange the order of the attachments,
        including swapping the first attachment if desired.
        
        The compose menu doesn't support nested attachments, but since data
        structures and code are shared with recvattach, the new functions use
        the v2r and try to behave sensibly with respect to parent pointer
        adjustments.
        
        However, the functions do restrict movement to be between siblings.
        Adding code to support cross-tree movement would be more complicated
        for no current purpose.

M	OPS
M	compose.c
M	functions.h

2020-01-18 17:57:03 -0800  Kevin McCarthy  <kevin@8t8.us> (235c74a7)

        * Allow ~b ~B ~h patterns in send2-hook.
        
        This allows searching the message body or headers for making
        configuration settings.
        
        Right now, this only searches the primary message content.  I don't
        think it would be useful to search attachments, but if I'm wrong we
        can add iteration later.

M	hook.c
M	mutt.h
M	pattern.c

2020-01-16 11:12:36 -0800  Kevin McCarthy  <kevin@8t8.us> (71c770ae)

        * Rename smime oppenc mode parameter to get_keys_by_addr().
        
        Make it the same as with pgpkey.c and crypt-gpgme.c, to remove
        confusion in the future about this (as I had briefly).
        
        This is also needed because the
        $crypt_opportunistic_encrypt_strong_keys logic added to smime.c relies
        on the "may_ask" parameter being a reflection of oppenc mode, not just
        a "quiet" mode.

M	smime.c

2020-01-14 14:48:24 -0800  Kevin McCarthy  <kevin@8t8.us> (427d472d)

        * Add $crypt_opportunistic_encrypt_strong_keys config var.
        
        When set, this modifies $crypt_opportunistic_encrypt to only search
        for "strong" keys (fully valid keys according to the web of trust).
        
        S/MIME behavior depends on the backend.

M	crypt-gpgme.c
M	init.h
M	mutt.h
M	pgpkey.c
M	smime.c

2020-01-12 13:17:49 -0800  Kevin McCarthy  <kevin@8t8.us> (6470663e)

        * Merge branch 'stable'

2020-01-11 13:48:28 -0800  Kevin McCarthy  <kevin@8t8.us> (965d5b3a)

        * Merge branch 'stable'

2020-01-08 19:09:33 -0800  Kevin McCarthy  <kevin@8t8.us> (acd49f24)

        * Convert hcachever.sh.in to hcachever.pl.
        
        Use Digest::MD5 to remove build-time dependency on mutt_md5, for
        cross-compilation support.

M	.gitignore
M	Makefile.am
M	configure.ac
A	hcachever.pl
D	hcachever.sh.in

2019-12-28 15:53:11 -0800  Kevin McCarthy  <kevin@8t8.us> (46e1d670)

        * Merge branch 'stable'

2019-12-24 19:04:07 -0800  Kevin McCarthy  <kevin@8t8.us> (27fdc2f5)

        * Convert makedoc.c to makedoc.pl.
        
        This removes the build-time dependency on a compiled program, which
        doesn't work for cross-compilation.
        
        My perl is pretty rusty, and the result isn't super pretty.  However,
        since perl is already a build dependency, it made the most sense to
        use that.  The output of Muttrc, muttrc.man, and manual.xml match.
        
        There might be a few bugs, so I'm going to leave makedoc.c in for now
        as a reference.

M	doc/Makefile.am
M	doc/devel-notes.txt
A	doc/makedoc.pl
M	init.h
M	sort.h

2019-12-22 11:00:22 -0800  Kevin McCarthy  <kevin@8t8.us> (a83ab85d)

        * Merge branch 'stable'

2019-12-17 03:02:19 +0100  Marek Marczykowski-Górecki  <marmarek@invisiblethingslab.com> (162e6088)

        * Add protected-headers="v1" to Content-Type when protecting headers
        
        This is optional part of the draft RFC, marked with "FIXME":
        
            * FIXME: Enigmail adds "protected-headers="v1"" parameter to
              "payload" here. Is this necessary?
        
        The answer is: for Enigmail yes. Otherwise it ignores protected headers
        and use the envelope headers. This results in all the emails listed with
        "..." subject, which isn't very helpful.
        
        Since the user can disable protected headers while in the compose menu
        (after potentially failed send), remove the attribute if protected
        headers are disabled.

M	crypt.c

2019-12-19 17:15:21 +0000  Olaf Hering  <olaf@aepfle.de> (b2c7aad8)

        * Update de.po
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2019-12-18 14:25:49 -0800  Kevin McCarthy  <kevin@8t8.us> (ddb33a0c)

        * Merge branch 'stable'

2019-12-18 14:14:01 -0800  Kevin McCarthy  <kevin@8t8.us> (0582f058)

        * Merge branch 'stable'

2019-12-17 14:53:25 -0800  Kevin McCarthy  <kevin@8t8.us> (2541fa8a)

        * Fix $imap_deflate reconnection issue.
        
        Restore connection methods and data on close, so the subsequent reopen
        succeeds.

M	mutt_zstrm.c

2019-12-14 12:52:24 -0800  Kevin McCarthy  <kevin@8t8.us> (aba16e60)

        * Merge branch 'stable'

2019-12-13 16:07:18 -0800  Kevin McCarthy  <kevin@8t8.us> (83e559b6)

        * Merge branch 'stable'

2019-12-13 11:00:47 -0800  Kevin McCarthy  <kevin@8t8.us> (47f855c4)

        * Merge branch 'stable'

2019-12-12 18:51:35 -0800  Kevin McCarthy  <kevin@8t8.us> (cc4092cc)

        * Merge branch 'stable'

2019-12-08 19:11:01 -0800  Kevin McCarthy  <kevin@8t8.us> (4977bb0a)

        * Fix trash_append to use ctx parameter instead of Context.
        
        In all current cases, an open context with deleted messages will be
        "Context", but it's incorrect to not use the parameter.

M	mx.c

2019-12-03 19:18:27 -0800  Kevin McCarthy  <kevin@8t8.us> (b33087d3)

        * Merge branch 'stable'

2019-12-03 19:04:40 -0800  Kevin McCarthy  <kevin@8t8.us> (60055cd0)

        * Merge branch 'stable'

2019-12-01 15:25:54 -0800  Kevin McCarthy  <kevin@8t8.us> (e18d3986)

        * Mention $imap_qresync and $imap_deflate in performance tuning.
        
        Leave some breadcrumbs for the brave. :-)

M	doc/manual.xml.head

2019-12-01 12:56:16 -0800  Kevin McCarthy  <kevin@8t8.us> (b2e2d6af)

        * Add mutt_zstrm.c to POTFILE.in
        
        There aren't any translations in the file, but it should be added just
        in case.

M	po/POTFILES.in

2019-12-01 12:46:36 -0800  Kevin McCarthy  <kevin@8t8.us> (d9453318)

        * Merge branch 'stable'

2019-12-01 10:20:38 -0800  Kevin McCarthy  <kevin@8t8.us> (060c6345)

        * Minor isodate fixes.
        
        Make sure the year isn't negative if they type something crazy.
        
        Don't use unitialized p for the month error message.  Ideally we would
        either use %d or provide a better error message.  But I think it's
        enough to just print out the full string for now.  Non-iso dates do
        that for day-of-month for example.

M	pattern.c

2019-11-30 16:49:57 +0000  ed  <ed@s5h.net> (9d8b9b99)

        * Adding ISO 8601 calendar date, closes #105.
        
        This adds support for date in YYYYMMDD, ISO8601 calendar date formatting.

M	doc/manual.xml.head
M	doc/muttrc.man.head
M	pattern.c

2019-12-01 07:44:05 -0800  Kevin McCarthy  <kevin@8t8.us> (d1d3a989)

        * Add USE_ZLIB to makedoc-defs.h so imap_deflate manual is generated.

M	doc/makedoc-defs.h

2019-12-01 07:31:41 -0800  Kevin McCarthy  <kevin@8t8.us> (ee220ca9)

        * Fix copyright header in mutt_zstrm.[ch]
        
        In <https://gitlab.com/muttmua/mutt/merge_requests/60#note_252772011>
        Fabian noticed that he copied the header file as a template but forgot
        to adjust the copyright line at the top to himself.
        
        Also, adjust the formats in both to match the rest of mutt, so the
        copyright updater script will work properly.

M	mutt_zstrm.c
M	mutt_zstrm.h

2019-11-18 19:11:52 -0800  Kevin McCarthy  <kevin@8t8.us> (f2f6dd46)

        * Fixes and cleanup for imap deflate patch.
        
        Rework mutt_zstrm_read():
        - Pass along the error if conn_read() returns < 0.
        - Separate out conn_eof and stream_eof flags so they can be dealt
          with differently.
        - Don't use Z_FINISH on conn_eof, because the passed in buf might
          not be big enough to hold the decompressed output.  Instead continue
          looping until either Z_STREAM_END or Z_BUF_ERROR.
        - Remove recursive calls to retry, instead goto 'retry' target.
        - Remove op statements in malloc/free.
        - Bail on other rcs.  Mutt doesn't check errno on a read error, so
          lump all other error codes into a -1 return value.  Use default so
          we handle other weird stuff such as Z_NEED_DICT or Z_STREAM_ERROR
          too.
        
        Convert $imap_deflate to boolean, default unset.
        
        Configure.ac fixes:
        - Fix indentation
        - Remove unneeded AM_CONDITIONAL.
        - Don't restore LDFLAGS and CPPFLAGS.  Save and restore LIBS instead.
        
        imap_conn_find() fixes:
        - Don't queue CAPABILITY command.  (This mistake has been in there
          since UTF-8 and QRESYNC were added.).
        - Check imap_exec() returns 0 before wrapping.  Even with FAIL_OK set,
          the imap_exec() can still return -1 on some errors.

M	configure.ac
M	imap/imap.c
M	init.h
M	mutt.h
M	mutt_zstrm.c

2019-11-11 08:34:49 +0100  Fabian Groffen  <grobian@gentoo.org> (136ae0ad)

        * imap: add support for COMPRESS=DEFLATE, RFC 4978
        
        - added mutt_zstrm which allows wrapping an existing connection with
          deflate/inflate (zlib compression)
        - call mutt_zstrm_wrap_conn when setting up an IMAP connection if the
          server supports COMPRESSION=DEFLATE and imap_deflate evaluates to yes
        - add config quad-option imap_deflate enable/disable use of
          (de)compression for IMAP connections, defaulting to yes
        - add configure check for zlib, --with-zlib to detect if mutt_zstrm can
          (or should) be built
        
        Tested against a Dovecot IMAP server, observed easily 7x compression
        rates on received data, and 5x on sent data for a normal session.  Rates
        can be observed when the connection is closed on debug level 4 and
        higher.
        
        Bug: https://gitlab.com/muttmua/mutt/issues/92

M	Makefile.am
M	configure.ac
M	imap/command.c
M	imap/imap.c
M	imap/imap_private.h
M	init.h
M	mutt.h
A	mutt_zstrm.c
A	mutt_zstrm.h

2020-03-28 11:20:21 -0700  Kevin McCarthy  <kevin@8t8.us> (f42ee069)

        * Update UPDATING for 1.13.5.

M	UPDATING

2020-03-24 10:01:07 -0700  Kevin McCarthy  <kevin@8t8.us> (0266f6e4)

        * Fix use-after-free in mutt_str_replace().
        
        The Outlook content-type fix in commit 4cec4b63 inadvertantly
        introduced a use-after-free.  Calling mutt_set_parameter() pointing to
        a different part of the same string ends up calling mutt_str_replace()
        with both parameters pointing to the same hunk of memory.
        
        Improve mutt_str_replace() to deal with that case, to fix this bug and
        prevent possible future bugs resulting from that mistake.
        
        Thank you to Vita Batrla for the excellent bug report and patch.  I
        merely added a comment and removed the "SAFE_FREE comment" from his
        patch.

M	lib.c

2020-03-06 13:48:45 -0800  Kevin McCarthy  <kevin@8t8.us> (d7ab6a73)

        * Fix format string parameters.
        
        crypt-gpgme and pgpkey $pgp_entry_format optional expando processing
        passed the wrong function parameter.  So did remailer for
        $mix_entry_format.

M	crypt-gpgme.c
M	pgpkey.c
M	remailer.c

2020-02-23 12:53:46 -0800  Kevin McCarthy  <kevin@8t8.us> (619cd6cf)

        * Ensure format string dest buffer is cleared for callback function.
        
        There is some variation in Mutt as to the behavior of an undefined
        expando.  Some functions pass the op through, some output nothing.
        
        Unfortunately, a few callback functions also don't ensure the dest
        buffer is cleared if no expandos match the passed in op.  This is
        mostly my fault - I think I added a few using addrbook as a template,
        which was unfortunately missing the default clear switch.
        
        Rather than adding it to the places a default is missing, just ensure
        it's cleared in mutt_FormatString() itself, which will prevent future
        mistakes too.

M	muttlib.c

2020-02-15 12:23:36 -0800  Kevin McCarthy  <kevin@8t8.us> (1adc3a5d)

        * automatic post-release commit for mutt-1.13.4

M	ChangeLog
M	VERSION

2020-02-15 11:25:37 -0800  Kevin McCarthy  <kevin@8t8.us> (05a257e8)

        * Update UPDATING file 1.13.4.

M	UPDATING

2020-02-11 15:34:17 -0800  Kevin McCarthy  <kevin@8t8.us> (6051760c)

        * Fix crash when syncing large IMAP mailboxes.
        
        imap_sync_mailbox() and imap_exec_msgset() make a copy of the headers
        before resorting them to generate a message-set, to avoid context
        changes.  I noticed the oddity in the past but didn't investigate
        deeply enough at the time. :-/
        
        The code in imap_sync_mailbox() was wrong for four reasons:
        1) Because IMAP_REOPEN_ALLOW is set, sync_helper() can trigger
           an imap_exec if the queue fills up, resulting in new messages
           being downloaded or expunges being triggered.
        
        2) The copy was only allocating msgcount headers, instead of hdrmax.
           Downloading new messages could then attempt to append beyond the end
           of the array if hdrmax > msgcount.
        
        3) New messages or expunges would disappear when the copy was restored
           afterwards.
        
        4) The callers of mx_sync_mailbox() are prepared for context changes,
           and will adjust the cursor properly to avoid jumps.
        
        The same problems can occur in imap_exec_msgset() when reopen is set.
        Not all of its callers enable reopen, or are prepared to deal with
        context changes though, so the copy is needed when reopen is not set.
        
        An alternative solution tried converting to call mutt_sort_headers()
        when possible.  However that solution turned out to visibly slow down
        syncs due to the double sorting.
        
        This commit instead turns off reopen for the duration of the msgset
        operations.
        
        While verifying all queued operations are flushed, I noticed the
        initial "quick delete" in imap_sync_mailbox() did not seem to be
        guaranteed to flush.  Ensure the imap_exec() further below is
        triggered if either the quick delete or sync_helper calls generate
        changes.  Change the quick delete to assign to "quickdel_rc" to make
        it clear the flush below is for both.
        
        Change the post sync/msgset check to look for both ((oldsort != Sort)
        || hdrs), just to make sure a memory leak doesn't occur.

M	imap/imap.c

2020-02-08 11:34:13 -0800  Kevin McCarthy  <kevin@8t8.us> (0f8a079d)

        * Speed up thread sort when many long threads exist.
        
        Merge request !75 reported a massive slowdown opening a mailbox with
        many long threads: on the order of an hour.
        
        This is because mutt_set_virtual() was iterating through the whole
        thread for each message.
        
        After taking a closer look at current Mutt behavior, it seems the
        num_hidden count is only needed in the root thread.  Quoting my
        comment in the merge request:
        
          The index-format expando %M only applies to root level headers, so
          there are no issues there.
        
          The only concern is the pattern ~v. Limiting always resets collapsed
          and num_hidden, so there also can't be any issues there. Tagging and
          other pattern operators only work on visible messages. So tagging
          while threads are sorted will only tag the root messages of
          collapsed threads.
        
          However, if you sort by thread, collapse a thread, and then sort by
          date, the collapsed and num_hidden fields are not reset for each
          header. In theory this would allow us to tag ~v with date
          ordering. However, in master the num_hidden is only set (by
          mutt_set_virtual()) for visible messages with a virtual number.
        
          So even in master, switching to date-order and tagging ~v will only
          tag the root messages of each collapsed thread.
        
        This commit removes the num_hidden setting in mutt_set_virtual(),
        instead directly assigning that value in the roothdr during a collapse
        operation.
        
        A subsequent commit will fix the behavior of ~v, when switching
        sorting from threaded to something else, by putting num_hidden in
        every header in the thread.  This is technically a change in behavior,
        so I will make that commit in the master branch.
        
        Thanks to Score_Under for the pull request and for testing my
        alternate solutions.

M	mutt.h
M	protos.h
M	thread.c

2020-02-10 14:52:32 -0800  Kevin McCarthy  <kevin@8t8.us> (376716eb)

        * Revert $ssl_force_tls to default unset.
        
        In theory it's a good idea encourage SSL usage everywhere.
        
        However ticket #210 showed that, in reality, that kind of change
        breaks configs and so is still not a good idea.
        
        $ssl_startls defaults set and will use STARTTLS if the server
        advertises it.

M	init.h

2020-02-10 11:38:51 +0100  Daniel Tameling  <tamelingdaniel@gmail.com> (10a35e5d)

        * Fix rendering of replacement_char when Charset_is_utf8
        
        Use mutt_addwch instead of addch to draw the replacement_char in
        pager.c. The line to draw the replacement char was
        addch (replacement_char ())
        However, if Charset_is_utf8 is true, replacement_char returns 0xfffd,
        which is outside the range that addch can handle. Use mutt_addwch
        instead so that the pager displays the replacement char properly.

M	pager.c

2020-01-12 13:12:00 -0800  Kevin McCarthy  <kevin@8t8.us> (ad277fd1)

        * automatic post-release commit for mutt-1.13.3

M	ChangeLog
M	VERSION

2020-01-12 13:01:58 -0800  Kevin McCarthy  <kevin@8t8.us> (f76b45e2)

        * Update UPDATING file for 1.13.3 release.

M	UPDATING

2020-01-11 13:47:56 -0800  Kevin McCarthy  <kevin@8t8.us> (be406ede)

        * Update copyrights to 2020.

M	COPYRIGHT
M	doc/manual.xml.head
M	doc/mutt.man
M	main.c

2019-12-28 15:43:07 -0800  Kevin McCarthy  <kevin@8t8.us> (edf5699c)

        * Fix crash when polling a closed ssl connection.
        
        Commit 8353407c enabled checking for buffered OpenSSL/GnuTLS data when
        polling, but neglected to check if the connection was already closed.
        
        This can be triggered during imap_logout() if the connection write of
        "LOGOUT" fails and closes the connection, before the poll.  It's a bit
        tricky to trigger because imap_logout_all() checks for a closed
        connection, so the failure needs to take place at that last write.
        
        Thanks to Stefan Sperling for pointing out the problem, complete with
        a backtrace and patch.  (This commit takes a different approach for a
        stable-branch fix.)

M	mutt_ssl.c
M	mutt_ssl_gnutls.c

2019-12-21 19:40:52 -0800  Kevin McCarthy  <kevin@8t8.us> (8914a1ba)

        * Turn off auto-clear outside of autocrypt initialization.
        
        The auto-clearing code was added in commit 01bc088c, for autocrypt
        initial prompting.  It removed having to keep track of every place a
        browser or other menu might be displayed and having to remember to
        clear it out.
        
        However, clearing when mutt exits is a change of behavior for those
        who have turned off alternative screens.

M	autocrypt/autocrypt.c
M	menu.c
M	mutt.h

2019-12-18 14:22:17 -0800  Kevin McCarthy  <kevin@8t8.us> (bbe9bd1a)

        * automatic post-release commit for mutt-1.13.2

M	ChangeLog
M	UPDATING
M	VERSION

2019-12-18 14:10:38 -0800  Kevin McCarthy  <kevin@8t8.us> (7aed228a)

        * Revert "Fixes unchecked return from link() in dotlock.c"
        
        This reverts commit 317b7f6b53d8a4272acf8ef1b56f3406e9bc2691.

M	dotlock.c

2019-12-14 12:49:23 -0800  Kevin McCarthy  <kevin@8t8.us> (60dd8986)

        * automatic post-release commit for mutt-1.13.1

M	ChangeLog
M	VERSION

2019-12-14 11:33:51 -0800  Kevin McCarthy  <kevin@8t8.us> (fcfd5ee5)

        * Update UPDATING file for 1.13.1 release.

M	UPDATING

2019-12-13 15:58:20 -0800  Kevin McCarthy  <kevin@8t8.us> (3d9a1072)

        * Fix segv in IMAP postponed menu caused by reopen_allow.
        
        imap_open_mailbox() leaves IMAP_REOPEN_ALLOW set for the connection.
        I noticed this previously but didn't bother untangling the logic yet
        because the index always calls mx_check_mailbox() right away, which
        unsets the flag.
        
        However, when debugging the segv for commit 51729d8d I realized the
        postponed menu/context also suffers from the problem, leaving the menu
        ripe for segvs due to unmanaged expunges.
        
        I believe imap_read_headers() turns it off and back on to avoid
        goofing up imap_cmd_finish() when a reopen *is* allowed.
        
        The logic needs to be cleaned up and fixed.  However for a stable
        branch fix, I'm am taking a conservative approach and just calling
        mx_check_mailbox() to turn it back off.

M	postpone.c

2019-12-12 17:58:11 -0800  Kevin McCarthy  <kevin@8t8.us> (d9dd1d51)

        * Fix imap postponed mailbox use-after-free error.
        
        mutt_get_postponed() was calling mx_close_mailbox(), but not checking
        the return value.  Because the postponed context is an actual
        read-write, selected mailbox in a new connection, a failed close left
        a dangling pointer in connection->idata->ctx.
        
        imap_keepalive() traversed the connection list, finding the Postponed
        connection still there, and passed the dangling pointer to
        imap_check_mailbox.
        
        Change an empty postponed mailbox to just call fastclose.  Change the
        other closes to retry on a postive return code "reopen" event and then
        finally just call fastclose.
        
        Outside the index and postponed menu, Mutt's code only uses append or
        readonly temporary contexts.  Those are guaranteed to call
        mx_fastclose_mailbox() and return 0.

M	mx.c
M	postpone.c

2019-12-13 10:57:03 -0800  Kevin McCarthy  <kevin@8t8.us> (011cfc67)

        * Rename sidebar mailbox shortcuts option and default off.
        
        Rename to $sidebar_use_mailbox_shortcuts.  The shortening wasn't that
        much shorter and made the name confusing.
        
        To prevent complaints in the future as others transition to 1.13,
        default off.

M	init.h

2019-12-07 13:47:37 -0800  Kevin McCarthy  <kevin@8t8.us> (bbfa9271)

        * Make shortpath/indent code guards explicit.
        
        In actuality, the parent_depth and indent_width won't ever be
        negative.
        
        But the new code for unset $sidebar_relative_shortpath_indent makes
        this much less obvious.  Better to be explicit than have some small
        future code change result in a bug.

M	sidebar.c

2019-12-07 13:21:49 -0800  Kevin McCarthy  <kevin@8t8.us> (b09a0b80)

        * Create $sidebar_relative_shortpath_indent, default unset.
        
        When unset this option provides the pre-1.13.0 sidebar indentation and
        shortpath behavior.
        
        Setting the option will enable the new (relative to previous entries)
        indentation and shortening behavior.
        
        Note the mailbox shortcuts are controlled by
        $sidebar_use_mb_shortcuts, which defaults set.

M	init.h
M	mutt.h
M	sidebar.c

2019-12-03 19:16:33 -0800  Kevin McCarthy  <kevin@8t8.us> (8846480c)

        * Fix new option order in the manual.
        
        I actually intended to push commit abfaa0e0 to a remote branch, but
        accidentally ended up pushing it to stable. :-O
        
        Anyway, I think the option is okay, but may have to tweek it a bit.
        This fixes a mistake where it was placed out of order in init.h.

M	init.h

2019-12-03 18:55:49 -0800  Kevin McCarthy  <kevin@8t8.us> (abfaa0e0)

        * Add $sidebar_use_mb_shortcuts to turn off shortcuts.
        
        If unset, Mutt will revert to pre-1.13 display behavior, matching and
        removing a literal $folder prefix, without using mailbox shortcuts.

M	init.h
M	mutt.h
M	sidebar.c

2019-12-01 12:44:36 -0800  Kevin McCarthy  <kevin@8t8.us> (ba1b595c)

        * Minor documentation fixes.

M	doc/manual.xml.head

2019-11-30 10:19:26 -0800  Kevin McCarthy  <kevin@8t8.us> (1dd65e6b)

        * automatic post-release commit for mutt-1.13.0

M	ChangeLog
M	VERSION
M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/el.po
M	po/eo.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fi.po
M	po/fr.po
M	po/ga.po
M	po/gl.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/nl.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/sv.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po

2019-11-30 10:08:44 -0800  Kevin McCarthy  <kevin@8t8.us> (b1d99670)

        * Set UPDATING file release date for 1.13.0.

M	UPDATING

2019-11-30 09:56:16 -0800  Kevin McCarthy  <kevin@8t8.us> (0950403f)

        * Change "Prf Enc" to "Prf Encr".
        
        Make the abbreviation a bit clearer, that it means Encryption instead
        of Encoding.
        
        Thanks to Morten Bo Johansen for the suggestion.

M	autocrypt/autocrypt_acct_menu.c
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/ja.po
M	po/ru.po
M	po/uk.po

2019-11-29 18:22:49 +0100  Olaf Hering  <olaf@aepfle.de> (c6845bd1)

        * Update de.po
        
        Sync from mutt.pot after 'make update-po'
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2019-11-28 07:13:47 +0000  Tamotsu TAKAHASHI  <ttakah@gmail.com> (e8214c87)

        * Update copyright year

M	po/ja.po

2019-11-28 06:59:47 +0000  Tamotsu TAKAHASHI  <ttakah@gmail.com> (be4801f8)

        * Update ja.po

M	po/ja.po

2019-11-25 15:36:48 -0800  Kevin McCarthy  <kevin@8t8.us> (220a4c91)

        * Clarify $write_bcc documentation.
        
        The wording was ambiguous, and could give the impression that a
        message, if fcc'ed, would contain the Bcc header when sent too.

M	init.h

2019-11-23 19:45:20 -0800  Kevin McCarthy  <kevin@8t8.us> (54aa06f7)

        * Add a bit more documentation about sending.
        
        Although the behavior has now been fixed, add $write_bcc references to
        $record, $sendmail, and $smtp_url to make users more aware of the
        behavior.

M	doc/manual.xml.head
M	init.h

2019-11-23 18:33:28 -0800  Kevin McCarthy  <kevin@8t8.us> (acca75f2)

        * Minor UPDATING file edits.

M	UPDATING

2019-11-23 18:22:24 -0800  Ivan Vilata i Balaguer  <ivan@selidor.net> (b302a3e7)

        * Updated Catalan translation.

M	po/ca.po

2019-11-20 13:23:00 -0800  Petr Pisar  <petr.pisar@atlas.cz> (2e3f535a)

        * Updated Czech translation.

M	po/cs.po

2019-11-20 12:21:24 -0800  Vsevolod Volkov  <vvv@mutt.org.ua> (2e3e9556)

        * Updated Russian translation.

M	po/ru.po

2019-11-20 12:19:47 -0800  Vsevolod Volkov  <vvv@mutt.org.ua> (0c0f4518)

        * Updated Ukrainian translation.

M	po/uk.po

2019-11-18 12:54:26 -0800  Morten Bo Johansen  <listmail@mbjnet.dk> (f84c1fba)

        * Updated Danish translation.

M	po/da.po

2019-11-16 21:40:27 +0100  Olaf Hering  <olaf@aepfle.de> (40e7c914)

        * Update de.po
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2019-11-14 20:10:35 -0800  Kevin McCarthy  <kevin@8t8.us> (33604971)

        * Add initial UPDATING file entries for 1.13.0.
        
        This is just an initial version, complete with typos and other
        mistakes.  Committing now so translators can refer to it.

M	UPDATING

2019-11-13 20:09:37 -0800  Kevin McCarthy  <kevin@8t8.us> (24ca73ae)

        * Fix $fcc_attach to not prompt in batch mode.
        
        Include attachments if it is 'yes' or 'ask-yes', like $copy and
        $send_multipart_alternative.

M	send.c

2019-11-13 19:28:11 -0800  Kevin McCarthy  <kevin@8t8.us> (06698649)

        * Change $send_multipart_alternative to run in batch mode on ask-yes.
        
        Emulate the behavior of $copy, which performs fcc for 'yes' or
        'ask-yes' values.

M	send.c

2019-11-13 17:51:04 +0000  madroach  <madroach@gmerlin.de> (e850e89f)

        * allow autoview preview of multipart/alternative content
        
        add view-alt function, so now we have
         * view-alt "v"
         * view-alt-text "Esc v"
         * view-alt-mailcap "V"

M	OPS
M	compose.c
M	doc/manual.xml.head
M	functions.h

2019-11-13 00:27:28 +0000  David Champion  <dgc@c13.us> (20c7b0d8)

        * Fix __attribute__((warn_unused_result)) issue in query.c
        
        Changing to mutt_read_line() avoids -Wunused-result warning while
        reading the ignored line in query protocol response.

M	query.c

2019-11-13 00:27:27 +0000  David Champion  <dgc@c13.us> (f098ac2d)

        * Fix __attribute__((warn_unused_result)) issue in help.c

M	help.c

2019-11-13 00:27:27 +0000  David Champion  <dgc@c13.us> (09dfed3f)

        * Fix __attribute__((warn_unused_result)) warning in enter.c

M	enter.c

2019-11-13 00:27:25 +0000  David Champion  <dgc@c13.us> (317b7f6b)

        * Fixes unchecked return from link() in dotlock.c

M	dotlock.c

2019-11-11 10:06:44 +0000  David Champion  <dgc.github@c13.us> (afb14d62)

        * Update copyrights

M	COPYRIGHT

2019-11-11 10:06:44 +0000  David Champion  <dgc.github@c13.us> (d8b9f793)

        * Update patchlist.sh to support `guilt' patch queues

M	patchlist.sh

2019-11-10 19:58:43 -0800  Kevin McCarthy  <kevin@8t8.us> (88f26048)

        * Add gcc comments for fallthrough case statements.
        
        Most of these were already commented.  Change a few of them to
        a format gcc will recognize.  In the future, we'll want to change to
        whatever is standardized.

M	addrbook.c
M	autocrypt/autocrypt_gpgme.c
M	browser.c
M	compose.c
M	curs_main.c
M	doc/makedoc.c
M	enter.c
M	handler.c
M	hdrline.c
M	pager.c
M	pattern.c
M	pgppacket.c
M	query.c
M	recvattach.c
M	signal.c
M	smime.c

2019-11-10 18:50:41 -0800  Kevin McCarthy  <kevin@8t8.us> (aae2d87a)

        * Add $count_alternatives to count attachments inside alternatives.
        
        Some mail clients (*cough* Apple Mail) have started to put email
        attachments in one of the multipart/alternative branches.
        
        The config changes the searching to recurse inside alternatives when
        performing attachment counting.

M	doc/manual.xml.head
M	init.h
M	mutt.h
M	parse.c

2019-11-10 15:09:54 -0800  Kevin McCarthy  <kevin@8t8.us> (5835f4c0)

        * Remove nonreentrant calls from exit_handler()
        
        _() can invoke malloc, so remove l10n translations.
        
        printf() is not safe either, so use write().
        
        I'm not sure at this point about curs_set() and endwin(), but they
        seem important enough for proper terminal cleanup to risk leaving in.
        
        Thanks to Oswald Buddenhagen for pointing out the problem, and the old
        trac ticket from Vincent at:
        <https://gitlab.com/muttmua/trac-tickets/raw/master/tickets/open/3791-SIGQUIT_Ctrl_while_opening_mailbox_made_Mutt_hang.txt>

M	signal.c

2019-11-09 13:43:11 -0800  Kevin McCarthy  <kevin@8t8.us> (183c4687)

        * Add markdown2html contrib script.
        
        This was contributed by martin f. kraft, to give an example script for
        the new $send_multipart_alternative_filter funtionality.

M	contrib/Makefile.am
A	contrib/markdown2html

2019-11-09 13:29:16 -0800  Kevin McCarthy  <kevin@8t8.us> (202ec2c8)

        * Remove input buffer flush on sigwinch in index.
        
        I recall seeing a message on IRC, where someone reported their macro
        suddenly aborting after invoking an editor or something similar.  At
        the time, I wasn't sure of the problem, but this seems a likely
        culprit, if the event caused a sigwinch.
        
        Neither the menu.c nor the pager.c SigWinch handlers do such a thing.
        The line was part of the initial import 21 years ago, so there is no
        justification given.

M	curs_main.c

2019-11-08 08:07:21 -0800  Kevin McCarthy  <kevin@8t8.us> (ef7e5e42)

        * Fix sigwinch race in the index and menu processor.
        
        Reset the SigWinch flag before the screen resize/reflow, not afterwards.

M	curs_main.c
M	menu.c

2019-11-07 19:33:31 -0800  Kevin McCarthy  <kevin@8t8.us> (c64baf93)

        * Change $write_bcc to default off.
        
        Change Fcc'ing to always write a Bcc header regardless of the setting.
        
        Update the variable documentation to note the difference when Fcc'ing.

M	init.h
M	mutt.h
M	sendlib.c

2019-11-07 15:06:53 -0800  Kevin McCarthy  <kevin@8t8.us> (29167ecf)

        * Block multipart type alternatives generation.
        
        Since generating multipart types using
        $send_multipart_alternative_filter will not send properly, display an
        error message and block alternatives of that type.

M	sendlib.c

2019-11-07 02:14:05 +0000  David Champion  <dgc.github@c13.us> (127bcc3c)

        * s/Mercurial/Git/ in INSTALL

M	INSTALL

2019-11-06 10:43:09 -0800  Kevin McCarthy  <kevin@8t8.us> (ab9b7b08)

        * Ensure APP_PGP flag is enabled for autocrypt.
        
        There was no code that explicitly enabled APP_PGP mode when either the
        recommendation engine or autocrypt menu were invoked.  This would
        cause the actual encryption to fail when sending.
        
        This was hidden by the $crypt_opportunistic_encrypt config, which does
        ensure it gets turned on.  I can only guess that this variable is
        popular with the autocrypt early adopters too.
        
        Also explicity enable APP_PGP for $autocrypt_reply.  We can't rely on
        $crypt_autopgp to turn this on.

M	compose.c
M	send.c

2019-10-29 13:53:20 +0800  Kevin McCarthy  <kevin@8t8.us> (0e566a03)

        * Add ability to generate multipart/alternative using a filter script.
        
        Create config variables $send_multipart_alternative (a quadoption)
        and $send_multipart_alternative_filter.  The filter script expects
        output to be the mime type, a blank line, then the content.
        
        Add ability to preview alternative from compose menu.  <view-alt-text>
        forces viewing as text.  <view-alt-mailcap> forces using the mailcap.
        Bind them to 'v' and 'V', respectively.
        
        Improve <resend-message> so a multipart/alternative is stripped out,
        which would just confuse the compose menu.  Currently this preserves
        the first alternative.
        
        Allow alternative generation in batch mode, as long as the quadoption
        is set to 'yes'.

M	OPS
M	compose.c
M	doc/manual.xml.head
M	functions.h
M	globals.h
M	init.h
M	mutt.h
M	postpone.c
M	protos.h
M	send.c
M	sendlib.c

2019-10-29 14:58:57 +0800  Kevin McCarthy  <kevin@8t8.us> (3f911681)

        * Create multipart/mixed helpers.
        
        Since we will be dealing with multipart/alternative, we need the
        helpers to be a bit more specific.
        
        We need to distinguish a top-level multipart/alternative from a
        multipart/mixed created because of attachments.

M	compose.c
M	main.c
M	postpone.c
M	protos.h
M	send.c
M	sendlib.c

2019-10-31 13:58:22 +0100  Fabian Groffen  <grobian@gentoo.org> (4cec4b63)

        * mutt_parse_content_type: work around annoying charset behaviour from Outlook
        
        MS Outlook seems to add charset=charset=utf-8 to Content-Type, which
        results in charset_utf-8 inside Mutt, which in turn confuses others.
        
        Strip a leading charset= from charset, so we work around this odd
        behaviour.
        
        Signed-off-by: Fabian Groffen <grobian@gentoo.org>

M	parse.c

2019-10-29 13:21:51 +0800  Kevin McCarthy  <kevin@8t8.us> (e9ab7539)

        * Convert smime_decrypt_mime() to use buffer pool.

M	smime.c

2019-10-28 18:59:02 +0800  Kevin McCarthy  <kevin@8t8.us> (ccf3f493)

        * Convert smime_handle_entity() to use buffers.
        
        Because of the mutt_body_handler() invocation, we avoid using the
        buffer pool.

M	smime.c

2019-10-28 12:36:29 +0800  Kevin McCarthy  <kevin@8t8.us> (05805ddd)

        * Convert smime_verify_one() to use buffer pool.

M	smime.c

2019-10-28 12:22:45 +0800  Kevin McCarthy  <kevin@8t8.us> (56856d8e)

        * Convert smime_sign_message() to use buffer pool.

M	smime.c

2019-10-27 19:29:41 +0800  Kevin McCarthy  <kevin@8t8.us> (ce55dbbf)

        * Convert smime_build_smime_entity() to use buffer pool.

M	smime.c

2019-10-27 15:47:55 +0800  Kevin McCarthy  <kevin@8t8.us> (07e32b7a)

        * Convert smime_invoke_import() and helpers to use buffer pool.

M	smime.c

2019-10-27 13:28:59 +0800  Kevin McCarthy  <kevin@8t8.us> (d4c00c67)

        * Convert smime_verify_sender() and helpers to use buffer pool.

M	smime.c

2019-10-27 11:09:00 +0800  Kevin McCarthy  <kevin@8t8.us> (7c81cd61)

        * Convert smime_get_candidates() to use buffer pool.

M	smime.c

2019-10-26 19:36:33 +0800  Kevin McCarthy  <kevin@8t8.us> (7e29eb23)

        * Convert mutt_write_fcc() to use buffer pool.

M	sendlib.c

2019-10-25 19:29:56 +0800  Kevin McCarthy  <kevin@8t8.us> (58a81897)

        * Convert _mutt_bounce_message to use buffer pool.

M	sendlib.c

2019-10-25 19:13:50 +0800  Kevin McCarthy  <kevin@8t8.us> (8de05d5f)

        * Convert send_msg() $sendmail_wait to use buffer pool.

M	sendlib.c

2019-10-25 15:55:49 +0800  Kevin McCarthy  <kevin@8t8.us> (3565f686)

        * Convert transform_to_7bit() to use buffer pool.

M	sendlib.c

2019-10-25 15:28:25 +0800  Kevin McCarthy  <kevin@8t8.us> (671e653c)

        * Convert mutt_message_to_7bit() to use buffer.
        
        Clean up the error handling a bit.
        
        Because of the recursive invocation, avoid the buffer pool in this
        case.

M	sendlib.c

2019-10-24 14:46:06 +0800  Kevin McCarthy  <kevin@8t8.us> (c5d770ea)

        * Convert fcc to a buffer.
        
        This affects the send.c flow (ci_send_message()), the compose menu,
        and various helper functions.

M	compose.c
M	edit.c
M	headers.c
M	hook.c
M	postpone.c
M	protos.h
M	send.c
M	sendlib.c

2019-10-24 11:23:20 +0800  Kevin McCarthy  <kevin@8t8.us> (2fcde005)

        * Convert send_message() to use buffer pool.

M	send.c

2019-10-23 19:17:09 +0800  Kevin McCarthy  <kevin@8t8.us> (12cd2d52)

        * Add typelen parameter to rfc1524_mailcap_lookup().
        
        Because of mime_lookup commands, the call to mutt_check_lookup_list()
        inside the function can modify the passed in type.  Add an explicit
        length parameter to the function, rather than assume the parameter
        size.  This also makes it more evident the type parameter can be
        modified to callers.
        
        Change the len parameter to mutt_check_lookup_list() to type size_t,
        just to be correct about it.

M	attach.c
M	handler.c
M	protos.h
M	recvattach.c
M	rfc1524.c
M	rfc1524.h

2019-10-23 19:01:17 +0800  Kevin McCarthy  <kevin@8t8.us> (8997c55f)

        * Convert rfc1524_mailcap_lookup() to use buffer pool for path.
        
        Adjust the rfc1524_mailcap_parse() and get_field_text() filename and
        type parameters to be const.
        
        Note that the sizeof(type) needs to be passed to
        rfc1524_mailcap_lookup().  I'll fix that next.

M	rfc1524.c

2019-10-23 16:03:56 +0800  Kevin McCarthy  <kevin@8t8.us> (6380cbd6)

        * Convert mutt_attach_reply() to use buffer pool.

M	recvcmd.c

2019-10-23 15:36:59 +0800  Kevin McCarthy  <kevin@8t8.us> (8d12d900)

        * Convert attach_forward_msgs() to use buffer pool.

M	recvcmd.c

2019-10-23 15:04:49 +0800  Kevin McCarthy  <kevin@8t8.us> (0b59dc75)

        * Convert attach_forward_bodies to use buffer pool.

M	recvcmd.c

2019-10-23 14:44:47 +0800  Kevin McCarthy  <kevin@8t8.us> (1f71fad9)

        * Convert attach_fmt %f to use buffer pool.

M	recvattach.c

2019-10-23 14:33:09 +0800  Kevin McCarthy  <kevin@8t8.us> (80bc61db)

        * Convert mutt_num_postponed() maildir check to use buffer pool.

M	postpone.c

2019-10-23 13:53:26 +0800  Kevin McCarthy  <kevin@8t8.us> (d8b6f94e)

        * Convert pop_fetch_message() to use buffer pool.

M	pop.c

2019-10-23 11:39:22 +0800  Kevin McCarthy  <kevin@8t8.us> (08480fa8)

        * Convert pop_read_header() to use buffer pool.

M	pop.c

2019-10-20 15:52:22 +0800  Kevin McCarthy  <kevin@8t8.us> (5b53290a)

        * Convert pgp_find_hash to use buffer pool.

M	pgpmicalg.c

2019-10-20 15:27:10 +0800  Kevin McCarthy  <kevin@8t8.us> (26e89164)

        * Convert pgp_make_key_attachment() to use buffer pool.

M	pgpkey.c

2019-10-20 14:06:24 +0800  Kevin McCarthy  <kevin@8t8.us> (15f89f8e)

        * Remove make_key_attachment parameter.
        
        The parameter is not actually used anywhere.  The next commit will
        convert the classic pgp implementation to use the buffer pool.  This
        change will simplify the logic.

M	compose.c
M	crypt-gpgme.c
M	crypt-gpgme.h
M	crypt-mod-pgp-classic.c
M	crypt-mod-pgp-gpgme.c
M	crypt-mod.h
M	cryptglue.c
M	mutt_crypt.h
M	pgp.h
M	pgpkey.c
M	send.c

2019-10-20 13:41:30 +0800  Kevin McCarthy  <kevin@8t8.us> (e3408a00)

        * Convert pgp_select_key() to use buffer pool.

M	pgpkey.c

2019-10-19 15:50:22 +0800  Kevin McCarthy  <kevin@8t8.us> (782bcd7d)

        * Convert pgp_traditional_encryptsign() to use buffer pool.

M	pgp.c

2019-10-19 15:35:06 +0800  Kevin McCarthy  <kevin@8t8.us> (978cdaf7)

        * Convert pgp_encrypt_message() to use buffer pool.

M	pgp.c

2019-10-19 15:07:53 +0800  Kevin McCarthy  <kevin@8t8.us> (38291748)

        * Convert pgp_sign_message to use buffer pool.

M	pgp.c

2019-10-19 14:48:17 +0800  Kevin McCarthy  <kevin@8t8.us> (48a34377)

        * Convert pgp_encrypted_handler() to use buffer pool.

M	pgp.c

2019-10-18 15:05:33 +0800  Kevin McCarthy  <kevin@8t8.us> (aa66b414)

        * Convert pgp_decrypt_mime() to use buffer pool.

M	pgp.c

2019-10-18 14:41:06 +0800  Kevin McCarthy  <kevin@8t8.us> (e383f5c9)

        * Convert pgp_decrypt_part() to use buffer pool.

M	pgp.c

2019-10-18 14:29:56 +0800  Kevin McCarthy  <kevin@8t8.us> (f3bfb7d1)

        * Convert pgp_extract_keys_from_attachment() to use buffer pool.

M	pgp.c

2019-10-18 14:21:19 +0800  Kevin McCarthy  <kevin@8t8.us> (e2722551)

        * Convert pgp_verify_one() to use buffer pool.

M	pgp.c

2019-10-18 14:02:02 +0800  Kevin McCarthy  <kevin@8t8.us> (c1f9f00f)

        * Convert pgp_check_traditional_one_body() to use buffer pool.

M	pgp.c

2019-10-17 18:34:55 +0800  Kevin McCarthy  <kevin@8t8.us> (e750e39c)

        * Clean up pager change folder aborts to return to pager.
        
        Changing folder from within the pager behaved inconsistently when
        aborting, or upon a normal error.  It would sometimes return the pager
        and other times return to the index.
        
        Ensure it returns to the pager, except in the case where
        mx_close_mailbox() fails due to a new mail or reopen event.  In that
        case we likely want to be in the index - the message we were viewing
        could have disappeared or relocated.

M	curs_main.c

2019-10-17 17:30:03 +0800  Kevin McCarthy  <kevin@8t8.us> (b15e8659)

        * Remove menu->menu hack when redirecting pager ops through index.
        
        As noted in commit a327386c, this causes problems when redirecting ops
        that open new menus.  There is no need to change the menu->menu type,
        as a flag works perfectly well with no such side effects.
        
        This also removes the need for comments explaning the hack before
        mutt_folder_hooks() when changing folders, or before displaying a
        message in the pager.

M	curs_main.c

2019-10-17 16:01:11 +0800  Kevin McCarthy  <kevin@8t8.us> (e5f24ca8)

        * Merge branch 'stable'

2019-10-17 15:48:31 +0800  Kevin McCarthy  <kevin@8t8.us> (a327386c)

        * Stable branch quick fix for pager change-mailbox push/exec bug.
        
        The menu functions mutt_push/pop_current_menu() keep track of the menu
        stack, automatically setting CurrentMenu when exiting menus.
        
        The only gotcha was the function sharing between the index and pager
        menus.  The index uses a hack, setting menu->menu to MENU_PAGER for
        operations redirecting through the index and back to the pager
        afterwards.
        
        I thought this was covered by the restoration of the menu before
        returning to the pager, or when exiting the index switch.  However it
        is not: invoking other menus, such as the browser, will result in
        CurrentMenu being set to the Pager when exiting those (by
        mutt_pop_current_menu()).  This can result in folder hooks failing for
        unshared functions.
        
        A better fix is to remove the hack of using menu->menu, because this
        can easily cause a problem in the future in other situations.  (I will
        make this fix in master next.)  For the stable branch, I am explicitly
        setting/restoring CurrentMenu before invoking the folder hooks.

M	curs_main.c

2019-10-16 15:42:54 +0800  Kevin McCarthy  <kevin@8t8.us> (30b1ff48)

        * Convert pgp_app_handler to use buffer pool.
        
        Rename the pgp_copy_checksig() and mutt_wait_filter() return code
        variables to provide more clarity, and to make the purpose and
        assignment of rc more obvious.
        
        Change tmpfname creation failure to be like pgpoutfile and
        pgperrfile, by going to the cleanup point.

M	pgp.c

2019-10-16 14:41:04 +0800  Kevin McCarthy  <kevin@8t8.us> (f566f734)

        * Convert msg_search to use buffer.
        
        Avoid the buffer pool because of the long life cycle (across the
        invocation of mutt_body_handler().

M	pattern.c

2019-10-16 14:13:05 +0800  Kevin McCarthy  <kevin@8t8.us> (23bfc45f)

        * Convert mx_close_mailbox() to use buffer pool.

M	mx.c

2019-10-15 15:26:20 +0800  Kevin McCarthy  <kevin@8t8.us> (9506db1e)

        * Reduce line buffer size in mx_get_magic().
        
        tmp is only used for mbox and mmdf iniital line examination.  That
        only needs to look at 6 characters from the first line.

M	mx.c

2019-10-15 14:52:26 +0800  Kevin McCarthy  <kevin@8t8.us> (0944e898)

        * Convert mutt_save_confirm() to use buffer pool.
        
        These are prompts, so don't really need the larger, dynamic
        capability, but it might not hurt for a larger path.

M	muttlib.c

2019-10-15 14:38:07 +0800  Kevin McCarthy  <kevin@8t8.us> (48847904)

        * Removed unused mutt_expand_link()

M	muttlib.c
M	protos.h

2019-10-15 14:33:02 +0800  Kevin McCarthy  <kevin@8t8.us> (140cd885)

        * Change ssl_init to use buffer pool for rand filename.

M	mutt_ssl.c

2019-10-15 13:48:59 +0800  Kevin McCarthy  <kevin@8t8.us> (5572a302)

        * Convert mbox_sync_mailbox() to use buffer pool.
        
        Rewrite return(-1) to a new fatal target to ensure cleanup.
        
        Remove some repetitive unlink(tempfile) operations by adding a new
        flag pointing when to start and stop that during a bail.

M	mbox.c

2019-10-13 16:25:54 +0800  Kevin McCarthy  <kevin@8t8.us> (71d6dbea)

        * Update mime fields when piping a message with $pipe_decode set.
        
        Programs that process the message may get confused if the original
        mime fields are in the output.  Add the CH_MIME flag to strip mime
        headers and CH_TXTPLAIN to add decoded text mime headers in their
        place, just as <decode-copy> does.
        
        However, make sure not to add the flags when printing, as printers
        highly likely won't care and users probably don't want to see those
        headers in their printout.

M	commands.c

2019-10-11 19:31:58 +0800  Kevin McCarthy  <kevin@8t8.us> (9a1b08bf)

        * Merge branch 'stable'

2019-10-11 19:17:58 +0800  Beck, Andre  <beck@ibh.de> (937a1eb1)

        * Clear connection input buffer when closing.
        
        An RFC-violating reply from the Dovecot SMTP submission service
        uncovered a bug in Mutt.  Mutt was not clearing out the input buffer
        when closing the connection.
        
        Dovecot was including an extra 250 response after data submission:
        
          DATA
          354 OK
          Subject: Test 3
        
          Test 3
          .
          250 2.0.0  223 byte chunk, total 223
          250 2.0.0 OK id=1iIqT1-0004wS-Ac
          quit
          221 2.0.0 Bye
        
        The multiline 250 reply requires a hyphen in the first response.  Mutt
        closes the connection after the quit, but ends up leaving the
        unexpected second line in the input buffer.  This causes an error in
        the next usage of the connection.
        
        Clean out bufpos and available when closing the socket.

M	mutt_socket.c

2019-10-10 15:03:05 +0800  Kevin McCarthy  <kevin@8t8.us> (0e32b977)

        * Add new browse-mailboxes function in index and pager.
        
        This allows direct access to the mailboxes list in the folder menu.
        This is useful, for instance, if $browser_sticky_cursor is set and the
        current directory does not contain the open mailbox.  The macro
        version will lose the current mailbox while toggling to the mailboxes
        list.

M	OPS
M	curs_main.c
M	doc/Muttrc.head
M	functions.h

2019-10-09 12:59:41 +0800  Kevin McCarthy  <kevin@8t8.us> (e4c176b3)

        * Convert main() to use buffers for paths.
        
        Convert fpath (used for checking and creating $folder.
        
        Convert expanded_infile and tempfile which are used for the -i,-H, and
        -E options.  We allocate buffers, rather than use the pool, because
        they are used for the duration of the compose/send operation.

M	main.c
M	protos.h
M	send.c

2019-10-09 08:36:59 +0800  Kevin McCarthy  <kevin@8t8.us> (fe69e4d1)

        * Add sticky browser behavior for sorting.
        
        The menu isn't rebuilt after sorting, so the selected mailbox was not
        sticky for that operation.
        
        Refactor the sticky cursor setting out so it can be explicitly called
        after sorting too.

M	browser.c

2019-10-08 15:22:27 +0800  Kevin McCarthy  <kevin@8t8.us> (46223bc9)

        * Convert start_debug() to use buffer pool.

M	init.c

2019-10-08 15:21:44 +0800  Kevin McCarthy  <kevin@8t8.us> (fb2487c2)

        * Convert set/reset and source_rc to use buffers for paths.

M	init.c

2019-10-08 13:07:40 +0800  Kevin McCarthy  <kevin@8t8.us> (49c97808)

        * Convert parse_path_(un)list to use buffer pool for path.
        
        Don't use the buf parameter to avoid stretching it out, as it's used
        for the entire rc parsing, and typically just holds command names.

M	init.c

2019-10-08 12:28:30 +0800  Kevin McCarthy  <kevin@8t8.us> (d430f372)

        * Change message cache id to use SHORT_STRING.
        
        Even that is too big, but it doesn't make make sense to use
        _POSIX_PATH_MAX for the id string.

M	imap/message.c

2019-10-08 11:24:38 +0800  Kevin McCarthy  <kevin@8t8.us> (f055ff54)

        * Convert imap_cachepath() and callers to use buffers.

M	imap/imap_private.h
M	imap/message.c
M	imap/util.c

2019-10-07 10:39:44 +0800  Kevin McCarthy  <kevin@8t8.us> (dcdbdfee)

        * Convert imap fetch_new and fetch_message tempfiles to buffer pool.

M	imap/message.c

2019-10-07 09:55:39 +0800  Kevin McCarthy  <kevin@8t8.us> (2e0fc335)

        * Convert imap_open_new_message() to use buffer pool.

M	imap/imap.c

2019-10-06 16:32:42 +0800  Kevin McCarthy  <kevin@8t8.us> (3f5b0220)

        * Convert save-hook and fcc-hook to use buffer pool internally.
        
        The hook parameters still need to be converted, but I'm working
        towards it slowly.

M	hook.c
M	muttlib.c
M	protos.h

2019-10-06 13:37:14 +0800  Kevin McCarthy  <kevin@8t8.us> (8351c060)

        * Convert mutt_parse_hook() to use buffer pool.
        
        Remove the path variable, as this is not needed:
        mutt_buffer_expand_path() and mutt_check_simple() can operate directly
        on the pattern/command buffers.

M	hook.c

2019-10-05 14:10:04 +0800  Kevin McCarthy  <kevin@8t8.us> (43bc959c)

        * Convert shrink_histfile() tempfile to use buffer pool.

M	history.c

2019-10-05 13:59:57 +0800  Kevin McCarthy  <kevin@8t8.us> (bb62f172)

        * Convert mutt_help() to use buffer for tempfile.

M	help.c

2019-10-05 13:52:50 +0800  Kevin McCarthy  <kevin@8t8.us> (dafb1f38)

        * Convert mutt_edit_headers() to use buffer pool.

M	headers.c

2019-10-04 15:29:03 +0800  Kevin McCarthy  <kevin@8t8.us> (48cf1092)

        * Fix built-in pager checks for help and attachments.
        
        Mutt uses the built-in pager when $pager is unset too.  Fix a few
        checks to also handle that case.

M	help.c
M	muttlib.c

2019-09-30 18:50:27 -0700  Kevin McCarthy  <kevin@8t8.us> (a6bccbe1)

        * Memcpy header cache fetch values to ensure alignment.
        
        While testing the hcache buffer pool changes, I noticed a misaligned
        pointer warning when using LMDB.
        
        The other header cache backends must ensure alignment of the pointer
        they return, but LMDB apparently does not.
        
        Instead of directly assigning and dereferencing the pointer fetched,
        use memcpy to the appropriate type, just as the header cache restore
        operation does.

M	imap/imap.c
M	imap/message.c
M	imap/util.c
M	mh.c

2019-09-28 14:08:39 -0700  Kevin McCarthy  <kevin@8t8.us> (fb1686b6)

        * Convert hcache delete and open calls to use buffer pool.

M	hcache.c

2019-09-27 19:21:26 -0700  Kevin McCarthy  <kevin@8t8.us> (36ee8d39)

        * Convert hcache fetch and store raw to use buffer pool.

M	hcache.c

2019-09-27 18:12:27 -0700  Kevin McCarthy  <kevin@8t8.us> (a736d4a4)

        * Convert hcache_open to use buffer pool.
        
        Change the namer function and mutt_hcache_per_folder to operate on a
        buffer parameter.

M	hcache.c
M	hcache.h
M	imap/util.c
M	pop.c

2019-09-27 15:46:49 -0700  Kevin McCarthy  <kevin@8t8.us> (84c1b646)

        * Convert hcache db4 lockfile to buffer.

M	hcache.c

2019-09-27 14:42:45 -0700  Kevin McCarthy  <kevin@8t8.us> (34ad2134)

        * Convert run_decode_and_handler() to use buffer pool.

M	handler.c

2019-09-27 14:28:01 -0700  Kevin McCarthy  <kevin@8t8.us> (a4f99230)

        * Convert edit_one_message() to use buffer pool.

M	editmsg.c

2019-09-26 15:23:14 -0700  Kevin McCarthy  <kevin@8t8.us> (44349c11)

        * Convert mutt_error_history to use buffer pool.

M	curs_lib.c

2019-09-25 18:44:50 -0700  Kevin McCarthy  <kevin@8t8.us> (13965f79)

        * Convert crypt_extract_keys and signed handler to use buffers.

M	crypt-mod-smime-classic.c
M	crypt-mod.h
M	crypt.c
M	cryptglue.c
M	mutt_crypt.h
M	smime.c
M	smime.h

2019-09-25 15:28:30 -0700  Kevin McCarthy  <kevin@8t8.us> (fc0c2bee)

        * Convert crypt-gpgme to use BUFFER for tempfiles.
        
        Use the pool where possible, but when the function calls other
        long-running functions (such as mutt_body_handler() or
        mutt_do_pager()), allocate the buffer.
        
        smime_gpgme_decrypt_mime() was not freeing the "cur" BODY generated on
        error.  Add a call to mutt_free_body(cur) in the error handling.

M	crypt-gpgme.c

2019-09-22 15:59:27 -0700  Kevin McCarthy  <kevin@8t8.us> (4d2f645a)

        * Fix memory leak in compose write-fcc function.
        
        The outer multipart was not being freed after writing.

M	compose.c

2019-09-22 15:58:58 -0700  Kevin McCarthy  <kevin@8t8.us> (0637998b)

        * Convert compress setup_paths() to use buffer.

M	compress.c

2019-09-22 14:54:14 -0700  Kevin McCarthy  <kevin@8t8.us> (1ae6e10f)

        * Remove nonull check from _mutt_enter_fname()
        
        It was a mistake to add the check when converting to use buffers in
        commit 70ef4e9e.
        
        The buf must be non-null in the original version, and in this version
        we are copying results back to it afterwards.

M	curs_lib.c

2019-09-22 14:38:03 -0700  Kevin McCarthy  <kevin@8t8.us> (b4cd9852)

        * Convert compose menu fname variable to buffer.

M	compose.c

2019-09-22 14:16:56 -0700  Kevin McCarthy  <kevin@8t8.us> (5da50b4d)

        * Convert buffer callers of mutt_get_field() to use buffer version.

M	browser.c
M	curs_lib.c
M	muttlib.c
M	pattern.c
M	recvattach.c

2019-09-22 14:11:43 -0700  Kevin McCarthy  <kevin@8t8.us> (ecd0d6ed)

        * Create mutt_buffer_get_field().
        
        This will reduce the buffer->dptr fiddling all over the place into one
        spot until mutt_enter_string() can be converted.

M	curs_lib.c
M	protos.h

2019-09-21 19:41:28 -0700  Kevin McCarthy  <kevin@8t8.us> (4f89f530)

        * Convert compose check_attachments() to use buffer pool.
        
        Modify error message so that the filename comes last, to prevent a
        long path from hiding the error message or prompt.

M	compose.c

2019-09-21 18:34:51 -0700  Kevin McCarthy  <kevin@8t8.us> (4050cc43)

        * Fix mutt_save_message() "enter_fname()" to use buffer version.
        
        Commit be632f11 converted this function to use the buffer pool, but
        accidentally used the non-buffer prompt when there was already a
        buffer-converted version.

M	commands.c

2019-09-21 12:41:10 -0700  Kevin McCarthy  <kevin@8t8.us> (7ca52826)

        * Merge branch 'stable'

2019-09-21 12:36:56 -0700  Kevin McCarthy  <kevin@8t8.us> (34cd43c3)

        * automatic post-release commit for mutt-1.12.2

M	ChangeLog
M	VERSION

2019-09-19 18:52:24 -0700  Kevin McCarthy  <kevin@8t8.us> (192a6d0e)

        * Convert mutt_complete() to use the buffer pool.
        
        Add helper functions mutt_buffer_substrcpy() and
        mutt_buffer_concatn_path().
        
        Remove mutt_concatn_path() because mutt_complete() was the only
        caller.

M	buffer.c
M	buffer.h
M	complete.c
M	imap/imap.c
M	imap/imap.h
M	lib.c
M	lib.h
M	muttlib.c
M	protos.h

2019-09-15 15:41:42 -0700  Kevin McCarthy  <kevin@8t8.us> (a4b53e19)

        * Improve sidebar indentation and shortpath behavior.
        
        The previous implementation only enabled $sidebar_folder_indent for
        mailboxes underneath $folder.  Change indentation to be based upon the
        previous common-path mailbox in the list.  Indent one more than the
        common-path mailbox, rather than the number of delimiters after
        $folder.
        
        Change $sidebar_short_path to shorten based on the previous mailbox in
        the list too.
        
        Invoke mutt_buffer_pretty_mailbox() to prefix the mailbox with '~' or
        '=' characters.  This changes the output for the case where mailbox
        equals $folder, but provides uniform display behavior across mutt.
        
        Thanks to Christopher Zimmermann (@madroach) for the original patch,
        which this commit is based upon.

M	sidebar.c

2019-09-11 19:47:13 -0700  Kevin McCarthy  <kevin@8t8.us> (fa965230)

        * Convert print_attachment_list to use buffer pool.

M	recvattach.c

2019-09-11 19:40:48 -0700  Kevin McCarthy  <kevin@8t8.us> (70bb4fad)

        * Convert query_pipe_attachment to use buffer pool.

M	attach.c
M	protos.h
M	recvattach.c

2019-09-11 19:10:02 -0700  Kevin McCarthy  <kevin@8t8.us> (4142e2e5)

        * Convert recvattach save_attachment functions to use buffer pool.
        
        Convert utility functions prepend_curdir() and mutt_check_overwrite()
        to use BUFFER, as they are only used by those two functions.

M	muttlib.c
M	protos.h
M	recvattach.c

2019-09-11 16:23:46 -0700  Kevin McCarthy  <kevin@8t8.us> (be632f11)

        * Convert mutt_save_message() to use buffer pool.
        
        Change imap_copy_messages() dest parameter to const char *.
        
        mutt_default_save() will be converted to use a buffer next, removing
        the dptr fixups.

M	commands.c
M	imap/imap.h
M	imap/message.c

2019-09-11 15:55:01 -0700  Kevin McCarthy  <kevin@8t8.us> (67f4d1d0)

        * Convert mutt_display_message() to buffer pool.
        
        Remove an unused mime-type string generation at the top of the
        function too.  The code using the mime type was removed a long time
        ago in commit 246198ae.

M	commands.c

2019-09-09 18:39:19 -0700  Kevin McCarthy  <kevin@8t8.us> (f8e93908)

        * Merge branch 'stable'

2019-09-09 18:19:03 -0700  Kevin McCarthy  <kevin@8t8.us> (773166e9)

        * Change browser <display-filename> to show full_path.
        
        Prior to the introduction of display_name/full_path, it showed "name",
        which was the full IMAP URL but the shortname for folder/mailbox view.
        
        Now that the full_path is available, it makes sense to show that for
        all cases.

M	browser.c

2019-09-09 14:06:31 -0700  Kevin McCarthy  <kevin@8t8.us> (2e6d4903)

        * Convert remaining mutt_encode_path() call to use BUFFER.
        
        Then rename the other uses of mutt_buffer_encode_path() to
        mutt_encode_path().

M	bcache.c
M	hcache.c
M	muttlib.c
M	protos.h

2019-09-09 18:07:16 -0700  Kevin McCarthy  <kevin@8t8.us> (616b2063)

        * Merge branch 'stable'

2019-09-08 10:49:37 -0700  Kevin McCarthy  <kevin@8t8.us> (0fa71030)

        * Add $browser_sticky_cursor default set.
        
        This option attempts to keep the browser cursor on the same mailbox.
        
        It does this by keeping track of the current selected mailbox and
        comparing that when regenerating the menu.
        
        Modify imap_mailbox_create() and imap_mailbox_rename() to return the
        new mailbox name so it can be automatically selected.

M	browser.c
M	imap/browse.c
M	imap/imap.h
M	imap/imap_private.h
M	imap/util.c
M	init.h
M	mutt.h

2019-09-08 12:09:51 -0700  Kevin McCarthy  <kevin@8t8.us> (1600dd18)

        * Rename browser fields to display_name and full_path.
        
        Mailbox and Folder view don't make use of the desc field.  They store
        an abbreviated version in the name field and expand it when selecting
        or testing it.
        
        IMAP stores the full URL in name, and stores an abbreviated
        version (possibly with a trailing slash) in the desc field.
        
        The asymetricity makes it awkward, and interferes with a smart-cursor
        option in the next commit.  So instead rename the fields to
        "display_name" and "full_path".
        
        In Mailfox and Folder view, store the fully expanded path, which we
        have while iterating, in "full_path", and the shortened version in
        "display_name".
        
        Likewise in IMAP, store the full URL in "full_path" and the shortened
        version in "display_name".
        
        Simplify the code in browser.c to use the full_path instead of
        concatenating and expanding.

M	browser.c
M	browser.h
M	imap/browse.c

2019-09-06 16:14:08 -0700  Kevin McCarthy  <kevin@8t8.us> (ad72ec6c)

        * Convert bcache to use buffer pools.

M	bcache.c
M	muttlib.c
M	protos.h

2019-09-01 19:10:23 -0700  Kevin McCarthy  <kevin@8t8.us> (c28cba77)

        * Fix memory leak when attaching messages.
        
        Setting actx->idx[]->content->parts to NULL causes a memory leak,
        because message attachments store a BODY there that needs to be freed.
        
        I looked through the various use cases of ci_send_message() and
        actually believe content->parts will be NULL for all other cases
        except message attachments.  From the comment added to
        delete_attachment():
        
          Other ci_send_message() message constructors are careful to free
          any body->parts, removing depth:
           - mutt_prepare_template() used by postponed, resent, and draft files
           - mutt_copy_body() used by the recvattach menu and $forward_attachments.
        
          I believe it is safe to completely remove the "content->parts =
          NULL" statement.  But for safety, am doing so only for the case
          it must be avoided: message attachments.

M	compose.c

2019-09-01 13:25:06 -0700  Kevin McCarthy  <kevin@8t8.us> (aafe98ba)

        * Reuse the static space_stuff function for unstuffing.

M	rfc3676.c

2019-08-31 14:17:22 -0700  Kevin McCarthy  <kevin@8t8.us> (7949149a)

        * Remove manual note about space-stuffing only once.
        
        Stuffing is now performed each time.

M	doc/manual.xml.head

2019-08-31 13:37:16 -0700  Kevin McCarthy  <kevin@8t8.us> (4959e8d4)

        * Re-enable and cleanup format-flowed space stuffing.
        
        Commit 04cb5bde tried to fix re-stuffing a postponed message more than
        once, but unfortunately broke the normal case of composing a new
        message.  So actually, space-stuffing has been turned off the past 7
        years.
        
        Move format=flowed parameter setting below the standard message
        pre-processing block.  It shouldn't be performed for draft-files even
        with $resume_draft_files set.  Moving out of the block makes that
        clearer.
        
        Create mutt_rfc3676_space_(un)stuff() functions, which check the
        content type and stuff/unstuff apprpropriately.  Note that the
        stuff/unstuff does not depend on $text_flowed, which is only in charge
        of setting the format=flowed parameter.  This parameter can also come
        from resumed/resent/draft messages and should still be respected.
        
        Add unstuffing to mutt_prepare_template().  This is called by
        postponed, resent, and draft files.  This will prevent double-stuffing
        in those cases.
        
        Unstuff/restuff around editing the message in the compose menu, to
        keep everything transparent to the user.  I originally put the
        stuffing *after* the compose menu, but previewing the messages in the
        compose menu did not work properly in that case.  It's cleaner this
        way too.
        
        Change the stuff/unstuff functions to preserve the original
        hdr->content->filename.  The "hack" previously used would interact
        poorly with editable body files (mutt -i -E).  Fortunately space
        stuffing was pretty much disabled except in unusual cases before.

M	compose.c
M	doc/manual.xml.head
M	init.h
M	postpone.c
M	rfc3676.c
M	rfc3676.h
M	send.c

2019-08-31 13:36:28 -0700  Kevin McCarthy  <kevin@8t8.us> (af47e694)

        * Properly revert on an autocrypt postpone failure.

M	send.c

2019-08-28 14:47:15 -0700  Kevin McCarthy  <kevin@8t8.us> (aa6d4663)

        * Merge branch 'stable'

2019-08-28 20:22:10 +0000  Olaf Hering  <olaf@aepfle.de> (2b8dc129)

        * de.po: proper translation for term collapse
        
        The intention of the term "collapse" is something like opening and
        closing an item. The initial translation which was added two decades
        ago means something like "breaks by weakness", which does not fit in
        the context of mutt.
        
        Use a term which means literally "opening and closing an item, like a
        book".
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2019-08-20 15:37:06 -0700  Kevin McCarthy  <kevin@8t8.us> (c8ec78e1)

        * Clean up the autocrypt doc a bit more.

M	doc/manual.xml.head

2019-08-20 15:17:31 -0700  Kevin McCarthy  <kevin@8t8.us> (f7c70a02)

        * Update autocrypt keyring documentation.
        
        Recommend setting $autocrypt_dir to your normal keyring directory if
        you want to use your existing key.
        
        Trying to copy it over leads to signature verification issues.  Even
        if I reversed the order (which is much less clean), that would just
        lead to missing key signature errors for Autocrypt messages instead.

M	doc/manual.xml.head

2019-08-20 14:57:29 -0700  Kevin McCarthy  <kevin@8t8.us> (577d5d14)

        * Fix --with-sqlite3 test for autocrypt.
        
        Since $with_sqlite3 can contain a path, we want to check if it is
        "no", not that it isn't "yes".

M	configure.ac

2019-08-17 15:38:34 -0700  Kevin McCarthy  <kevin@8t8.us> (d4ec818a)

        * Add $ssl_use_tlsv1_3 config variable, default set.

M	init.h
M	mutt.h
M	mutt_ssl.c
M	mutt_ssl_gnutls.c

2019-06-28 15:09:51 -0700  Kevin McCarthy  <kevin@8t8.us> (be684ef2)

        * Add size display configuration variables.
        
        Although it would be nice to "open this up" more, performance and
        security/stability issues would arise.
        
        Based on the thread in mutt-dev, I hope these vars will satisfy most
        customization needs:
          $size_show_bytes
          $size_show_mb
          $size_show_fractions
          $size_units_on_left

M	doc/manual.xml.head
M	init.h
M	mutt.h
M	muttlib.c

2019-08-13 21:03:51 -0700  Kevin McCarthy  <kevin@8t8.us> (342b91cf)

        * Fix LibreSSL build.
        
        Apparently LibreSSL doesn't implement SSL_has_pending(), even for
        newer versions.

M	mutt_ssl.c

2019-08-13 15:14:37 -0700  Kevin McCarthy  <kevin@8t8.us> (536353c7)

        * Update POTFILES.in.
        
        The file was missing a few files with translation strings:
        copy.c, imap/auth_oauth.c, and safe_asprintf.c.

M	po/POTFILES.in

2019-07-28 07:54:32 -0700  Kevin McCarthy  <kevin@8t8.us> (8353407c)

        * Add checks for buffered OpenSSL or GnuTLS data when polling.
        
        I don't believe this has had an actual effect, because Mutt doesn't
        support renegotiation, and we are only polling immediately after
        sending NOOP.
        
        However, it looks like checking is technically the correct thing to do
        to avoid polling waiting for data that is already buffered.

M	mutt_ssl.c
M	mutt_ssl_gnutls.c

2019-08-13 14:20:33 -0700  Kevin McCarthy  <kevin@8t8.us> (fdfda1b7)

        * Mention base64 keydata being stored in the autocrypt database.

M	doc/manual.xml.head

2019-08-11 14:35:07 -0700  Kevin McCarthy  <kevin@8t8.us> (c79c769f)

        * Move LIBAUTOCRYPT before MUTTLIBS to fix building issues.

M	Makefile.am

2019-08-11 14:17:50 -0700  Kevin McCarthy  <kevin@8t8.us> (456737cd)

        * Add autocrypt and sqlite3 to .gitlab-ci.yml.

M	.gitlab-ci.yml

2019-08-09 14:15:18 -0700  Kevin McCarthy  <kevin@8t8.us> (ae332f72)

        * Add L10N comment about autocrypt menu help line abbreviations.

M	autocrypt/autocrypt_acct_menu.c

2019-08-09 13:58:55 -0700  Kevin McCarthy  <kevin@8t8.us> (9f692bd3)

        * Add a note about autocrypt first-run and macros.

M	doc/manual.xml.head

2019-08-09 13:37:08 -0700  Kevin McCarthy  <kevin@8t8.us> (b8e9dfc1)

        * Add autocrypt documentation about shared key and keyring strategies.

M	doc/manual.xml.head

2019-08-08 20:49:32 -0700  Kevin McCarthy  <kevin@8t8.us> (38f06669)

        * Minor autocrypt manual section updates.
        
        Mention key selection during account creation and $autocrypt_reply for
        controlling autocrypt mode setting during replies.

M	doc/manual.xml.head

2019-08-08 09:18:53 -0700  Kevin McCarthy  <kevin@8t8.us> (d0ef8c32)

        * Enabled writing protected subject with autocrypt too.

M	crypt.c

2019-08-07 18:34:58 -0700  Kevin McCarthy  <kevin@8t8.us> (1de46058)

        * Turn off macro processing during autocrypt initialization.
        
        The muttrc can push events into the macro buffer, with the assumption
        that mailbox will be opened next.  This will interfere with the
        prompts uses during first run.  The only issue is that macros won't
        work inside the folder browser, if invoked.

M	autocrypt/autocrypt.c

2019-08-07 18:24:15 -0700  Kevin McCarthy  <kevin@8t8.us> (41d9d9cf)

        * Allow nested setting of OPTIGNOREMACROEVENTS.
        
        This will be needed for the first-run of autocrypt initialization.
        The initialization involves a number of prompts, and can even use the
        folder browser.  The browser could in turn connect to IMAP which might
        invoke a certificate prompt, login prompt, etc.

M	curs_lib.c
M	mutt_ssl.c
M	mutt_ssl_gnutls.c

2019-08-07 14:31:53 -0700  Kevin McCarthy  <kevin@8t8.us> (04817c00)

        * Add $autocrypt_reply.
        
        This allows turning off the force-autocrypt mode when replying to an
        autocrypt email.

M	init.h
M	mutt.h
M	send.c

2019-08-07 14:17:28 -0700  Kevin McCarthy  <kevin@8t8.us> (01bc088c)

        * Automatically clear screen when popping the last menu.
        
        This removes the need to manually clear the screen during pre-menu
        operations, such as autocrypt first run initialization.

M	autocrypt/autocrypt.c
M	menu.c

2019-08-07 14:12:43 -0700  Kevin McCarthy  <kevin@8t8.us> (d55b0390)

        * Add ability to create autocrypt account from an existing key.
        
        This is useful when adding accounts, or for users who want to use an
        existing key from the keyring during initial account creation.

M	autocrypt/autocrypt.c
M	autocrypt/autocrypt_gpgme.c
M	autocrypt/autocrypt_private.h
M	crypt-gpgme.c
M	crypt-gpgme.h

2019-08-04 07:55:26 -0700  Kevin McCarthy  <kevin@8t8.us> (769a7765)

        * Don't try to decrypt autocrypt messages if the option is off.

M	cryptglue.c

2019-08-04 07:52:19 -0700  Kevin McCarthy  <kevin@8t8.us> (da54c660)

        * Manual typo fix.
        
        Thanks to Petr Pisar for pointing out the error.

M	doc/manual.xml.head

2019-08-03 13:53:40 -0700  Kevin McCarthy  <kevin@8t8.us> (1089deb0)

        * Add autocrypt README file

M	autocrypt/Makefile.am
A	autocrypt/README

2019-08-02 09:03:41 -0700  Kevin McCarthy  <kevin@8t8.us> (128127cb)

        * Add documentation for the autocrypt feature.

M	doc/manual.xml.head
M	init.h

2019-07-31 18:56:29 -0700  Kevin McCarthy  <kevin@8t8.us> (2822b4eb)

        * Add option to scan mailboxes during first run.
        
        The scanner will disable the header cache, allowing scanning all
        messages in the mailbox.

M	autocrypt/autocrypt.c
M	autocrypt/autocrypt_db.c
M	autocrypt/autocrypt_private.h

2019-07-31 15:42:09 -0700  Kevin McCarthy  <kevin@8t8.us> (e01b3f02)

        * Add more translation string comments for autocrypt.

M	autocrypt/autocrypt.c
M	autocrypt/autocrypt_acct_menu.c
M	autocrypt/autocrypt_db.c
M	autocrypt/autocrypt_gpgme.c
M	compose.c

2019-07-28 19:24:11 -0700  Kevin McCarthy  <kevin@8t8.us> (85bd11b0)

        * Basic autocrypt account menu.
        
        Provide ability to create, delete, and toggle the prefer-encrypt and
        enabled flag for an account.
        
        Hook into the index via 'A' <autocrypt-acct-menu>.

M	OPS
M	autocrypt/Makefile.am
M	autocrypt/autocrypt.c
M	autocrypt/autocrypt.h
A	autocrypt/autocrypt_acct_menu.c
M	autocrypt/autocrypt_db.c
M	autocrypt/autocrypt_private.h
M	curs_main.c
M	doc/manual.xml.tail
M	functions.h
M	globals.h
M	init.h
M	keymap.c
M	keymap.h
M	po/POTFILES.in

2019-07-30 19:14:56 -0700  Kevin McCarthy  <kevin@8t8.us> (36115604)

        * Convert peer_update to just pass the peer object.
        
        Unlike get and insert, there is no need for an addres parameter that
        needs to be normalized, since the address is already in the peer
        object.

M	autocrypt/autocrypt.c
M	autocrypt/autocrypt_db.c
M	autocrypt/autocrypt_private.h

2019-07-28 19:23:12 -0700  Kevin McCarthy  <kevin@8t8.us> (71e881a6)

        * Improve gen-map-doc work on multi-word maps.

M	doc/gen-map-doc

2019-07-27 15:34:51 -0700  Kevin McCarthy  <kevin@8t8.us> (e5463f57)

        * Add account->enabled checks.
        
        Add to ui recommendation, keylist generator, and autocrypt header
        writing routines.

M	autocrypt/autocrypt.c

2019-07-27 15:11:38 -0700  Kevin McCarthy  <kevin@8t8.us> (a7a5abe4)

        * Add prefer-encrypt prompt during account creation.

M	autocrypt/autocrypt.c

2019-07-27 13:44:36 -0700  Kevin McCarthy  <kevin@8t8.us> (ec6953f5)

        * Add AUTOCRYPT header to imap fetch list.
        
        If $autocrypt is set, add the header to make IMAP behave the same as
        other formats (parsing on initial mailbox opening).
        
        This will also be useful if we perform an initial scan during account
        creation, to make that work for IMAP too.

M	imap/message.c

2019-07-26 16:27:04 -0700  Kevin McCarthy  <kevin@8t8.us> (0d94a3dc)

        * Add L10N translation message comments.

M	autocrypt/autocrypt.c
M	autocrypt/autocrypt_db.c
M	autocrypt/autocrypt_gpgme.c
M	compose.c

2019-07-26 16:00:22 -0700  Kevin McCarthy  <kevin@8t8.us> (43c57659)

        * Add autocrypt source files to POTFILES.in

M	po/POTFILES.in

2019-07-26 15:59:47 -0700  Kevin McCarthy  <kevin@8t8.us> (baac6d68)

        * Print an error message if an autocrypt key can't be found.

M	autocrypt/autocrypt.c

2019-07-26 13:55:46 -0700  Kevin McCarthy  <kevin@8t8.us> (2aec979b)

        * Handle autocrypt message decryption.
        
        Try autocrypt first for crypt_pgp_decrypt_mime() and
        pgp_gpgme_encrypted_handler().
        
        Propagate the autocrypt bit if successful.  This is used when replying
        to an autocrypt message, to force a reply using autocrypt.

M	crypt-gpgme.c
M	crypt.c
M	cryptglue.c
M	handler.c
M	mutt.h

2019-07-25 19:12:32 -0700  Kevin McCarthy  <kevin@8t8.us> (d0a56a14)

        * Slightly improve the gossip header key update.
        
        Don't set an empty peer.gossip_keydata with a value that matches the
        current peer.keydata.  This just wastes space.

M	autocrypt/autocrypt.c

2019-07-24 18:59:07 -0700  Kevin McCarthy  <kevin@8t8.us> (78d028d7)

        * Fix process_gossip_headers() to look at the right envelope.

M	autocrypt/autocrypt.c
M	autocrypt/autocrypt.h
M	commands.c

2019-07-21 15:15:06 -0700  Kevin McCarthy  <kevin@8t8.us> (963fc1ba)

        * Autocrypt outgoing emails.
        
        Change crypt_get_keys() to query autocrypt.
        
        When oppenc_mode is set, we still query the original keyring
        regardless, because the compose menu can still run oppenc even if
        autocrypt is on.
        
        Since mutt_autocrypt_ui_recommendation() checks each key as part of
        making the recommendation, add a keylist parameter and use that
        function.
        
        Add gpgme changes to use the autocrypt context for encryption.
        
        Postpone work:
        * Change mutt_protect() to have a postpone parameter.  Remove the
          manual toggling of the SIGN bit outside the call when postponing.
        
        * Since autocrypt doesn't set the SIGN bit, this allows us to turn off
          signing inside mutt_protect() for both normal and autocrypt mode.
        
        * Set the autocrypt postpone key in AutocryptDefaultKey.
        
        Write autocrypt and gossip headers in outgoing emails.

M	autocrypt/autocrypt.c
M	autocrypt/autocrypt.h
M	compose.c
M	crypt-gpgme.c
M	crypt.c
M	cryptglue.c
M	globals.h
M	mutt.h
M	mutt_crypt.h
M	postpone.c
M	send.c
M	sendlib.c

2019-07-19 12:54:32 -0700  Kevin McCarthy  <kevin@8t8.us> (959628d0)

        * Add autocrypt line to the compose menu.
        
        Remove the hardcoded HDR_ATTACH offset calcuation, and add an explicit
        enum for the "-- Attachments" line to make loops and padding array
        sizes easier.
        
        Add security and recommendataion fields on the line.
        
        Add mutt_autocrypt_ui_recommendation, following the autocrypt spec
        guidelines.

M	OPS
M	autocrypt/autocrypt.c
M	autocrypt/autocrypt.h
M	autocrypt/autocrypt_gpgme.c
M	autocrypt/autocrypt_private.h
M	compose.c
M	functions.h
M	mutt.h
M	mutt_crypt.h

2019-07-20 14:48:06 -0700  Kevin McCarthy  <kevin@8t8.us> (009b62c9)

        * Add another HEADER security bit for autocrypt.

M	mutt.h
M	mutt_crypt.h

2019-07-18 13:22:52 -0700  Kevin McCarthy  <kevin@8t8.us> (7c183407)

        * Change gossip header address comparison to use normalized addresses.

M	autocrypt/autocrypt.c

2019-07-18 13:19:47 -0700  Kevin McCarthy  <kevin@8t8.us> (8f0f0da2)

        * Change autocrypt_db normalization to return ADDRESS.
        
        This makes reusing the code in autocrypt.c easier.

M	autocrypt/autocrypt_db.c
M	autocrypt/autocrypt_private.h

2019-07-15 18:36:57 -0700  Kevin McCarthy  <kevin@8t8.us> (a2a2e885)

        * Add gossip header processing.

M	autocrypt/autocrypt.c
M	autocrypt/autocrypt.h
M	autocrypt/autocrypt_db.c
M	autocrypt/autocrypt_private.h
M	commands.c
M	mutt.h
M	muttlib.c
M	parse.c

2019-07-14 18:59:28 -0700  Kevin McCarthy  <kevin@8t8.us> (f0946c86)

        * Convert to use sqllite3_prepare_v3().
        
        The documentation suggests the SQLITE_PREPARE_PERSISTENT flag is
        helpful for long-lived prepared statements, and Mutt is using.

M	autocrypt/autocrypt_db.c

2019-07-11 18:45:45 -0700  Kevin McCarthy  <kevin@8t8.us> (c7d4b019)

        * Process autocrypt headers.
        
        Create/update peer database accounts and gpg keys based on the headers.

M	autocrypt/autocrypt.c
M	autocrypt/autocrypt.h
M	autocrypt/autocrypt_db.c
M	autocrypt/autocrypt_gpgme.c
M	autocrypt/autocrypt_private.h
M	mutt.h
M	parse.c
M	protos.h

2019-07-11 18:06:56 -0700  Kevin McCarthy  <kevin@8t8.us> (7fd50ddd)

        * Add autocrypt header parsing to mutt_parse_rfc822_line().
        
        Convert parse_parameters() for autocrypt header usage:
        
          * change to use a BUFFER to accomodate large autocrypt keydata
            attribute values.
        
          * Autocrypt header parameters are not rfc2231 compliant.  Rather
            than rolling another very similar function, just change the
            existing one to allow space separation.

M	mutt.h
M	muttlib.c
M	parse.c
M	protos.h

2019-07-08 20:58:32 -0700  Kevin McCarthy  <kevin@8t8.us> (f92049e9)

        * Add initial autocrypt account setup.
        
        Generate gpg key and add account record to the database.

M	autocrypt/autocrypt.c
M	autocrypt/autocrypt.h
M	autocrypt/autocrypt_db.c
M	autocrypt/autocrypt_gpgme.c
M	autocrypt/autocrypt_private.h
M	main.c

2019-07-08 15:23:44 -0700  Kevin McCarthy  <kevin@8t8.us> (4586444c)

        * Factor out mutt_edit_address() in send.c.
        
        For reuse by autocrypt for address prompts.

M	protos.h
M	send.c

2019-07-07 14:37:52 -0700  Kevin McCarthy  <kevin@8t8.us> (715a50a8)

        * Start autocrypt gpgme.
        
        Add a basic init function.
        
        Bump up the required gpgme version to 1.8.0 if autocrypt is enabled.

M	autocrypt/Makefile.am
M	autocrypt/autocrypt.c
A	autocrypt/autocrypt_gpgme.c
M	autocrypt/autocrypt_private.h
M	configure.ac

2019-07-06 14:01:13 -0700  Kevin McCarthy  <kevin@8t8.us> (be89dc7b)

        * Add database and schema initialization.
        
        Add mutt_mkdir() library function supporting recursive mkdir.

M	autocrypt/Makefile.am
M	autocrypt/autocrypt.c
M	autocrypt/autocrypt.h
A	autocrypt/autocrypt_db.c
A	autocrypt/autocrypt_private.h
A	autocrypt/autocrypt_schema.c
M	lib.c
M	lib.h
M	main.c

2019-07-06 11:35:22 -0700  Kevin McCarthy  <kevin@8t8.us> (e9668902)

        * Add autocrypt config vars.

M	doc/makedoc-defs.h
M	globals.h
M	init.h
M	mutt.h

2019-07-03 19:51:09 -0700  Kevin McCarthy  <kevin@8t8.us> (1fe2980d)

        * Initial autoconf and makefile setup for autocrypt.

M	.gitignore
M	Makefile.am
A	autocrypt/Makefile.am
A	autocrypt/autocrypt.c
A	autocrypt/autocrypt.h
M	check_sec.sh
M	configure.ac
M	main.c

2019-07-28 10:13:22 -0700  Kevin McCarthy  <kevin@8t8.us> (6f1e5196)

        * Add a comment to the OPTIGNOREMACROEVENTS km_dokey() change.
        
        The option was added in commit 53900afa, and its actual purpose was
        to separate out an "unget" event buffer from the "macro" buffer, to
        solve a problem with certificate prompts.
        
        The safest approach in a low-level function like km_dokey() was to
        return an error if new macros were generated when the option is set.
        However, this results in an unbuffered username/password prompt being
        aborted.
        
        Currently the only users of unbuffered input are the SSL certificate
        prompts, which use menu->dialog mode (and thus mutt_getch() directly)
        and username/password prompts.  So the only affected cases are
        editor-menu prompts, and returning the pressed keys is likely less
        surprising than aborting the prompt.
        
        If other unbuffered menus are created in the future, we may want to
        add a check for which menu mode is being used.

M	keymap.c

2019-07-26 13:54:12 +0200  Oneric  <Nyff@protonmail.ch> (a173719c)

        * Change OPTIGNOREMACROEVENTS to actuallly ignore macros instead of throwing errors on macros

M	keymap.c

2019-07-25 18:23:38 -0700  Kevin McCarthy  <kevin@8t8.us> (6d4107c8)

        * Merge branch 'stable'

2019-07-05 08:44:21 -0700  Andrew Marks  <amarks@red.ridge.amrx.net> (53d5550b)

        * Added * option to unattachments command
        
        The * option clears all previous attachments settings. A
        list_free_generic method is added to muttlib to enable generic freeing
        of specific LIST structures. free_attachments_data is used with
        list_free_generic to clear four LISTs which manage allowed and excluded
        inline and attached "attachments"
        
        refs #1

M	doc/manual.xml.head
M	init.c
M	mutt.h
M	muttlib.c

2019-07-18 16:16:15 -0400  Drew DeVault  <sir@cmpwn.com> (70d879c4)

        * Add builds.sr.ht CI manifests
        
        For Alpine Linux (musl libc), Debian (glibc), and FreeBSD.

A	.builds/alpine.yml
A	.builds/debian.yml
A	.builds/freebsd.yml

2019-07-18 13:44:19 -0700  Kevin McCarthy  <kevin@8t8.us> (ba7116d4)

        * Fix a reference to HeaderCachePageSize.
        
        Commit 4c728278 converted the config far to type DT_LNUM, but
        embarrassingly I missed a usage.

M	hcache.c

2019-07-13 21:49:05 -0400  Daniel Kahn Gillmor  <dkg@fifthhorseman.net> (82973a6e)

        * Omit User-Agent: header by default
        
        The User-Agent: header can be fun and interesting and useful for
        debugging, but it also leaks quite a bit of information about the user
        and their software stack.
        
        This represents a potential security risk (attackers can target the
        particular stack) and also an anonymity risk (a user trying to
        preserve their anonymity by sending mail from a non-associated account
        might reveal quite a lot of information if their choice of mail user
        agent is exposed).
        
        Users who want to configure `user_agent` to `yes` can still do so, but
        it makes sense to have safer defaults.
        
        Closes: #159

M	init.h

2019-06-28 13:00:57 -0700  Kevin McCarthy  <kevin@8t8.us> (7f8642d4)

        * Merge branch 'stable'

2019-06-27 15:35:12 -0700  Kevin McCarthy  <kevin@8t8.us> (8768e10f)

        * Remove unnecessary "" checks for DT_STR and DT_PATH MuttVars.
        
        MuttVars of those types are set via safe_strdup(), which returns NULL
        if the original is "".  Thus Var implies *Var.
        
        A good portion of the code relies on that axiom, but over the years
        some (Var && *Var) checks have crept in, including from me.
        
        This was partially because of the INITVAL("") that were in the code,
        which implied (incorrectly) the initial value could be "".  Commit
        2f91d43e removed those to make it more clear.
        
        This commit removes the *Var checks to make it even clearer, and help
        avoid them creeping back in again.

M	alias.c
M	bcache.c
M	charset.c
M	commands.c
M	compose.c
M	crypt-gpgme.c
M	crypt.c
M	curs_main.c
M	handler.c
M	hcache.c
M	hook.c
M	imap/auth.c
M	imap/auth_oauth.c
M	init.c
M	mutt_socket.c
M	muttlib.c
M	parse.c
M	pgpinvoke.c
M	pop_auth.c
M	rfc1524.c
M	rfc2047.c
M	rfc2231.c
M	send.c
M	sendlib.c
M	smime.c
M	smtp.c

2019-06-27 11:06:19 -0700  Kevin McCarthy  <kevin@8t8.us> (4c728278)

        * Convert $header_cache_pagesize to type DT_LNUM.
        
        Prior to commit 4bc76c2f there was no LNUM type, and so the workaround
        was to store it as a string, converting in the hcache_open_gdbm()
        call.
        
        This will not affect the user interface or config file, because DT_NUM
        and DT_LNUM read in a string from the config file and convert to a
        number.  Quotes are used for escaping style, not passed through to the
        variable setter.
        
        So essentially this simply moves the conversion to parse_set(), and
        provides feedback for a non-numeric type immediately.

M	globals.h
M	hcache.c
M	init.h

2019-06-25 14:25:33 -0700  Kevin McCarthy  <kevin@8t8.us> (793e0fc2)

        * Convert Commands to use the union pointer_long_t too.
        
        As with MuttVars, Commands was using an unsigned long to hold pointers
        as well as enums.  Convert to use the same union type of MuttVars.
        
        Adjust command functions data parameter type to the union.  Since
        these are used outside init.c, relocate the union definition to
        mutt.h.
        
        Although the number of functions affected was long, most of them did
        not need much adjustment.  Many of them made no use of the parameter.
        Those that did were easily cast into an added "data" variable at the
        top.

M	buffy.c
M	color.c
M	hook.c
M	init.c
M	init.h
M	keymap.c
M	mutt.h
M	protos.h
M	score.c

2019-06-24 19:41:30 -0700  Kevin McCarthy  <kevin@8t8.us> (0d53c86e)

        * Fix the makedoc program to cope with the new MuttVars format.
        
        Add '=' to token delimiter, to make the parsing more robust if
        someone decides to add spaces between a designator and value.

M	doc/makedoc.c

2019-06-24 18:07:54 -0700  Kevin McCarthy  <kevin@8t8.us> (5bf53035)

        * Convert MuttVars.data and .init to use a union type.
        
        They were using an "unsigned long" and casting to a pointer when
        needed.  Obviously this has "worked" for a long time, but it's not
        correct to assume a pointer can fit in unsigned long.
        
        Replace with a union contain "void *p" and "long l".  Fortunately, the
        only parts making direct use of MuttVars are in init.h and init.c, so
        we just need to update those manipulation functions.
        
        In general I don't like single letter variables, but brevity is worth
        it in this case.

M	init.c
M	init.h

2019-06-23 02:05:43 +0200  Vincent Lefevre  <vincent@vinc17.net> (6a74e24e)

        * Detail the documentation of %l for index_format.

M	init.h

2019-06-22 16:13:46 -0700  Kevin McCarthy  <kevin@8t8.us> (5e49cbf2)

        * Add NULL checks to rfc1524_free_entry().
        
        The existing code was fine, but make it robust like other free
        functions in mutt, so the behavior isn't surprising.

M	attach.c
M	rfc1524.c

2019-06-22 16:01:19 -0700  Kevin McCarthy  <kevin@8t8.us> (aea4a689)

        * Clean up mutt_print_attachment() cleanup.
        
        Check if mutt_save_attachment() fails and abort the print in that
        case.

M	attach.c

2019-06-22 15:00:59 -0700  Kevin McCarthy  <kevin@8t8.us> (cf05da7b)

        * Merge branch 'stable'

2019-06-22 13:33:11 -0700  Kevin McCarthy  <kevin@8t8.us> (6b44b8e3)

        * Remove mutt_rfc1524_expand_filename() return value and checks.
        
        The return value was of dubious value.  It returned 0 only for the
        case that a nametemplate was specified and it already matched the
        supplied oldfile.
        
        However, just because the nametemplate matched does not mean
        attachment handling in send-mode should skip the mutt_adv_mktemp()
        conversion, which includes a call to mutt_sanitize_filename().  We
        didn't do so if *no* nametemplate was supplied.
        
        Remove the return value from the function, and remove the checks and
        "special handing" in attach.c calls.

M	attach.c
M	rfc1524.c
M	rfc1524.h

2019-06-22 12:54:40 -0700  Kevin McCarthy  <kevin@8t8.us> (03f6a9cb)

        * Remove unnecessary strcmp for mutt_view_attachment().
        
        mutt_rfc1524_expand_filename() runs the result through
        mutt_adv_mktemp(), which will sanitize and relocate the filename under
        $tmpdir.  The strcmp() is unneeded and distracting to the program
        logic; none of the other routines perform or need this check.

M	attach.c

2019-06-22 12:39:50 -0700  Kevin McCarthy  <kevin@8t8.us> (a3d38b9e)

        * Merge branch 'stable'

2019-06-22 10:25:04 -0700  Kevin McCarthy  <kevin@8t8.us> (2f44aa05)

        * Merge branch 'stable'

2019-06-21 13:40:52 -0700  Kevin McCarthy  <kevin@8t8.us> (05d31caa)

        * Remove NULL and 0 INITVAL declarataions.
        
        The C standard says static storage duration variables will be
        initialized to NULL/0.

M	buffy.h
M	globals.h
M	lib.h
M	monitor.h

2019-06-21 13:36:09 -0700  Kevin McCarthy  <kevin@8t8.us> (6c01b284)

        * Combine DT_STR and DT_PATH in mutt_set_default().
        
        19 years ago, they briefly performed different things, but the
        mutt_pretty_mailbox() has been commented out since then.

M	init.c

2019-06-21 13:28:11 -0700  Kevin McCarthy  <kevin@8t8.us> (2f91d43e)

        * Remove UL "" initialization from init.h.
        
        mutt_init() calls mutt_set_default() followed by
        mutt_restore_default().  The mutt_restore_default() calls
        mutt_str_replace(), which translates "" into 0.
        
        Therefore assigning "" to the option->init field simply wastes space
        and (incorrectly) implies the option->data will be non-NULL by default.

M	init.h

2019-06-15 09:15:25 -0700  Kevin McCarthy  <kevin@8t8.us> (078654a4)

        * Merge branch 'stable'

2019-06-13 18:29:29 -0700  Kevin McCarthy  <kevin@8t8.us> (a621eaed)

        * Merge branch 'stable'

2019-06-13 17:58:56 -0700  Kevin McCarthy  <kevin@8t8.us> (ea3999ba)

        * Merge branch 'stable'

2019-06-10 14:51:50 -0700  Kevin McCarthy  <kevin@8t8.us> (ab457327)

        * Allow imap_cmd_finish() to both expunge and fetch new mail.
        
        Since commit dd327606 changed check_status setting to use bit
        operators, and imap_check_mailbox() can call imap_cmd_finish() twice,
        there is no reason to delay the processing of new mail until a second
        call.
        
        imap_read_headers() deals with msn_end < msg_begin, so remove
        the (count > idata->max_msn) check.  This will allow the reopen flag
        to be reset if somehow it's not the case.

M	imap/command.c

2019-06-09 11:12:23 -0700  Kevin McCarthy  <kevin@8t8.us> (c64084e5)

        * Merge branch 'stable'

2019-06-07 14:20:02 -0700  Kevin McCarthy  <kevin@8t8.us> (77c2a92a)

        * Merge branch 'stable'

2019-06-06 16:22:18 -0700  Kevin McCarthy  <kevin@8t8.us> (a8f9368f)

        * Merge branch 'stable'

2019-06-06 13:48:23 -0700  Kevin McCarthy  <kevin@8t8.us> (151c5711)

        * Merge branch 'stable'

2019-06-04 15:47:57 -0700  Kevin McCarthy  <kevin@8t8.us> (16bbafe6)

        * Check for GNU Make to allow version.h FORCE target.
        
        If we're using GNU Make, the FORCE target allows automatically
        updating the version number after each commit.
        
        See commit 22c6df82

M	Makefile.am
M	configure.ac

2019-06-05 14:28:20 -0700  Kevin McCarthy  <kevin@8t8.us> (cf94a879)

        * Merge branch 'stable'

2019-06-03 19:08:21 -0700  Kevin McCarthy  <kevin@8t8.us> (9bacbaa9)

        * Change --disable-doc to only skip manual generation.
        
        Instead of skipping the entire doc directory building, just skip the
        manual.html, manual.txt, and mutt.info generation.
        
        Generate and install the other files in the doc directory, which don't
        have the same involved dependencies as the DocBook generated files.

M	Makefile.am
M	doc/Makefile.am

2019-05-31 09:41:53 -0700  Kevin McCarthy  <kevin@8t8.us> (84124dd3)

        * Merge branch 'stable'

2019-05-30 09:29:35 -0700  Kevin McCarthy  <kevin@8t8.us> (ee0aebab)

        * Merge branch 'stable'

2019-05-28 09:38:38 -0700  Kevin McCarthy  <kevin@8t8.us> (79dd54c4)

        * Remove EXTRACT_MACROS check from EXTRACT_NUMBER in regex.
        
        Commit 367b1135 converted EXTRACT_NUMBER to always call a function, to
        enable the use of parameter types and local variables.  In doing this
        it removed the separate DEBUG implementation.
        
        The EXTRACT_MACROS check was accidentally left in, but no longer makes
        sense outside of the DEBUG.

M	regex.c

2019-05-27 19:45:58 -0700  Kevin McCarthy  <kevin@8t8.us> (b4b47e1c)

        * Rename --with-regex to --with-bundled-regex.
        
        This makes the configuration option purpose clearer.  Previously,
        some distros enabled the option thinking it turned on a "regex" option
        that should be enabled.
        
        Closes #89.

M	configure.ac

2019-05-27 19:36:34 -0700  Kevin McCarthy  <kevin@8t8.us> (367b1135)

        * Remove undefined left-shift on negative value from regex.c.
        
        Replace with a bitwise-or of the byte 1, byte 22, and a mask to extend
        the sign bit.
        
        Change the dest parameter type to unsigned int just to make sure the
        compiler doesn't do anything tricky or get offended somehow.
        
        See #89.

M	regex.c

2019-05-26 16:03:40 -0700  Kevin McCarthy  <kevin@8t8.us> (cd30526c)

        * Change mutt_addr_is_user() to no for a NULL address.
        
        See ticket #140.
        
        The behavior is generating a false 'F' flag for a spam message with an
        unparsable From address.
        
        After reviewing the callers, I can't see a reason returning 'yes' in
        this case.
        
        Commit 690c2945 fixed a potential segv issue, but the other callers
        seem robust against this change in behavior.

M	alias.c

2019-05-26 14:34:42 -0700  Kevin McCarthy  <kevin@8t8.us> (c186d379)

        * Turn on $ssl_force_tls by default.
        
        Ticket #135 suggests that these days, it's better to force encryption
        over all connections.  RFC8314 is recommending MUA's move in that
        direction (actually even directing towards implicit TLS over
        STARTTLS).
        
        I'm enabling this at the beginning of the 1.13 development cycle to
        give others time to chime in with any objections.  Personally, I've
        had this option set myself for years.  The only place it could become
        an issue is for a localhost IMAP server with no cert.  In that case,
        it's easy enough to have an account hook unset if needed, and I think
        a better idea that the user be forced to turn it off.

M	init.h

2019-05-26 18:52:47 +0200  Sebastian Stark  <sstark@mailbox.org> (035bd727)

        * make OP_HALF_{UP,DOWN} behave symmetric.
        
          - the calculation of number of lines to scroll up/down should not
          depend on whether the number of rows in the pager/index/terminal is
          odd or even.
          - this patch will make the behaviour symmetric such that in both cases
          (even/odd number of rows) scrolling up and down by half a page (or the
          other way round) will get you back to the exact same line as before.

M	pager.c

2019-09-21 12:27:57 -0700  Kevin McCarthy  <kevin@8t8.us> (6931c1ad)

        * Update UPDATING file for 1.12.2 release.

M	UPDATING

2019-09-09 18:32:59 -0700  Kevin McCarthy  <kevin@8t8.us> (c65c12be)

        * Fix mutt_write_mime_body() application/pgp-encrypted handling.
        
        It would blindly overwrite any attachment with that type, as if it
        were the version label part of a multipart/encrypted message.
        
        However attachments with extenstion .gpg are labeled that type if
        $mime_type_query_command is set to "xdg-mime query filetype".  This
        would cause the attachment to be overwritten too.
        
        Add a check for a missing body->filename, which should only be the
        case for the manually constructed part.

M	sendlib.c

2019-09-01 16:58:46 +0200  Gero Treuner  <gero@70t.de> (472324f8)

        * add fallback for inotify_init1

M	configure.ac
M	monitor.c
M	monitor.h

2019-08-28 14:41:26 -0700  Kevin McCarthy  <kevin@8t8.us> (4c2f7c70)

        * Fix inotify configure test.
        
        AC_CHECK_FUNCS executes "action-if-found" or "action-if-not-found" for
        each function in the list.  If a system has some but not all of the
        functions, both will end up being executed.
        
        This caused a build failure on an older system with exactly that
        situation.
        
        Change to only define USE_INOTIFY if all functions exist.

M	configure.ac

2019-07-25 18:18:08 -0700  Kevin McCarthy  <kevin@8t8.us> (588f8d69)

        * Fix accidental fall-through for <quote-char> if aborted.
        
        If <quote-char> was aborted, it was falling through to the
        <transpose-chars> function.
        
        This problem was introduced 19 years when the <transpose-chars> case
        was moved below <quote-char>.  Previously it fell through to the
        default case which beeped.

M	enter.c

2019-06-28 12:57:24 -0700  Kevin McCarthy  <kevin@8t8.us> (f3ec740d)

        * Don't read or save history if $history_file isn't set.

M	history.c

2019-06-22 14:57:36 -0700  Kevin McCarthy  <kevin@8t8.us> (840b813f)

        * Make sure mailcap test %s is sanitized.
        
        It's not clear to me if %s is allowed as part of a test field.
        However since we are passing the attachment filename, we should
        sanitize it first.

M	rfc1524.c

2019-06-22 12:35:58 -0700  Kevin McCarthy  <kevin@8t8.us> (a99a75b7)

        * Fix compose and edit attachment symlink failure code.
        
        In the case where safe_symlink() fail, mutt prompts to continue, but
        did not properly reset the filename to be operated on.
        
        Fix up mutt_view_attachment() to use the same flow as the others, to
        allow for easier comparison.

M	attach.c

2019-06-22 10:09:02 -0700  Kevin McCarthy  <kevin@8t8.us> (2fd320a8)

        * Fix send-mode printing when expand_filename() returns 1.
        
        It will return this when a nametemplate entry already matched the
        passed in filename.  So this bug required both a print entry and an
        already matching nametemplate entry to trigger.

M	attach.c

2019-06-15 09:12:15 -0700  Kevin McCarthy  <kevin@8t8.us> (38e7c257)

        * automatic post-release commit for mutt-1.12.1

M	ChangeLog
M	VERSION

2019-06-15 09:02:36 -0700  Kevin McCarthy  <kevin@8t8.us> (e299de25)

        * Update UPDATING file for 1.12.1 release.

M	UPDATING

2019-06-11 13:15:22 -0700  Kevin McCarthy  <kevin@8t8.us> (dc662474)

        * Add $fcc_before_send, defaulting unset.
        
        When set, the message will be Fcc'ed the same as sent.  $fcc_clear and
        $fcc_attach will be ignored.  This is because of the difficulty of
        unwinding changes, notably Protected Headers, without potentially
        breaking signatures.

M	doc/manual.xml.head
M	init.h
M	mutt.h
M	send.c

2019-06-13 17:56:38 -0700  Kevin McCarthy  <kevin@8t8.us> (81fb9dd8)

        * Improve $reverse_realname documentation.
        
        Make it clear that, even if set, a missing realname part of the
        matching address will be filled in by $realname.

M	init.h

2019-06-09 11:07:16 -0700  Kevin McCarthy  <kevin@8t8.us> (0727d324)

        * Mention sources for ~p and ~P patterns.
        
        The manual only mentioned alternates.  Add $from and local
        account/hostname to the list.
        
        The man page implied the only source was alternates.  Change to the
        same wording as the manual.
        
        Thanks to @rear1019 for pointing out the misleading man page.

M	doc/manual.xml.head
M	doc/muttrc.man.head

2019-06-07 13:43:36 -0700  Kevin McCarthy  <kevin@8t8.us> (6f5e6bbb)

        * Improve imap_append_message() error message handling.
        
        If the rc is IMAP_CMD_BAD, then either idata->buf is stale or an error
        message has already been printed (in cmd_handle_untagged()).
        
        Use imap_next_word() to skip over the next two words instead of
        directly skipping over SEQLEN, in case the buffer is in a different
        format.  We don't want to jump over the end of string.
        
        Skip the mutt_error() if there is nothing to print.

M	imap/message.c

2019-06-06 16:03:42 -0700  Kevin McCarthy  <kevin@8t8.us> (dd327606)

        * Enable the idata->check_status using bit operations.
        
        Commit e3f66d7e fixed dropped new mail notications, removing the
        unsetting of idata->reopen IMAP_NEWMAIL_PENDING in imap_cmd_finish()
        when an EXPUNGE was processed.
        
        However, imap_cmd_finish() can be called twice by
        imap_check_mailbox().  First as part of the imap_exec(), and manually
        again just below.
        
        Now that the IMAP_NEWMAIL_PENDING still exists, a second call could
        overwrite idata->check_status if both reopen flags were set.
        
        This unfortunately affects update_index(), which behaves differently
        for MUTT_REOPENED.
        
        I need to change the return value of mx_check_mailbox() in master to
        preserve all the bits, so the index can both notify of new mail and
        update_index() properly.
        
        For stable, the best fix is to use bit operators to enable the
        check_status flags in imap_cmd_finish() (and cmd_parse_fetch for
        flags), and keep the imap_check_mailbox() priority of setting its
        return value (it prioritizes IMAP_EXCHANGE_PENDING).

M	imap/command.c

2019-06-06 13:38:03 -0700  Kevin McCarthy  <kevin@8t8.us> (4d95b2cf)

        * Improve robustness of imap_append_message().
        
        First, check the imap_cmd_step() return value instead of looking at
        idata->buf for "OK".  If the connection bombed and imap_cmd_step()
        returned IMAP_CMD_BAD, the value of idata->buf is stale.
        
        If the server returned "+ OK" for the command continuation request
        response, the call to imap_code(idata->buf) would even end up
        returning true, despite that the append failed!  (See #110, although
        at the time of commit I can only hypothesize this is what is
        happening.)
        
        Second, check the status of the writes.  flush_buffer() was not
        passing the rc from mutt_socket_write_n(), which was further making
        the above disaster scenerio possible.

M	imap/message.c

2019-06-05 14:04:55 -0700  Kevin McCarthy  <kevin@8t8.us> (e3f66d7e)

        * Fix dropped new mail notifications when an EXPUNGE_PENDING is set.
        
        Prior to the fetch_headers rework and introduction of
        idata->max_msn (starting around e0376c75), cmd_handle_untagged() was
        looking directly at ctx->msgcount, which isn't fixed up until
        imap_expunge_mailbox().  At that time, more care had to be taken
        inbetween handling the EXPUNGE message and the actual expunge of the
        mailbox because of the discrepency between server state and mailbox
        context state.
        
        idata->max_msn is now decremented during the processing of EXPUNGE and
        VANISHED notices from the server, so reflect "current" state.  So,
        when we receive an EXISTS notice, we no longer need the checks for
        expunge state and can always set the NEWMAIL_PENDING flag.
        
        Additionally, fix imap_cmd_finish() to retain the IMAP_NEWMAIL_PENDING
        flag after handling an expunge.  The expunge does not grab new
        messages so dropping the flag would cause mutt to forget the new mail
        status until another EXISTS command.
        
        Since this is a stable branch fix, I'm leaving the either/or
        processing of expunge versus new mail in imap_cmd_finish().  However,
        I don't see why this has to be done in two calls.  I may rework that
        in master to process an expunge and then the new mail one after the
        other.

M	imap/command.c

2019-05-31 09:37:38 -0700  Kevin McCarthy  <kevin@8t8.us> (22c6df82)

        * Remove FORCE prerequisite on version.h.
        
        This is causing package build issues on OpenBSD because of a
        difference in make behavior.
        
        In GNU make, it always invoke the 'version.h' target, but then checks
        to see if version.h changed before retriggering targets with that
        prerequisite.  On OpenBSD, invoking the version.h target always
        retriggers targets with that prerequisite.
        
        This means that updating the version information now requires a 'make
        clean' or manual removal of version.h.

M	Makefile.am

2019-05-30 09:27:15 -0700  Kevin McCarthy  <kevin@8t8.us> (dd1601a1)

        * Minor documentation correction.

M	doc/manual.xml.head

2019-05-25 14:26:08 -0700  Kevin McCarthy  <kevin@8t8.us> (8ae8394f)

        * Disable state messages for attachments when forwarding.
        
        First, option(OPTVIEWATTACH) is only set for (s->flags & DISPLAY), so that
        check can be ignored.
        
        With that removed, all this is doing is printing
          [-- This is an attachment ...]
        with no context in the middle of non-display rendering for the case
        $honor_disposition is set with a handler.
        
        This makes no sense and I believe is a logic error.  Perhaps this
        never took effect, but with $forward_attachments it now affects
        forwarding in that case.

M	handler.c

2019-05-25 13:12:04 -0700  Kevin McCarthy  <kevin@8t8.us> (b00a06e5)

        * Have $forward_attachments look at attachment disposition.
        
        If $honor_disposition is set, an "attachment" disposition decodable
        attachment won't be included in the body, so we want it to be added as
        an attachment to the forwarded email.

M	send.c

2019-05-25 09:18:22 -0700  Kevin McCarthy  <kevin@8t8.us> (ee9983f0)

        * automatic post-release commit for mutt-1.12.0

M	ChangeLog
M	VERSION
M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/el.po
M	po/eo.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fi.po
M	po/fr.po
M	po/ga.po
M	po/gl.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/nl.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/sv.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po

2019-05-25 09:08:33 -0700  Kevin McCarthy  <kevin@8t8.us> (7d8db3e2)

        * Set UPDATING file release date for 1.12.0.

M	UPDATING

2019-05-20 12:32:37 -0700  Kevin McCarthy  <kevin@8t8.us> (8f739fbe)

        * Make mutt.texi and mutt.info generation continue on failure.
        
        Add warning messages, noting the appropriate packages to install.
        
        Note: mutt.texi won't normally be built unless configure finds one of
        the possible expected conversion program names.  Unfortunately, the
        canonical name, "docbook2texi", is used by both the docbook2x and
        docbook-utils projects.
        
        So on Arch, the canonical name is what we need, while on Debian and
        Red Hat/Fedora it isn't.  We search for the alternative names first,
        but it's still possible to invoke the wrong program if the needed
        package is not installed.

M	doc/Makefile.am

2019-05-20 06:59:18 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp> (be42d1a0)

        * Updated Japanese translation.

M	po/ja.po

2019-05-19 14:40:08 -0700  Kevin McCarthy  <kevin@8t8.us> (0e78280a)

        * Adjust docbook2texi program search.
        
        Look for db2x_docbook2texi first, because Fedora/Red Hat has their own
        version of "docbook2texi": db2x_docbook2texi.  I'm not sure what to do
        if they have don't have that installed but have docbook2texi
        installed, since this is a terrible name collision.
        
        Thanks to Moritz Barsnick for pointing out the different binary (and
        package) names on Fedora.

M	configure.ac

2019-05-19 10:14:09 -0700  Kevin McCarthy  <kevin@8t8.us> (7bef99de)

        * Update gpgme and gpg-error automake checks.
        
        Pull updated autoconf files from the GPGME 1.13.0 release and use
        those new macros.
        
        Add a call to AM_PATH_GPG_ERROR() and include $(GPG_ERROR_LIBS) in the
        libraries.
        
        Thanks to Eike Rathke for finding the build problem, and for his
        patch fixing the issue.  I opted for just grabbing the newest autoconf
        files from gpgme instead, but his fixed worked great too.

M	Makefile.am
M	configure.ac
A	m4/gpg-error.m4
M	m4/gpgme.m4

2019-05-15 09:09:25 -0700  Ivan Vilata i Balaguer  <ivan@selidor.net> (cc8a201f)

        * Updated Catalan translation.

M	po/ca.po

2019-05-15 13:05:09 +0200  Vincent Lefevre  <vincent@vinc17.net> (3b6f6b82)

        * Avoid undefined behavior on huge integer in a RFC 2231 header.
        
        The atoi() function was called on the index, which can potentially
        be huge in an invalid message and can yield undefined behavior. The
        mutt_atoi() function is now used for error detection.

M	rfc2231.c

2019-05-14 09:26:38 -0700  Kevin McCarthy  <kevin@8t8.us> (e8d057a9)

        * Add a "backticks in double quotes" example to the manual.

M	doc/manual.xml.head

2019-05-14 09:00:46 -0700  Kevin McCarthy  <kevin@8t8.us> (14bc2fc0)

        * Fix sample muttrc to use better quoting practices.
        
        Use single quotes in the password encryption example.
        
        For password decryption, put the backquotes inside double quotes to
        avoid special characters being re-interpreted.

M	contrib/sample.muttrc-starter

2019-05-13 12:53:58 +0200  Vincent Lefevre  <vincent@vinc17.net> (79563636)

        * fr.po: updated Project-Id-Version for the 1.12 release

M	po/fr.po

2019-05-12 13:59:16 -0700  Petr Pisar  <petr.pisar@atlas.cz> (f3eb92f0)

        * Updated Czech translation.

M	po/cs.po

2019-05-11 06:45:10 -0700  lilydjwg  <lilydjwg@gmail.com> (74447017)

        * Updated Simplified Chinese translation.

M	po/zh_CN.po

2019-05-10 13:18:46 -0700  Morten Bo Johansen  <mbj@mbjnet.dk> (831ea9c5)

        * Updated Danish translation.

M	po/da.po

2019-05-10 11:09:45 -0700  Vsevolod Volkov  <vvv@mutt.org.ua> (7e713495)

        * Updated Russian translation

M	po/ru.po

2019-05-10 11:07:41 -0700  Vsevolod Volkov  <vvv@mutt.org.ua> (33eeaeec)

        * Updated Ukrainian translation

M	po/uk.po

2019-05-10 14:03:48 +0000  Olaf Hering  <olaf@aepfle.de> (ce6e1db0)

        * Update de.po
        
        Unwrap lines, because it is 2019.
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2019-05-09 19:21:34 -0700  Kevin McCarthy  <kevin@8t8.us> (690c2945)

        * Check for NULL addresses in mutt_addrcmp().
        
        While looking into ticket #140, I noticed default_to() could pass a
        NULL env->from to mutt_addrcmp() if $reply_self is set and there is a
        reply_to address.

M	send.c

2019-05-09 13:48:44 -0700  Kevin McCarthy  <kevin@8t8.us> (f5687827)

        * Add note about %r for the pgp_list_*_command vars.
        
        In this case %r is the list of search strings.

M	init.h

2019-05-09 13:25:25 -0700  Kevin McCarthy  <kevin@8t8.us> (471fc11a)

        * Change sample muttrc path to match other manual references.
        
        The other parts of the manual refer to /usr/local/share/doc in their
        examples.  For consistency, change the starter muttrc and manual entry
        to do the same.
        
        In the future, we may wish to have a config variable instead, so users
        don't have to worry about system vs locally installed paths when
        sourcing the gpg.rc, for instance.

M	contrib/sample.muttrc-starter
M	doc/manual.xml.head

2019-05-08 19:28:21 -0700  Kevin McCarthy  <kevin@8t8.us> (80eac184)

        * Add sample starter muttrc to contrib.
        
        Add a mini-section with a link to the manual instead, under
        "Configuration".

M	contrib/Makefile.am
A	contrib/sample.muttrc-starter
M	doc/manual.xml.head

2019-05-07 15:59:40 -0700  Kevin McCarthy  <kevin@8t8.us> (988e06b2)

        * Fix typo in manual.

M	doc/manual.xml.head

2019-05-06 15:35:38 -0700  Kevin McCarthy  <kevin@8t8.us> (089d7cee)

        * Add a quick-starter config section to the manual.

M	doc/manual.xml.head

2019-05-06 12:37:04 -0700  Kevin McCarthy  <kevin@8t8.us> (2f8bc797)

        * Add a test for NULL parameter attribute too.
        
        Just to be sure we don't have any issues with the new continuation
        code.  The mutt_set_parameter() code doesn't actively prevent a null
        attribute.

M	sendlib.c

2019-05-05 13:26:59 -0700  Kevin McCarthy  <kevin@8t8.us> (a9cbf67c)

        * Add a manual section on OpenPGP and S/MIME configuration.
        
        Talk about the required config variables, GPGME and classic mode,
        agents, pinentry programs, and smime_keys.

M	doc/manual.xml.head

2019-05-02 12:31:29 -0700  Kevin McCarthy  <kevin@8t8.us> (6898c083)

        * Write rfc2231 parameter continuations for long parameters.
        
        Previously, Mutt would truncate long attachment filenames, to avoid
        writing an illegal length header line.  This commit is a followup to
        4dcb3ba1, where I reverted an incorrect fix for the problem.
        
        rfc2231_encode_string() now returns a list of continuations, with
        encoding and continuation number suffixes already appended to the
        attribute.  The function tries to keep the line length less than 78
        characters, but the code is a bit imprecise as a trade off for
        simplicity and readability.
        
        Modify mutt_write_mime_header() to loop through the continuations.

M	rfc2231.c
M	rfc2231.h
M	sendlib.c

2019-05-02 15:44:16 +0200  Vincent Lefevre  <vincent@vinc17.net> (861a7e47)

        * Missing word in UPDATING file.

M	UPDATING

2019-05-01 15:23:04 -0700  Kevin McCarthy  <kevin@8t8.us> (629e6e36)

        * Minor UPDATING file fix.

M	UPDATING

2019-05-01 06:52:37 -0700  Kevin McCarthy  <kevin@8t8.us> (01f1832f)

        * UPDATING file cleanups.
        
        Second quick pass.

M	UPDATING

2019-04-30 20:04:12 -0700  Kevin McCarthy  <kevin@8t8.us> (aa2985a3)

        * Update UPDATING file.
        
        This is a first pass to get something out quickly to testers.

M	UPDATING

2019-04-29 13:03:44 +0200  Vincent Lefevre  <vincent@vinc17.net> (98b3493a)

        * Updated French translation.

M	po/fr.po

2019-04-29 12:49:22 +0200  Vincent Lefevre  <vincent@vinc17.net> (c8eeb0d9)

        * Corrected minor errors in text related to $forward_attachments.

M	doc/manual.xml.head
M	send.c

2019-04-28 15:48:33 -0700  Kevin McCarthy  <kevin@8t8.us> (92d7c484)

        * Fix mailbox search to not recompile for a repeated search.
        
        The LastSearchExpn was being compared, but was never set to the
        expanded search value.  This was causing the search to be recompiled
        even if it were for the same previous expanded search string.

M	pattern.c

2019-04-28 14:59:13 -0700  Kevin McCarthy  <kevin@8t8.us> (9008e23b)

        * Note the other parts of generated message-ids in the manual.

M	doc/manual.xml.head

2019-04-25 19:41:04 -0700  Kevin McCarthy  <kevin@8t8.us> (24965a7d)

        * Add $forward_attachments quadoption for inline-forward mode.
        
        When set or answered yes, non text-decodable parts will be attached to
        the new message.  The default value is "ask-yes", because I believe
        this is something people will want to use, and should be made aware of
        the new possible behavior.
        
        The option presents a nice middle ground between previous
        inline-forwarding behavior (where all the non-text parts were
        dropped), and $mime_forward where the entire email was included as an
        attachment.
        
        This was previously difficult to achieve, but after the
        recv-attachment refactoring: (a19e5266^..faabd621)
        it became possible to use the ATTACH_CONTEXT and the recvattach.c
        helper mutt_generate_recvattach_list() to properly deal with nesting
        and multiple file-handles.

M	attach.h
M	doc/manual.xml.head
M	init.h
M	mutt.h
M	recvattach.c
M	send.c

2019-04-25 09:26:43 -0700  Kevin McCarthy  <kevin@8t8.us> (f706c235)

        * Add note about IMAP browser and trailing delimiters.
        
        This is the same behavior as the regular browser, but I think still
        deserves a quick mention.
        
        Thanks to Charles for pointing out this section of the manual and
        suggesting the addition.

M	doc/manual.xml.head

2019-04-23 19:06:11 -0700  Kevin McCarthy  <kevin@8t8.us> (6e90579f)

        * Add RECURSIVEMATCH LIST-EXTENDED selection option to query.
        
        LSUB is required to include mailboxes with subscribed children, but
        the just added "LIST (SUBSCRIBED)" by default does not do that.
        
        To match previous behavior, add RECURSIVEMATCH to make sure the
        children are included.  Fix the parser to trim off the CHILDINFO
        suffix in the response.
        
        Parse \NonExistent LIST attribute the same as \NoSelect.

M	imap/browse.c
M	imap/command.c

2019-04-23 22:15:31 +0100  Jeremy Sowden  <jeremy@azazel.net> (e1bc4339)

        * Enable the use of toggle-write from the pager.
        
        Signed-off-by: Jeremy Sowden <jeremy@azazel.net>

M	curs_main.c
M	functions.h

2019-04-24 03:04:05 +1000  Naveen Nathan  <mutt@t.lastninja.net> (82b759e8)

        * Improve hierarchy information accuracy in IMAP browser
        
        Currently the IMAP browser relies on LIST and LSUB (for listing subscribed
        folders) which may not provide the required hierarchy information.
        
        RFC3348 section 3 goes as far as stating that a client mustn't rely on LSUB
        for hierarchy information.
        
        This patch implements the LIST command extensions specified in RFC5258
        requiring that a server must respond with hierarchy information for
        listed folders (whether or not filtering on subscribed folders).

M	imap/browse.c
M	imap/command.c
M	imap/imap_private.h

2018-08-19 09:25:53 -0700  Kevin McCarthy  <kevin@8t8.us> (ba55d5df)

        * Add $imap_fetch_chunk_size to allow FETCHing new headers in chunks.
        
        For extremely large mailboxes, some implementations will time out just
        while fetching the new headers, because the client doesn't send any
        commands for 30 minutes while downloading the large number of headers.
        
        Rewrite imap_fetch_msn_seqset() to return chunks of size
        $imap_fetch_chunk_size.
        
        The change requires trusting the server will follow the RFC and not
        send an EXPUNGE during or between the FETCH chunks; otherwise we'll
        miss MSNs between the chunks because the shift.
        
        We could in theory continue to set "msn_begin = idata->max_msn + 1",
        but that makes the assumption there are no holes in the header cache
        that we are filling in during a chunk.  Personally I am dubious about
        "header cache holes", but the IMAP code has explicitly mentioned and
        handled them since prior to my involvement.
        
        Since the RFC forbids the interleaving EXPUNGE I believe it's safe
        enough to set "msn_begin = fetch_msn_end + 1" until proven otherwise.

M	globals.h
M	imap/message.c
M	init.h

2019-04-22 11:02:28 -0700  Kevin McCarthy  <kevin@8t8.us> (905c1fff)

        * Add note about $mailcap_path generation to the documentation.

M	init.h

2019-04-21 20:05:13 -0700  Kevin McCarthy  <kevin@8t8.us> (6975aad8)

        * Convert mutt_parse_adrlist() to use BUFFER for simple parsing.

M	parse.c

2019-04-21 19:45:49 -0700  Kevin McCarthy  <kevin@8t8.us> (caeed0c5)

        * Change mutt_parse_mailboxes() to use the path BUFFER argument.
        
        Instead of copying to a buf[] variable, since the various utility
        methods are now available to BUFFER too.

M	buffy.c

2019-04-18 16:30:38 +0100  Julian Gilbey  <julian-git@d-and-j.net> (9351dd01)

        * Handle the same secret key appearing in multiple public keyrings
        
        Allow for S/MIME keys and the possibility of missing subkeys

M	crypt-gpgme.c

2019-04-21 11:00:23 -0700  Kevin McCarthy  <kevin@8t8.us> (9da6bde1)

        * Fix unistring library configure test.
        
        The "action-if-found" argument of AC_SEARCH_LIBS is run even if the
        result is "none required" (i.e. the test function is already in LIBS,
        in this case -lidn2).
        
        This was causing "-lunistring" to be appended on a system without the
        library installed, generating a build error.  Fix the test to not
        append the library for the "none required" case.
        
        Thanks to Fabrice Fontaine for reporting this issue and helping me
        test the fix.

M	configure.ac

2019-04-20 15:43:59 -0700  Kevin McCarthy  <kevin@8t8.us> (4dcb3ba1)

        * Revert "Fix truncation of long filenames in attachments."
        
        This reverts commit f476d0aecd6f88db5291427fced21a8e834ca181.
        
        The commit allowed the generation of illegal length header lines.  A
        correct fix needs to implement parameter continuations.
        
        I will work on that, but in case I don't get it in before 1.12,
        preserve the hard truncation.

M	sendlib.c

2019-04-20 13:00:28 -0700  Kevin McCarthy  <kevin@8t8.us> (9865e90e)

        * Convert remailer to use BUFFER for Mixmaster invocation.

M	remailer.c

2019-04-20 12:34:35 -0700  Kevin McCarthy  <kevin@8t8.us> (20bedeac)

        * Convert compress to use mutt_buffer_quote_filename().
        
        Because the compress expandos operate differently than the rest of
        mutt, requiring manual outer quoting, add a parameter to the function
        to toggle outer quoting off.
        
        Remove the now unused escape_path() function.

M	compress.c
M	muttlib.c
M	protos.h

2019-04-20 11:11:07 -0700  Kevin McCarthy  <kevin@8t8.us> (bc776fad)

        * Update po headers.
        
        Add missing Language header.
        
        Make the Project-Id-Version header consistent.

M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/de.po
M	po/el.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fi.po
M	po/ga.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po

2019-04-19 16:06:43 -0700  Kevin McCarthy  <kevin@8t8.us> (3eb82b30)

        * Increase mutt_pgpring path size to silence warning.
        
        This is an independent binary, and doesn't have access to the BUFFER
        functions.  The binary is used by very few (if any) people at this
        point, so just make the minimum fix to silence the warning.

M	pgppubring.c

2019-04-19 15:04:43 -0700  Kevin McCarthy  <kevin@8t8.us> (44037a53)

        * Convert pager help string to use BUFFER.
        
        Remove the awkward string truncation warnings, and remove helpstr and
        tmphelp char arrays from the stack.
        
        Because the pager is fairly long lived, allocate the helpstr instead
        of using the pool.

M	pager.c

2019-04-19 14:25:05 -0700  Kevin McCarthy  <kevin@8t8.us> (14a68f8f)

        * Convert certficate prompts to use menu dialog helper and BUFFER.

M	mutt_ssl.c
M	mutt_ssl_gnutls.c

2019-04-19 13:14:54 -0700  Kevin McCarthy  <kevin@8t8.us> (04257603)

        * Add menu dialog helper to add rows.
        
        Remove the manual max calculation and dialog row allocation.
        
        Add a NONULL check because the helper uses safe_strdup() to add a row.

M	menu.c
M	mutt_menu.h

2019-04-18 18:42:57 -0700  Kevin McCarthy  <kevin@8t8.us> (16818f75)

        * Convert migrated lib.c functions to use BUFFER.
        
        Fix mutt_getcwd() to return NULL on failure.
        
        Change mutt_rmtree(), mutt_mkwrapdir(), safe_open(), and
        safe_symlink() to use BUFFER so they don't have filename length
        limitations.

M	muttlib.c
M	protos.h

2019-04-18 15:35:22 -0700  Kevin McCarthy  <kevin@8t8.us> (92a5f7bb)

        * Relocate lib.c functions to muttlib.c to enable BUFFER use.
        
        Relocate safe_symlink(), safe_open(), mutt_rmtree() and their
        dependent functions.
        
        This rearrangement is a bit awkward.  Another approach for the future
        might be to convert lib.c into a muttlib.c aware file, and just copy
        the functions pgppubring.c uses inside itself.

M	lib.c
M	lib.h
M	muttlib.c
M	protos.h

2019-04-17 16:07:05 -0700  Kevin McCarthy  <kevin@8t8.us> (098272e0)

        * Increase prompt size to remove warning.

M	commands.c

2019-04-16 20:22:08 -0700  Kevin McCarthy  <kevin@8t8.us> (3c6bdc90)

        * Convert change folder operations to use BUFFER.
        
        Store the folder name inside a BUFFER and use the various BUFFER
        enhanced functions.

M	curs_main.c

2019-04-16 19:25:36 -0700  Kevin McCarthy  <kevin@8t8.us> (70ef4e9e)

        * Add mutt_buffer_enter_fname().

M	curs_lib.c
M	protos.h

2019-04-16 18:11:35 -0700  Kevin McCarthy  <kevin@8t8.us> (940bdaa1)

        * Convert other users of BUFFY->pathbuf to use BUFFERS.
        
        A few functions in browser.c, buffy.c, and monitor.c were using
        BUFFY->pathbuf but were potentially truncating via fixed size buffers.
        Convert those to use BUFFERS too.
        
        buffy_get() was creating epath and expanding it, apparently to match
        against expanded BUFFY list entries, was wasn't using the epath.  I
        believe this is a bug, and have switched the comparison to epath.

M	browser.c
M	buffy.c
M	monitor.c

2019-04-16 13:41:10 -0700  Kevin McCarthy  <kevin@8t8.us> (797d16a3)

        * Convert BUFFER->path to a BUFFER.
        
        Rename to BUFFER->pathbuf to make it clear the field is a BUFFER, and
        to make sure to catch and review all usages.
        
        There are still uses of pathbuf that are truncating and need to be
        fixed, for example in browser.c and buffy.c.
        
        Fix up sidebar usage in one place, that was pointing inside the
        BUFFY->path with a char *.  At the same time, change their "short
        folder" computation to also use a BUFFER.

M	browser.c
M	buffy.c
M	buffy.h
M	imap/browse.c
M	imap/command.c
M	imap/imap.c
M	mh.c
M	sidebar.c

2019-04-16 12:23:42 -0700  Kevin McCarthy  <kevin@8t8.us> (6317a303)

        * Change BUFFY->realpath to be const char *.
        
        BUFFY->path is a fixed array (which will be converted to a BUFFER in
        the next commit).  This is needed to call mutt_expand_path().
        
        However, BUFFY->realpath has no such need, and so it is a bit
        wasteful (not to mention not big enough) to store as such.

M	buffy.c
M	buffy.h

2019-04-15 18:43:49 -0700  Kevin McCarthy  <kevin@8t8.us> (4084bda4)

        * Add a note about $prompt_after to the $pager documentation.

M	init.h

2019-04-14 15:38:15 -0700  Kevin McCarthy  <kevin@8t8.us> (e8c8d559)

        * Rename mutt_buffer_rfc1524_expand_command()
        
        Remove buffer prefix now that all callers are converted.

M	attach.c
M	handler.c
M	rfc1524.c
M	rfc1524.h

2019-04-14 13:34:37 -0700  Kevin McCarthy  <kevin@8t8.us> (d6e373b7)

        * Convert rfc1524_expand_command() implementation to use BUFFER.
        
        Add mutt_buffer_sanitize_filename() helper.
        
        Add a few end-of-buffer checks while iterating over command.
        
        Convert the parameter name, paramater value, and types to use BUFFER
        instead of fixed size strings.

M	muttlib.c
M	protos.h
M	rfc1524.c

2019-04-14 11:38:49 -0700  Kevin McCarthy  <kevin@8t8.us> (574395d2)

        * Convert last rfc1524_expand_command caller to use a BUFFER.

M	rfc1524.c

2019-04-14 10:46:36 -0700  Kevin McCarthy  <kevin@8t8.us> (205ac654)

        * Rename mutt_buffer_adv_mktemp().
        
        Remove buffer prefix since all callers now use this version.

M	attach.c
M	muttlib.c
M	postpone.c
M	protos.h
M	rfc1524.c

2019-04-14 09:20:46 -0700  Kevin McCarthy  <kevin@8t8.us> (052b7c24)

        * Convert remaining mutt_adv_mktemp() calls to use buffer version.

M	muttlib.c
M	postpone.c

2019-04-14 10:22:12 +0200  Fabrice Fontaine  <fontaine.fabrice@gmail.com> (c53b3669)

        * configure.ac: fix static build with idn2 and unistring
        
        Commit 78db40f25c6479b14da5a73adf7207bfbec5ccc5 did not fix static build
        failure
        
        AC_SEARCH_LIBS prepends the library to LIBS as a result -lunistring is
        added before -lidn2. To fix static build, we must set -lunistring after
        -lidn2
        
        Fixes:
         - http://autobuild.buildroot.org/results/c9544b4f1a0252e260a2ed19218fa950f4dc2d2d
        
        Signed-off-by: Fabrice Fontaine <fontaine.fabrice@gmail.com>

M	configure.ac

2019-04-10 19:44:46 -0400  Aaron Schrab  <aaron+mutt@schrab.com> (a7e1572d)

        * Generate version string during make not configure
        
        Switch to generating the version string during make process rather than
        at configure time.  This makes it easier to keep the detailed version
        string accurate when doing development which doesn't require that the
        configure script be rerun.

M	.gitignore
M	Makefile.am
M	commands.c
M	compose.c
M	configure.ac
M	dotlock.c
M	init.c
M	muttlib.c
M	sendlib.c
M	status.c

2019-04-09 18:54:20 -0700  Kevin McCarthy  <kevin@8t8.us> (03004467)

        * Rename to mutt_rfc1524_expand_filename().
        
        Now that all callers pass a BUFFER, the buffer prefix is not needed to
        distinguish the parameter.

M	attach.c
M	handler.c
M	rfc1524.c
M	rfc1524.h

2019-04-09 17:52:14 -0700  Kevin McCarthy  <kevin@8t8.us> (47d318be)

        * Convert mutt_expand_fmt() and rfc1524_expand_filename() to BUFFER.
        
        These two functions were tied together and so are converted at the
        same time.
        
        Note that rfc1524_expand_filename() had an off-by-one error for the
        left hand size of the name template.  It was only copying i-1 instead
        of the i characters before %s.

M	muttlib.c
M	pattern.c
M	protos.h
M	rfc1524.c
M	rfc1524.h

2019-04-09 15:20:51 -0700  Kevin McCarthy  <kevin@8t8.us> (44b89779)

        * Convert mutt_expand_file_fmt() to accept BUFFER dest parameter.
        
        mutt_expand_fmt() will be converted in the next commit, at the same
        time as rfc1524_expand_filename().

M	curs_lib.c
M	muttlib.c
M	protos.h
M	query.c
M	sendlib.c

2019-04-09 14:04:36 -0700  Kevin McCarthy  <kevin@8t8.us> (78ff38d6)

        * Add mutt_buffer_quote_filename().
        
        Convert almost all the callers to use the new function.  alias.c usage
        is a bit involved, so leave that for now.
        
        Remove unneeded index while converting from mutt_quote_filename().

M	muttlib.c
M	mx.c
M	pgpinvoke.c
M	protos.h
M	remailer.c
M	rfc1524.c
M	smime.c

2019-04-08 19:51:01 -0700  Kevin McCarthy  <kevin@8t8.us> (5d491c1b)

        * Convert mutt_check_simple() to accept a BUFFER parameter.

M	color.c
M	hook.c
M	pattern.c
M	protos.h

2019-04-08 09:51:34 -0700  Kevin McCarthy  <kevin@8t8.us> (8aad07e5)

        * Change autoview_handler() to use BUFFER.
        
        This will allow the full conversion of rfc1524_expand_filename(), and
        thereafter mutt_adv_mktemp() too.

M	handler.c

2019-04-08 10:01:16 -0700  Kevin McCarthy  <kevin@8t8.us> (b51cbf27)

        * Fix undeclared function warning for mutt_buffy().
        
        Not sure why gcc didn't give me the warning, but add buffy.h to
        pager.c.
        
        status.c already includes mx.h (which includes buffy.h), but add it
        explicitly in any case.

M	pager.c
M	status.c

2019-04-07 18:49:07 -0700  Kevin McCarthy  <kevin@8t8.us> (46b4c0aa)

        * Change main() folder to be BUFFER.
        
        This affects the -f, -y, and -Z options directly.

M	main.c

2019-04-07 16:02:02 -0700  Kevin McCarthy  <kevin@8t8.us> (bcda4240)

        * Create mutt_buffer_buffy() buffer function.
        
        Relocate some of the buffy function declarations to buffy.h while
        adding the new declaration.

M	buffy.c
M	buffy.h
M	enter.c
M	protos.h

2019-04-07 15:56:07 -0700  Kevin McCarthy  <kevin@8t8.us> (a69a853f)

        * Fix mutt_buffer_select_file() macro to call correct function.

M	protos.h

2019-04-07 15:55:16 -0700  Kevin McCarthy  <kevin@8t8.us> (a2a6cad6)

        * Change mutt_folder_hook() parameter to const char *.

M	hook.c
M	protos.h

2019-04-03 14:07:14 -0700  Kevin McCarthy  <kevin@8t8.us> (74226f36)

        * Add a note about spam and the header cache in the manual.

M	doc/manual.xml.head

2019-04-02 12:43:55 -0700  Kevin McCarthy  <kevin@8t8.us> (270a0523)

        * Restore active flag in imap_fetch_message() on error.

M	imap/message.c

2019-04-02 10:58:34 -0700  Kevin McCarthy  <kevin@8t8.us> (f4e79297)

        * Remove h->active hack in imap_sync_message_for_copy().
        
        Commit 285baf9a improved FLAGS parsing such that "spurious" FLAGS
        updates won't cause a mailbox reopen.
        
        Remove the h->active=0 hack because it isn't needed now and makes
        reasoning about deletes, purges, and message set generation more
        difficult.

M	imap/imap.c

2019-03-29 15:29:27 -0700  Kevin McCarthy  <kevin@8t8.us> (8fa442d6)

        * Merge branch 'stable'

2019-03-29 15:21:02 -0700  Kevin McCarthy  <kevin@8t8.us> (70805eef)

        * Change IMAP to try oauthbearer first.
        
        $imap_authenticators says if it is unset, the authenticators from
        most-secure to secure will be tried.  It makes sense for oauthbearer
        to come first, like with POP.
        
        To make this change backwards compatible, it depends on the previous
        commit, which changed imap_auth_oauth() to return IMAP_AUTH_UNAVAIL if
        oauth is not configured or explictily requested.

M	imap/auth.c

2019-03-24 09:45:31 +0800  Kevin McCarthy  <kevin@8t8.us> (728f1fa8)

        * Fail oauth quietly if it was not configured.
        
        Don't report an error unless they explicitly put "oauthbearer" in the
        authenticator list or configured the oauth_refresh_command.

M	imap/auth_oauth.c
M	pop_auth.c

2019-03-21 18:42:38 +0800  Kevin McCarthy  <kevin@8t8.us> (aae3e555)

        * Fix typo in documentation.

M	doc/manual.xml.head

2019-03-21 18:35:34 +0800  Kevin McCarthy  <kevin@8t8.us> (912c06d6)

        * Add documentation on thread tree characters and config vars.

M	doc/manual.xml.head

2019-03-12 14:25:42 +0800  Kevin McCarthy  <kevin@8t8.us> (515287b9)

        * browser.c: Convert f parameter to BUFFER.

M	browser.c
M	protos.h

2019-03-12 13:56:51 +0800  Kevin McCarthy  <kevin@8t8.us> (011b108a)

        * browser.c: Convert other browser local variables to BUFFER.

M	browser.c
M	muttlib.c
M	protos.h

2019-03-12 13:26:37 +0800  Kevin McCarthy  <kevin@8t8.us> (7db1ad91)

        * browser.c: Convert buf to BUFFER.

M	browser.c

2019-03-12 12:46:56 +0800  Kevin McCarthy  <kevin@8t8.us> (e0622c4d)

        * browser.c: Convert prefix to BUFFER.

M	browser.c

2019-03-11 19:08:52 +0800  Kevin McCarthy  <kevin@8t8.us> (2af2e7be)

        * browser.c: Convert LastDir and LastDirBackup to BUFFER.
        
        Add a cleanup method call to main to free the BUFFERS.
        
        Add mutt_buffer_concat_path() buffer helper function.

M	browser.c
M	imap/browse.c
M	imap/imap.h
M	main.c
M	muttlib.c
M	protos.h

2019-03-11 17:38:58 +0800  Kevin McCarthy  <kevin@8t8.us> (3fab5d58)

        * Add mutt_getcwd().

M	muttlib.c
M	protos.h

2019-03-11 17:38:18 +0800  Kevin McCarthy  <kevin@8t8.us> (72b2c327)

        * Add mutt_buffer_strcpy_n().

M	buffer.c
M	buffer.h

2019-03-11 17:04:28 +0800  Kevin McCarthy  <kevin@8t8.us> (48cdde47)

        * Fixes to mutt_buffer_expand_path().
        
        Create _mutt_buffer_expand_path() with the rx argument.
        
        Use mutt_b2s() instead of derefencing buffer->data in
        mutt_buffer_expand_path().  The p->data uses were safe, but the
        src->data was potentially not.

M	muttlib.c
M	protos.h

2019-03-13 13:47:18 +0800  Kevin McCarthy  <kevin@8t8.us> (2404d09e)

        * Merge branch 'stable'

2019-03-13 13:41:00 +0800  Kevin McCarthy  <kevin@8t8.us> (207b9306)

        * automatic post-release commit for mutt-1.11.4

M	ChangeLog
M	UPDATING
M	VERSION

2019-03-13 12:39:13 +0800  Kevin McCarthy  <kevin@8t8.us> (66bdb753)

        * Merge branch 'stable'

2019-03-10 13:27:11 +0800  Kevin McCarthy  <kevin@8t8.us> (af3859f5)

        * Add mutt_buffer_expand_path().
        
        TODO: '@' expansion using mutt_default_save() is still using a fixed size
        string parameter.
        
        Convert imap_expand_path() and mutt_rx_sanitize_string() to use
        BUFFERS instead.
        
        Add url_ciss_tobuffer().

M	imap/imap.h
M	imap/util.c
M	muttlib.c
M	protos.h
M	url.c
M	url.h

2019-03-10 20:05:12 +0800  Kevin McCarthy  <kevin@8t8.us> (716c0222)

        * Fix imap_pretty_mailbox() call to url_ciss_tostring().
        
        Pass the correct buffer size through, so the strfcpy added in the next
        commit doesn't write past the end of the buffer.

M	imap/imap.h
M	imap/util.c
M	muttlib.c

2019-03-10 13:35:26 +0800  Kevin McCarthy  <kevin@8t8.us> (d8d9c505)

        * Move mutt_rx_sanitize_string() to muttlib.c
        
        So it can be converted to use BUFFER.

M	lib.c
M	lib.h
M	muttlib.c
M	protos.h

2019-03-10 10:03:52 +0800  Kevin McCarthy  <kevin@8t8.us> (34f77eab)

        * Improve imap uid seqset hcache buffer usage.
        
        mutt_buffer_increase_size() terminates the buffer, so there is no need
        to explicitly check for an empty buffer after the
        imap_msn_index_to_uid_seqset() call.

M	imap/util.c

2019-03-10 09:58:07 +0800  Kevin McCarthy  <kevin@8t8.us> (5be5ad46)

        * Minor buffer handling code cleanup.
        
        Use mutt_buffer_len() and mutt_buffer_clear() to make the code a bit
        clearer.  There are still places in the code that manipulate the
        buffers directly (pattern.c, for example), but that doesn't mean we
        shouldn't abstract the buffer where we can.
        
        Add comments in a couple places where unusual buffer manipulation is
        occurring.

M	base64.c
M	imap/command.c
M	imap/imap.c
M	imap/message.c
M	init.c
M	muttlib.c
M	parse.c

2019-03-09 19:12:19 +0800  Kevin McCarthy  <kevin@8t8.us> (e5483434)

        * Add "Message Composition Flow" section to manual.
        
        This provides a brief overview of the steps during message
        composition, and shows when the various hooks are executed.

M	doc/manual.xml.head

2019-03-09 15:03:00 +0800  Kevin McCarthy  <kevin@8t8.us> (6fe1f31e)

        * Expand a couple of the comments about charset.
        
        Make it clearer what BODY->charset is used for, and why we are
        checking for !noconv during mailcap charset parameter expansion.

M	mutt.h
M	rfc1524.c

2019-03-08 19:48:41 +0800  Kevin McCarthy  <kevin@8t8.us> (09d4f384)

        * Check noconv for mailcap %{charset} send mode expansion.
        
        Improve the previous commit by checking to make sure a->noconv also
        isn't set.  If noconv is set, we ignore any value a->charset might
        have picked up during previous encoding checks.

M	rfc1524.c

2019-03-08 18:06:52 +0800  Kevin McCarthy  <kevin@8t8.us> (be790372)

        * Fix mailcap %{charset} expansion in send mode.
        
        Use the current charset of the file for the parameter, since the file
        hasn't been converted yet.

M	rfc1524.c

2019-03-04 15:05:50 +0800  Kevin McCarthy  <kevin@8t8.us> (2366e3d6)

        * Use gpgme recipient strings for encryption when available.
        
        For gpgme >= 1.11.0, use gpgme_op_encrypt_ext() and
        gpgme_op_encrypt_sign_ext() to specify recipients as a string.
        
        This allows '!' to specify forcing a subkey, as is the case in classic
        gpg and from the command line.
        
        Remove the '!' "force valid" usage for the newer version.

M	crypt-gpgme.c

2019-02-22 13:50:52 -0800  Kevin McCarthy  <kevin@8t8.us> (67bdfa31)

        * Add $include_encrypted config to prevent reply-decryption attack.
        
        @jensvoid, in cooperation with Ruhr-Uni Bochum and FH Münster,
        Germany, reported a possible "Oracle decryption" attack on various
        mail clients.  An attacker could include previously encrypted contents
        they obtained access to, and include it in a message.  Replying
        without trimming would include the decrypted contents.
        
        This attack relies on several "ifs", and is more dangerous for clients
        that compose HTML mail.  However, it is still an issue that an
        unwary/busy Mutt user could fall for.
        
        Add a new config $include_encrytped, defaulting off, to reduce the
        possibility of the user being unaware of previously encrypted parts in
        the reply.  Only the main initial encrypted part will be included in
        the reply.

M	handler.c
M	init.h
M	mutt.h

2019-02-23 12:12:36 -0800  Kevin McCarthy  <kevin@8t8.us> (128baa52)

        * Add additional search names for docbook texi conversion program.
        
        On Arch, it is called docbook2text

M	configure.ac
M	doc/Makefile.am

2019-02-21 16:37:05 +0300  Andrey Skvortsov  <andrej.skvortzov@gmail.com> (f476d0ae)

        * Fix truncation of long filenames in attachments.
        
        Currently mutt truncates long filenames in attachments and doesn't
        take into account UTF-8 character size. If filename is truncated in
        the middle of multi-byte UTF-8 character (last character is bad),
        then some mail clients assume whole attachment name bad and don't
        display its name (use 'Noname' instead).
        
        Filenames can be up to 255 *characters* long depending on used
        filesystem. ReiserFS, NFTS, FAT, APFS and some other supports up to
        255 characters.
        In the worst case 255 characters in UTF-8 will take 255*4 = 1020
        bytes. Every non-ascii byte in the filename will be encoded using 3
        bytes (for example, %8D).
        So 'Content-Disposition' will take in the worst case up to: 1020*3 =
        3060 bytes. Therefore even LONG_STRING (1024) isn't enough.

M	sendlib.c

2019-02-12 19:04:28 -0800  Kevin McCarthy  <kevin@8t8.us> (b404e7fb)

        * Check the base64 decoding retval in auth_gss.
        
        Abort if the value is not decodable.

M	imap/auth_gss.c

2019-02-12 16:41:07 -0800  Kevin McCarthy  <kevin@8t8.us> (3dd3eee4)

        * Change auth_gss to to use buffers and the buffer pool.
        
        Ticket #100 revealed that even a bufsize of 8192 isn't guaranteed to
        be big enough.  Convert those large buffers to use the buffer pool
        instead.

M	imap/auth_gss.c

2019-02-12 15:58:13 -0800  Kevin McCarthy  <kevin@8t8.us> (7689f11d)

        * Add mutt_buffer helpers for base64 conversion.
        
        Add mutt_buffer_from_base64() mutt_buffer_to_base64() to help with
        transitioning to buffers.

M	base64.c
M	protos.h

2019-02-12 15:48:09 -0800  Kevin McCarthy  <kevin@8t8.us> (912e02a3)

        * Add mutt_buffer_len() helper.

M	buffer.c
M	buffer.h

2019-02-07 23:48:09 +0100  Vincent Lefevre  <vincent@vinc17.net> (c483d3c3)

        * Updated French translation.

M	po/fr.po

2019-02-06 14:29:42 -0800  Kevin McCarthy  <kevin@8t8.us> (d97bbddf)

        * Create <group-chat-reply> function.
        
        This function differs from <group-reply> only in that it preserves To
        recipients in the original email as To recipients in the reply.
        
        The merits of this function aren't without controversy; therefore it
        is left unbound by default.  Those who care about such things are free
        to bind it.
        
        Combine reply operation handlers in the pager and curs_main, since the
        code was the same with the exception of the flags used.

M	OPS
M	curs_main.c
M	doc/manual.xml.head
M	functions.h
M	mutt.h
M	pager.c
M	recvattach.c
M	send.c

2019-02-06 13:58:42 +0100  Vincent Lefevre  <vincent@vinc17.net> (d79cb6b7)

        * Updated French translation.

M	po/fr.po

2019-02-06 13:53:30 +0100  Vincent Lefevre  <vincent@vinc17.net> (f03088ea)

        * corrected typo from dad0eb255fddbef5f14772b85b32acf6f2ca7996

M	OPS

2019-02-02 15:35:34 -0800  Kevin McCarthy  <kevin@8t8.us> (140b7ae3)

        * Add an error message for <descend-directory>.
        
        Don't allow the operation on a non-directory.  Print a message
        indicating it's not a directory.

M	browser.c

2019-02-02 15:03:03 -0800  Kevin McCarthy  <kevin@8t8.us> (8a763976)

        * Separate out op variable in the browser.
        
        The i variable is used in several places and scopes as a temporary
        index variable, but is also used to record the current operation.
        Separate them out to make the code less confusing.

M	browser.c

2019-02-01 12:52:58 -0800  Kevin McCarthy  <kevin@8t8.us> (c66d021f)

        * Merge branch 'stable'

2019-01-31 17:57:57 -0600  Corey Minyard  <cminyard@mvista.com> (dad0eb25)

        * Allow descending into maildir and mh directories in file browser
        
        Some (maybe most) IMAP mail systems allow folders to be nested inside
        folders, so you can have, say, an Inbox with more folders inside it.
        However, in the file browser, mutt will only open a maildir/mh
        directory as a mailbox, there is no way to get to the child mailboxes.
        
        This change adds a function <descend-directory> that forces mutt to
        descend into the directory.  It is unbound by default.
        
        Signed-off-by: Corey Minyard <minyard@acm.org>

M	OPS
M	browser.c
M	doc/manual.xml.head
M	functions.h

2019-01-24 18:51:55 -0800  Kevin McCarthy  <kevin@8t8.us> (f0be14c2)

        * Merge branch 'stable'

2019-01-24 15:19:36 -0800  Kevin McCarthy  <kevin@8t8.us> (bd7b8f0d)

        * Simplify nested smime handling in the attachment menu.
        
        Since changeset 2fd6f99b allows nested encryption handling, there is
        no need to deal with the nesting directly.  Instead, just recursive as
        with other nested handling.

M	recvattach.c

2019-01-24 15:07:36 -0800  Kevin McCarthy  <kevin@8t8.us> (160d4503)

        * Merge branch 'stable'

2019-01-21 19:45:28 -0800  Kevin McCarthy  <kevin@8t8.us> (be40128c)

        * Merge branch 'stable'

2019-01-21 15:34:46 -0800  Kevin McCarthy  <kevin@8t8.us> (f4f9e5bb)

        * Merge branch 'stable'

2019-01-21 14:16:13 -0800  Kevin McCarthy  <kevin@8t8.us> (143ea851)

        * Remove mutt_socket_read().
        
        It is not used anywhere in the code.
        
        Additionally, it does not interact correctly with
        mutt_socket_readchar() and mutt_socket_readln_d(), which use an
        internal input buffer: conn->inbuf.
        
        If reading a specific chunksize is needed in future, the function can
        be easily recreated to use the inbuf.

M	mutt_socket.c
M	mutt_socket.h

2019-01-21 12:11:27 -0800  Kevin McCarthy  <kevin@8t8.us> (44b6e55f)

        * Merge branch 'stable'

2019-01-21 12:02:54 -0800  Kevin McCarthy  <kevin@8t8.us> (2c57d68a)

        * Merge branch 'stable'

2019-01-19 15:23:32 -0800  Kevin McCarthy  <kevin@8t8.us> (c764b995)

        * Change $pgp_use_gpg_agent to default set.
        
        GnuPG 2.1.0, released in 2014-11-06, automatically spawns an agent.
        After 4+ years, it has reached wide enough usage to merit changing the
        default.

M	init.h

2019-01-18 21:01:09 -0800  Kevin McCarthy  <kevin@8t8.us> (3119b5a1)

        * Merge branch 'stable'

2019-01-18 19:46:33 -0800  Kevin McCarthy  <kevin@8t8.us> (d2f64a54)

        * Merge branch 'stable'

2019-01-18 13:59:05 +0100  Vincent Lefevre  <vincent@vinc17.net> (4e6744dc)

        * Updated date of the mutt(1) man page.

M	doc/mutt.man

2019-01-18 13:57:20 +0100  Vincent Lefevre  <vincent@vinc17.net> (564fd57b)

        * Updated date of the muttrc(5) man page.

M	doc/muttrc.man.head

2019-01-15 01:17:02 -0500  Muh Muhten  <muh.muhten@gmail.com> (8117a33e)

        * Add attributes support on color declarations
        
        color now accepts zero or more attributes words before the foreground.
        
        Also more or less resolves the issue that setting the color of an object
        which defaults to underline/reverse is irreversible.

M	color.c
M	doc/manual.xml.head
M	doc/muttrc.man.head

2019-01-10 09:45:13 -0800  Kevin McCarthy  <kevin@8t8.us> (42e2d07a)

        * Merge branch 'stable'

2019-01-08 13:10:06 -0800  Kevin McCarthy  <kevin@8t8.us> (0613422e)

        * Merge branch 'stable'

2019-01-08 21:18:38 +0200  Stefan Strogin  <stefan.strogin@gmail.com> (9c9bea5e)

        * Fix compilation with LibreSSL <2.7.0. (closes #112)

M	mutt_ssl.c

2019-01-07 17:49:27 -0800  Kevin McCarthy  <kevin@8t8.us> (9920de1b)

        * Merge branch 'stable'

2019-01-05 22:54:26 +0100  Eike Rathke  <erack@erack.de> (9b965fac)

        * Fix mkdtemp() random signedness
        
        time_t return of time() may be signed 32-bit and in that case
        probably will roll over in the year 2038 and yield a negative
        value; signedness was propagated in the XOR operation to the
        'value' and then 'v' variables. The 'v % 62' operation then would
        had resulted in a negative value and LETTER[v%62] would had
        accessed an arbitrary data location.
        
        The same could had happened if the static long 'value' variable
        after a very long run time contained a sufficiently large value to
        which the time^pid value added resulted in a wrap / roll-over to a
        negative value.
        
        Using unsigned long types for 'value' and 'v' and casting time_t
        to unsigned long cures all this.

M	mkdtemp.c

2019-01-05 13:29:11 -0800  Kevin McCarthy  <kevin@8t8.us> (9a3b8a7c)

        * Merge branch 'stable'

2019-01-05 12:37:16 -0800  Kevin McCarthy  <kevin@8t8.us> (177f12ac)

        * Fix a few indenting issues.
        
        These are mostly the result of making the formatting changes commit
        after the indent changes commit.

M	attach.c
M	browser.c
M	mime.h
M	pager.c
M	pgp.c

2019-01-04 18:45:01 -0800  Kevin McCarthy  <kevin@8t8.us> (efa3afb5)

        * Clean up formatting.
        
        Add spaces after if, else, while, for, switch.
        
        Unify the brace placement style.  The vast majority of the code uses
        Allman style so convert the relatively few K&R braces over.

M	alias.c
M	attach.c
M	browser.c
M	buffy.c
M	charset.c
M	color.c
M	commands.c
M	compose.c
M	copy.c
M	crypt-gpgme.c
M	crypt.c
M	curs_lib.c
M	curs_main.c
M	doc/makedoc.c
M	dotlock.c
M	edit.c
M	enter.c
M	gnupgparse.c
M	handler.c
M	hcache.c
M	hdrline.c
M	headers.c
M	help.c
M	history.c
M	hook.c
M	imap/auth_sasl.c
M	imap/browse.c
M	imap/command.c
M	imap/imap.c
M	imap/message.c
M	imap/util.c
M	init.c
M	keymap.c
M	lib.c
M	lib.h
M	main.c
M	mbox.c
M	mh.c
M	mutt_sasl.c
M	mutt_socket.c
M	mutt_ssl.c
M	mutt_ssl_gnutls.c
M	muttlib.c
M	mx.c
M	pager.c
M	parse.c
M	pattern.c
M	pgp.c
M	pgpewrap.c
M	pgppubring.c
M	pop_lib.c
M	postpone.c
M	query.c
M	recvattach.c
M	rfc1524.c
M	rfc3676.c
M	score.c
M	send.c
M	sendlib.c
M	smime.c
M	smtp.c
M	snprintf.c
M	url.c
M	wcwidth.c

2019-01-03 19:58:18 -0800  Kevin McCarthy  <kevin@8t8.us> (248c2ee8)

        * Clean up code indentation.
        
        These are mostly automated changes corresponding to the emacs
        settings:
          (c-set-style "linux")
          (setq c-basic-offset 2)
          (c-set-offset 'case-label '+)
        
        Most of the code follows the convention:
          (add-to-list 'c-cleanup-list 'space-before-funcall)
        but this is not enforced by this indentation cleanup.
        
        Also, I personally dislike tabs, so I have:
          (setq-default indent-tabs-mode nil)
        in my own configuration.  However I have no desire to change every line
        just for that effect.  So this cleanup does nothing about the mix issue.
        
        Some of the secondary files (e.g. regex.c) have been skipped.
        
        I've also skipped crypt-gpgme.c, because I need to think about that
        file.  Werner Koch and the GnuPG team contributed most it, and it
        follows the Gnu indentation settings.  It should probably be made
        uniform with Mutt, but I don't want to discourage future GnuPG
        contribution to the file.
        
        I manually reverted a few unsightly cleanups, and added a few tweeks
        when I saw things that could be improved.

M	account.c
M	addrbook.c
M	alias.c
M	attach.c
M	bcache.c
M	browser.c
M	buffer.c
M	buffy.c
M	color.c
M	commands.c
M	complete.c
M	compose.c
M	compress.c
M	copy.c
M	crypt-mod-pgp-classic.c
M	crypt-mod-pgp-gpgme.c
M	crypt-mod-smime-classic.c
M	crypt-mod-smime-gpgme.c
M	crypt.c
M	cryptglue.c
M	curs_lib.c
M	curs_main.c
M	date.c
M	doc/makedoc.c
M	dotlock.c
M	edit.c
M	editmsg.c
M	enter.c
M	gnupgparse.c
M	handler.c
M	hash.c
M	hash.h
M	hcache.c
M	hcache.h
M	hdrline.c
M	headers.c
M	help.c
M	hook.c
M	imap/auth_anon.c
M	imap/auth_cram.c
M	imap/auth_gss.c
M	imap/auth_login.c
M	imap/auth_sasl.c
M	imap/browse.c
M	imap/command.c
M	imap/imap.c
M	imap/imap_private.h
M	imap/message.c
M	imap/utf7.c
M	imap/util.c
M	init.c
M	init.h
M	keymap.c
M	lib.c
M	main.c
M	mbox.c
M	mbyte.c
M	menu.c
M	mh.c
M	mime.h
M	mkdtemp.c
M	mutt.h
M	mutt_crypt.h
M	mutt_idna.c
M	mutt_sasl.c
M	mutt_socket.c
M	mutt_ssl.c
M	mutt_ssl_gnutls.c
M	muttlib.c
M	mx.c
M	pager.c
M	parse.c
M	pattern.c
M	pgp.c
M	pgp.h
M	pgpewrap.c
M	pgpinvoke.c
M	pgpkey.c
M	pgplib.c
M	pgpmicalg.c
M	pgppacket.c
M	pgppubring.c
M	pop.c
M	pop_auth.c
M	pop_lib.c
M	postpone.c
M	protos.h
M	query.c
M	recvattach.c
M	recvcmd.c
M	remailer.c
M	rfc1524.c
M	rfc2047.c
M	rfc2047.h
M	rfc2231.c
M	rfc822.c
M	send.c
M	sendlib.c
M	setenv.c
M	sidebar.c
M	smime.c
M	smtp.c
M	sort.c
M	status.c
M	thread.c
M	txt2c.c
M	utf8.c

2019-01-04 11:22:18 -0800  Kevin McCarthy  <kevin@8t8.us> (085a6f74)

        * Merge branch 'stable'

2019-01-01 11:24:11 -0800  Kevin McCarthy  <kevin@8t8.us> (6f28e57d)

        * Sleep $sleep_time after displaying "mail sent" message.
        
        In case returning the index displays some kind of error right away, to
        give time to see the success message.

M	send.c

2018-12-31 16:06:53 -0800  Kevin McCarthy  <kevin@8t8.us> (443295ee)

        * Remove trailing whitespace.
        
        The result of
          find . -name "*.[ch]" -exec emacs -batch {} \
            --eval="(progn (delete-trailing-whitespace) (and (buffer-modified-p) (save-buffer)))" \;

M	account.c
M	account.h
M	addrbook.c
M	alias.c
M	ascii.c
M	ascii.h
M	attach.c
M	attach.h
M	base64.c
M	browser.c
M	browser.h
M	buffy.c
M	buffy.h
M	charset.c
M	color.c
M	commands.c
M	complete.c
M	compose.c
M	compress.c
M	copy.c
M	copy.h
M	crypt.c
M	curs_lib.c
M	date.c
M	doc/makedoc.c
M	dotlock.c
M	dotlock.h
M	edit.c
M	editmsg.c
M	enter.c
M	extlib.c
M	filter.c
M	flags.c
M	from.c
M	functions.h
M	getdomain.c
M	globals.h
M	gnupgparse.c
M	group.c
M	handler.c
M	hash.c
M	hash.h
M	hcache.c
M	hdrline.c
M	headers.c
M	help.c
M	history.c
M	history.h
M	hook.c
M	imap/auth.c
M	imap/auth.h
M	imap/auth_anon.c
M	imap/auth_cram.c
M	imap/auth_gss.c
M	imap/auth_login.c
M	imap/auth_oauth.c
M	imap/auth_sasl.c
M	imap/browse.c
M	imap/command.c
M	imap/imap_private.h
M	imap/message.h
M	imap/utf7.c
M	imap/util.c
M	init.c
M	intl/bindtextdom.c
M	keymap.c
M	keymap.h
M	lib.c
M	lib.h
M	mailbox.h
M	main.c
M	mapping.h
M	mbox.c
M	mbyte.c
M	menu.c
M	mh.c
M	mime.h
M	mutt.h
M	mutt_crypt.h
M	mutt_curses.h
M	mutt_idna.c
M	mutt_idna.h
M	mutt_menu.h
M	mutt_regex.h
M	mutt_sasl.c
M	mutt_sasl.h
M	mutt_socket.c
M	mutt_socket.h
M	mutt_ssl.h
M	muttlib.c
M	mx.c
M	mx.h
M	pager.c
M	pager.h
M	parse.c
M	pattern.c
M	pgp.c
M	pgp.h
M	pgpinvoke.c
M	pgpkey.c
M	pgplib.c
M	pgplib.h
M	pgpmicalg.c
M	pgppacket.c
M	pgppacket.h
M	pgppubring.c
M	pop.c
M	pop.h
M	pop_auth.c
M	pop_lib.c
M	protos.h
M	query.c
M	recvattach.c
M	recvcmd.c
M	regex.c
M	remailer.c
M	remailer.h
M	resize.c
M	rfc1524.c
M	rfc1524.h
M	rfc2047.c
M	rfc2047.h
M	rfc2231.c
M	rfc2231.h
M	rfc3676.c
M	rfc3676.h
M	rfc822.c
M	rfc822.h
M	safe_asprintf.c
M	score.c
M	send.c
M	signal.c
M	smime.c
M	smime.h
M	smtp.c
M	snprintf.c
M	sort.c
M	sort.h
M	status.c
M	strcasecmp.c
M	strdup.c
M	system.c
M	thread.c
M	url.c
M	url.h
M	utf8.c

2018-12-31 15:39:04 -0800  Kevin McCarthy  <kevin@8t8.us> (1c59c271)

        * Remove unused MUTT_FORMAT_MAKEPRINT flag.
        
        The code in mutt_FormatString() that was using it was commented out 19
        years ago.

M	commands.c
M	curs_main.c
M	mutt.h
M	muttlib.c
M	pager.c
M	recvattach.c

2018-12-31 14:19:44 -0800  Kevin McCarthy  <kevin@8t8.us> (3aa8d8a0)

        * Remove dead code.
        
        Most of these have been "#if 0" out for 10-20 years.  Any utility in
        keeping them around is miniscule at this point.
        
        There are a few other "#if 0" in the code, but I've kept them for now.
        Some are utility functions that are not used, but I think still may
        have some documentation value.

M	compose.c
M	copy.c
M	crypt-gpgme.c
M	crypt.c
M	init.c
M	mutt.h
M	pager.c
M	pattern.c
M	pgp.c
M	recvattach.c
M	sendlib.c

2018-12-29 15:13:15 -0800  Kevin McCarthy  <kevin@8t8.us> (86db373c)

        * Fix config variable order.

M	init.h

2018-12-29 13:50:00 -0800  Kevin McCarthy  <kevin@8t8.us> (0917da96)

        * Respect ignore for the protected subject display.

M	crypt.c

2018-12-29 13:20:03 -0800  Kevin McCarthy  <kevin@8t8.us> (f3f98bd6)

        * Color protected subject as a header in the pager.

M	crypt.c
M	globals.h
M	init.c
M	mutt.h
M	muttlib.c
M	pager.c

2018-12-27 12:05:43 -0800  Kevin McCarthy  <kevin@8t8.us> (333312c2)

        * Add $crypt_protected_headers_save.
        
        Setting this option will save the protected header back into the
        clear-text message headers.  This improves
        usability (searching/limiting/replying) when reopening a mailbox
        without header cache.  However, it is a security trade-off, so
        defaults off and strongly warns about what it is doing in the documentation.

M	commands.c
M	copy.c
M	copy.h
M	init.h
M	mutt.h

2018-12-25 19:52:53 -0800  Kevin McCarthy  <kevin@8t8.us> (2817372f)

        * Change x-label editing flag to be in the envelope.
        
        Handle like In-Reply-To and References editing.  Change the flag
        setting to be inside mutt_copy_header().
        
        The resetting of the changed flag occurs explicitly in the imap and
        maildir/mh sync_mailbox code.  It occurs for mbox in the
        mx_update_tables() call in mx_sync_mailbox().

M	copy.c
M	headers.c
M	imap/imap.c
M	mh.c
M	mutt.h
M	muttlib.c

2018-12-25 19:24:08 -0800  Kevin McCarthy  <kevin@8t8.us> (7f603dd6)

        * Create envelope->changed to mark all field changes.
        
        In subsequent commits, we're going to add the x-label and subject
        headers changed flags into the envelope.  To avoid the list of checks
        exploding everywhere, just use a single field to check and reset those
        values.
        
        Several places in the code are checking for a null header->env.  I
        wasn't aware this was possible, so I've added todo notes to track down
        when this occurs.

M	copy.c
M	imap/imap.c
M	mh.c
M	mutt.h
M	muttlib.c
M	mx.c
M	thread.c

2018-12-29 20:08:26 +0100  Vincent Lefevre  <vincent@vinc17.net> (a5b64f6c)

        * Light colors: do not do the + 8 on negative values, such as COLOR_DEFAULT.

M	color.c

2018-12-29 19:37:57 +0100  Vincent Lefevre  <vincent@vinc17.net> (7af70af5)

        * Added support for the "light" color prefix (in addition to "bright").
        
        At the same time, restrict the advance by 8 to colors in the range 0-7
        and no longer use the blink attribute to emulate light background colors
        in some terminals (e.g. linux console and rxvt), as this is really blink
        in other terminals (e.g. xterm); light background colors can still be
        obtained by choosing a proper $TERM value (tested with linux console,
        using TERM=linux-16color, and rxvt).

M	color.c
M	doc/manual.xml.head

2018-12-29 18:17:43 +0100  Vincent Lefevre  <vincent@vinc17.net> (3f13b257)

        * Updated French translation.

M	po/fr.po

2018-12-29 18:03:27 +0100  Vincent Lefevre  <vincent@vinc17.net> (23bc5ed0)

        * spelling consistency

M	send.c

2018-12-28 15:53:15 -0800  Kevin McCarthy  <kevin@8t8.us> (915006b9)

        * Merge branch 'stable'

2018-12-27 16:27:24 -0800  Kevin McCarthy  <kevin@8t8.us> (a6ef7758)

        * Merge branch 'stable'

2018-12-27 16:16:04 -0800  Kevin McCarthy  <kevin@8t8.us> (5f08b9ff)

        * Merge branch 'stable'

2018-12-27 15:52:52 -0800  Kevin McCarthy  <kevin@8t8.us> (4afae79a)

        * Merge branch 'stable'

2018-12-24 16:22:07 -0800  Kevin McCarthy  <kevin@8t8.us> (9366cd7f)

        * Free pgpkeylist if the send fails.

M	send.c

2018-12-24 15:11:09 -0800  Kevin McCarthy  <kevin@8t8.us> (4b0c8a6d)

        * Read in protected headers when resuming a postponed message.

M	postpone.c

2018-12-23 16:32:52 -0800  Kevin McCarthy  <kevin@8t8.us> (66e09584)

        * Finish protected header write support.
        
        Write out the protected headers when writing the mime header part.
        
        Hide protected subjects with $crypt_protected_headers_subject, for
        outgoing, postponed, and fcc'ed messages.
        
        Don't hide in postponed and fcc'ed if $crypt_protected_headers_read
        isn't set.
        
        Add a few missing cases where mime_headers needed to be cleaned up on
        error.
        
        Remove the protected headers for $fcc_clear.

M	crypt.c
M	headers.c
M	main.c
M	mutt_crypt.h
M	protos.h
M	send.c
M	sendlib.c

2018-12-23 16:23:02 -0800  Kevin McCarthy  <kevin@8t8.us> (f1431b15)

        * Add a new mode for mutt_write_rfc822_header().
        
        Convert the mode parameter to an enum, to make the code a bit more readable.

M	headers.c
M	main.c
M	mutt.h
M	protos.h
M	send.c
M	sendlib.c

2018-12-16 13:15:05 -0800  Kevin McCarthy  <kevin@8t8.us> (167bf96e)

        * Add config and data structure for protected header write support.
        
        Add config vars $crypt_protected_headers_write (unset by default),
        and $crypt_protected_headers_subject.
        
        Store the protected headers during mime_protect().

M	crypt.c
M	globals.h
M	init.h
M	mutt.h

2018-12-21 10:13:17 -0800  Kevin McCarthy  <kevin@8t8.us> (450de463)

        * Handle improperly encoded pgp/mime octetstream part.
        
        Some clients (or even mail servers) improperly encode the octetstream
        part.
        
        Thanks to Riccardo Schirone for the original merge request patch.
        This commit also handles the attachment menu, and makes the decoding
        conditional so it's not done if it isn't necessary.

M	crypt-gpgme.c
M	handler.c
M	pgp.c

2018-12-21 09:42:26 -0800  Kevin McCarthy  <kevin@8t8.us> (f9a6082c)

        * Display mail sent message after Fcc finishes.
        
        For the case of IMAP, the uploading message would otherwise stay on
        the screen.  In any case, it's best to show that message as the last
        thing before returning to the index.
        
        Thanks to chdiza for reporting the issue!

M	send.c

2018-12-20 19:52:20 -0800  Kevin McCarthy  <kevin@8t8.us> (cc7afb89)

        * Merge branch 'stable'

2018-12-20 18:54:25 -0800  Kevin McCarthy  <kevin@8t8.us> (ccfbe996)

        * Merge branch 'stable'

2018-12-19 18:48:04 -0800  Kevin McCarthy  <kevin@8t8.us> (a2f5faea)

        * Fix flags if mutt_get_postponed() has no messages.
        
        Flags needs to be reset so memory cleanup is done at the end.

M	send.c

2018-12-19 18:36:19 -0800  Kevin McCarthy  <kevin@8t8.us> (755a72f7)

        * More postpone cleanup.
        
        Provide an error message if $postponed is not set.
        
        Make sure the clear content is freed for encrypted messages.
        
        If the write_fcc() fails, make sure to restore the clear content.

M	send.c

2018-12-19 17:43:26 -0800  Kevin McCarthy  <kevin@8t8.us> (1850f4cd)

        * When postponing, encode descriptions before encrypting.
        
        This matches the behavior of the normal send process.  I don't think
        there is actually an issue here since nothing is sent, but it makes
        sense to be consistent.

M	send.c

2018-12-19 16:20:23 -0800  Kevin McCarthy  <kevin@8t8.us> (c5d970ee)

        * Refactor postpone_message().

M	send.c

2018-12-19 15:42:24 -0800  Kevin McCarthy  <kevin@8t8.us> (9b9e3e8b)

        * Prompt when mutt_write_fcc() fails.
        
        Allow the user to retry, specify an alternate mailbox, or skip.

M	send.c

2018-12-19 14:35:22 -0800  Kevin McCarthy  <kevin@8t8.us> (e106487b)

        * Move fcc after send.

M	send.c

2018-12-19 14:24:46 -0800  Kevin McCarthy  <kevin@8t8.us> (f8ef4af9)

        * Refactor save_fcc() function.

M	send.c

2018-12-16 14:23:54 -0800  Kevin McCarthy  <kevin@8t8.us> (04a08e2d)

        * Add rfc2047_encode_envelope helper.

M	rfc2047.c
M	rfc2047.h
M	sendlib.c

2018-12-11 14:11:30 -0800  Kevin McCarthy  <kevin@8t8.us> (cac6705a)

        * Add protected header received email support.
        
        Add $crypt_protected_headers_read config variable to enable reading
        and updating the index/header cache.
        
        Print protected Subject header in the pager as parts are rendered.
        
        Once opened, update the index, subject hash, and header cache.

M	commands.c
M	crypt-gpgme.c
M	crypt.c
M	handler.c
M	init.h
M	mutt.h
M	mutt_crypt.h
M	pgp.c
M	smime.c

2018-12-15 14:49:55 -0800  Kevin McCarthy  <kevin@8t8.us> (09dd4a5d)

        * Add mx operation save_to_header_cache.
        
        This will be used when reading protected headers, to store the
        encrypted subject in the header cache so it can be searched with.

M	compress.c
M	imap/imap.c
M	mailbox.h
M	mbox.c
M	mh.c
M	mutt.h
M	mx.c
M	pop.c

2018-12-09 17:41:58 -0800  Kevin McCarthy  <kevin@8t8.us> (d8a623bf)

        * Parse and store mime headers in the BODY.
        
        Don't store the field in the header cache though.

M	hcache.c
M	mutt.h
M	muttlib.c
M	parse.c

2018-12-09 19:52:21 -0800  Kevin McCarthy  <kevin@8t8.us> (67077f0d)

        * Factor out rfc2047_decode_envelope().

M	parse.c
M	rfc2047.c
M	rfc2047.h
M	sendlib.c
M	url.c

2018-12-12 16:14:48 -0800  Kevin McCarthy  <kevin@8t8.us> (02252dac)

        * Merge branch 'stable'

2018-12-12 12:41:53 -0800  Kevin McCarthy  <kevin@8t8.us> (706644ed)

        * Merge branch 'stable'

2018-12-11 18:41:37 -0800  Kevin McCarthy  <kevin@8t8.us> (7a7d06fd)

        * Fix possible smime crash if the read mime header p is NULL.

M	smime.c

2018-12-11 15:29:57 -0800  Kevin McCarthy  <kevin@8t8.us> (625fada3)

        * Fix memory leak in smime.c.
        
        smime_application_smime_handler() was not freeing the BODY returned by
        smime_handle_entity().

M	smime.c

2018-12-09 12:32:24 -0800  Kevin McCarthy  <kevin@8t8.us> (caf97ae9)

        * Fix mutt_parse_rfc822_line() if lastp parameter is NULL.
        
        It checked at the beginning before dereferencing, but not at the end.
        
        Since lastp is only used for the user_hdrs case, move the local
        variable and assignment inside that block to make it clear.

M	parse.c

2018-12-08 15:15:56 -0800  Kevin McCarthy  <kevin@8t8.us> (e525bc08)

        * Add $auto_subscribe variable.
        
        When set, it automatically subscribes to mailing lists found in
        List-Post headers.
        
        This commit is based on Michael Elkins's patch from the thread
        <https://marc.info/?l=mutt-users&m=127076105423565&w=2>.
        
        I've added an opt-in variable $auto_subscribe and a hash table cache
        to speed up reading headers when the variable is set.

M	doc/manual.xml.head
M	globals.h
M	hcache.c
M	init.c
M	init.h
M	mutt.h
M	parse.c
M	protos.h

2018-12-07 13:18:04 -0800  Kevin McCarthy  <kevin@8t8.us> (7f1febf6)

        * Add note about the second --with-fingerprint to gpg.rc.

M	contrib/gpg.rc

2018-12-06 19:29:22 -0800  Kevin McCarthy  <kevin@8t8.us> (d10eec45)

        * Merge branch 'stable'

2018-12-06 13:08:29 +0100  Vincent Lefevre  <vincent@vinc17.net> (5b464361)

        * Updated French translation.

M	po/fr.po

2018-12-05 09:31:34 -0800  Kevin McCarthy  <kevin@8t8.us> (f9abf056)

        * Adjust version number comment in gpgme.

M	crypt-gpgme.c

2018-12-03 08:41:56 +0100  Werner Koch  <wk@gnupg.org> (382355a5)

        * Improve the console output for extract-keys and speed up import.
        
        The listing of imported keys to the console must have stopped working
        on 2014-12-31 due to a fix for bug #3698, commit
        bbc5acb6de0ca56d7e8366402d68a1a919ca9b23 which was needed due to a
        not fully working stub code introduced in 2008 with commit
        a4b3a60dd63bc7af7927025b2d1344530ca89aa9.
        
        The latter commit also introduced a bug in the import code which
        listed all keys in the keyring to a temporary file and copied that one
        to stdout.  The former commit avoided the output to stdout.
        
        The fix here is to use pgp_gpgme_extract_keys only for extracting
        information about the key and don't re-use the same code for importing
        keys.  We now import the keys directly in pgp_gpgme_invoke_import and
        we print the fingerprint and status flags for all imported keys.  That
        information available from GPGME for ages (0.3.1 from 2003).
        The user id is unfortunately not printed; that would require a lookup
        of the newly imported key.  Can be done with another patch.

M	crypt-gpgme.c

2018-12-03 08:41:55 +0100  Werner Koch  <wk@gnupg.org> (55c18b7e)

        * Try to avoid creation of temp. directory for key import.
        
        Since gpgme 1.9.0 it is possible to list keys directly from a file
        without importing it into gpg' own keyring.  This patch implements
        this in a backward compatible way.
        
        Unfortunately we need to check for a suitable gpgme version at build
        time and also for a suitable gpg version at runtime.  This is
        implemented by a version check which requires to call or include code
        taken from libgpg-error (aka gpgrt).  However this library is anyway a
        dependency of gpgme and thus does not pose any extra burden.
        
        The functions parse_version_number, parse_version_string, and
        cmp_version_strings are taken from libgpg-error's repo at 2018-11-20.
        Libgpg-error is distributed under the LGPL-2.1-or-later.

M	crypt-gpgme.c

2018-12-03 08:41:54 +0100  Werner Koch  <wk@gnupg.org> (bf4a65ee)

        * Always use the gpgme_new wrapper in crypt-gpgme.
        
        The wrapper is much more convenient and there is no need to sometimes
        use gpgme_new directly.  The perceived advantage on not bailing out in
        an out-of-core condition is not realistic because other small amounts
        of memory are allocated all over mutt anyway and thus function will
        terminate the process as well.
        
        This patch also changes the minimum version of gpgme to 1.4.0.  This
        is so that we can always pass NULL to functions like gpgme_release.
        Further 1.4.0 has new functions which we may soon like to use.

M	configure.ac
M	crypt-gpgme.c

2018-12-03 08:41:53 +0100  Werner Koch  <wk@gnupg.org> (0725e71e)

        * Require GPGME version 1.2.0 and drop useless HAVE macros.
        
        GPGME 1.2.0 was released nearly 10 years ago and thus we can really
        demand this version.  For various reasons it would be advisable to
        require a decent version but that is a different thing and needs to be
        done in a separate patch.
        
        HAVE_GPGME_OP_EXPORT_KEYS and HAVE_GPGME_PKA_TRUST are not anymore
        needed because they are supported by that GPGME version.
        
        Signed-off-by: Werner Koch <wk@gnupg.org>

M	configure.ac
M	crypt-gpgme.c
M	crypt-mod-pgp-classic.c
M	crypt-mod-pgp-gpgme.c

2018-12-03 08:41:52 +0100  Werner Koch  <wk@gnupg.org> (125c955d)

        * Nuke trailing white space from the crypt-* files.

M	crypt-gpgme.c
M	crypt-gpgme.h
M	crypt-mod-pgp-classic.c
M	crypt-mod-pgp-gpgme.c
M	crypt-mod-smime-classic.c
M	crypt-mod-smime-gpgme.c
M	crypt-mod.c
M	crypt-mod.h
M	crypt.c
M	cryptglue.c

2018-12-02 21:39:55 -0800  Kevin McCarthy  <kevin@8t8.us> (26bba6f9)

        * Improve rfc2047_decode to deal with improperly split words.
        
        Some non-compliant MUAs split rfc2047 words inside a multibyte
        character.
        
        Deal with this by accumulating decoded words sharing the same
        character set, and then perform character conversion all at once.
        
        It is not clear to me that the $ignore_linear_white_space option is
        functional or properly coded, but I've gone through the effort of
        trying to preserve its calls.

M	rfc2047.c

2018-11-24 21:03:26 -0800  Kevin McCarthy  <kevin@8t8.us> (9426c7dd)

        * Convert rfc2047_decode() to use buffers.
        
        Rework the loop so it's centered on the find_encoded_word() call.
        
        It appears only the last text chunk was run through character
        conversion with AssumedCharset.  I've changed it to run for each text
        chunk.

M	rfc2047.c

2018-12-02 20:26:27 -0800  Kevin McCarthy  <kevin@8t8.us> (56098c84)

        * Add mutt_buffer_addstr_n().

M	buffer.c
M	buffer.h

2018-12-03 07:47:17 -0800  Kevin McCarthy  <kevin@8t8.us> (c775d044)

        * Merge branch 'stable'

2018-12-03 07:30:34 -0800  Kevin McCarthy  <kevin@8t8.us> (1ecea97e)

        * Fix typo in Finnish translation.
        
        Thanks to @Petteri3 for the patch.

M	po/fi.po

2018-12-03 15:55:53 +0100  Vincent Lefevre  <vincent@vinc17.net> (dd05edee)

        * Added configure.lineno to .gitignore as this file is left by configure: https://lists.gnu.org/archive/html/autoconf/2004-01/msg00034.html

M	.gitignore

2018-12-02 18:38:03 -0800  Kevin McCarthy  <kevin@8t8.us> (b6d9c755)

        * Fix next release number in UPDATING file.

M	UPDATING

2018-12-02 16:46:28 -0800  Rosen Penev  <rosenp@gmail.com> (26b84329)

        * Fix compilation without deprecated OpenSSL 1.1 APIs

M	mutt_ssl.c

2018-12-02 22:32:35 +0000  Sam Pablo Kuper  <sampablokuper@riseup.net> (80f64b70)

        * Enhance docs re security of SSL/TLS version vars

M	init.h

2018-12-02 22:31:19 +0000  Sam Pablo Kuper  <sampablokuper@riseup.net> (8960e637)

        * Deprecate TLS 1.0 and 1.1 by default
        
        Fixes #101.
        
        Minor digit of version number has been bumped per [Semantic Versioning
        2.0.0](https://semver.org/spec/v2.0.0.html) §7:
        
        > Minor version Y (x.Y.z | x > 0) MUST be incremented if ... any public
        > API functionality is marked as deprecated.

M	UPDATING
M	init.h

2018-12-01 11:46:03 -0800  Kevin McCarthy  <kevin@8t8.us> (b07a3661)

        * Merge branch 'stable'

2018-11-30 15:12:47 -0800  Kevin McCarthy  <kevin@8t8.us> (f34cb1fb)

        * Convert to use gitlab registry image ubuntu:18.04.
        
        The gitlab registry image is built using the Dockerfile in
        muttmua/docker-images/tree/master/ubuntu/18.04/
        
        Turn off the scan-build-5.0.  I never look at those reports and they
        run very slowly.
        
        Also, for now just compile for gnutls, to speed up the check further.

M	.gitlab-ci.yml

2018-11-30 15:03:11 -0800  Kevin McCarthy  <kevin@8t8.us> (657c078b)

        * Merge branch 'stable'

2018-11-29 12:36:08 -0800  Kevin McCarthy  <kevin@8t8.us> (1daffc9b)

        * Add SENDER to default list of IMAP headers.
        
        This header is matched by the ~e and ~L patterns.  Those patterns
        should work without the user having to know to add Sender to the list
        of $imap_headers.  This was probably just an oversight.

M	imap/message.c

2018-11-28 12:27:44 +0100  Vincent Lefevre  <vincent@vinc17.net> (758d452d)

        * Updated French translation.

M	po/fr.po

2018-11-27 19:06:42 -0800  Kevin McCarthy  <kevin@8t8.us> (2017ebcc)

        * Improve pgp error message for translation.
        
        The past tense phrase makes it unclear whether the error is about a
        failed action or the state of the message.
        
        Thanks to Vincent Lefèvre for the improved wording suggestion.

M	pgp.c

2018-11-28 00:19:38 +0100  Adam Golebiowski  <adamg@agmk.net> (3c89922f)

        * Updated Polish translation.

M	po/pl.po

2018-11-27 14:05:10 -0800  Kevin McCarthy  <kevin@8t8.us> (67dc9c44)

        * Merge branch 'stable'

2018-11-25 19:48:49 -0800  Kevin McCarthy  <kevin@8t8.us> (55fd5122)

        * Prevent trying to match a failing color body regex repeatedly.
        
        Emails with really long lines (e.g. spam), can suffer performance if a
        complicated regex is matched to no effect over and over.  If the regex
        failed at the beginning, it won't match at the end of another's regex
        match range, so turn it off.

M	mutt_curses.h
M	pager.c

2018-11-18 19:13:20 -0800  Kevin McCarthy  <kevin@8t8.us> (f4f20e5d)

        * Switch color chunk matching to use bsearch.
        
        Emails with extremely long lines, combined with a large number of
        color matches, can cause a performance hit so severe that mutt appears
        to have hung.
        
        Switching out to using a binary search speeds things up noticably.
        
        The for loops being replaced were a bit strange.  resolve_types()
        ensures there are no overlaps, and that they are ordered.  A match is
        defined by (first <= cnt < last).  I can't see any reason for the
        strange comparison of (cnt > last) follow by (cnt != last).  Perhaps
        at one time it made sense.

M	pager.c

2019-03-13 12:06:11 +0800  Kevin McCarthy  <kevin@8t8.us> (fedb91e2)

        * Fix incorrect IMAP message purging bug.
        
        Thanks to Ivan Middleton @imiddle for the awesome bug report and
        suggested fix.
        
        The bug is most easily generated using Gmail with the $trash variable
        set.
        
        Deleted messages are first copied to the $trash folder.  If this is
        set to "[Gmail]/Trash", then Gmail inteprets the copy as a "delete"
        and sends EXPUNGE messages back for the messages.
        
        cmd_parse_expunge() and cmd_parse_vanished() set the hdr->index to
        INT_MAX, which subsequently an imap_expunge_mailbox() will use to
        remove the messages from the local mailbox.
        
        If we close the mailbox instead of sync it, Mutt will end up executing
        the 'Deleted' flag setting before processing the expunge (because
        "imap_check_mailbox() -> imap_cmd_finish()' doesn't set check_status
        when we are closing).  The expunged messages will then be included in
        the set of 'Deleted' flags.
        
        Unfortunately, because the messages are sorted by *index* before
        msgset generation, an incorrect range of UIDs will be sent, which
        could easily include messages that should not be deleted.
        
        This fix is a minimal fix for a stable bug fix  excluding
        messages with the index set to INT_MAX from all msg sets.  Other
        things that should be investigated in master are:
        
        - sorting by UID instead of index before msgset generation
        - unsetting the 'active' flag in cmd_parse_expunge() and
          cmd_parse_vanished() instead of waiting until imap_expunge_mailbox()
          to do so.

M	imap/imap.c

2019-02-01 12:41:23 -0800  Kevin McCarthy  <kevin@8t8.us> (eeed901d)

        * automatic post-release commit for mutt-1.11.3

M	ChangeLog
M	VERSION

2019-02-01 12:34:19 -0800  Kevin McCarthy  <kevin@8t8.us> (cd5db026)

        * Update UPDATING file for 1.11.3 release.

M	UPDATING

2019-01-24 18:28:27 -0800  Kevin McCarthy  <kevin@8t8.us> (1041fb4f)

        * Show top-level decoded smime text/plain parts.
        
        Commit 331d9d5a attempted to fix a problem with an attachment having
        extension .p7m.  The attachment menu tried to decode and failed, and
        the part ended up being replaced by a bogus text/plain part.
        
        The problem is that crypt_smime_decrypt_mime() returns a text/plain
        part if the decode fails, meaning we can't distinguish failure from
        success in this case.
        
        As a compromise, only use a text/plain resulting from a single
        top-level application_smime part.  This will allow for the case of an
        text/plain encoded email, but won't end up hiding attachments that
        were not decoded.

M	recvattach.c

2019-01-24 14:15:33 -0800  Kevin McCarthy  <kevin@8t8.us> (331d9d5a)

        * Improve attachment menu for s/mime parts. (closes #113)
        
        Don't prompt for passphrase or getkeys, or set the ENCRYPT flag, for
        OPAQUE types.
        
        Don't recurse on "text" output from decrypt_mime().  There is no
        reason to recurse on a text type.  Additionally, the
        mutt_read_mime_header() will return an empty text type even if the
        decode doesn't generate mime output.  In those cases, we want to show
        the original attachment.

M	recvattach.c

2019-01-21 19:43:08 -0800  Kevin McCarthy  <kevin@8t8.us> (caf5db85)

        * Fix tunnels to also retry and write full buffer.
        
        Change the tunnel_socket_read() and tunnel_socket_write() as the raw
        sockets were adjusted in the previous commit.  Retry on EINTR, and
        complete a full write so all the implementations have the same behavior.

M	mutt_tunnel.c

2019-01-21 15:19:08 -0800  Kevin McCarthy  <kevin@8t8.us> (688e27a9)

        * Fix raw socket read/write to follow expected behavior.
        
        The mutt_sasl.c code expects conn_write() to write the entire buffer.
        This is inconsistent with mutt_socket.c, but since other conn_write()
        implementations guarantee this, change raw_socket_write() to do so too
        for now.
        
        Also, update reading and writing to loop on EINTR, as gnutls does.
        They won't return EAGAIN or EWOULDBLOCK because we don't mark sockets
        as non-blocking.

M	mutt_socket.c

2018-11-30 15:12:47 -0800  Kevin McCarthy  <kevin@8t8.us> (ae8bb261)

        * Convert to use gitlab registry image ubuntu:18.04.
        
        The gitlab registry image is built using the Dockerfile in
        muttmua/docker-images/tree/master/ubuntu/18.04/
        
        Turn off the scan-build-5.0.  I never look at those reports and they
        run very slowly.
        
        Also, for now just compile for gnutls, to speed up the check further.
        
        (cherry picked from commit f34cb1fb8468f74894818343dd8d95da5c0c640d)

M	.gitlab-ci.yml

2019-01-21 11:56:04 -0800  Kevin McCarthy  <kevin@8t8.us> (73b3151e)

        * Fix gnutls tls_socket_write() to properly retry.
        
        Retry on GNUTLS_E_AGAIN and GNUTLS_E_INTERRUPTED.  This prevents an
        aborted send due to a SIGWINCH, for instance.
        
        Change tls_socket_read() to follow the same flow.  Don't bother
        checking gnutls_error_is_fatal() because return codes besides AGAIN
        and INTERRUPTED end up closing the connection regardless.  (We don't
        handle handshakes and negotations during send/receive).

M	mutt_ssl_gnutls.c

2019-01-18 20:46:07 -0800  Kevin McCarthy  <kevin@8t8.us> (1b2dcb31)

        * Update the muttrc man page with added commands.
        
        Add the "color compose", index-format-hook, and echo commands.
        
        Add the HMS relative date units.

M	doc/muttrc.man.head

2019-01-10 09:56:41 -0800  Kevin McCarthy  <kevin@8t8.us> (78ea05f7)

        * Wrap ssl init calls for LibreSSL too.
        
        It looks like LibreSSL does not perform automatic initialization of
        the library and error strings.
        
        Since LibreSSL defines OPENSSL_VERSION_NUMBER as a "version 2",
        add a check if LIBRESSL_VERSION_NUMBER is defined and call the
        initialization functions for that case.

M	mutt_ssl.c

2019-01-10 16:03:02 +0100  Fabian Groffen  <grobian@gentoo.org> (42101583)

        * mx_open_mailbox: provide output buffer to realpath(3)
        
        Starting with POSIX.1.2008 resolved_path can be NULL.
        Systems implementing a standard before that crash.  Example of such
        system is Mac OS X 10.5, the last version running on PowerPC hardware.
        
        Since this is the only occurrance of the realpath(3) function in Mutt,
        instead of wrapping it, just adjust this invocation.
        
        Signed-off-by: Fabian Groffen <grobian@gentoo.org>

M	mx.c

2019-01-08 21:18:38 +0200  Stefan Strogin  <stefan.strogin@gmail.com> (83585f9b)

        * Fix compilation with LibreSSL <2.7.0. (closes #112)
        
        (cherry picked from commit 9c9bea5e04e2a562017af0ac7a27b1b0e00e8907)

M	mutt_ssl.c

2019-01-07 17:39:19 -0800  Kevin McCarthy  <kevin@8t8.us> (df3f2aee)

        * automatic post-release commit for mutt-1.11.2

M	ChangeLog
M	VERSION

2019-01-07 17:26:53 -0800  Kevin McCarthy  <kevin@8t8.us> (5f1f14e2)

        * Add UPDATING notes for 1.11.2 release.

M	UPDATING

2019-01-05 13:25:38 -0800  Kevin McCarthy  <kevin@8t8.us> (ae3587cf)

        * Update copyright for the next stable release.

M	COPYRIGHT
M	doc/manual.xml.head
M	doc/mutt.man
M	main.c

2019-01-04 11:20:05 -0800  Kevin McCarthy  <kevin@8t8.us> (853e48bf)

        * Fix mkdtemp.c implementation.
        
        Two statements were indented on the same line under a for statement.
        The second one would not be included in the loop, only being executed
        after the loop finishes.
        
        This is obviously an error, as it modifies the LETTERS entry being
        used.

M	mkdtemp.c

2018-12-28 15:43:51 -0800  Kevin McCarthy  <kevin@8t8.us> (63f05d96)

        * Make a copy of x_label before encoding it for updates.
        
        This isn't actually a bug.  Context->label_hash strdups the keys, so
        we are safe from dangling references.  However, the subj_hash uses
        direct references, so to keep things consistent and safe, make a copy
        and encode that.

M	copy.c

2018-12-27 16:24:27 -0800  Kevin McCarthy  <kevin@8t8.us> (8bb10956)

        * Restore the xlabel_changed reset.
        
        The cherry pick accidentally obliterated the reset.  That flag is now
        located in hdr->env->changed in the branch and is reset properly
        elsewhere.  Keep it in place in the stable branch.

M	copy.c

2018-12-27 16:08:36 -0800  Kevin McCarthy  <kevin@8t8.us> (75f2445c)

        * Rfc2047 encode and fold X-Label when writing updates.
        
        Also, add a missing "skip" in mutt_copy_hdr() for the non-simple case.
        
        These fixes were backported from the kevin/mutt_protected_header branch.

M	copy.c

2018-12-21 10:13:17 -0800  Kevin McCarthy  <kevin@8t8.us> (eb444e63)

        * Handle improperly encoded pgp/mime octetstream part.
        
        Some clients (or even mail servers) improperly encode the octetstream
        part.
        
        Thanks to Riccardo Schirone for the original merge request patch.
        This commit also handles the attachment menu, and makes the decoding
        conditional so it's not done if it isn't necessary.
        
        (cherry picked from commit 450de4637f6590487a073b250da342a1400a3ac3)

M	crypt-gpgme.c
M	handler.c
M	pgp.c

2018-12-20 19:39:39 -0800  Kevin McCarthy  <kevin@8t8.us> (e104135e)

        * Backport postpone-encrypt cleanups from master.
        
        Free the clear content after successfully postponing.
        
        If the fcc fails, properly restore the clear content before returning
        to the compose menu.

M	send.c

2018-12-02 16:46:28 -0800  Rosen Penev  <rosenp@gmail.com> (671417dd)

        * Fix compilation without deprecated OpenSSL 1.1 APIs

M	mutt_ssl.c

2018-12-12 16:10:23 -0800  Kevin McCarthy  <kevin@8t8.us> (101e05d6)

        * Fix imap_sync_mailbox() hcache leak.
        
        Uploading changed messages to the server ends up overwriting the
        hcache.  Add a straightforward fix and a longish explanation comment
        for the stable branch fix.
        
        Add a TODO noting a better fix should be done in the master branch in
        the future.

M	imap/imap.c

2018-12-11 18:41:37 -0800  Kevin McCarthy  <kevin@8t8.us> (29da7c2a)

        * Fix possible smime crash if the read mime header p is NULL.

M	smime.c

2018-12-11 15:29:57 -0800  Kevin McCarthy  <kevin@8t8.us> (74a09f41)

        * Fix memory leak in smime.c.
        
        smime_application_smime_handler() was not freeing the BODY returned by
        smime_handle_entity().

M	smime.c

2018-12-09 12:32:24 -0800  Kevin McCarthy  <kevin@8t8.us> (37320beb)

        * Fix mutt_parse_rfc822_line() if lastp parameter is NULL.
        
        It checked at the beginning before dereferencing, but not at the end.
        
        Since lastp is only used for the user_hdrs case, move the local
        variable and assignment inside that block to make it clear.

M	parse.c

2018-12-06 19:22:59 -0800  Kevin McCarthy  <kevin@8t8.us> (59625f54)

        * Fix classic gpg date parsing in list-keys.
        
        GnuPG changed the format of their --with-colons output in 2.0.10.
        Dates are now seconds since epoch.  Update the parse_pub_line() code
        to detect the new format.
        
        The GnuPG changes also separated pub and the first uid.  Since mutt
        allows an empty uid field, the output is a bit less friendly now, with
        an initial key without an uid.  I think that's acceptable, but
        eventually we'll want to change the parsing behavior.

M	gnupgparse.c

2018-12-03 07:30:34 -0800  Kevin McCarthy  <kevin@8t8.us> (2cb34544)

        * Fix typo in Finnish translation.
        
        Thanks to @Petteri3 for the patch.

M	po/fi.po

2018-12-01 11:38:36 -0800  Kevin McCarthy  <kevin@8t8.us> (991c018e)

        * automatic post-release commit for mutt-1.11.1

M	ChangeLog
M	UPDATING
M	VERSION

2018-12-01 11:27:20 -0800  Kevin McCarthy  <kevin@8t8.us> (bf2f59d4)

        * Document Sender header as a default in $imap_headers.

M	init.h

2018-11-29 12:36:08 -0800  Kevin McCarthy  <kevin@8t8.us> (42983686)

        * Add SENDER to default list of IMAP headers.
        
        This header is matched by the ~e and ~L patterns.  Those patterns
        should work without the user having to know to add Sender to the list
        of $imap_headers.  This was probably just an oversight.

M	imap/message.c

2018-11-28 00:19:38 +0100  Adam Golebiowski  <adamg@agmk.net> (b4ade8a7)

        * Updated Polish translation.

M	po/pl.po

2018-11-27 13:55:04 -0800  Kevin McCarthy  <kevin@8t8.us> (41816374)

        * Fix QRESYNC crash after a large number of VANISHED messages.
        
        When handling QRESYNC vanished, imap_expunge_mailbox() was called to
        empty out the messages.  Various counters, including vcount are
        updated by the mx_update_tables() after the expunge.
        
        These counters need to be reset, because mx_update_context() will do
        so once again at the end of reading new headers.  This can cause an
        out of bounds access in v2r.

M	imap/message.c

2018-11-25 09:50:23 -0800  Kevin McCarthy  <kevin@8t8.us> (3b75515c)

        * automatic post-release commit for mutt-1.11.0

M	ChangeLog
M	VERSION
M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/el.po
M	po/eo.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fi.po
M	po/fr.po
M	po/ga.po
M	po/gl.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/nl.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/sv.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po

2018-11-25 09:33:53 -0800  Kevin McCarthy  <kevin@8t8.us> (6de8a20e)

        * Bump release date.

M	UPDATING

2018-11-24 10:10:24 -0800  Morten Bo Johansen  <listmail@mbjnet.dk> (69035fa3)

        * Updated Danish translation.

M	po/da.po

2018-11-24 10:06:55 -0800  Vsevolod Volkov  <vvv@mutt.org.ua> (8b99eb9c)

        * Updated Russian translation.

M	po/ru.po

2018-11-24 10:04:00 -0800  Vsevolod Volkov  <vvv@mutt.org.ua> (ff51ac67)

        * Updated Ukrainian translation.

M	po/uk.po

2018-11-23 09:05:49 +0100  Olaf Hering  <olaf@aepfle.de> (a287a1c4)

        * Update de.po
        
        Unwrap lines, because it is almost 2019.
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2018-11-22 09:10:48 -0800  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp> (edd749b9)

        * Updated Japanese translation.

M	po/ja.po

2018-11-18 10:05:30 -0800  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp> (2a919856)

        * Add L10N comments to several unclear messages.
        
        Updating Japanese translation, I found that some of the updated messages
        were a little hard to understand without reading the code.
        
        Add comments to some messages I nearly translated in a wrong way.

M	account.c
M	crypt-gpgme.c
M	pgp.c
M	recvcmd.c

2018-11-17 14:55:58 +0100  Petr Písař  <petr.pisar@atlas.cz> (5c1af7a4)

        * Czech translation update for Mutt 1.11.0

M	po/cs.po

2018-11-17 02:28:01 +0100  Vincent Lefevre  <vincent@vinc17.net> (e9846f41)

        * Updated fr.po for Mutt 1.11.0.

M	po/fr.po

2018-11-15 09:29:15 -0800  Kevin McCarthy  <kevin@8t8.us> (78a60fc9)

        * Minor fixes to UPDATING.

M	UPDATING

2018-11-14 14:13:47 -0800  Kevin McCarthy  <kevin@8t8.us> (1b5caef3)

        * Update $index_format cross-references in manual.
        
        Add index-format-hook to the list of hooks.
        
        Add the list of configuration variables that use the expandos.
        
        Add a note to $post_index_string that it uses the expandos.

M	init.h

2018-11-13 15:01:53 -0800  Kevin McCarthy  <kevin@8t8.us> (eb69b2ed)

        * Update the UPDATING file for 1.11.0 release.

M	UPDATING

2018-11-10 06:51:34 -0800  lilydjwg  <lilydjwg@gmail.com> (1fd77395)

        * Updated Simplified Chinese translation.

M	po/zh_CN.po

2018-11-07 14:19:25 -0800  Kevin McCarthy  <kevin@8t8.us> (39444350)

        * Minor edits to the README.

M	README

2018-11-07 13:38:53 -0800  Kevin McCarthy  <kevin@8t8.us> (f8153009)

        * Add some brief documentation on OAUTH support.
        
        These are just pulled from Brandon's commit message.

M	doc/manual.xml.head
M	init.h

2018-11-06 15:54:45 -0800  Kevin McCarthy  <kevin@8t8.us> (c9ab8553)

        * Add monitor.h to extra_sources list.

M	Makefile.am

2018-11-06 13:21:20 -0800  Kevin McCarthy  <kevin@8t8.us> (762c0c43)

        * Allow relative date hour/min/sec offsets.
        
        These might be useful for index-format-hook pattern matching for some
        people.

M	doc/manual.xml.head
M	pattern.c

2018-11-06 11:02:01 -0800  Kevin McCarthy  <kevin@8t8.us> (79741a49)

        * Fix a few memory leaks for idna conversion.

M	alias.c
M	init.c
M	sendlib.c

2018-11-05 17:44:20 -0800  Kevin McCarthy  <kevin@8t8.us> (fec121b2)

        * Document send-hooks are not executed for resumed messages.

M	doc/manual.xml.head

2018-11-05 16:19:03 -0800  Kevin McCarthy  <kevin@8t8.us> (1681a2ab)

        * Prevent $charset from having multiple values.
        
        Mutt relies on it being a single character set, but failed to make
        sure of that in check_charset().
        
        Thanks to Hans-Peter Jansen for reporting the problem, and to Mel
        Gorman for working with me to track down the issue in his
        configuration.

M	init.c

2018-10-31 12:19:56 -0700  Kevin McCarthy  <kevin@8t8.us> (e6059484)

        * Always print mutt_buffer_pool_free() size debug output.
        
        So I can easily see the resulting size of the pool at the end of a
        run.

M	buffer.c

2018-10-30 11:53:37 -0700  Kevin McCarthy  <kevin@8t8.us> (5de55f85)

        * Add a flag for dynamic date range evaluation in patterns.
        
        By default, Mutt evaluates relative date patterns, such as "~d<1d"
        against the date when the pattern is compiled.
        
        For index-format-hook, we need to pattern match against a message
        based on the current date/time, so that for example, conditional date
        format patterns correctly match after Mutt has been open for many
        days/weeks.
        
        Add a flag, MUTT_PATTERN_DYNAMIC, that changes ~d and ~r evaluation to
        reevaluate the min/max range with each match.
        
        This will of course be slower, but for the index, where a screenful of
        messages at a time are evaluated, is an acceptable tradeoff against
        accurate pattern matching.

M	hook.c
M	mutt.h
M	pattern.c

2018-10-29 13:45:02 -0700  Kevin McCarthy  <kevin@8t8.us> (7ebb6205)

        * Add index-format-hook and expando.
        
        index-format-hook is used to allow dynamic insertion/evaluation of
        format strings into $index_format.
        
        It can be used, for example, to implement date formatting based on the
        age of the message.
        
        Add a new %@name@ expando to $index_format, which evaluates the
        matching index-format-hooks with "name".

M	doc/manual.xml.head
M	hdrline.c
M	hook.c
M	init.c
M	init.h
M	mutt.h
M	protos.h

2018-10-30 08:55:52 -0700  Kevin McCarthy  <kevin@8t8.us> (5cfbcf52)

        * Fix memory leak on error in eat_regexp() and eat_date().

M	pattern.c

2018-10-23 12:29:26 +0200  Peter Wu  <peter@lekensteyn.nl> (7c6d3851)

        * Fix memleaks of saslconn on error paths
        
        If mutt_sasl_client_new returns an error, the callers would ignore the
        allocated saslconn resource from sasl_client_new. Be sure to release
        these with sasl_dispose as documented in sasl.h. Likewise, let callers
        (POP/IMAP) dispose the resource on their error paths. SMTP was already
        taken care of. Found with LeakSanitizer in IMAP.

M	imap/auth_sasl.c
M	mutt_sasl.c
M	pop_auth.c

2018-10-16 17:42:35 -0700  Kevin McCarthy  <kevin@8t8.us> (420226ce)

        * Minor syntactic cleanup in mutt_print_attachment().
        
        Converting a return to a rc assignment accidentally left an extra
        parenthesis.

M	attach.c

2018-10-16 17:35:54 -0700  Kevin McCarthy  <kevin@8t8.us> (42481bda)

        * Ensure a resized empty buffer is null-terminated.
        
        The new buffer code is using the pool, which ensures its buffers are
        null-terminated.
        
        However, if a "new" buffer from another part of the code were passed
        to one of the temporary interfaces that resizes the buffer, it's
        possible a non-terminated string might end up being passed through.
        
        It's reasonable to expect mutt_b2s() for a "new" buffer should be the
        same as after it is resized larger.  So ensure the resulting buf->data
        is properly terminated to avoid surprises.

M	buffer.c

2018-10-16 16:04:57 -0700  Kevin McCarthy  <kevin@8t8.us> (dd1e0ea4)

        * Remove conversion of nbsp to space.
        
        Keep the behavior of it not line-breaking, but don't change it to a
        space character when displaying.  This is so copy-paste from the pager
        will preserve the nbsp, which is semantically important in some
        locales.

M	pager.c

2018-10-14 14:35:21 -0700  Kevin McCarthy  <kevin@8t8.us> (b02a9d75)

        * Convert mutt_print_attachment to use BUFFER.

M	attach.c

2018-10-14 14:02:20 -0700  Kevin McCarthy  <kevin@8t8.us> (fde5478c)

        * Convert mutt_view_attachment to use BUFFER.

M	attach.c
M	protos.h

2018-10-14 13:02:20 -0700  Kevin McCarthy  <kevin@8t8.us> (162e7cc6)

        * Convert mutt_edit_attachment to use BUFFER.

M	attach.c

2018-10-14 16:18:53 -0700  Kevin McCarthy  <kevin@8t8.us> (ffdf38d7)

        * Convert mutt_compose_attachment to use BUFFER.

M	attach.c
M	rfc1524.c
M	rfc1524.h

2018-10-14 12:52:30 -0700  Kevin McCarthy  <kevin@8t8.us> (c619d5cb)

        * Convert mutt_get_tmp_attachment to use BUFFER.

M	attach.c

2018-10-14 19:02:47 -0700  Kevin McCarthy  <kevin@8t8.us> (57caae48)

        * Add mutt_buffer_adv_mktemp() transition function.

M	muttlib.c
M	protos.h

2018-10-14 18:36:08 -0700  Kevin McCarthy  <kevin@8t8.us> (f6d9a980)

        * Add mutt_buffer_mktemp() transition function.
        
        This is self-contained and easy to translate, so instead just create
        an alternate implementation using BUFFER.

M	muttlib.c
M	protos.h

2018-10-14 15:48:07 -0700  Kevin McCarthy  <kevin@8t8.us> (4781461c)

        * Add rfc1524 buffer function interfaces for attach.c conversion.
        
        The rfc1524 functions call, and are called by, many functions that
        need to be converted.  But to keep the conversion manageable, install
        helper interface functions that pass the buffer->data and
        buffer->dsize in and adjust the buffer->dptr afterwards.

M	buffer.c
M	buffer.h
M	rfc1524.c
M	rfc1524.h

2018-10-10 13:08:27 -0700  Kevin McCarthy  <kevin@8t8.us> (b231f15a)

        * Convert the rest of mh.c to use BUFFER for file paths.
        
          * mh_read_sequences
          * mh_sequences_changed
          * mh_already_notified
          * mh_mkstemp
          * mh_update_sequences
          * mh_sequences_add_one
          * maildir_update_time
          * maildir_delayed_parsing
          * maildir_open_mailbox_append
          * mh_open_mailbox_append
          * maildir_mh_open_message
          * maildir_open_new_message
          * _mh_commit_message
          * mh_rewrite_message
          * mh_sync_mailbox
          * mh_check_mailbox
          * maildir_check_empty
          * mx_is_maildir
          * mx_is_mh()

M	mh.c

2018-10-10 12:50:15 -0700  Kevin McCarthy  <kevin@8t8.us> (14b0178d)

        * Add a comment about gnutls date bits in certstat.
        
        It's easy to miss the call disabling date checking and wonder why the
        certstat bits are not set.

M	mutt_ssl_gnutls.c

2018-10-09 14:39:09 -0700  Kevin McCarthy  <kevin@8t8.us> (d6581efc)

        * Change gnutls certificate_file processing and interactive prompts.
        
        Accept a saved cert at any point in the chain, except for those
        revoked or with invalid dates.
        
        The INSECUREALG processing was a bit goofed up.  It was skipping the
        prompt for every chain except the host, and was only displaying an
        error for entry 1 (the host being 0, root being len-1).  Instead
        prompt at any point, and display a warning as with the other errors.
        
        Add a CERTERR_OTHER type to capture other bits.  Recently GnuTLS has
        added additional certificate_status_t types.  We may want to improve
        the prompts in the future for those, but for now at least make sure
        it's recorded in certerr.

M	mutt_ssl_gnutls.c

2018-10-09 13:28:15 -0700  Kevin McCarthy  <kevin@8t8.us> (ea1ea1e5)

        * Fix gnutls (a)lways to properly save for all certerr values.
        
        For the case of SIGNERNOTCA, INSECUREALG, or a newer unhandled value,
        the "(a)ccept always" prompt was allowed, but the cert saving was
        prevented by a check only against NOTTRUSTED.  This ended up giving a
        strange error message saying the cert was not saved.
        
        Fix to save the cert for all errors except HOSTNAME (which is handled
        separately).

M	mutt_ssl_gnutls.c

2018-10-07 19:08:42 -0700  Kevin McCarthy  <kevin@8t8.us> (85ac2c1d)

        * Convert maildir_canon_filename() and callers to use BUFFER.
        
        Callers are maildir_check_mailbox(), _maildir_open_find_message(), and
        maildir_open_find_message().

M	mh.c

2018-10-07 16:17:36 -0700  Kevin McCarthy  <kevin@8t8.us> (112f81d8)

        * Convert maildir_sync_message to use BUFFERs.

M	mh.c

2018-10-07 15:48:17 -0700  Kevin McCarthy  <kevin@8t8.us> (766e76ee)

        * Convert _maildir_commit_message to use BUFFER.

M	mh.c

2018-10-07 15:31:40 -0700  Kevin McCarthy  <kevin@8t8.us> (de6d6180)

        * Convert maildir_parse_dir to use BUFFER.
        
        Note: the uses of buf and tmp don't overlap, so we only use a single
        BUFFER.

M	mh.c

2018-10-07 15:18:34 -0700  Kevin McCarthy  <kevin@8t8.us> (90a53062)

        * Convert buffy_maildir_check_dir to use BUFFER.

M	buffy.c

2018-10-08 10:36:13 -0700  Kevin McCarthy  <kevin@8t8.us> (3405aeee)

        * Convert mix_send_message to use buffer pool.

M	remailer.c

2018-10-08 10:48:29 -0700  Kevin McCarthy  <kevin@8t8.us> (1e1d7b7a)

        * Create mutt_buffer_add_printf().
        
        Change mutt_buffer_printf() to overwrite the buffer contents, like
        mutt_buffer_strcpy().
        
        mutt_buffer_add*() functions append to the buffer contents.

M	buffer.c
M	buffer.h
M	imap/command.c
M	imap/imap.c
M	imap/message.c
M	imap/util.c
M	pattern.c

2018-10-06 15:07:27 -0700  Kevin McCarthy  <kevin@8t8.us> (2d373eba)

        * Convert imap_rename and pgp_invoke_list_keys to use buffer pool.

M	imap/imap.c
M	pgpinvoke.c

2018-10-06 13:53:33 -0700  Kevin McCarthy  <kevin@8t8.us> (619fe069)

        * Add buffer pool functions.
        
        Also add a few helper functions: mutt_buffer_clear(),
        mutt_buffer_strcpy(), and a macro mutt_b2s to grab the buffer data as
        a const char *.

M	buffer.c
M	buffer.h
M	init.c
M	main.c

2018-10-06 13:08:13 -0700  Kevin McCarthy  <kevin@8t8.us> (563afcc1)

        * Rearrange and clean up buffer functions.

M	buffer.c
M	buffer.h

2018-10-06 12:43:17 -0700  Kevin McCarthy  <kevin@8t8.us> (f3c70b58)

        * Break buffer functions into separate source file.

M	Makefile.am
A	buffer.c
A	buffer.h
M	mutt.h
M	muttlib.c
M	protos.h

2018-10-05 10:04:27 -0700  Kevin McCarthy  <kevin@8t8.us> (caeda713)

        * Improve info install/uninstall checks.
        
        Make sure install-info exists before using it.
        
        Make sure target mutt.info exists before calling `install-info
        --delete`.  Add a few missing '-f' force flags to removals during
        uninstall.

M	doc/Makefile.am

2018-10-04 12:06:27 -0700  Kevin McCarthy  <kevin@8t8.us> (95c4c5c2)

        * Build info file documentation.
        
        If docbook2x-texi and makeinfo are installed, convert the docbook file
        to info and install as another source for the manual.

M	.gitignore
M	configure.ac
M	doc/Makefile.am
M	doc/manual.xml.head

2018-10-03 22:36:32 +0200  Max Görner  <max@familie-goerner.eu> (8a0d03d9)

        * Adapt translation of "Subject" in help text
        
        In the help text, "Subject" was not translated. Since it is translated
        by "Betreff" at other locations, this was adapted.

M	po/de.po

2018-10-03 22:32:44 +0200  Max Görner  <max@familie-goerner.eu> (17f58246)

        * Translate ERROR by FEHLER

M	po/de.po

2018-10-03 22:28:57 +0200  Max Görner  <max@familie-goerner.eu> (1fd2c85b)

        * Add several "Durchkopplungsbindestrich" to some German translations
        
        While up to personal taste to a certain extent, in general it is more
        appropriate to use dashes instead of spaces to to combine related but
        distinct terms.
        
        This commit introduces dashes, so called Durchkopplungsbindestriche, to
        some of the terms, were found more suiting.

M	po/de.po

2018-10-03 22:20:30 +0200  Max Görner  <max@familie-goerner.eu> (fb34e79c)

        * Fix typos in German translation
        
        There were some typos in the German translation. Those found by a brief
        inspection are fixed now.

M	po/de.po

2018-09-28 15:08:19 -0700  Kevin McCarthy  <kevin@8t8.us> (f3e0742a)

        * Convert pgp_invoke_list_keys and mix_send_message to use BUFFERs.
        
        Both repetitively perform a lot of copying back in forth, which is
        much cleaner with a BUFFER.
        
        Note that in pgp_invoke_list_keys, if there are no hints uids->data
        would be NULL.  However, the pgp_invoke() checks and wraps all the
        format substitutions with NONULL.

M	pgpinvoke.c
M	remailer.c

2018-09-28 14:22:09 -0700  Kevin McCarthy  <kevin@8t8.us> (a97543c3)

        * Change imap_rename_mailbox to use a BUFFER.

M	imap/imap.c

2018-09-27 17:29:16 -0700  Kevin McCarthy  <kevin@8t8.us> (51efb726)

        * Increase buffer sizes for some IMAP commands.
        
        Use to ensure assembled IMAP commands fit in the resultant buffer to
        be imap_exec()'ed.
        
        RFC2683 suggested a limit of 1000, but asked servers to accept up to
        8000.  Furthermore, RFC7162 bumped the client limit suggestion up to
        8192.  So I don't believe any issues will be caused by this.
        
        Most of these are increases are just to remove theoretical truncation
        warned about by the compiler; I don't believe we've had reports of
        actual command truncation due to a mailbox 1024 characters long.

M	imap/browse.c
M	imap/imap.c
M	imap/message.c
M	lib.h

2018-09-27 15:03:40 -0700  Kevin McCarthy  <kevin@8t8.us> (b181996c)

        * Add regfree to configure regex test.
        
        This allows to run the system regex lib even when compiling with
        ASAN.  Previously, ASAN would report the regex_t leak and change the
        exit code.

M	configure.ac

2018-09-25 19:03:56 -0700  Kevin McCarthy  <kevin@8t8.us> (999d85c6)

        * Fix non-threaded $sort_aux "reverse-" sorting.
        
        The secondary sort was looking at (Sort & SORT_REVERSE) instead
        of (SortAux & SORT_REVERSE), so wasn't even performing the reverse
        based on the correct flag.
        
        Additionally, afterwards, the primary sort was improperly applying a
        reverse when the secondary sort returned non-zero.
        
        Change SORTCODE() to look at SortAux when we are inside a secondary
        sort.
        
        Change AUXSORT() to return the result if the secondary sort returns
        non-zero.  It is ugly to put a return inside the macro, but the check
        for non-zero needs to be performed inside the AUXSORT if branch.
        
        If the secondary sort returns 0, then the primary sort can still
        compare index and apply a reverse as needed.

M	init.h
M	sort.c

2018-09-22 09:57:30 -0700  Kevin McCarthy  <kevin@8t8.us> (f8196e20)

        * Merge branch 'stable'

2018-09-22 09:53:55 -0700  Kevin McCarthy  <kevin@8t8.us> (f9293d64)

        * Increase user/pass field sizes in auth_login.
        
        account.pass was previously increased to 256 in cd421c13.  Also, the
        buf should be bigger than the user+pass+"LOGIN", so bump it up too.

M	imap/auth_login.c

2018-09-21 17:13:02 -0700  Kevin McCarthy  <kevin@8t8.us> (8ac10368)

        * Add output during smime_keys purpose flag checking.

M	smime_keys.pl

2018-09-17 19:40:22 -0700  Kevin McCarthy  <kevin@8t8.us> (4350694b)

        * Send imap keepalives for interactive filters.
        
        When viewing attachments externally with a (non-copiousoutput) mailcap
        entry missing %s, the command is invoked as a filter, with the
        attachment piped into stdin.  However, unlike a filter, the user
        interacts with the command, instead of just displaying the output in
        the pager.
        
        Just as with the mutt_system() command, Mutt needs to send imap
        keepalives to keep those connections from closing during the
        potentially extended invocation.
        
        Thanks to John Hawkinson for the bug report, and his suggested patch,
        which this commit is based upon.

M	attach.c
M	filter.c
M	protos.h

2018-09-14 14:23:04 -0700  Kevin McCarthy  <kevin@8t8.us> (668b76f2)

        * Remove purpose checks in smime_keys.pl verify step.
        
        The purpose checks are subsequently performed, and added as a field to
        the .index.  In any case, it turns out passing multiple '-purpose'
        arguments isn't even correct: openssl appears to just use the last
        one.
        
        Thanks to David J. Weller-Fahy for reporting the problem, and for
        including a possible patch.

M	smime_keys.pl

2018-09-14 14:21:04 -0700  Kevin McCarthy  <kevin@8t8.us> (2a0afe07)

        * Free queries and alias_queries before exiting.

M	main.c

2018-09-12 18:23:00 -0700  Kevin McCarthy  <kevin@8t8.us> (488e9cd7)

        * Change imap_conn_find() to always return an authenticated conn.
        
        With the flag MUTT_IMAP_CONN_NONEW, it was already ensured the
        connection would be authenticated.  However, without that flag, an
        error in opening the connection or authentication would still return
        an idata.
        
        The callers that didn't bother to check the state were still assuming
        authenticated, because they were all subseqeuently issuing an
        "authenticated state" command to the server.
        
        Rather than add state checks to every caller, just change the function
        to return NULL if the idata did not end up in an authenticated state.
        
        Remove the now redundant state checks in imap_open_mailbox() and
        imap_get_mailbox().

M	imap/imap.c

2018-09-02 14:43:04 -0700  Kevin McCarthy  <kevin@8t8.us> (9ed4bf53)

        * Change compress examples to type "example" rather than "sect4".

M	doc/manual.xml.head

2018-09-02 14:22:09 -0700  Kevin McCarthy  <kevin@8t8.us> (34ea7e4c)

        * Clean up documentation link targets.
        
        Move link targets for iconv-hook and sidebar_whitelist to the
        beginning of a section, rather than a link embedded inside a command.

M	doc/manual.xml.head

2018-09-02 20:53:41 +0200  Vincent Lefevre  <vincent@vinc17.net> (c8112503)

        * Updated French translation.

M	po/fr.po

2018-09-01 09:47:07 -0700  Cody Brownstein  <cbrownstein@liquidityllc.com> (daf66918)

        * Fix typo

M	init.h

2018-08-31 15:50:00 -0700  Kevin McCarthy  <kevin@8t8.us> (1b4860a5)

        * Convert certificate prompts to show sha-256 instead of md5.
        
        Due to the length of the sha-256 fingerprint, split the output into
        two lines.
        
        Note that this change now requires OpenSSL 0.9.8+ [2005-07-05], and
        GnuTLS 1.7.4+ [2007-02-05].

M	mutt_ssl.c
M	mutt_ssl_gnutls.c

2018-08-29 15:08:19 -0700  Kevin McCarthy  <kevin@8t8.us> (a2b28936)

        * Rename pgpring to mutt_pgpring.
        
        pgpring is used by another common package, signing-party.  At the
        request of ArchLinux, I am renaming our version to be prefixed by
        "mutt_" in order to remove a naming conflict.
        
        This is a minor inconvenience for pgp2, pgp5, and pgp6 users, but I
        believe this constitutes an extremely small number of users at this
        point.
        
        I am keeping pgpewrap as-is because it is also used by GnuPG, and has
        no such naming conflict.

M	.gitignore
M	Makefile.am
M	configure.ac
M	contrib/pgp2.rc
M	contrib/pgp5.rc
M	contrib/pgp6.rc
M	doc/Makefile.am
M	doc/PGP-Notes.txt
M	doc/mutt.man
M	doc/pgpring.man
M	init.h

2018-08-29 13:00:14 -0700  Kevin McCarthy  <kevin@8t8.us> (6216a753)

        * Remove extra lstats() in safe_rename() upon link success.
        
        I originally kept the lstat()'s in order to make as few changes as
        possible to the function.  However, Derek Martin argues correctly that
        if we are trusting the link() 0-retval, the lstats are unnecessary and
        in fact can cause a performance impact over NFS.

M	lib.c

2018-08-26 18:43:20 -0700  Kevin McCarthy  <kevin@8t8.us> (2d889227)

        * Add additional error handling to safe_rename().
        
        It is apparently possible for link() to return an error but the link
        to still be created.  Add a double check for that case.  If the files
        match, unlink the src and return success.

M	lib.c

2018-08-28 17:43:46 +0200  Tommi A Pirinen  <tommi.antero.pirinen@uni-hamburg.de> (462710bd)

        * new Finnish translation

M	configure.ac
A	po/fi.po

2018-08-28 14:07:31 +0200  Vincent Lefevre  <vincent@vinc17.net> (22d20f50)

        * Updated French translation.

M	po/fr.po

2018-08-28 13:59:40 +0200  Vincent Lefevre  <vincent@vinc17.net> (39e1eb86)

        * Updated French translation.

M	po/fr.po

2018-08-26 16:10:13 -0700  Kevin McCarthy  <kevin@8t8.us> (426a6c12)

        * Merge branch 'stable'

2018-08-26 16:08:06 -0700  Kevin McCarthy  <kevin@8t8.us> (c7695a40)

        * Fix alias documentation examples.
        
        Thanks to Cody Brownstein for pointing out the problem.

M	doc/manual.xml.head

2018-08-24 15:49:49 -0700  Kevin McCarthy  <kevin@8t8.us> (c041375c)

        * Change $query_format to use mutt_format_s.
        
        Use the character-cell width functions so that multibyte output is
        properly formatted.

M	query.c

2018-08-24 12:56:54 -0700  Kevin McCarthy  <kevin@8t8.us> (fa620776)

        * Display an error message if syncing fails.
        
        Ticket 36 reported an issue where a maildir was removed while the
        mailbox was opened.  Later, attempting to sync displayed the message
        "Writing xxx...", which remained on the screen.  The reporter actually
        thought mutt was frozen, but it was simply that on a sync error Mutt
        wasn't clearing or updating the message window.
        
        There is some error message handling for mbox.c check_mailbox, but I
        don't think that is the right place to further propogate messages.
        Instead, add an error to the same place the initial "Writing..."
        message is created.

M	mx.c

2018-08-22 15:07:45 -0700  Kevin McCarthy  <kevin@8t8.us> (32734a9f)

        * Add compose-to-sender functionality.
        
        This patch is loosely based on the NeoMutt feature, but adds in
        support for the attach menu, reuses functionality in send.c, and has
        proper mode checks.
        
        Thanks to Enno for the opening the ticket requesting the port.

M	OPS
M	attach.h
M	curs_main.c
M	functions.h
M	mutt.h
M	pager.c
M	recvattach.c
M	recvcmd.c
M	send.c

2018-08-21 15:51:09 -0700  Kevin McCarthy  <kevin@8t8.us> (1d3b82b7)

        * Fix nested macro warning.
        
        Pull the #if/#else outside of the snprintf in imap.c.  On some
        platforms, snprintf is a macro itself, which leads to a warning about
        undefined behavior.
        
        Thanks to Charles Diza for pointing out the problem.

M	imap/imap.c

2018-08-14 14:31:34 -0700  Kevin McCarthy  <kevin@8t8.us> (38647ab9)

        * Remove compare_stat() call in safe_rename().
        
        Some filesystems, such as sshfs, implement hard links strangely.  The
        hard link is created, but is represented by a different inode number
        by the sshfs layer.  The current maildir code goes into an infinite
        loop in this case.  Remove the compare_stat() and trust that a link()
        return code of 0 means the link really did get created.  Still, keep
        the stats just as a minor check.

M	lib.c

2018-08-21 15:18:24 -0700  Kevin McCarthy  <kevin@8t8.us> (ec9098a4)

        * Merge branch 'stable'

2018-08-21 15:00:23 -0700  Kevin McCarthy  <kevin@8t8.us> (78db40f2)

        * Add autoconf check for libunistring when checking for idn2.
        
        -lunistring is only explicitly needed when compiling statically, so
        add a AC_SEARCH_LIBS to add it to LIBS if it is found.
        
        Thanks to Fabrice Fontaine for the heads-up about the problem and the
        merge request.

M	configure.ac

2018-08-16 11:49:13 +0200  Vincent Lefevre  <vincent@vinc17.net> (b1a9ccad)

        * Updated French translation.

M	po/fr.po

2018-08-15 16:13:45 -0700  Kevin McCarthy  <kevin@8t8.us> (7ca3b14b)

        * Allow ctrl-c to interrupt initial IMAP header download.
        
        Once the mailbox is open, it is significantly more complicated to
        abort and keep Mutt from crashing.  But during the initial
        open/download Mutt is prepared to close the mailbox cleanly on
        failure.

M	imap/message.c

2018-08-14 14:04:05 -0700  Kevin McCarthy  <kevin@8t8.us> (5ce9030c)

        * Remove legacy trim_incomplete_mbyte() in the pager.
        
        Commit 4b1deb57 added the trim_incomplete_mbyte() call, but at
        that time, the function was using fgets() into a fixed-sized
        buffer.  The function was passing in "blen - 1" to the size
        parameter of fgets, so the check for blen-2 was to see if the
        buffer was completely filled by the fgets.
        
        Commit d39d9c0c converted to use a dynamic buffer, but the
        trim_incomplete_mbyte() was left in.  It now serves no purpose
        because the entire line will be read in.  Presumably the buggy
        regexp lib should have been fixed by now too.

M	pager.c

2018-08-13 19:02:32 -0700  Kevin McCarthy  <kevin@8t8.us> (e8b626bc)

        * Don't match $abort_noattach_regexp on quoted lines.

M	send.c

2018-08-13 18:56:37 -0700  Kevin McCarthy  <kevin@8t8.us> (a1cf2012)

        * Refactor out mutt_is_quote_line().
        
        This makes resolve_types() a tiny bit clearer, and will be usable by
        $abort_noattach.

M	pager.c
M	protos.h

2018-08-13 18:22:58 -0700  Kevin McCarthy  <kevin@8t8.us> (f721883d)

        * Convert abort_noattach scan to use mutt_read_line().
        
        I should have fixed this up before committing the patch.

M	send.c

2018-08-13 09:43:55 -0700  Kevin McCarthy  <kevin@8t8.us> (fe455d5f)

        * Only sync CONDSTORE and QRESYNC on the initial download.
        
        In the midst of the imap_read_headers() refactor, I forgot to put this
        guard on the /MODSEQ and /UIDSEQSET storage.
        
        Because we don't deal with flag sync issues while the mailbox is open,
        or when it closes, we only want to write those values to the header
        cache during the initial download.
        
        It makes no sense to perform all the header cache work if new messages
        come into an open empty mailbox, so add a parameter to flag the
        initial download, rather than check for msn_begin==1.

M	imap/command.c
M	imap/imap.c
M	imap/imap_private.h
M	imap/message.c

2018-08-12 22:02:38 +0200  Vincent Lefevre  <vincent@vinc17.net> (289e5c8e)

        * Updated French translation.

M	po/fr.po

2018-08-11 19:14:10 -0700  Kevin McCarthy  <kevin@8t8.us> (b88aaeb3)

        * Add more doc for the $imap_condstore and $imap_qresync options.

M	init.h

2018-08-11 17:59:54 -0700  Kevin McCarthy  <kevin@8t8.us> (a056404c)

        * Always check UID vs MSN when handling FETCH.
        
        Ensure the UID vs MSN check is always done before flags are processed,
        not just if the UID happened to appear before the FLAGS.
        
        Improve the debug messages to make it clearer why a fetch response is
        being skipped.

M	imap/command.c

2018-05-26 16:02:04 -0700  Kevin McCarthy  <kevin@8t8.us> (3865d043)

        * Add QRESYNC support.
        
        Refactor imap_read_headers() to break into functions for the different
        queries.
        
        Move uid_hash population to the same place msn_index is populated.
        
        Change the VANISHED handler to not decrement MSNs for EARLIER.
        FastMail, at least, does assume there are no gaps, and really it makes
        no sense for there to be.  Further testing will be needed.

M	imap/command.c
M	imap/imap.c
M	imap/imap_private.h
M	imap/message.c
M	imap/util.c
M	init.h
M	mutt.h

2018-05-24 13:26:35 -0700  Kevin McCarthy  <kevin@8t8.us> (868aaa48)

        * Add utility functions for QRESYNC support.
        
        * Add function to generate uid_seqset for header cache.
          This will be used by QREFRESH to reconstruct the msn_index state.
        
        * Add seqset data structure and iterator functions.
        
        * Add cmd_parse_vanished, for QRESYNC support.
        
        * Add and enable QRESYNC capability.
        
        * Create helper functions to store and retrieve the uid_seqset.

M	imap/command.c
M	imap/imap.c
M	imap/imap_private.h
M	imap/message.c
M	imap/util.c

2018-05-14 18:12:39 -0700  Kevin McCarthy  <kevin@8t8.us> (9079c2a8)

        * Add basic CONDSTORE support when fetching initial messages.
        
        Store MODSEQ in the header cache, and use that to perform a "FETCH
        CHANGEDSINCE" for header updates when initially downloading messages.
        
        Further improvements could be made to add support when syncing.
        Handling MODSEQ for FLAG updates while the mailbox is open would be
        complicated by the fact that Mutt supports locally modified headers,
        so we couldn't accept the new (or subsequent) MODSEQ.
        
        However, this initial step may at least provide some benefit when
        opening the mailbox, which is generally the most time and data
        intensive.

M	imap/command.c
M	imap/imap.c
M	imap/imap_private.h
M	imap/message.c
M	imap/message.h
M	init.h
M	lib.c
M	lib.h
M	mutt.h

2018-05-26 14:46:16 -0700  Kevin McCarthy  <kevin@8t8.us> (b13a4ba6)

        * Create mutt_buffer_increase_size() function.
        
        This will allow preallocating buffers that we know are going to be
        big for qresync support.
        
        This will also be useful for buffer pools later on.

M	muttlib.c
M	protos.h

2018-07-28 18:43:31 -0700  Kevin McCarthy  <kevin@8t8.us> (10c1ac4b)

        * Move exit cleanup in main() to end of function.
        
        Route exits to the same place to ensure uniform cleanup.
        
        Message printing is a bit of a mess, but for now, try to keep the
        exact same behavior.

M	main.c

2018-07-28 15:26:34 -0700  Kevin McCarthy  <kevin@8t8.us> (911df435)

        * Fix -z and -Z options to work with IMAP.
        
        -Z did not work if $imap_passive was set (the default).  I think using
        the option implies the desire to open a new connection and check
        buffy at startup, so temporarily turn it off during the buffy.
        
        -z was not hooked up for IMAP.  Change it to call imap_status().  This
        also requires $imap_passive be unset, so temporarily turn the option
        off too.

M	imap/imap.c
M	imap/imap.h
M	main.c
M	mx.c

2018-07-28 13:16:50 -0700  Kevin McCarthy  <kevin@8t8.us> (6db2f9d1)

        * Add a note about doc/manual.tex generation.
        
        The invocation doesn't work for me, but does work for Ken.  I'm
        reluctant to touch and break it for existing users, so instead
        add a note to the Makefile.am.  Perhaps someone with more knowledge of
        those tools can make it portable.

M	doc/Makefile.am

2018-07-28 12:59:35 -0700  Kevin McCarthy  <kevin@8t8.us> (8a81930d)

        * Fix AUXSORT usage in compare_spam.
        
        AUXSORT already checks if the first parameter is zero.
        
        Additionally, the macro expands into more than one statement, so
        putting inside an unbracketed if is misleading and generates a
        warning on the latest gcc.
        
        Fortunately, both statements checked if the first parameter was zero,
        so no actual bug resulted.

M	sort.c

2018-07-26 15:34:50 -0700  Ken Moffat  <zarniwhoop@ntlworld.com> (2af6caa1)

        * Fix manual.pdf toc page numbers.
        
        When TeX engines are not run sufficient times there are undefined
        references - for manual.tex the page numbers in the Table of
        Contents and the List of Tables render as '??'.  In this case:
        
        Then shalt thou count to three, no more, no less.

M	doc/Makefile.am

2018-07-25 18:16:34 -0700  Kevin McCarthy  <kevin@8t8.us> (5f5dc70f)

        * Add message padding to ctx->vsize computation.
        
        Use the mx_msg_padding_size() from the previous commit to be more
        precise about the correct vsize.
        
        This avoids strange situations where all the message are displayed in
        a limit, but the vsize is not equal to the size.

M	curs_main.c
M	mx.c
M	pattern.c
M	thread.c

2018-07-25 17:52:40 -0700  Kevin McCarthy  <kevin@8t8.us> (9806d249)

        * Add mx_ops.msg_padding_size to return the padding for a mx type.
        
        Mbox pads with a 1 byte, while mmdf pads with 10.  Because compress
        depends on the child type, we create a mx_ops, which allows compress.c
        to delegate to the child ops.

M	compress.c
M	mailbox.h
M	mbox.c
M	mutt.h
M	mx.c

2018-07-24 18:23:25 -0700  Kevin McCarthy  <kevin@8t8.us> (7b998416)

        * Skip sort in mbox_sync_mailbox() when new/reopen occurs.
        
        Callers of mx_sync_mailbox() and mx_close_mailbox() already check for
        those cases and call update_index().  So remove the need_sort flag
        setting when mbox_check_mailbox() returns new/reopen inside
        mbox_sync_mailbox().

M	mbox.c

2018-07-24 18:12:20 -0700  Kevin McCarthy  <kevin@8t8.us> (1147aed6)

        * Handle reopen/new_mail when closing mailbox in <imap-logout-all>.
        
        Other callers, such as OP_QUIT, OP_MAIN_CHANGE_FOLDER, and
        OP_MAIN_SYNC_FOLDER handle the case where a sync or close_mailbox
        fails due to new mail or a reopen.
        
        OP_MAIN_LOGOUT_ALL appears to have been accidentally missed.  Add a
        call to update_index() to properly sort and update vcounts.

M	curs_main.c

2018-07-24 03:52:41 +0200  Vincent Lefevre  <vincent@vinc17.net> (2030998e)

        * Add ctx->vsize = 0 in a couple of places.
        
        It is not clear whether this is needed, but in both cases, the old value
        (if not 0) is obsolete. If there is a bug somewhere else about vsize, it
        will be easier to notice it.

M	mbox.c
M	sort.c

2018-07-22 02:57:32 +0200  Vincent Lefevre  <vincent@vinc17.net> (1f3a9df8)

        * Improved limit-to-all detection by skipping leading spaces of the pattern.
        
        There are many equivalent limit-to-all patterns, but in practice, one
        may want to limit to " ~A" in order to prevent the pattern from being
        recorded in the history. Thus it is important to detect at least this
        pattern and similar ones.

M	pattern.c

2018-07-22 01:46:03 +0200  Vincent Lefevre  <vincent@vinc17.net> (9a314f02)

        * Bug fix: reset ctx->vsize in update_index_unthreaded on reopened mailbox.
        
        This fixes a bug observed when doing the following:
        1. Start Mutt on some mailbox.
        2. Limit the view.
        3. Set sort by date (thus unthreaded).
        4. Set $status_format to display the size of the messages shown (%L).
        5. Copy a message matching the limit pattern to this mailbox.
        6. With another Mutt instance, remove this message from this mailbox.
        7. Move the cursor to update the view.
        Result: one was getting a value equal to twice the initial size.

M	curs_main.c

2018-07-22 01:35:32 +0200  Vincent Lefevre  <vincent@vinc17.net> (b9eddeab)

        * Cleanup: avoid an ugly local preprocessor macro.
        
        Note: This macro was also hiding the use of a variable, making the code
        difficult to read.

M	curs_main.c
M	pattern.c

2018-07-19 20:28:38 -0700  Kevin McCarthy  <kevin@8t8.us> (1d41321a)

        * Display matching new messages in a thread-limited index.
        
        Previously, the index performed pattern matching first, and then
        resorted new mail.  The problem was that thread-limiting patterns,
        e.g. ~(pattern), require threading data to properly match against the
        new messages.
        
        We already save new messages for the purposes of uncollapsing threads.
        To keep the code cleaner, split off update_index() into
        update_index_threaded()/unthreaded().  Then for threaded mode, save
        the new messages first.  We can then sort (before pattern matching),
        and use the save_new array to pattern match the new messages
        afterwards.
        
        The $uncollapse_new loop was unnecessarily performing a n^2 search.
        Simplify to just iteratate over the save_new instead.

M	curs_main.c

2018-07-17 10:04:24 -0700  Kevin McCarthy  <kevin@8t8.us> (f0772c95)

        * Minor documentation fix.

M	doc/manual.xml.head

2018-07-17 17:06:45 +0200  Vincent Lefevre  <vincent@vinc17.net> (644699c8)

        * Updated French translation.

M	po/fr.po

2018-06-26 15:42:08 -0700  Brandon Long  <blong@fiction.net> (98cc4236)

        * Improve OAUTHBEARER support.
        
        Move token refresh commands to their own config variables. Consolidate
        code for refreshing tokens and generating the SASL OAUTHBEARER
        argument in account.c. Add support for OAUTHBEARER to pop.
        
        Fix pop_auth_oauth() mutt_from_base64() call from 1.10.1 release.

M	account.c
M	account.h
M	globals.h
M	imap/auth_oauth.c
M	init.h
M	pop_auth.c
M	smtp.c

2018-07-16 09:58:43 -0700  Kevin McCarthy  <kevin@8t8.us> (363c3a95)

        * Merge branch 'stable'

2018-07-16 09:52:23 -0700  Kevin McCarthy  <kevin@8t8.us> (ed9d7727)

        * automatic post-release commit for mutt-1.10.1

M	ChangeLog
M	UPDATING
M	VERSION

2018-07-07 19:34:32 -0700  Kevin McCarthy  <kevin@8t8.us> (594f111b)

        * Merge branch 'stable'

2018-07-07 19:18:55 -0700  Kevin McCarthy  <kevin@8t8.us> (97e5c358)

        * Merge branch 'stable'

2018-07-02 12:39:14 +0200  Vincent Lefevre  <vincent@vinc17.net> (686fb81e)

        * Updated French translation.

M	po/fr.po

2018-07-02 12:25:13 +0200  Vincent Lefevre  <vincent@vinc17.net> (b3e41194)

        * Add dependencies for keymap_alldefs.h in po/Makefile.in.in
        
        These dependencies are based on those from Makefile.am and are needed
        so that "make update-po" gets the new strings from OPS, etc.

M	po/Makefile.in.in

2018-07-01 20:43:24 -0700  Kevin McCarthy  <kevin@8t8.us> (f472eebd)

        * smime_handle_entity() cleanup.
        
        Remove redundant NULL assignments after safe_fclose() calls.
        
        Remove some trailing spaces.
        
        smimeout can't be NULL, so remove the check around the output
        translation block.

M	smime.c

2018-07-01 20:13:11 -0700  Kevin McCarthy  <kevin@8t8.us> (099f4dd4)

        * Void passphrase on s/mime decryption error.
        
        Model this after pgp's pgp_decrypt_part(), which checks if fpout is
        empty.

M	smime.c

2018-06-28 20:17:23 -0700  Anton Lindqvist  <anton@basename.se> (ac7e2890)

        * Add check-stats function to calculate mailbox statistics.
        
        This allows the statistics to be updated without setting
        $mail_check_stats or before $mail_check_stats_interval has passed.

M	OPS
M	buffy.c
M	buffy.h
M	commands.c
M	curs_main.c
M	doc/manual.xml.head
M	functions.h
M	init.h
M	menu.c
M	pager.c
M	protos.h

2018-06-27 09:45:10 -0700  Kevin McCarthy  <kevin@8t8.us> (0e34a489)

        * Add a reference to $copy in the $record documentation.

M	init.h

2018-06-27 09:27:05 -0700  Kevin McCarthy  <kevin@8t8.us> (68d0e90f)

        * Reset all MonitorContext state on context removal.
        
        Reset both the descriptor and changed flag when the current context is
        removed.  Don't make this dependent on the context being valid or
        being found by monitor_resolve(), in case the context was closed due
        to some type of error condition.

M	monitor.c

2018-06-26 19:48:25 -0700  Kevin McCarthy  <kevin@8t8.us> (d28fe351)

        * Fix MonitorContextDescriptor update on removal.
        
        Reset the context descriptor before checking for the monitor being
        shared by another mailbox.  Technically, it would be set properly
        during the next add, but it shouldn't be left incorrect.

M	monitor.c

2018-06-25 17:54:43 -0700  Kevin McCarthy  <kevin@8t8.us> (550771fd)

        * Work around open mailbox monitor code check issue.
        
        The monitor code is too fast, and can result in all the changes for a
        single directory stat update being missed.
        
        Work around this issue by not recording stat time updates when the
        check_mailbox() is triggered by the monitor.  This will cause the next
        subsequent check to take another look.

M	mh.c
M	monitor.c
M	monitor.h

2018-06-25 13:13:55 -0700  Kevin McCarthy  <kevin@8t8.us> (fc040a5b)

        * Generate error if makedoc is missing a type.
        
        Add a comment in init.h to remind devs to update makedoc.c when adding
        a new type.
        
        Change makedoc to fail on a missing type.  Otherwise it's too easy to
        miss the resulting problem in the documentation.
        
        Credit goes to Eike Rathke for noting that it was too easy to forget
        to do this, and something should be fixed.  I found his solution a bit
        too complicated though, and opted for just adding comment and program
        failure.

M	doc/makedoc.c
M	init.h

2018-06-23 10:25:15 +0200  Eike Rathke  <erack@erack.de> (f24a1bca)

        * Make make ctags actually work
        
        make ctags broke with
        
        Making ctags in po
        make[1]: Entering directory '.../mutt/po'
        make[1]: *** No rule to make target 'ctags'.  Stop.
        make[1]: Leaving directory '.../mutt/po'
        Makefile:867: recipe for target 'ctags-recursive' failed
        make: *** [ctags-recursive] Error 1
        
        and once fixed the same in intl/
        
        Note that this ctags target scatters tags files over directories.
        If you use exuberant ctags then simply run
        ctags -R
        once in mutt's root dir instead.

M	intl/Makefile.in
M	po/Makefile.in.in

2018-06-21 20:42:55 -0700  Kevin McCarthy  <kevin@8t8.us> (6e113ba7)

        * Remove uninitialized warning for mutt_get_stat_timespec().
        
        The switch covers all the types, but in some cases the compiler still
        complains.  Explicitly set tv_sec = 0 to silence the warning.

M	muttlib.c

2018-06-19 15:16:33 +0000  Zero King  <l2dy@icloud.com> (ef19f486)

        * Updated Simplified Chinese translation.

M	po/zh_CN.po

2018-06-19 09:45:29 +0200  Vincent Lefevre  <vincent@vinc17.net> (9cdd8847)

        * mutt_atol: better error handling.
        
        * Detect overflow on negative numbers too (< LONG_MIN).
        
        * Distinguish between format error and number overflow as already
          expected (e.g. for pgp_timeout and smime_timeout).

M	lib.c

2018-06-19 09:37:56 +0200  Vincent Lefevre  <vincent@vinc17.net> (1e3473ec)

        * Reset errno to 0 before calling strtol and testing it in mutt_atol.
        
        Otherwise providing LONG_MAX+1 then LONG_MAX gave an error for LONG_MAX too.

M	lib.c

2018-06-18 22:04:47 +0200  Eike Rathke  <erack@erack.de> (4bc76c2f)

        * Allow larger passphrase timeout values
        
        This came up in the comp.mail.mutt newsgroup where a user wasn't
        satisfied with the SHORT_MAX seconds ~9 hours limit on passphrase
        timeouts.
        
        For the first time made it necessary for the options parser to be
        able to parse numbers as long values. Also, introduced
        mutt_add_timeout() to detect possible overflow before adding a
        timeout to a time_t value and truncate to TIME_T_MAX instead.

M	date.c
M	doc/makedoc.c
M	doc/manual.xml.head
M	globals.h
M	init.c
M	init.h
M	pgp.c
M	protos.h
M	smime.c

2018-06-18 17:19:31 +0200  Vincent Lefevre  <vincent@vinc17.net> (508ff237)

        * Updated French translation.

M	po/fr.po

2018-06-18 19:35:24 +0800  Kevin McCarthy  <kevin@8t8.us> (e26e5664)

        * Merge branch 'stable'

2018-06-14 16:17:56 +0800  Kevin McCarthy  <kevin@8t8.us> (120f63a9)

        * Convert context and buffy to use nanosecond timestamps.
        
        The inotify interface has an unfortunate side effect of making Mutt
        react too quickly to new mail.  Sometimes, the mail is only
        half-delivered when the mailbox is checked.  Because Mutt is using the
        stat mtime - seconds resolution - this means it won't realize there
        are more messages delivered during the same second.
        
        Nanosecond resolution fields were standardized in POSIX.1-2008, so
        check for and use those if they are available.

M	buffy.c
M	buffy.h
M	configure.ac
M	mbox.c
M	mh.c
M	mutt.h
M	muttlib.c
M	mx.c
M	protos.h

2018-06-14 09:10:51 +0200  Vincent Lefevre  <vincent@vinc17.net> (7ec17b81)

        * Updated French translation.

M	po/fr.po

2018-06-12 14:11:47 -0700  Brandon Long  <blong@fiction.net> (fcd33398)

        * Support for using OAUTHBEARER for smtp.
        
        This also means a bunch of smtp auth stuff is now compiled in by
        default (with --enable-smtp) without having sasl

M	init.h
M	smtp.c

2018-06-11 10:39:49 -0700  Brandon Long  <blong@fiction.net> (798f749e)

        * Initial support for OAUTHBEARER for IMAP.
        
        Gmail supports RFC 7628 for using OAUTH with IMAP, and they really don't
        like you using password based auth.  You can still enable "less secure
        apps" and then generate an application specific password, but I figured it
        was time to support it.
        
        Being mutt, I punted on some of the "hard" work to an external script, ie
        getting/refreshing the OAUTH tokens.  This avoids the issue of how do you
        have a client-id and client-secret for an open source project, and the fact
        that OAUTH discovery is still nascent, so you'd likely need separate things
        for each of the providers.
        
        At least for Gmail, you can use the oauth2.py script from Google's
        gmail-oauth2-tools:
        https://github.com/google/gmail-oauth2-tools/blob/master/python/oauth2.py
        
        You'd need to get your own oauth client credentials for Gmail here:
        https://console.developers.google.com/apis/credentials
        
        Then, you'd use oauth2.py with --generate_oauth2_token to get a refresh
        token, and configure mutt with:
        
        set imap_authenticators="oauthbearer"
        set imap_user="<email_address>"
        set imap_pass=`/path/to/oauth2.py --quiet --user=<email_address>
        --client_id=<client_id> --client_secret=<client_secret>
        --refresh_token=<refresh_token>`
        
        For this patch, I didn't add any new configuration, but I'm open to
        suggestions on that.
        
        The patch also only support SASL-IR to reduce round-trips to the server,
        but it's certainly possible to change that if we think there are
        OAUTHBEARER IMAP servers that don't support SASL-IR.  It also requires the
        connection to be encrypted as the access token is re-usable for an hour or
        so.  Again, Gmail only allows encrypted IMAP connections, not sure if any
        OAUTHBEARER services allow non-encrypted.
        
        Turns out that auth failure leaves you in SASL mode, so I have a hack to
        issue a noop command on error.  Not sure if that's just OAUTHBEARER
        oddness, or whether I should be using lower level mutt imap functions.

M	imap/Makefile.am
M	imap/auth.c
M	imap/auth.h
A	imap/auth_oauth.c
M	imap/command.c
M	imap/imap_private.h

2018-06-10 08:51:30 +0800  Kevin McCarthy  <kevin@8t8.us> (1acb708b)

        * Move mutt_getch() timeout value into curs_lib.c
        
        Change monitor.c to reference the curs_lib value, instead of
        vice-versa.
        
        We need to store the value for both monitor.c's poll and for
        mutt_monitor_ch() to perform an initial non-blocking check of ncurses'
        getch() buffer.

M	curs_lib.c
M	monitor.c
M	monitor.h
M	mutt_curses.h

2018-06-08 14:04:16 +0200  Vincent Lefevre  <vincent@vinc17.net> (96b1449f)

        * Spelling mistake in debug message.

M	monitor.c

2018-06-08 13:53:46 +0200  Vincent Lefevre  <vincent@vinc17.net> (ebdcfa2d)

        * Missing void in mutt_set_current_menu_redraw_full prototype

M	mutt_menu.h

2018-06-08 13:49:32 +0200  Vincent Lefevre  <vincent@vinc17.net> (99dee3bb)

        * Give a prototype for mutt_monitor_poll

M	monitor.c
M	monitor.h

2018-06-05 17:38:44 -0700  Kevin McCarthy  <kevin@8t8.us> (a2a0aaa5)

        * Quick fix for ncurses buffering issue with inotify polling.
        
        Ncurses does its own buffering for some character sequences, notable
        Esc-prefixed input.  Add a non-blocking check for getch() before
        performing the mutt_monitor_poll() call.
        
        This is a quick fix, which I'll clean up more later.

M	curs_lib.c
M	monitor.c
M	monitor.h

2018-06-04 21:43:41 -0700  Kevin McCarthy  <kevin@8t8.us> (8c99b1f3)

        * Merge branch 'stable'

2018-06-04 15:51:25 -0700  Kevin McCarthy  <kevin@8t8.us> (71263490)

        * Merge branch 'stable'

2018-06-03 18:34:21 -0700  Kevin McCarthy  <kevin@8t8.us> (3d2cef4a)

        * Add new timeout functions to work with inotify monitors.
        
        The ncurses timeout() function doesn't affect the new poll inside
        mutt_monitor_poll().  This meant that $imap_keepalive and $timeout
        were not being respected when the monitor was used.
        
        Create mutt_getch_timeout(), which delegates to timeout() and sets a
        timeout value mutt_monitor_poll() uses too.

M	curs_lib.c
M	keymap.c
M	monitor.c
M	monitor.h
M	mutt_curses.h

2018-06-03 14:54:41 -0700  Kevin McCarthy  <kevin@8t8.us> (5ada2f51)

        * Merge branch 'stable'

2018-06-03 14:42:41 -0700  Kevin McCarthy  <kevin@8t8.us> (1eb7b895)

        * Merge branch 'stable'

2018-06-03 14:05:13 -0700  Kevin McCarthy  <kevin@8t8.us> (0182dc85)

        * Change direct mutt_getch() callers to handle new mail event.
        
        The inotify handler now returns -2 (timeout) on a new mail event.
        Change the direct callers to ignore, so prompts aren't strangely
        aborted.
        
        Also, fix mutt_change_flag() to call mutt_refresh() before the
        prompt.  Apparently ncurses getch() was doing this for us, but now
        that we are polling STDIN instead, the prompt wasn't displaying.

M	curs_lib.c
M	enter.c
M	flags.c
M	menu.c

2018-06-03 20:23:57 +0000  GT  <gt_16_gitlab.com@innocircle.com> (f495b84d)

        * add feature file monitoring with Linux inotify

M	Makefile.am
M	buffy.c
M	configure.ac
M	curs_lib.c
M	curs_main.c
M	doc/manual.xml.head
M	keymap.c
M	main.c
A	monitor.c
A	monitor.h

2018-06-01 10:46:34 +0100  Edward Betts  <edward@4angle.com> (479241fe)

        * Correct spelling mistakes.

M	buffy.c
M	contrib/sample.muttrc
M	crypt-mod.h
M	crypt.c
M	doc/manual.xml.head
M	hcache.c
M	init.c
M	intl/dcigettext.c
M	intl/libgettext.h
M	mh.c
M	mutt.h
M	mutt_ssl.c
M	pager.c
M	postpone.c
M	send.c
M	sendlib.c
M	smime_keys.pl
M	thread.c

2018-05-28 14:29:45 -0700  Kevin McCarthy  <kevin@8t8.us> (b286ea60)

        * Merge branch 'stable'

2018-05-21 15:12:47 -0700  Kevin McCarthy  <kevin@8t8.us> (63cb8a0a)

        * Remove mutt_buffer_new() NULL retval checks.
        
        It will fail, rather than return NULL.
        
        Further clean up imap_new_data() since it also had NULL checks for
        safe_calloc() that shouldn't happen.

M	imap/imap.c
M	imap/util.c
M	mbyte.c

2018-05-21 13:33:14 -0700  Kevin McCarthy  <kevin@8t8.us> (a001b1d3)

        * Fix mutt_strncmp size comparison for 'uncolor header'.
        
        Thanks to Fabian Groffen for pointing out the discrepancy.
        
        mutt_extract_token() null-terminates the token,, so actually there is
        no need to use "strncmp" for the comparison in this case.
        
        However, since the token is being checked against Fields there is no
        potential harm of a prefix match, so we should fix the number to be
        consistent with the other token comparisons.

M	color.c

2018-07-13 14:25:28 -0700  Kevin McCarthy  <kevin@8t8.us> (3d9028fe)

        * Check outbuf length in mutt_from_base64()
        
        The obuf can be overflowed in auth_cram.c, and possibly auth_gss.c.
        
        Thanks to Jeriko One for the bug report.

M	base64.c
M	imap/auth_cram.c
M	imap/auth_gss.c
M	protos.h

2018-07-13 13:05:22 -0700  Kevin McCarthy  <kevin@8t8.us> (6962328c)

        * Check destlen and truncate in url_pct_encode().
        
        Thanks to Jeriko One for the patch, which this commit is based upon.

M	url.c

2018-07-13 12:35:50 -0700  Kevin McCarthy  <kevin@8t8.us> (e57a8602)

        * Verify IMAP status mailbox literal count size.
        
        Ensure the length isn't bigger than the idata->buf.
        
        Thanks to Jeriko One fo the bug report and patch, which this commit is
        based upon.

M	imap/command.c

2018-07-13 12:24:58 -0700  JerikoOne  <jeriko.one@gmx.us> (9347b5c0)

        * Handle NO response without message properly

M	imap/command.c

2018-07-13 12:15:00 -0700  Kevin McCarthy  <kevin@8t8.us> (3287534d)

        * Don't overflow tmp in msg_parse_fetch.
        
        Ensure INTERNALDATE and RFC822.SIZE field sizes fit temp buffer.
        
        Thanks to Jeriko One for the bug report and patch, which this patch is
        based upon.

M	imap/message.c

2018-07-13 11:33:16 -0700  Richard Russon  <rich@flatcap.org> (31eef6c7)

        * Selectively cache headers.
        
        Thanks to NeoMutt and Jeriko One for the patch, which was slightly
        modified to apply to the Mutt code.

M	imap/util.c

2018-07-13 11:16:33 -0700  Kevin McCarthy  <kevin@8t8.us> (6aed28b4)

        * Sanitize POP bcache paths.
        
        Protect against bcache directory path traversal for UID values.
        
        Thanks for Jeriko One for the bug report and patch, which this commit
        is based upon.

M	pop.c

2018-07-13 10:47:11 -0700  JerikoOne  <jeriko.one@gmx.us> (e154cba1)

        * Ensure UID in fetch_uidl.

M	pop.c

2018-07-12 21:41:17 -0700  Kevin McCarthy  <kevin@8t8.us> (4d0cd265)

        * Fix buffer size check in cmd_parse_lsub.
        
        The size parameter to url_ciss_tostring() was off by one.

M	imap/command.c

2018-07-12 20:46:37 -0700  Kevin McCarthy  <kevin@8t8.us> (e0131852)

        * Fix imap_quote_string() length check errors.
        
        The function wasn't properly checking for dlen<2 before quoting, and
        wasn't properly pre-adjusting dlen to include the initial quote.
        
        Thanks to Jeriko One for reporting these issues.

M	imap/util.c

2018-07-07 19:32:57 -0700  Kevin McCarthy  <kevin@8t8.us> (4ff007ca)

        * Mention $pgp_decode_command for $pgp_check_gpg_decrypt_status_fd
        
        It scans $pgp_decode_command for inline and application/pgp mime
        types.

M	init.h

2018-07-07 19:03:44 -0700  Kevin McCarthy  <kevin@8t8.us> (18515281)

        * Properly quote IMAP mailbox names when (un)subscribing.
        
        When handling automatic subscription (via $imap_check_subscribed), or
        manual subscribe/unsubscribe commands, mutt generating a "mailboxes"
        command but failed to properly escape backquotes.
        
        Thanks to Jeriko One for the detailed bug report and patch, which this
        commit is based upon.

M	imap/command.c
M	imap/imap.c
M	imap/imap_private.h
M	imap/util.c

2018-06-18 11:21:38 +0200  Philipp Gesang  <philipp.gesang@intra2net.com> (df4affd1)

        * crypt-gpgme: prevent crash on bad S/MIME signature
        
        Inform the user about the fingerprint being unavailable instead
        of crashing if the S/MIME signature is bad.

M	crypt-gpgme.c

2018-06-04 21:31:33 -0700  Kevin McCarthy  <kevin@8t8.us> (edb4ec84)

        * Add GnuPG status fd checks for inline pgp.
        
        The difficulty is that "BEGIN PGP MESSAGE" could be a signed and
        armored part, so we can't fail hard if it isn't encrypted.
        
        Change pgp_check_decryption_okay() to return more status codes, with
        >=0 indicating an actual decryption; -2 and -1 indicating plaintext
        found; and -3 indicating an actual DECRYPTION_FAILED status code seen.
        
        Fail hard on -3, but change the message for -2 and -1 to indicate the
        message was not encrypted.

M	pgp.c

2018-06-04 15:40:57 -0700  Kevin McCarthy  <kevin@8t8.us> (8ec6d766)

        * Add $pgp_check_gpg_decrypt_status_fd.
        
        If set (the default) mutt performs more thorough checking of the
        $pgp_decrypt_command status output for GnuPG result codes.
        
        Ticket #39 revealed that GnuPG (currently) does not protect against
        messages that have been manipulated to contain an empty encryption
        packet followed by a plaintext packet.
        
        A huge thanks to Marcus Brinkmann for researching this issue, taking
        the time to report it to us (and the GnuPG team), and taking even more
        time to clarify exactly what needed to be checked for.   

M	contrib/gpg.rc
M	contrib/pgp2.rc
M	contrib/pgp5.rc
M	contrib/pgp6.rc
M	init.h
M	mutt.h
M	pgp.c

2018-06-03 14:52:37 -0700  Kevin McCarthy  <kevin@8t8.us> (cb2329ae)

        * Revert showing real size for small files in mutt_pretty_size().
        
        I thought the change made in 0fa64ba9 was small enough not to matter,
        but at least one long-time user took the time to track down the change
        and request it be reverted.

M	muttlib.c

2018-06-03 14:40:31 -0700  Kevin McCarthy  <kevin@8t8.us> (33290d12)

        * Switch build scripts to use `` instead of $()
        
        This is for older systems running Bourne shell as /bin/sh.

M	mkchangelog.sh
M	mkreldate.sh
M	version.sh

2013-01-06 19:24:18 +0100  Oswald Buddenhagen  <ossi@kde.org> (ec96f5f5)

        * fix inappropriate use of FREE() in ssl init error path
        
        OpenSSL structures need to be freed with dedicated functions.

M	mutt_ssl.c

2018-05-19 10:57:10 -0700  Kevin McCarthy  <kevin@8t8.us> (d55950a8)

        * automatic post-release commit for mutt-1.10.0

M	ChangeLog
M	VERSION
M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/el.po
M	po/eo.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fr.po
M	po/ga.po
M	po/gl.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/nl.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/sv.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po

2018-05-17 12:24:31 -0700  Ivan Vilata i Balaguer  <ivan@selidor.net> (70c9c89b)

        * Updated Catalan translation.

M	po/ca.po

2018-05-17 10:10:52 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp> (5c717661)

        * Updated Japanese translation.

M	po/ja.po

2018-05-17 12:45:39 +0200  Vincent Lefevre  <vincent@vinc17.net> (30778c5e)

        * fr.po: updated Project-Id-Version and removed old translations.

M	po/fr.po

2018-05-14 09:12:11 +0200  Olaf Hering  <olaf@aepfle.de> (f77b641d)

        * Updated German translation.
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2018-05-10 09:12:19 -0700  Kevin McCarthy  <kevin@8t8.us> (400b44a1)

        * Note that $pgp/smime_self_encrypt now default to set.

M	UPDATING

2018-05-10 09:00:21 -0700  Kevin McCarthy  <kevin@8t8.us> (2364c059)

        * Add note about libidn2 v2.0.0 or greater to UPDATING file.

M	UPDATING

2018-05-09 09:32:48 -0700  Vsevolod Volkov  <vvv@mutt.org.ua> (435ca12e)

        * Updated Russian translation.

M	po/ru.po

2018-05-09 09:30:55 -0700  Vsevolod Volkov  <vvv@mutt.org.ua> (c4559f92)

        * Updated Ukrainian translation.

M	po/uk.po

2018-05-08 19:32:12 -0700  Kevin McCarthy  <kevin@8t8.us> (16a581cf)

        * Add declaration checks for libidn2.
        
        The libidn compatibilty layer was only added in version
        2.0.0 (2017-03-29).  idn2.h defines macros, so use AC_CHECK_DECL
        instead of AC_CHECK_FUNC.
        
        $with_idn2 doesn't have an "auto" state, so remove a few unneeded
        copy/paste checks from idn.

M	configure.ac

2018-05-08 10:11:17 -0700  Petr Pisar  <petr.pisar@atlas.cz> (249a6f6c)

        * Updated Czech translation.

M	po/cs.po

2018-05-05 07:35:59 -0700  Kevin McCarthy  <kevin@8t8.us> (0e9f0bed)

        * Update the UPDATING file for 1.10.0.

M	UPDATING

2018-05-06 09:43:25 -0700  Morten Bo Johansen  <mjb@spamcop.net> (cd981cd0)

        * Updated Danish translation.

M	po/da.po

2018-05-05 07:39:36 -0700  lilydjwg  <lilydjwg@gmail.com> (3d9b2704)

        * Updated Simplified Chinese translation.

M	po/zh_CN.po

2018-05-04 02:43:56 +0200  Vincent Lefevre  <vincent@vinc17.net> (643e31c3)

        * Updated French translation.

M	po/fr.po

2018-04-29 15:10:21 -0700  Kevin McCarthy  <kevin@8t8.us> (97bc33dc)

        * Add echo command.
        
        Prints messages using mutt_message().  Sets OPTFORCEREFRESH to allow
        updates in the middle of a macro.
        
        Calls mutt_sleep(0) to pause for $sleep_time seconds after displaying
        the message.

M	doc/manual.xml.head
M	init.c
M	init.h

2018-05-03 12:24:55 +0200  Vincent Lefevre  <vincent@vinc17.net> (92ae6db7)

        * Missing comma.

M	doc/manual.xml.head

2018-05-01 15:13:51 -0700  Kevin McCarthy  <kevin@8t8.us> (9e8ee145)

        * Update copyright notices.

M	COPYRIGHT
M	doc/manual.xml.head
M	doc/mutt.man
M	doc/smime_keys.man
M	main.c

2018-04-28 13:21:42 -0700  Kevin McCarthy  <kevin@8t8.us> (e4557546)

        * Update pattern documentation.
        
        Note that ~b, ~B, ~h, ~M, and ~X read the message in, and that this
        can be much slower.
        
        Change =b, =B, =h table rows to document just the IMAP behavior.  The
        "=" simple string behavior is already covered below, and makes it less
        obvious whether "***)" should be added to those entries in the table.
        
        Break up the simple string and imap server-side matching explanation
        into two paragraphs.
        
        Add ~M to the list of patterns you can't use message scoring with.
        
        Add equivalent, if briefer, explanations to the muttrc.man page.

M	doc/manual.xml.head
M	doc/muttrc.man.head

2018-04-26 18:00:00 -0700  Ammon Riley  <ammon.riley@gmail.com> (974235c7)

        * Add ~M pattern to match mime Content-Types.

M	doc/manual.xml.head
M	doc/muttrc.man.head
M	mutt.h
M	pattern.c

2018-04-30 16:17:52 -0700  Kevin McCarthy  <kevin@8t8.us> (c9f5498c)

        * Add more explanation of known vs subscribed lists to manual.
        
        Mention in both the "Mailing Lists" and "Handling Mailing Lists"
        sections the difference between known and subscribed mailing lists.
        
        Note that the Mail-Followup-To header is generated if any of the
        recipients are known mailing lists.  If any of those are subscribed
        mailing lists, the sender's address will not be in the header.  If all
        of them are known (but not subscribed), the sender's address will be
        added to the header.

M	doc/manual.xml.head

2018-04-23 23:48:33 +0200  Vincent Lefevre  <vincent@vinc17.net> (d12c361c)

        * Updated French translation.

M	po/fr.po

2018-04-22 13:02:06 -0700  Kevin McCarthy  <kevin@8t8.us> (26b82202)

        * Add Error History function and config var.
        
        <error-history>, by default unbound, shows a list of the recent error
        messages displayed by Mutt via mutt_message() or mutt_error().
        
        $error_history sets the size of the history ring.
        
        For now, I've decided to include mutt_message() messages too.  If this
        is too chatty, we can restrict it to mutt_error() easily in the
        future.

M	OPS
M	curs_lib.c
M	curs_main.c
M	functions.h
M	globals.h
M	init.c
M	init.h
M	menu.c
M	pager.c
M	protos.h

2018-04-20 17:28:47 +0200  Vincent Lefevre  <vincent@vinc17.net> (f2e8392f)

        * Updated French translation.

M	po/fr.po

2018-04-19 15:40:35 -0700  Kevin McCarthy  <kevin@8t8.us> (3ec02fbc)

        * Add $sort_browser options for count and unread.

M	browser.c
M	init.h

2018-04-19 13:51:07 -0700  Kevin McCarthy  <kevin@8t8.us> (69959820)

        * Add $browser_abbreviate_mailboxes.
        
        This allows '=' and '~' mailboxes shortcuts to be turned off in the
        browser mailbox list.
        
        The default $sort_browser value of "alpha" uses strcoll(3), which
        ignores some punctuation.  When using multiple accounts with
        dynamically changing values of $folder, this can lead to an
        unintuitive sorting order.  (See issue #22 for an example.)
        
        This problem came about because of commit 8328ce68, which enabled
        mutt_pretty_mailbox() calls for IMAP and POP mailboxes too.  The
        commit had a valid point about consistency and too-wide mailbox
        listings, so I don't really want to revert it.
        
        This option provides an alternative to completely enable/disable the
        shortcuts for those who run into an issue.

M	browser.c
M	init.h
M	mutt.h

2018-04-16 16:32:33 -0700  Kevin McCarthy  <kevin@8t8.us> (4e4574c4)

        * Fix mkreldate.sh in master to use [-r] test too.

M	mkreldate.sh

2018-04-16 16:31:08 -0700  Kevin McCarthy  <kevin@8t8.us> (8da2e090)

        * Merge branch 'stable'

2018-04-16 16:29:08 -0700  Kevin McCarthy  <kevin@8t8.us> (296ccab5)

        * Switch to using [ -r ] in version.sh for Bourne shell compatibility.
        
        Thanks to Paul Keusemann for pointing out the issue.

M	version.sh

2018-04-15 15:57:28 -0700  Kevin McCarthy  <kevin@8t8.us> (79939350)

        * Add a comment in auth_gss about RFCs and null-termination.

M	imap/auth_gss.c

2018-04-09 13:46:42 +0200  Matej Muzila  <mmuzila@redhat.com> (13a2f614)

        * Add libidn2 support

M	configure.ac
M	doc/makedoc-defs.h
M	init.h
M	main.c
M	mutt.h
M	mutt_idna.c
M	mutt_idna.h
M	mutt_socket.c
M	mutt_ssl.c

2018-04-14 13:28:11 -0700  Kevin McCarthy  <kevin@8t8.us> (a21fb60e)

        * Merge branch 'stable'

2018-04-14 13:22:48 -0700  Kevin McCarthy  <kevin@8t8.us> (bf161cf5)

        * automatic post-release commit for mutt-1.9.5

M	ChangeLog
M	UPDATING
M	VERSION

2018-04-13 20:48:28 -0700  Kevin McCarthy  <kevin@8t8.us> (2e8f6e3f)

        * Merge branch 'stable'

2018-04-13 19:17:24 -0700  Kevin McCarthy  <kevin@8t8.us> (13a8f660)

        * Merge branch 'stable'

2018-04-09 15:39:08 -0700  Kevin McCarthy  <kevin@8t8.us> (29d6f261)

        * Merge branch 'stable'

2018-04-02 11:36:05 -0700  Kevin McCarthy  <kevin@8t8.us> (9bb76cce)

        * Merge branch 'stable'

2018-04-02 10:28:12 -0700  Grzegorz Szymaszek  <gszymaszek@short.pl> (1e9df3c8)

        * Updated Polish translation.

M	po/pl.po

2018-03-30 13:37:54 +0100  Christian Ebert  <blacktrash@gmx.net> (e56d30e5)

        * pager specifc "show incoming mailboxes list" macro
        
        Exiting the pager before change-folder avoids 'Not available in this
        menu' error when selecting a different entry in some circumstances.

M	doc/Muttrc.head

2018-03-24 15:10:13 -0700  Kevin McCarthy  <kevin@8t8.us> (ed3f8b6a)

        * Increase account.user/login size to 128.
        
        Like the pass field in commit 52949004, the existing size was
        insufficient for the reporter of issue #18.  For now, just bump up the
        size, but I'll move up looking into making these dynamically sized.

M	account.h

2018-03-22 20:23:46 -0700  Kevin McCarthy  <kevin@8t8.us> (3ffc0ec4)

        * Remove dead code in pgp.c
        
        pgp_extract_keys_from_messages() has been subsumed by
        crypt_extract_keys_from_messages().  The function had incorrect
        multi-bit flag comparisons, but since it's dead code, remove it
        instead.

M	pgp.c

2018-03-22 20:04:46 -0700  Kevin McCarthy  <kevin@8t8.us> (47e6c5aa)

        * Fix comparison of flags with multiple bits set.
        
        PGPENCRYPT, PGPKEY, SMIMEENCRYPT, and SMIMEOPAQUE are all combination
        flags, with multiple bits set.  In a few places these flags were
        bitwise-and'ed incorrectly: expecting a non-zero result to indicate
        all the bits in the flag were set.  Change those to explicitly compare
        the result against the original flag.

M	hdrline.c
M	pattern.c
M	recvattach.c
M	sendlib.c

2018-03-23 02:59:38 +0100  Vincent Lefevre  <vincent@vinc17.net> (66063c45)

        * Updated French translation.

M	po/fr.po

2018-03-22 12:29:59 -0700  Kevin McCarthy  <kevin@8t8.us> (94b9549e)

        * Change prompt string for $crypt_verify_sig
        
        Thanks to Michael Tatge for pointing out that the prompt is used for
        both PGP and S/MIME.

M	commands.c

2018-03-22 09:39:49 -0700  Kevin McCarthy  <kevin@8t8.us> (e275bb06)

        * Merge branch 'stable'

2018-03-15 10:24:35 -0700  Kevin McCarthy  <kevin@8t8.us> (e250c602)

        * Change mutt_error call in mutt_gpgme_set_sender() to dprint.
        
        The message is not an error message, and flies by so quickly it has
        little informative content.  Change it to use dprint instead.
        
        Thanks to Darac Marjal for reporting the issue.

M	crypt-gpgme.c

2018-03-14 04:28:20 +0100  Vincent Lefevre  <vincent@vinc17.net> (2ddd541e)

        * Updated French translation.

M	po/fr.po

2018-03-13 19:09:45 -0700  Kevin McCarthy  <kevin@8t8.us> (a0b3740b)

        * Improve the error message when a signature is missing.
        
        Thanks to Vincent Lefèvre for reporting the issue and for the wording
        suggestion!

M	crypt.c

2018-03-12 12:24:24 +0100  Vincent Lefevre  <vincent@vinc17.net> (f6232a25)

        * Updated French translation.

M	po/fr.po

2018-03-11 12:48:46 -0700  Kevin McCarthy  <kevin@8t8.us> (f47a159b)

        * Add $abort_noattach and $abort_noattach_regexp options.
        
        $abort_noattach_regexp is matched against the body of a message.  If
        so, the $abort_noattach quadoption is used to prompt whether to abort
        sending.
        
        Thanks to Antonio Radici for bringing the original version of the
        patch to our attention, which he pulled from
        https://github.com/tlvince/pkgbuild/blob/master/mutt-kiss/mutt-attach.patch
        
        This version was rewritten to use a regexp, to fix a few issues, and
        to better fit in with Mutt styles and conventions.

M	init.h
M	mutt.h
M	mutt_regex.h
M	send.c

2018-03-03 13:44:12 -0800  Kevin McCarthy  <kevin@8t8.us> (6829c390)

        * Merge branch 'stable'

2018-02-28 15:21:50 -0800  Kevin McCarthy  <kevin@8t8.us> (7561d7bc)

        * Merge branch 'stable'

2018-02-21 18:32:12 -0800  Kevin McCarthy  <kevin@8t8.us> (338019b3)

        * Merge branch 'stable'

2018-02-20 19:09:16 -0800  Kevin McCarthy  <kevin@8t8.us> (2d4081ac)

        * Improve index color cache flushing behavior.
        
        Flush when redefining the colors for an existing color line, in
        addition to when defining a new color line.
        
        Flush only when uncoloring the index.

M	color.c

2018-02-14 10:33:41 +0100  Vincent Lefevre  <vincent@vinc17.net> (ebd93b50)

        * Avoid a potential integer overflow if a Content-Length value is huge.

M	mbox.c

2018-02-08 12:20:02 +0100  Vincent Lefevre  <vincent@vinc17.net> (088e1903)

        * Change mkreldate.sh to use the UTC date with git, so that it is increasing.

M	mkreldate.sh

2018-02-06 14:42:40 -0800  Kevin McCarthy  <kevin@8t8.us> (02d571c2)

        * Fix document version and date for git build.
        
        Change mkreldate.sh to output just the date, so it can be used in the
        manual too.

M	Makefile.am
M	doc/Makefile.am
M	mkreldate.sh

2018-02-05 18:43:12 -0800  Kevin McCarthy  <kevin@8t8.us> (fefbd81f)

        * Use git to generate the release date if available.
        
        For now, fall back to the ChangeLog.  Perhaps the release date should
        be generated from a file, similar to VERSION, for those cases instead.

M	Makefile.am
A	mkreldate.sh

2018-02-06 01:57:48 +0100  Vincent Lefevre  <vincent@vinc17.net> (65e1f5c8)

        * Add a blank line between the compile options and the contact info for mutt -v

M	main.c

2018-02-05 13:19:40 +0100  Vincent Lefevre  <vincent@vinc17.net> (731629e2)

        * Updated French translation.

M	po/fr.po

2018-02-04 15:24:59 -0800  Kevin McCarthy  <kevin@8t8.us> (e82c9ce2)

        * Put gitlab issues url on a separate line.
        
        This removes the need to use brackets, and makes it easier for
        translations to fit within 80 columns.
        
        Thanks to Derek Martin for the suggested wording, and to Vincent
        Lefèvre for proofreading and noticing a small error.

M	main.c

2018-02-04 15:15:55 -0800  Kevin McCarthy  <kevin@8t8.us> (1fe6318b)

        * Fix history menu title.
        
        Remove an accidental leading space.  Thanks to Vincent Lefèvre for
        noticing the problem and providing a patch!

M	history.c
M	po/fr.po

2018-02-04 18:29:52 +0100  Vincent Lefevre  <vincent@vinc17.net> (f57e5171)

        * Updated French translation.

M	po/fr.po

2018-02-03 18:08:28 -0800  Kevin McCarthy  <kevin@8t8.us> (aa6903c9)

        * Add history-search function, bound to ctrl-r.
        
        Create a very basic "search history" functionality in the line editor.
        It uses the current input, and searches backward through history.  If
        there is one match, it immediately uses that otherwise it pops up a
        simple menu of matches.

M	OPS
M	doc/manual.xml.head
M	enter.c
M	functions.h
M	history.c
M	history.h

2018-02-01 11:14:11 -0800  Kevin McCarthy  <kevin@8t8.us> (d5544ef6)

        * Merge branch 'stable'

2018-01-31 15:01:18 -0800  Kevin McCarthy  <kevin@8t8.us> (22e1e87c)

        * Merge branch 'stable'

2018-01-31 14:22:07 -0800  Kevin McCarthy  <kevin@8t8.us> (fea9f7db)

        * Merge branch 'stable'

2018-01-27 11:58:12 -0800  Kevin McCarthy  <kevin@8t8.us> (eca744f5)

        * Merge branch 'stable'

2018-01-21 19:41:47 -0800  Kevin McCarthy  <kevin@8t8.us> (9ee1f84d)

        * Remove useless assignments in add_to_list functions.
        
        The code was probably pulled from some of the header processing
        functions, which were in a loop.  In those versions, "last" pointed to
        a collection of new entries appended, but in these two functions,
        updating last just obfuscates the code.

M	init.c

2018-01-21 18:56:12 -0800  Kevin McCarthy  <kevin@8t8.us> (8dd14816)

        * Add a blurb about $new_mail_command in the mailboxes section.

M	doc/manual.xml.head

2018-01-21 18:34:45 -0800  Kevin McCarthy  <kevin@8t8.us> (18701782)

        * Merge branch 'stable'

2018-01-17 19:20:04 -0800  Kevin McCarthy  <kevin@8t8.us> (95c7ff2b)

        * Merge branch 'stable'

2018-01-17 19:00:50 -0800  Kevin McCarthy  <kevin@8t8.us> (fb3593b3)

        * Merge branch 'stable'

2018-01-17 18:18:20 -0800  Kevin McCarthy  <kevin@8t8.us> (49c0d177)

        * Merge branch 'stable'

2018-01-16 09:40:11 +0100  Olaf Hering  <olaf@aepfle.de> (8fac7a94)

        * Update po
        
        Followup for untranslate Copyright list.
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/el.po
M	po/eo.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fr.po
M	po/ga.po
M	po/gl.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/nl.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/sv.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po

2018-01-16 09:40:06 +0100  Olaf Hering  <olaf@aepfle.de> (18894e9c)

        * Split Copyright and Thanks in help output.
        
        The Copyright string is changing often, and its content is obvious.
        It does not need translation. The remaining string can be translated.
        This change avoids a stale translation once one of the years change.
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	main.c

2018-01-16 09:39:57 +0100  Olaf Hering  <olaf@aepfle.de> (34267ed4)

        * Update po
        
        Preparation for following changes.
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/el.po
M	po/eo.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fr.po
M	po/ga.po
M	po/gl.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/nl.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/sv.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po

2018-01-15 20:20:17 -0800  Brendan Cully  <brendan@cully.org> (38d106c6)

        * add clang static analysis to builds

M	.gitlab-ci.yml

2018-01-15 18:40:20 -0800  Brendan Cully  <brendan@cully.org> (4e2b370c)

        * gitlab-ci: build against openssl and gnutls

M	.gitlab-ci.yml

2018-01-15 16:06:30 -0800  Kevin McCarthy  <kevin@8t8.us> (3e9647b9)

        * Add pgp_default_key and smime_sign_as info to contrib rc files.
        
        Explain $pgp_default_key vs $pgp_sign_as in gpg.rc.
        
        Explain $smime_default_key vs $smime_sign_as in smime.rc.

M	contrib/gpg.rc
M	contrib/smime.rc

2018-01-15 14:20:28 -0800  Kevin McCarthy  <kevin@8t8.us> (ee28581a)

        * Add pages to .gitlab-ci.yml
        
        Use this to regenerate the manual and store it in the pages for the
        project.

M	.gitlab-ci.yml

2018-01-15 14:43:53 +0000  Konstantin Stephan  <pigleich3@gmx.net> (6bd130cf)

        * Update smime.rc: Typo fix, consistent headings

M	contrib/smime.rc

2018-01-14 15:50:34 -0800  Brendan Cully  <brendan@cully.org> (d1724851)

        * use mutt/ubuntu build image, build with everything on

M	.gitlab-ci.yml

2018-01-13 14:49:35 -0800  Brendan Cully  <brendan@cully.org> (797a9e38)

        * skeleton .gitlab-ci.yml to compile commits

A	.gitlab-ci.yml

2018-01-13 21:21:35 +0100  Grzegorz Szymaszek  <gszymaszek@short.pl> (7ddb1ae3)

        * Fixed GPGME translations that weren’t shown but affected the keyboard

M	po/pl.po

2018-01-13 20:27:11 +0100  Grzegorz Szymaszek  <gszymaszek@short.pl> (637d4229)

        * Update pl.po

M	po/pl.po

2018-01-13 09:47:09 +0100  Olaf Hering  <olaf@aepfle.de> (6c271bc4)

        * Fix typo in de.po
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	po/de.po

2013-12-03 16:42:39 +0100  Olaf Hering  <olaf@aepfle.de> (5619de2b)

        * examine_directory: set directory/symlink size to zero
        
        The size of a directory or symlink in the folder browser is not meaningful.
        For directories it means just how many blocks were allocated to hold all
        entries. It does not mean that the entries are still present in the directory.
        For symlinks its the size of the target.
        Set both to zero to simplify the folder browser output.
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	browser.c

2013-12-03 16:43:49 +0100  Olaf Hering  <olaf@aepfle.de> (0fa64ba9)

        * mutt_pretty_size: show real number for small files
        
        If a file is smaller than a certain size it is unfriendly to print 0K or
        0,1K as number of mails or as file size. Instead use the real number.
        
        Signed-off-by: Olaf Hering <olaf@aepfle.de>

M	muttlib.c

2018-01-11 15:16:07 -0800  Kevin McCarthy  <kevin@8t8.us> (4fa32548)

        * Merge branch 'stable'

2018-01-11 13:24:30 -0800  Kevin McCarthy  <kevin@8t8.us> (db252e61)

        * Create pgp and s/mime default and sign_as key vars. (see #3983)
        
        The $postpone_encrypt and $(pgp/smime)_self_encrypt configuration
        variables have created a somewhat messier situation for users.  Many
        of them now have to specify their keys across multiple configuration
        variables.
        
        (Trac) Ticket #3983 had a reasonable request: "if my encrypt and
        signing keys are the same, why can't I just specify my key once in my
        .muttrc?"
        
        The problem currently is that $smime_default_key and $pgp_sign_as are
        both used to specify signing keys, and are set by the "sign (a)s"
        security menu choice.  So we can't store encryption keys there because
        some users have separate sign-only capability keys.
        
        Create $pgp_default_key to store the default encryption key.  Change
        signing to use $pgp_default_key, unless overridden by $pgp_sign_as.
        The pgp "sign (a)s" will continue setting $pgp_sign_as.
        
        Create $smime_sign_as.  Change signing to use $smime_default_key
        unless overridden by $smime_sign_as.  Change s/mime "sign (a)s" menu
        to set $smime_sign_as instead.
        
        Change $postpone_encrypt and $(pgp/smime)_self_encrypt to use
        $(pgp/smime)_default_key by default.
        
        Mark $(pgp/smime)_self_encrypt_as deprecated.  They are now aliases
        for the $(pgp/smime)_default_key config vars.
        
        Change $(pgp/smime)_self_encrypt default to set.
        
        The intent is that most users now need only set
        $(pgp/smime)_default_key.  If they have a sign-only key, or have
        separate signing and encryption keys, they can put that in
        $(pgp/smime)_sign_as.  This also enables to default self_encrypt on
        and solve a very common request.
        
        Thanks to Michele Marcionelli and Vincent Lefèvre for gently pushing
        me towards a solution.

M	compose.c
M	crypt-gpgme.c
M	crypt.c
M	doc/manual.xml.head
M	globals.h
M	init.h
M	pgpinvoke.c
M	postpone.c
M	send.c
M	sendlib.c
M	smime.c

2018-01-09 04:09:11 +0100  Vincent Lefevre  <vincent@vinc17.net> (be68a00c)

        * Updated French translation.

M	po/fr.po

2018-01-08 18:07:24 -0800  Kevin McCarthy  <kevin@8t8.us> (2d2665d4)

        * Change the default of NewMailCmd to 0.
        
        This is so the documentation is generated consistently for unset
        strings.

M	init.h

2018-01-07 14:49:45 +0100  Yoshiki Vázquez Baeza  <yoshiki89@gmail.com> (2f39cf2a)

        * NewMailCmd: optionally execute a command upon new mail arrival
        
        This setting allows to run any external program to e.g. produce a
        notification on the desktop when Mutt finds new mail.
        
        Signed-off-by: Fabian Groffen <grobian@gentoo.org>

M	curs_main.c
M	globals.h
M	init.h

2018-01-07 13:06:56 +0100  Fabian Groffen  <grobian@gentoo.org> (5d5dce99)

        * cmd_handle_fatal: make error message a bit more descriptive
        
        When there are multiple IMAP connections available, "Mailbox closed"
        doesn't give a hint as to which one.  Use account info to identify which
        mailbox was closed.

M	imap/command.c

2018-01-07 12:18:37 -0800  Kevin McCarthy  <kevin@8t8.us> (0df23207)

        * Merge branch 'stable'

2018-01-06 16:15:39 -0800  Kevin McCarthy  <kevin@8t8.us> (e0229b87)

        * Merge branch 'stable'

2018-01-04 17:59:20 +0100  Vincent Lefevre  <vincent@vinc17.net> (2f510d60)

        * Updated French translation.

M	po/fr.po

2017-12-30 19:10:16 -0800  Kevin McCarthy  <kevin@8t8.us> (561e106c)

        * Disable message security if the backend is not available.
        
        Gitlab issue #3 exposed an awkward corner case: if mutt is configured
        without PGP or S/MIME, and with GPGME, but $crypt_use_gpgme is unset.
        In this case, no backend will be available, but WithCrypto will be set
        with both APPLICATION_PGP and APPLICATION_SMIME bits.
        
        That will allow various config vars to enable encryption or signing,
        even though there will be no backend available to perform them.  The
        message security flag might then be set, but when the user hits send,
        will end up back at the compose menu due to the error.
        
        The pgp or smime menu might not even be available to clear the
        security setting!
        
        Add a check in send.c before the compose menu is invoked, and give a
        warning message for the menu ops inside the compose menu.
        
        I believe this should prevent the issue.  However this is a corner
        case combined with user misconfiguration, so I don't believe is worth
        a large effort to completely eradicate.

M	compose.c
M	cryptglue.c
M	mutt_crypt.h
M	send.c

2017-12-29 15:20:38 +0100  Grzegorz Szymaszek  <gszymaszek@short.pl> (521e45e7)

        * Converted po/pl.po from ISO-8859-2 to UTF-8
        
        I’ve converted the Polish translation file to UTF-8 using iconv 2.25.

M	po/pl.po

2017-12-28 13:07:21 -0800  Kevin McCarthy  <kevin@8t8.us> (8b77d84d)

        * Mention self_encrypt options in the documentation. (closes #3983)
        
        Add a paragraph to the "Sending Cryptographically Signed/Encrypted
        Messages" section of the manual.

M	doc/manual.xml.head

2017-12-26 15:09:28 -0800  Kevin McCarthy  <kevin@8t8.us> (e7addcf0)

        * Merge branch 'stable'

2017-12-18 13:02:17 -0800  Kevin McCarthy  <kevin@8t8.us> (248e9972)

        * Merge branch 'stable'

2017-12-18 03:01:07 +0100  Vincent Lefevre  <vincent@vinc17.net> (3b142cea)

        * Fixed git repo detection: for worktrees, .git is a plain file.

M	version.sh

2017-12-17 13:36:21 +0100  Adam Borowski  <kilobyte@angband.pl> (489a1c39)

        * manually touch atime when reading a mbox file
        
        The only common use of atime left is local mail agents leaving a mark on
        mbox file after the mail has been read.  And, since POSIX-2008, it is
        possible to use futimens() to alter atime even on filesystems mounted with
        noatime.
        
        There's no extra cost for doing this on when atime updates are enabled:
        the inode will be dirty already.

M	configure.ac
M	main.c
M	mbox.c
M	muttlib.c
M	protos.h

2017-12-17 12:16:10 -0800  Kevin McCarthy  <kevin@8t8.us> (f030bd36)

        * Add config.cache to .gitignore file.

M	.gitignore

2017-12-15 15:56:39 -0800  Kevin McCarthy  <kevin@8t8.us> (89e44318)

        * Merge branch 'stable'

2017-12-15 12:18:12 -0800  Kevin McCarthy  <kevin@8t8.us> (8b17d880)

        * Merge branch 'stable'

2017-12-14 16:21:04 -0800  Kevin McCarthy  <kevin@8t8.us> (35850181)

        * Merge branch 'stable'

2017-12-12 18:27:24 -0800  Kevin McCarthy  <kevin@8t8.us> (e290a8fc)

        * Merge branch 'stable'

2017-12-10 20:06:05 -0800  Kevin McCarthy  <kevin@8t8.us> (f9ca5cda)

        * Merge branch 'stable'

2017-12-03 18:15:21 -0800  Kevin McCarthy  <kevin@8t8.us> (50f85f3b)

        * Merge branch 'stable'

2017-12-02 19:27:14 -0800  Kevin McCarthy  <kevin@8t8.us> (56be6f0a)

        * Convert to .gitignore file.

A	.gitignore
D	.hgignore

2017-11-29 04:21:26 +0100  Vincent Lefevre  <vincent@vinc17.net> (376280bf)

        * Updated French translation.

M	po/fr.po

2017-11-28 19:01:15 -0800  Kevin McCarthy  <kevin@8t8.us> (8b3d4db4)

        * Update copyright notices.

M	COPYRIGHT
M	bcache.c
M	buffy.c
M	imap/imap.c
M	imap/imap.h
M	main.c
M	sidebar.c

2017-11-21 18:22:26 -0800  Kevin McCarthy  <kevin@8t8.us> (20f5519e)

        * Enable full address matching during message scoring. (closes #2179) (see #3243)
        
        The tickets are old, but it seems reasonable to expect the pattern
        matching to behave the same in scoring as when applying limits or
        searching.
        
        I don't foresee a huge performance hit, and there are no arguments
        against the change in the tickets.
        
        Thanks to the muttng devs (noted in ticket 2179) and Kornilios Kourtis
        (from the Debian ticket referenced in ticket 3243).

M	score.c

2017-11-19 15:47:45 -0800  Anton Lindqvist  <anton.lindqvist@gmail.com> (117f7de1)

        * Add NONULL to debug statement in fold_one_header().

M	sendlib.c

2017-11-18 19:13:08 -0800  Kevin McCarthy  <kevin@8t8.us> (3ccd1990)

        * Fix ansi escape sequences with both reset and color parameters. (closes #3689)
        
        The initial 0 "reset/normal" was setting attr = ANSI_OFF, which was
        subsequently being or'ed with ANSI_COLOR.
        
        The color resolution was then checking for the ANSI_OFF bit and
        turning all coloring off, even though ANSI_COLOR was also set.
        
        Change the color resolution to check for "attr == ANSI_OFF" instead, so
        the color isn't reset unless the reset occurs last in the sequence.

M	pager.c

2017-11-15 14:53:24 -0800  Kevin McCarthy  <kevin@8t8.us> (78d2c197)

        * Remove useless else branch in the $smart_wrap code. (see #3857)
        
        Thanks to Vincent Lefèvre for noticing the nested else was redundant,
        since buf_ptr is already set to "buf + cnt" after the format_line()
        call.
        
        This allows us to merge the inner and outer if statement, resulting in
        simpler code.

M	pager.c

2017-11-15 14:53:19 -0800  Kevin McCarthy  <kevin@8t8.us> (b3940ed4)

        * Fix $smart_wrap to not be disabled by whitespace-prefixed lines. (closes #3857)
        
        changeset:737102af74eb fixed a folded header display issue with $smart_wrap
        by disabling $smart_wrap for lines beginning with whitespace.
        
        Unfortunately, this turns off smart wrapping in the body of an email
        too, even when the line has other whitespace breaks in it.
        
        An earlier commit, changeset:125076e0fdfa added an infinite loop fix
        when MUTT_PAGER_NSKIP is set, by disabling the smart_wrap if the space
        backtracking went to the beginning of the line.  That is, a line
        beginning with 1+ whitespace followed by a single long word.
        
        Extend this second commit by always disabling the smart_wrap in that
        case, not just when MUTT_PAGER_NSKIP is set.  This also solves the
        folded header issue without other side effects.

M	pager.c

2017-11-11 15:49:15 -0800  Kevin McCarthy  <kevin@8t8.us> (610c6b0a)

        * Add $change_folder_next option to control mailbox suggestion order.
        
        This patch is out of the Gentoo package maintained by Fabian Groffen.
        From the link below, it appears the original author was Simon Burge.
        
        I made some minor changes to get it to apply correctly, and cleaned up
        the documentation a bit.
        
        Original patch description:
        This patch brings back the original behaviour of change-folder, which
        some people find more useful.  It suggests the next folder in your
        mailboxes list that has new mail measured from the current folder,
        instead of the first folder from your mailboxes list in any case.  This
        prevents starvation of folders defined at the back of your list ;)
        See discussion: http://thread.gmane.org/gmane.mail.mutt.devel/12457

M	curs_main.c
M	init.h
M	mutt.h

2017-11-11 19:13:40 +0100  Vincent Lefevre  <vincent@vinc17.net> (11a10487)

        * Updated French translation.

M	po/fr.po

2017-11-11 18:59:31 +0100  Vincent Lefevre  <vincent@vinc17.net> (14e37771)

        * Add %R (number of read messages) for $status_format.

M	init.h
M	status.c

2017-11-10 13:06:43 -0800  Kevin McCarthy  <kevin@8t8.us> (d1659601)

        * Add message count to $move quadoption prompt.
        
        Display the number of messages that will be moved in the quadoption
        prompt, which might prove helpful for some people.
        
        Thank you to Daan van Rossum for suggesting the improvement.

M	mx.c

2017-11-09 15:06:19 +0100  Vincent Lefevre  <vincent@vinc17.net> (6db8d16a)

        * Make sure that fgets and fgetc are undefined before their redefinition.
        
        This fixes a potential issue from changeset e0a103845344.

M	mutt.h

2017-11-08 13:40:34 -0800  David Wilson  <dw@botanicus.net> (829db35b)

        * Use fgets_unlocked and fgetc_unlocked if available.
        
        Since mutt does not use threads, there is no reason it should use the
        locked variants of the FILE* IO functions. This checks if the unlocked
        functions are available, and if so enables them globally via mutt.h.
        
        Cuts load time for a 56k message, 1.8GB /var/mail mailbox from 14
        seconds to ~6 seconds, since we avoid acquiring and releasing a mutex
        for every character of input read.
        
        Before: 0m14.376s
        
            74.98%          mutt  libc-2.18.so        [.] _IO_getc
            11.87%          mutt  mutt                [.] mbox_parse_mailbox
             0.94%          mutt  [kernel.kallsyms]   [k] copy_user_generic_string
             0.83%          mutt  libc-2.18.so        [.] __strchr_sse2
             0.53%          mutt  libc-2.18.so        [.] __memcpy_sse2
             0.44%          mutt  libc-2.18.so        [.] _int_malloc
        
        After: 6 seconds
        
            68.92%     mutt  mutt                  [.] mbox_parse_mailbox
             2.25%     mutt  [kernel.kallsyms]     [k] copy_user_generic_string
             1.73%     mutt  libc-2.18.so          [.] __strchr_sse2
             1.24%     mutt  libc-2.18.so          [.] __memcpy_sse2
             1.17%     mutt  libc-2.18.so          [.] _int_malloc
             0.87%     mutt  libc-2.18.so          [.] __strspn_sse42

M	configure.ac
M	mutt.h

2017-11-08 12:57:50 -0800  Kevin McCarthy  <kevin@8t8.us> (d2262ccb)

        * Note which ssl config vars are GnuTLS or OpenSSL only. (closes #3781)
        
        It was not obvious that the ssl_ca_certificates_file was only for
        GnuTLS, or that the ssl_usesystemcerts was only for OpenSSL.

M	init.h

2017-10-15 15:13:18 +0800  Kevin McCarthy  <kevin@8t8.us> (336f7d88)

        * Add polling for the IDLE command. (closes #3957)
        
        Add $imap_poll_timeout poll for IDLE, since this is also a command
        that will freeze after waking if $imap_idle is set.

M	imap/command.c

2017-09-30 19:16:56 -0700  Kevin McCarthy  <kevin@8t8.us> (d7e84d75)

        * merge stable

2017-09-28 11:57:56 -0700  Roger Pau Monne  <roger.pau@citrix.com> (cfcd8787)

        * Enable $reply_self for group-reply, even with $metoo unset.
        
        For a (r)eply, the $metoo variable does not have any effect because
        there is a single recipient.
        
        However with (g)roup reply, the To was initially set to the sender,
        but subsequently removed my $nometoo.  The empty To line is then
        replaced with the Cc line, resulting in a (logically correct but)
        surprising outcome.
        
        Change the behavior such that $nometoo will not strip a single To
        recipient when $reply_self is set.

M	send.c

2017-09-27 13:45:36 -0700  Kevin McCarthy  <kevin@8t8.us> (285baf9a)

        * Make cmd_parse_fetch() more precise about setting reopen/check flags.
        
        Previously any FETCH with FLAGS would result in either
          idata->reopen |= IMAP_EXPUNGE_PENDING;
          -or-
          idata->check_status = IMAP_FLAGS_PENDING;
        being set.
        
        This is unnecessary in the case of responses to FLAGS.SILENT updates
        sent by mutt (which seem to commonly happen now-a-days).
        
        Change imap_set_flags() to compare the old server flags against the
        new ones, and report when _those_ updates would/did result in a local
        header flag change.  Only set one of the reopen/check_status flags in
        the event of an actual change (or potential change if a local change
        has been made to the header.)

M	imap/command.c
M	imap/imap_private.h
M	imap/message.c

2017-09-26 19:45:23 -0700  Kevin McCarthy  <kevin@8t8.us> (1099795d)

        * merge stable

2017-09-25 18:40:32 -0700  Kevin McCarthy  <kevin@8t8.us> (bf34a038)

        * Change maildir and mh check_mailbox to use dynamic sized hash. (closes #3973)
        
        The original patch is by Matt Fleming, originally posted at
        http://www.codeblueprint.co.uk/2017/01/15/a-kernel-devs-approach-to-improving2
        
        The comments there indicate Matt tried to submit to trac and mutt-dev,
        but ran into registration problems.  Thank you for the patch, and
        sorry for those problems, Matt.
        
        I modified the patch by making the same change to the
        mh_check_mailbox() code too.

M	mh.c

2017-09-23 11:41:25 -0700  Kevin McCarthy  <kevin@8t8.us> (f5935f3d)

        * merge stable

2017-09-22 11:26:19 -0700  Kevin McCarthy  <kevin@8t8.us> (fa79d68e)

        * merge stable

2017-09-22 17:52:16 +0200  Vincent Lefevre  <vincent@vinc17.net> (83d23fd9)

        * Updated French translation.

M	po/fr.po

2017-09-20 10:43:33 -0700  Kevin McCarthy  <kevin@8t8.us> (56729e32)

        * Display an error message when delete mailbox fails. (see #3968)

M	browser.c

2017-09-14 12:48:26 -0700  Kevin McCarthy  <kevin@8t8.us> (bd906764)

        * merge stable

2017-09-13 15:54:31 -0700  Kevin McCarthy  <kevin@8t8.us> (baffaa68)

        * merge stable

2017-09-05 17:33:45 +0200  Vincent Lefevre  <vincent@vinc17.net> (e5515a9c)

        * Updated French translation.

M	po/fr.po

2017-09-04 15:51:07 -0700  Kevin McCarthy  <kevin@8t8.us> (03b0bec0)

        * Remove 'really' from the purge-message help description.
        
        This made it sound to the translators like a question.

M	OPS

2017-09-04 15:34:32 -0700  Kevin McCarthy  <kevin@8t8.us> (563143f8)

        * Add L10N comment to generated keymap_defs.h files.
        
        Make it clearer to translators that the strings are for the help
        screen.

M	gen_defs

2017-09-04 13:26:55 -0700  Kevin McCarthy  <kevin@8t8.us> (f2216024)

        * Add warning about using inline pgp with format=flowed. (closes #3963)
        
        The reporter noted that when trying to use inline signing with
        format=flowed, the flowed was turned off.
        
        After some research, this appears to be deliberate, probably because
        of strange interactions between inline PGP and format=flowed.  In fact
        the RFC strongly discourages their combined use:
        https://tools.ietf.org/html/rfc3676#section-4.6
        
        Add a warning and prompt to use PGP/MIME in mutt_protect().

M	crypt.c

2017-09-04 09:47:26 -0700  Kevin McCarthy  <kevin@8t8.us> (61c7e548)

        * merge stable

2018-04-13 20:39:35 -0700  Kevin McCarthy  <kevin@8t8.us> (ceb0534d)

        * Improve gss debug printing of status_string.
        
        Commit f52ee2f7 ensured the debug strings were properly '\0'
        terminated.  However, it did not prevent the strncpy from reading past
        the end of the status_string.value data; it simply capped it
        afterwards.  Improve the code so it only reads up to
        status_string.length without overwriting the buffer.

M	imap/auth_gss.c

2018-04-13 19:03:29 -0700  Kevin McCarthy  <kevin@8t8.us> (f52ee2f7)

        * Remove trailing null count from gss_buffer_desc.length field.
        
        RFC 2744 section 3.2.2 clearly states that trailing NULL characters
        are not to be included in the length field, and are not to be assumed
        to be present in the value field.
        
        Thanks to Greg Hudson, who recently debugged this same issue with
        fetchmail, and kindly took the time to look at Mutt's code too.

M	imap/auth_gss.c

2018-04-08 15:37:09 -0700  Kevin McCarthy  <kevin@8t8.us> (a550d535)

        * Rename _regex.h to _mutt_regex.h to avoid name collision on Macs.
        
        On Macs, <regex.h> includes <_regex.h>.  Because Mutt defines '-I .'
        during compilation, our bundled version of _regex.h was being used
        instead of the system one.
        
        I have no idea how it managed to work before, but starting in Xcode
        9.3, the differences in struct size and fields started to produce a
        crash and other strange behavior.
        
        The real issue is our use of '-I .' during compilation, which allows
        our local headers to override system ones.  An easier fix for now is
        to rename the header.
        
        Many thanks to Charles Diza, Christian Ebert, and Fabian Groffen for
        their help trying things out and helping to debug the problem.
        
        Also, a huge thanks to Steve Karmeinsky for allowing me to ssh in to
        his Mac so I could track down the underlying issue.

M	Makefile.am
R100	_regex.h	_mutt_regex.h
M	mutt_regex.h
M	regex.c

2018-04-02 11:30:31 -0700  Kevin McCarthy  <kevin@8t8.us> (4fe6cfeb)

        * configure: check for tinfo matching ncurses
        
        When we selected ncursesw, look for tinfow as well.  Since ncurses-6.1
        the binary compatibility between tinfo and tinfow disappeared, resulting
        in crashes and other odd behaviour.
        
        This change checks for tinfo or tinfow based on which ncurses we found
        to continue with.
        
        https://bugs.gentoo.org/651552
        
        [Thanks to Fabian Groffen for the patch.  I made a minor modification
        to fall back to tinfo because pre-6.1 systems may not have a tinfow
        but still need tinfo to compile.]

M	configure.ac

2018-03-22 09:32:31 -0700  Kevin McCarthy  <kevin@8t8.us> (eeba9a9b)

        * Fix s/mime non-detached signature handling.
        
        This fix is based on stbuehler's patch from
        https://dev.gnupg.org/T2919.
        
        Recent versions of gpgme seem to terminate the connection for a
        protocol error.  stbuehler's analysis is that this is actually a
        gpgme bug, but recreating the context works around the problem.

M	crypt-gpgme.c

2018-03-03 13:40:27 -0800  Kevin McCarthy  <kevin@8t8.us> (9eeb406b)

        * automatic post-release commit for mutt-1.9.4

M	ChangeLog
M	UPDATING
M	VERSION

2018-02-28 15:20:59 -0800  Kevin McCarthy  <kevin@8t8.us> (65068235)

        * Add subjectrx section to the muttrc man page.

M	doc/muttrc.man.head

2018-02-28 15:20:19 -0800  Kevin McCarthy  <kevin@8t8.us> (27758af2)

        * Fix subjectrx example in the manual.

M	doc/manual.xml.head

2018-02-14 10:33:41 +0100  Vincent Lefevre  <vincent@vinc17.net> (476ea0ac)

        * Avoid a potential integer overflow if a Content-Length value is huge.

M	mbox.c

2018-02-21 18:25:37 -0800  Kevin McCarthy  <kevin@8t8.us> (2a857f63)

        * Fix is_from() year parsing to abort on year overflow.
        
        Unlike mutt_parse_date(), is_from() was not checking for overflow, and
        could end up passing a negative year to mutt_mktime().
        
        It should perhaps be changed to use mutt_atoi(), which does better
        range checking, but that requires mutt_atoi() being changed to allow
        trailing characters and its callers return value checks being
        updated.  I'll put that on the todo list.

M	from.c

2018-02-21 18:18:53 -0800  Kevin McCarthy  <kevin@8t8.us> (189e52d5)

        * Cap parsed years at 9999 when converting to time_t.
        
        Large year values, even those less than INT_MAX, apparently can cause
        gmtime() and localtime() to return NULL.  Mutt needs larger changes
        checking and handling those errors, but this will prevent the
        immediately triggerable issue.

M	date.c

2018-02-01 11:10:01 -0800  Kevin McCarthy  <kevin@8t8.us> (b2dbdce0)

        * Add stub flea and muttbug scripts back.
        
        It was rightfully pointed out that the removal was too abrupt.  These
        programs have been around for a long time, and many internet searches
        still say to use them for reporting bugs.
        
        Add stub versions which inform to use the gitlab url instead.

M	.gitignore
M	Makefile.am
A	muttbug

2018-01-31 14:57:57 -0800  Kevin McCarthy  <kevin@8t8.us> (9103f4f5)

        * Add more delimiters for gitlab url in the po files.
        
        Some of them hid from me in my wgrep session because they were marked
        as binary.

M	po/bg.po
M	po/el.po
M	po/es.po
M	po/et.po
M	po/ga.po
M	po/hu.po
M	po/ko.po
M	po/lt.po

2018-01-31 14:13:42 -0800  Kevin McCarthy  <kevin@8t8.us> (01dee39d)

        * Add delimiters around gitlab issues URL.
        
        Without the delimiters, the period can be easily inadvertantly copied
        as part of the URL.

M	main.c
M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/el.po
M	po/eo.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fr.po
M	po/ga.po
M	po/gl.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/nl.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/sv.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po

2018-01-27 11:20:21 -0800  Kevin McCarthy  <kevin@8t8.us> (788b732f)

        * automatic post-release commit for mutt-1.9.3

M	ChangeLog
M	UPDATING
M	VERSION

2018-01-21 18:33:16 -0800  Kevin McCarthy  <kevin@8t8.us> (45b15d3d)

        * Fix the ftp site url in the manual.
        
        Also fix the urlview link to point to sigpipe's github account.

M	doc/manual.xml.head

2018-01-17 19:19:01 -0800  Kevin McCarthy  <kevin@8t8.us> (ffdda7e6)

        * Fix one more dev site reference in the manual.

M	doc/manual.xml.head

2018-01-17 18:57:49 -0800  Kevin McCarthy  <kevin@8t8.us> (e9ef2a16)

        * Fix a couple memory leaks in pattern.c
        
        BUFFER.data was not being freed in a couple cases.
        
        The pattern and simple search were not being freed if imap_search()
        failed.

M	pattern.c

2018-01-17 18:05:28 -0800  Kevin McCarthy  <kevin@8t8.us> (f1307ce5)

        * Change bug reporting URL to gitlab issues.

M	doc/manual.xml.head
M	doc/mutt.man
M	main.c
M	po/bg.po
M	po/ca.po
M	po/cs.po
M	po/da.po
M	po/de.po
M	po/el.po
M	po/eo.po
M	po/es.po
M	po/et.po
M	po/eu.po
M	po/fr.po
M	po/ga.po
M	po/gl.po
M	po/hu.po
M	po/id.po
M	po/it.po
M	po/ja.po
M	po/ko.po
M	po/lt.po
M	po/nl.po
M	po/pl.po
M	po/pt_BR.po
M	po/ru.po
M	po/sk.po
M	po/sv.po
M	po/tr.po
M	po/uk.po
M	po/zh_CN.po
M	po/zh_TW.po

2018-01-17 18:01:31 -0800  Kevin McCarthy  <kevin@8t8.us> (c041535f)

        * Pull latest Polish translation from master.

M	po/pl.po

2018-01-17 16:21:53 -0800  Kevin McCarthy  <kevin@8t8.us> (32ce9f35)

        * Update manual to point to gitlab.com as development site.

M	doc/manual.xml.head

2018-01-17 16:16:10 -0800  Kevin McCarthy  <kevin@8t8.us> (eff9dfbf)

        * Remove muttbug and flea.
        
        We have pretty much transitioned over to gitlab.com.

M	.gitignore
M	Makefile.am
M	configure.ac
M	doc/Makefile.am
D	doc/muttbug.man
M	init.c
D	muttbug
D	muttbug.sh.in

2018-01-11 15:08:30 -0800  Kevin McCarthy  <kevin@8t8.us> (667a4710)

        * Add missing setup calls when resuming encrypted drafts.
        
        Calls to get the passphrase were missing for app/pgp and app/smime.
        App/smime was also missing a call to crypt_smime_getkeys().
        
        If a failure occurs, report it back, rather than just continuing.
        Otherwise, postponed messages could be completely lost.

M	postpone.c

2018-01-07 12:12:42 -0800  Kevin McCarthy  <kevin@8t8.us> (a37a2c4d)

        * Fix imap status count range check.
        
        The strtoul() call for parsing the STATUS count wasn't checking the
        range properly, because it was assigning to an unsigned int.
        
        Change to assign to a unsigned long, and also add the conversion check
        from mutt_atoui().
        
        Thanks to Charles (@chdiza) for quickly noticing the problem!

M	imap/command.c

2018-01-06 15:55:17 -0800  Kevin McCarthy  <kevin@8t8.us> (8fcf8eda)

        * Change imap literal counts to parse and store unsigned ints.
        
        IMAP literals are of type number.  Change imap_get_literal_count() to
        use mutt_atoui() instead of atoi().  Change the return type variables
        used to store the count to type unsigned int.
        
        It's doubtful this was a real issue, but as long as we're cleaning up
        incorrect atoi() usage, we should fix this too.

M	imap/command.c
M	imap/imap.c
M	imap/imap_private.h
M	imap/message.c
M	imap/util.c

2018-01-05 20:39:50 -0800  Kevin McCarthy  <kevin@8t8.us> (b8190ef3)

        * Fix improper signed int conversion of IMAP uid and msn values.
        
        Several places in the imap code, when parsing "number" and "nz-number"
        values from the IMAP data, use atoi() and strtol().  This is
        incorrect, and can result in failures when a uid value happens to be
        larger than 2^31.
        
        Create a helper function, mutt_atoui() and use that instead.  One
        place was using strtol() and relying on the endptr parameter, and so
        was changed to use strtoul() instead.
        
        Thanks to Paul Saunders for the bug report and original patch, which
        this commit is based on.

M	imap/command.c
M	imap/imap.c
M	imap/message.c
M	lib.c
M	lib.h

2017-12-26 15:09:07 -0800  Kevin McCarthy  <kevin@8t8.us> (363f12a3)

        * Update wiki link in manual.

M	doc/manual.xml.head

2017-12-18 12:55:20 -0800  Kevin McCarthy  <kevin@8t8.us> (80d06b0c)

        * Determine latest tag using git describe.
        
        Commit 8648db83 relies on `sort -V` which is unavailable on some
        platforms.  Instead just use `git describe` with --abbrev=0 to only
        output the tag.  We still manually compute the distance to avoid the
        problem mentioned in that commit.
        
        Additionally, add Vincent's fix from commit 3b142cea to the stable
        branch.

M	mkchangelog.sh
M	version.sh

2017-12-15 15:31:23 -0800  Kevin McCarthy  <kevin@8t8.us> (8e0d8616)

        * automatic post-release commit for mutt-1.9.2

M	ChangeLog
M	UPDATING
M	VERSION

2017-12-15 12:09:42 -0800  Kevin McCarthy  <kevin@8t8.us> (9eedfd4e)

        * Fix s/mime certificate deletion bug. (closes #3982)
        
        Commit c1bcf4ba exposed a bug in the s/mime encryption code.  It was
        errorneously calling unlink on the list of generated cert files to
        use.
        
        Prior to that commit, the list had an initial space, which apparently
        made the unlink fail.  After that commit, encrypting to a single
        certificate would end up deleting the certificate.
        
        Remove the calls to unlink the cert file.  Add some missing cleanup if
        the call to openssl fails.

M	smime.c

2017-12-14 16:16:27 -0800  Kevin McCarthy  <kevin@8t8.us> (841f7101)

        * Update mkchangelog.sh to use git.
        
        The output isn't quite as nice as the hg generated version, but is
        close.
        
        With Mercurial, and now Git, I'm not sure of the usefulness of
        maintaining a ChangeLog file in the repos, but that is another
        discussion.

D	hg-changelog-map
M	mkchangelog.sh

2017-12-12 19:09:42 -0800  Kevin McCarthy  <kevin@8t8.us> (ecbd86c9)

        * Remove hg-commit and Makefile commit target.
        
        I haven't ever used this script, and we only update the ChangeLog
        during releases now.
        
        doc/devel-notes already mentions running check_sec.sh.  Add a mention
        of the 'make validate' target too.

M	Makefile.am
M	doc/devel-notes.txt
D	hg-commit

2017-12-12 18:17:10 -0800  Kevin McCarthy  <kevin@8t8.us> (a4d08d25)

        * Minor tweaks to the version.sh fixes from last commit.
        
        Add back a check for whether the git program exists.
        
        Don't show distance if it is zero.
        
        Remove the dirty flag.
        
        Remove the initial "g" prefix from the commitid.  This is added by git
        describe, but I don't think we need to preserve it.

M	version.sh

2017-12-11 21:46:30 -0500  Aaron Schrab  <aaron+mutt@schrab.com> (8648db83)

        * Change version.sh to manually compute version and distance.
        
        In some cases `git describe` gives bizarre results (see URL below),
        instead get the highest version-numbered tag contained in HEAD then
        count the number of commits that aren't included in it.
        
        https://public-inbox.org/git/20161205232712.GA23868@pug.qqx.org/

M	version.sh

2017-12-10 20:03:30 -0800  Kevin McCarthy  <kevin@8t8.us> (7b65f780)

        * Update some of the documentation to refer to git.
        
        Also update the repos URL.

M	COPYRIGHT
M	README
M	doc/devel-notes.txt

2017-12-03 17:55:59 -0800  Kevin McCarthy  <kevin@8t8.us> (6df931c8)

        * Convert version.sh to work with git.
        
        Use the built-in `git describe` to get the tag, distance, and
        revision id.

M	version.sh

2017-12-02 19:27:14 -0800  Kevin McCarthy  <kevin@8t8.us> (0ad4c11d)

        * Convert to .gitignore file.

A	.gitignore
D	.hgignore

2017-09-30 19:15:08 -0700  Kevin McCarthy  <kevin@8t8.us> (1f4a6c67)

        * Fix address group terminator "exact address" printing to display trailing semicolon.
        
        The exact-address handling for comma and colon are different because
        those are added outside the exact-address printing.
        
        The semicolon needs to be inside the address->val field of the address
        group terminator.

M	rfc822.c

2017-09-26 19:44:11 -0700  Kevin McCarthy  <kevin@8t8.us> (0bcb77a6)

        * Fix uses of context->changed as a counter.
        
        The first was in mx_update_tables(), but only when "not committing".
        This is used by mh/maildir during an "occult" update, and in imap when
        expunging the mailbox.  It meant to simply turn on changed when a
        single changed header is seen.
        
        The second use was in imap_sync_message_for_copy().  Previously this
        was used for a server side copy/save, but is now also used for
        fast-trash copying.  Remove the code that was trying to decrement the
        counter: this function is not capable of properly setting a status
        bit.

M	imap/imap.c
M	mx.c

2017-09-23 11:40:44 -0700  Kevin McCarthy  <kevin@8t8.us> (b333df6d)

        * mutt-1.9.1 signed

M	.hgsigs

2017-09-23 11:39:54 -0700  Kevin McCarthy  <kevin@8t8.us> (5e007dac)

        * Added tag mutt-1-9-1-rel for changeset 869633ef393e

M	.hgtags

2017-09-23 11:39:45 -0700  Kevin McCarthy  <kevin@8t8.us> (8473efa7)

        * automatic post-release commit for mutt-1.9.1

M	ChangeLog
M	UPDATING
M	VERSION

2017-09-22 11:14 -0700  Kevin McCarthy  <kevin@8t8.us>  (19c81a140c6e)

	* imap/imap.c: Add missing IMAP_CMD_POLL flag in imap buffy check.

	I missed adding the flag to one of the imap_exec() calls inside the
	loop, when a different server is encountered in the mailboxes list.

2017-09-22 11:12 -0700  Kevin McCarthy  <kevin@8t8.us>  (9e53c623d102)

	* imap/command.c: Close the imap socket for the selected mailbox on
	error.

	The new $imap_poll_timeout calls the cmd_handle_fatal() error
	handler on timeout, which is supposed to close and cleanup.

	However, for the currently selected mailbox, the error handler was
	not closing the socket after closing up the mailbox. This left extra
	SSL/GnuTLS data around and was causing errors on an attempt to
	reconnect.

	Thanks to Fabian Groffen for reporting the issue.

2017-09-22 11:07 -0700  Kevin McCarthy  <kevin@8t8.us>  (7155392ed28b)

	* imap/imap.c: Fix imap sync segfault due to inactive headers during
	an expunge. (closes #3971)

	Mutt has several places where it turns off h->active as a hack. For
	example to avoid FLAG updates, or to exclude from imap_exec_msgset.

	Unfortunately, when a reopen is allowed and the IMAP_EXPUNGE_PENDING
	flag becomes set (e.g. a flag update to a modified header),
	imap_expunge_mailbox() will be called by imap_cmd_finish().

	The mx_update_tables() would free and remove these "inactive"
	headers, despite that an EXPUNGE was not received for them. This
	would result in memory leaks and segfaults due to dangling pointers
	in the msn_index and uid_hash.

	There should probably be a more elegant solution, removing the
	initial hacks. However, this is causing a segfault, and the best
	solution right now is to turn active back on for non-expunged
	messages in imap_expunge_mailbox().

	Extra thanks to chdiza, who bravely runs tip and found this issue
	quickly.

2017-09-14 12:43 -0700  Kevin McCarthy  <kevin@8t8.us>  (12d3714d8bfa)

	* imap/command.c, imap/message.c: Improve imap fetch handler to accept
	an initial UID. (closes #3969)

	Gmail sends flag updates with a UID before the FLAGS. The handler
	was very simple, and so ignored the flag update in that case.

	Pull the code from msg_parse_fetch(), paring down to just UID and
	FLAGS. This will handle arbitrary order data items.

2017-09-13 15:48 -0700  Kevin McCarthy  <kevin@8t8.us>  (f90712538cd9)

	* imap/imap.c, imap/imap_private.h, imap/message.c: Change imap
	copy/save and trash to sync flags, excluding deleted. (closes #3966)
	(closes #3860)

	imap_copy_messages() uses a helper to sync the flags before
	performing a server-side copy. However, it had a bug that the
	"deleted" flag on a local message, if set, will be propagated to the
	copy too.

	Change the copy sync helper to ignore the deleted flag. Then, change
	the imap trash function to use the same helper.

	Thanks to Anton Lindqvist for his excellent bug report, suggested
	fixes, and help testing.

2017-09-13 15:48 -0700  Kevin McCarthy  <kevin@8t8.us>  (19597bb7baa6)

	* imap/imap.c: Remove \Seen flag setting for imap trash. (see #3966)
	(see #3860)

	Commit 323e3d6e5e4c has a side effect where spurious FETCH flag
	updates after setting the \Seen flag can cause a sync to abort.

	Remove manually setting \Seen for all trashed message before
	copying.

	The next commit will change the imap trash function to use the same
	code as the imap copy/save function for syncing the message before
	server-side copying.

2017-09-04 09:40 -0700  Kevin McCarthy  <kevin@8t8.us>  (3c6f3ca07807)

	* curs_lib.c: Fix rv assignment in mutt_window_mvprintw(). (closes
	#3964)

	Mutt doesn't check the return value, so this wasn't causing a bug,
	but was incorrect.

	Thanks to dcb314 for reporting the issue.

2017-09-04 09:20 -0700  Kevin McCarthy  <kevin@8t8.us>  (f2298b3e6b93)

	* mutt_ssl_gnutls.c: Fix fp resource leak. (closes #3965)

	Thanks to dcb314 for reporting the issue.

2017-09-02 12:20 -0700  Kevin McCarthy  <kevin@8t8.us>  (ed024cc919fe)

	* setenv.c: merge default into stable

2017-09-02 12:12 -0700  Kevin McCarthy  <kevin@8t8.us>  (a586abf3c62d)

	* .hgsigs: mutt-1.9.0 signed

2017-09-02 12:11 -0700  Kevin McCarthy  <kevin@8t8.us>  (b050efec0ed4)

	* .hgtags: Added tag mutt-1-9-rel for changeset 549821ba69e5

2017-09-02 11:32 -0700  Kevin McCarthy  <kevin@8t8.us>  (549821ba69e5)

	* ChangeLog, VERSION, po/bg.po, po/ca.po, po/cs.po, po/da.po,
	po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po, po/eu.po,
	po/fr.po, po/ga.po, po/gl.po, po/hu.po, po/id.po, po/it.po,
	po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po,
	po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po,
	po/zh_TW.po: automatic post-release commit for mutt-1.9.0

2017-09-02 09:36 -0700  Kevin McCarthy  <kevin@8t8.us>  (3cd63d517453)

	* po/cs.po, po/eo.po, po/nl.po: Fix the new certificate prompt
	translations.

	The Esperanto, Dutch, and Czech po files weren't updated in time for
	1.9. Fix the certificate prompt translations by adding a "(s)kip"
	choice. Otherwise the prompts would not be functional.

2017-08-29 09:19 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (52ba6fd58607)

	* po/ja.po: Updated Japanese translation.

2017-08-27 09:28 -0700  Ivan Vilata i Balaguer  <ivan@selidor.net>  (2666f4de9eb8)

	* po/ca.po: Updated Catalan translation.

2017-08-22 19:22 -0700  Kevin McCarthy  <kevin@8t8.us>  (b506fa3e7aab)

	* UPDATING: Add 1.9.0 entries to the UPDATING file.

2017-08-22 13:51 -0700  Morten Bo Johansen  <mjb@spamcop.net>  (f1638434cb43)

	* po/da.po: Updated Danish translation.

2017-08-22 10:59 -0700  Morten Bo Johansen  <mjb@spamcop.net>  (cce15c0169af)

	* po/da.po: Updated Danish translation.

2017-08-22 10:28 -0700  Olaf Hering  <olaf@aepfle.de>  (3606d018ea75)

	* po/de.po: Updated German translation.

2017-08-20 09:39 -0700  Vsevolod Volkov  <vvv@mutt.org.ua>  (584cc7ee5016)

	* po/ru.po: Updated Russian translation.

2017-08-20 09:31 -0700  Vsevolod Volkov  <vvv@mutt.org.ua>  (ed0fff2be143)

	* po/uk.po: Updated Ukrainian translation.

2017-08-19 08:33 -0700  Kevin McCarthy  <kevin@8t8.us>  (190e778db4d6)

	* doc/manual.xml.head, globals.h, init.h, mutt.h, sendlib.c: Add
	option to run command to query attachment mime type. (closes #2933)
	(closes #3959)

	Add $mime_type_query_command to specify a command to run if the
	attachment extension is not in the mime.types file.

	Add $mime_type_query_first to allow the query command to be run
	before the mime.types lookup.

2017-08-12 22:17 +0200  Vincent Lefevre  <vincent@vinc17.net>  (69e3bde9f83d)

	* po/fr.po: Updated French translation.

2017-08-11 09:04 -0700  Kevin McCarthy  <kevin@8t8.us>  (1306ee5f4bf7)

	* recvcmd.c: Fix parent_hdr usage in mutt_attach_reply(). (see #3728)

	If the selected attachments are not messages and no (common) parent
	is found, parent_hdr is set to the passed in hdr. In that case,
	parent will still be NULL, but parent_hdr and parent_fp will be set.

	Change the test to parent_hdr being NULL, not parent, to check for
	this case.

2017-08-10 18:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (052ad4fcdd6b)

	* commands.c, protos.h, recvattach.c: Add edit-content-type helper and
	warning for decrypted attachments. (closes #3728)

	Regenerating the actx index will overwrite any changes made to a
	decrypted attachment. Change the mutt_edit_content_type() function
	to return 1 when a structural change is made. Add a warning message
	when that is the case and a decrypted message was edited, so the
	user is not surprised.

	Note: mutt_edit_content_type() appeared to regenerate multipart
	subparts every time, leading to a memory leak. I believe this was an
	oversite, and it should have regenerated only when there were no
	subparts, so have "fixed" this.

2017-08-10 18:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (38855dc0a02a)

	* crypt-gpgme.c, crypt-gpgme.h, crypt-mod-pgp-classic.c, crypt-mod-
	pgp-gpgme.c, crypt-mod.h, cryptglue.c, mutt_crypt.h, pgp.c,
	recvattach.c: Fix attachment check_traditional and extract_keys
	operations. (see #3728)

	Add helpers and iterate over the actx->idx instead of the BODY
	structure.

2017-08-10 18:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (e6e8b2f1fae3)

	* attach.h, compose.c, pager.c, recvattach.c, recvcmd.c: Fix shared
	attachment functions. (see #3728)

	With nested decryption, the correct FP is associated with the
	ATTACHPTR entry. Also, the BODY entries are not continguous, so the
	functions need to iterate over the actx index, not the BODY
	structure.

2017-08-10 18:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (26e06bd4f29d)

	* recvattach.c: Fix the expand/collapse code to use the virtual index.
	(see #3728)

	Fix the init code to respect OPTDIGESTCOLLAPSE.

2017-08-10 18:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (c7fe290bc3a3)

	* attach.c, attach.h, compose.c, recvattach.c: Add virtual index to
	actx. (see #3728)

	The virtual index is modeled after the CONTEXT. Add a CURATTACH
	helper to reduce code verbosity. Store the actx as menu->data.

	Simplify and consolidate the recvattach and compose menu update code
	inside a function.

	Because compose and recvattach share so much code, change compose to
	use the virtual index even though it has no collapse/expand
	functionality.

2017-08-10 18:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (23ce88ed8961)

	* attach.c, attach.h, compose.c, protos.h, recvattach.c: Change
	recvattach to allow nested encryption. (see #3728)

	* Add a FP and BODY array to the actx. These are used to allow
	proper cleanup.

	* Add HEADER and root_fp entries, to allow for index regeneration.

	* Separate out the compose and recvattach index generation
	functions.

	* Change the recvattach index generator to decrypt as encrypted
	parts are found.

2017-08-10 18:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (ee1fd4a71a8a)

	* attach.c, attach.h, compose.c, recvattach.c: Add helpers to add and
	remove actx entries. (see #3728)

	Use the helper in compose update_idx(), to consolidate the resize
	logic and simplify the code.

	Separate out the actx "free" routine from a routine to empty out the
	idx. The index regeneration routines should flush and rebuild the
	index without having to renerate the actx structure.

2017-08-10 18:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (b8bbccd98632)

	* attach.c, attach.h, browser.c, compose.c, pager.c, pager.h,
	recvattach.c, recvcmd.c: Change helpers functions to pass actx. (see
	#3728)

	Change the pager, compose, recvattach and recvcmd to pass the actx
	instead of the individual idx and idxlen parameters.

	Separate out the compose menu exit logic to first free the BODY data
	and then call the shared actx free function at the bottom.

2017-08-10 18:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (278b6efc6bba)

	* attach.c, attach.h, compose.c, recvattach.c: Create ATTACH_CONTEXT
	to hold attachment index. (see #3728)

	Move the idx and idxlen into ATTACH_CONTEXT. In subsequence patches,
	this structure will hold more useful items, such as the virtual
	index.

	The swap out is straightforward, except for:
	  * update_idx() in compose.c, which post-increments the idxlen in the
	call and again in the function.
	  * mutt_gen_attach_list() which doesn't need to returns the new values.

2017-08-09 08:08 -0700  lilydjwg  <lilydjwg@gmail.com>  (5f034395e53d)

	* po/zh_CN.po: Updated Simplified Chinese translation.

2017-08-08 09:13 -0700  Olaf Hering  <olaf@aepfle.de>  (86f709e4be55)

	* po/de.po: Updated German translation.

2017-08-06 10:22 -0700  Kevin McCarthy  <kevin@8t8.us>  (f8df8c43e5c0)

	* pager.c: Handle error if REGCOMP in pager fails when resizing.

	Thanks to JiaZhouyang for finding this issue and supplying the
	original patch.

2017-08-04 09:29 -0700  Olaf Hering  <olaf@aepfle.de>  (ac2fda8bc9c4)

	* po/de.po: Updated German translation.

2017-07-28 10:54 -0700  Kevin McCarthy  <kevin@8t8.us>  (f83de1e03e08)

	* configure.ac, mutt_socket.c: Convert raw_socket_poll() to use
	gettimeofday().

	As long as gettimeofday() is supported, it's better to be consistent
	within mutt and ensure greater portability.

	Change the raw_socket_poll() wait timer to count milliseconds, like
	the mutt_progess_update() code.

	Thanks to Vincent Lefèvre for his, as always, invaluable advice.

2017-07-27 00:20 +0100  Vincent Lefevre  <vincent@vinc17.net>  (eeb5ff58ab14)

	* po/fr.po: Updated French translation.

2017-07-24 11:19 -0700  Kevin McCarthy  <kevin@8t8.us>  (f94a97422cd0)

	* configure.ac, mutt_socket.c: Add autoconf search for clock_gettime.

	It appears to be specified in POSIX.1-2001, so just abort if it's
	not found.

	Add a missing time.h include in mutt_socket.c

2017-07-22 19:48 -0700  Kevin McCarthy  <kevin@8t8.us>  (4a1390537a29)

	* globals.h, imap/command.c, imap/imap.c, imap/imap_private.h, init.h:
	Add $imap_poll_timeout to allow mailbox polling to time out.

	Enable the polling flag for the NOOP in imap_check_mailbox(), the
	STATUS command in imap_buffy_check(), and the LOGOUT command.

	This is not intended to handle all blocking-IO related issues.
	However, the periodic NOOP and STATUS are the most frequent places
	for mutt to freeze up, especially after a laptop is sleep/woken.

	Since these are quick operations with little data, this is a good
	place to check if the connection is still working before hanging on
	a read.

2017-07-22 19:48 -0700  Kevin McCarthy  <kevin@8t8.us>  (908bea74acef)

	* imap/imap.c, mutt_sasl.c, mutt_sasl.h, mutt_socket.c, mutt_socket.h,
	mutt_tunnel.c: Add timeout parameter to mutt_socket_poll.

	This will be used in the next commit to add a timeout when polling
	for new mail.

2017-07-20 17:30 -0700  Kevin McCarthy  <kevin@8t8.us>  (a533c22715c8)

	* mutt.h, sendlib.c: When guessing an attachment type, don't allow
	text/plain if there is a null character. (see #2933)

	Type text/plain should not contain any null characters. Slightly
	improve the type guesser by forcing an attachment with any null
	characters to be application/octet-stream.

	Note the type guesser could use much more improvement, but this is
	an easy and obvious fix.

2017-07-19 14:12 -0700  Kevin McCarthy  <kevin@8t8.us>  (2204d7ed4d94)

	* imap/command.c, imap/imap.c, menu.c: merge stable

2017-07-19 14:04 -0700  Kevin McCarthy  <kevin@8t8.us>  (78cc40b6ba9e)

	* imap/command.c, imap/imap.c: Change imap_cmd_start() to return OK
	when the cmd_queue is finished. (closes #3956)

	Some response handlers can end up recursively calling
	imap_cmd_start(), processing all the command completions. If the
	outer call was an imap_exec(), this would result in the loop never
	being terminated (or just blocking reading a server that has already
	finished all the commands).

	Change the callers that are simply using it to read a response,
	without having called cmd_start(), to check for IMAP_CMD_OK instead.
	Currently this is just the open connection function.

2017-07-19 14:04 -0700  Kevin McCarthy  <kevin@8t8.us>  (cf98f5d606a3)

	* menu.c: Fix menu color calls to occur before positioning the cursor.
	(see #3956)

	It is possible for menu->color() to end up fetching an imap message,
	and therefore generating a status message.

	Because of this, we need to make those calls before we position the
	cursor.

2017-07-14 15:19 -0700  Kevin McCarthy  <kevin@8t8.us>  (c4e507003aa0)

	* regex.c: Decrease regex failure stack limit. (closes #3955)

	When using alloca(), the built-in regexp library limited the failure
	stack to 20,000 entries. This value is too large, and causes
	alloca() to segfault in the example provided in the ticket.

	Decrease the limit to 8000.

	Thanks to Thorsten Wißmann for the excellent bug report, which made
	debugging this much easier.

2017-07-13 22:05 -0700  Brendan Cully  <brendan@kublai.com>  (9430d2357bc2)

	* imap/imap.c, imap/imap.h, mx.c: drop unused flags argument from
	imap_access

	We are not using an actual interface so it is pointless.

2017-07-12 21:20 -0700  Brendan Cully  <brendan@kublai.com>  (742c96078159)

	* bcache.c: bcache: cast to avoid implicit signed/unsigned comparison
	in bcache_path

2017-07-12 12:39 -0700  Kevin McCarthy  <kevin@8t8.us>  (51d22025190a)

	* imap/imap.c: merge stable

2017-07-12 12:38 -0700  Kevin McCarthy  <kevin@8t8.us>  (02c6dd3a30cc)

	* imap/imap.c: Fix crash when $postponed is on another server.

	imap_mxcmp() translates NULL to "INBOX". When $postponed points to a
	URL with an empty or "INBOX" path, this will end up matching against
	a NULL idata->mailbox in imap_status(). This resulted in a crash
	because idata->ctx is also NULL.

	Thanks to Olaf Hering for the detailed bug report and suggested fix.

2017-07-08 16:35 -0700  Brendan Cully  <brendan@kublai.com>  (952e4fcf1e2b)

	* imap/imap.c: fix signed/unsigned comparison in longest_common_prefix

2017-07-05 19:09 -0700  Kevin McCarthy  <kevin@8t8.us>  (428e36fb2262)

	* doc/manual.xml.head, doc/muttrc.man.head, mutt.h, pattern.c: Add
	~<() and ~>() immediate parent/children patterns. (closes #3144)

	Thanks to Jeremie Le Hen for the original patch, and for his
	persistence in getting this feature merged.

2017-07-03 19:22 -0700  Kevin McCarthy  <kevin@8t8.us>  (c87d2a88308a)

	* po/bg.po, po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po,
	po/eu.po, po/ga.po, po/gl.po, po/hu.po, po/id.po, po/it.po,
	po/ko.po, po/lt.po, po/pl.po, po/pt_BR.po, po/sk.po, po/sv.po,
	po/tr.po, po/zh_CN.po, po/zh_TW.po: Remove stale certificate prompt
	translations.

	With the OpenSSL changes, unmaintained translation prompts will not
	function properly.

	Clear out the translation strings for those using different action
	keys.

	This changeset does not touch the translation files that are
	actively maintained. They will be properly updated before the 1.9.0
	release.

2017-07-03 19:22 -0700  Kevin McCarthy  <kevin@8t8.us>  (752f3e879d50)

	* po/bg.po, po/ca.po, po/cs.po, po/da.po, po/de.po, po/el.po,
	po/eo.po, po/es.po, po/et.po, po/eu.po, po/fr.po, po/ga.po,
	po/gl.po, po/hu.po, po/id.po, po/it.po, po/ja.po, po/ko.po,
	po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po, po/ru.po, po/sk.po,
	po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po, po/zh_TW.po: Update po
	files.

2017-07-03 19:22 -0700  Kevin McCarthy  <kevin@8t8.us>  (b90d818b768c)

	* mutt_ssl_gnutls.c: Add L10N comments to the GNUTLS certificate
	prompt.

	The prompts are shared with OpenSSL, and so the prompts end up being
	separate from the action key strings.

2017-07-02 17:53 -0700  Kevin McCarthy  <kevin@8t8.us>  (680300397f3d)

	* init.h: Add more description for the %S and %Z $index_format
	characters.

2017-07-01 19:32 -0700  Kevin McCarthy  <kevin@8t8.us>  (c45291f87137)

	* globals.h, init.h, protos.h, recvcmd.c, send.c: Add config vars for
	forwarded message attribution intro/trailer.

	Add $forward_attribution_intro and $forward_attribution_trailer to
	allow the default strings to be overridden.

2017-06-26 15:54 -0700  Antonio Radici  <antonio@dyne.org>  (88602d33a49a)

	* init.h: Fix typo in smime_self_encrypt_as documentation. (closes
	#3953)

2017-06-26 15:47 -0700  Kevin McCarthy  <kevin@8t8.us>  (c50abea2ec80)

	* init.h: merge stable

2017-06-26 15:44 -0700  Regid Ichira  <regid23@nt1.in>  (826efa89631f)

	* init.h: Minor documentation fixes.

	The muttrc man page doesn't contain the "Format Strings" section in
	the manual, so add a pointer to the explanation of conditionals in
	$status_format.

2017-06-20 15:09 -0700  Kevin McCarthy  <kevin@8t8.us>  (219b9064cf28)

	* mutt_socket.c: Block SIGWINCH during connect(). (closes #3941)

	FreeBSD's connect() does not respect SA_RESTART, so a SIGWINCH will
	end up interrupting the connect.

	If this code is needed in other places, it should be moved into
	signal.c. For this one place, inlining the sigprocmask() seemed
	okay.

2017-06-18 10:58 -0700  Kevin McCarthy  <kevin@8t8.us>  (d56fd3f91de9)

	* compose.c: Improve the L10N comment about Sign as.

	Make it clearer what the indentation behavior is, and add
	suggestions about the width.

	Thanks to TAKAHASHI Tamotsu for the original patch suggesting
	changes to the L10N comments.

2017-06-18 10:58 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (0efae3363358)

	* po/ja.po: Updated Japanese translation.

2017-06-14 19:21 -0700  Kevin McCarthy  <kevin@8t8.us>  (7dc8a6a3592a)

	* crypt-gpgme.c: Auto-pad translation for the GPGME key selection
	"verify key" headers.

	Remove the ridiculous need for the translators to pad the
	translation strings themselves.

2017-06-14 15:23 -0700  Morten Bo Johansen  <mjb@spamcop.net>  (2188de087f35)

	* po/da.po: Updated Danish translation.

2017-06-14 15:12 -0700  Kevin McCarthy  <kevin@8t8.us>  (e8368cedbd95)

	* compose.c, init.h, send.c: Enable all header fields in the compose
	menu to be translated.

	While it is suggested they need not be, for some locales it might be
	preferable to be able to localize the fields.

	For instance, fr_FR may want to change the punctuation to have a
	space in front of the colon. ja_JP may be more comfortable with a
	native character set description of the field when using it every
	day.

2017-06-12 18:29 -0700  Kevin McCarthy  <kevin@8t8.us>  (0e3730ed2c3c)

	* sendlib.c: Force hard redraw after $sendmail instead of calling
	mutt_endwin. (closes #3952) (see #3948)

	Adding a mutt_endwin() seemed like a clean solution to allowing
	ncurses pinentry for $sendmail, but it leaves other users watching a
	blank screen. This change is extremely likely to generate a large
	number of complaints and bug reports. So instead, force a hard
	refresh afterwards.

2017-06-12 17:57 -0700  Kevin McCarthy  <kevin@8t8.us>  (26cbf2cac701)

	* crypt-gpgme.c: Make GPGME key selection behavior the same as
	classic-PGP. (see #3950)

	Classic-PGP key selection auto-selected a match if there was a
	single strong, valid, address-match result, even if there were other
	weak matches.

	GPGME was prompting in the same situation, if there were other weak
	matches.

	Change GPGME to match the classic behavior, as this is more useful
	and matches the manual description.

2017-06-09 11:31 -0700  Consus  <consus@gmx.com>  (dd0208f13983)

	* compose.c: Rename 'sign as' to 'Sign as'; makes compose menu more
	consistent.

2017-06-09 11:31 -0700  Kevin McCarthy  <kevin@8t8.us>  (b4d0bb558636)

	* compose.c: Change the compose menu fields to be dynamically padded.

	Pad based on the maximum width of the fields. Note that this is a
	bit of a mess, because some of the fields are translated while
	others are not.

2017-06-08 13:26 -0700  Kevin McCarthy  <kevin@8t8.us>  (966f08249216)

	* init.c, pgp.c: Backout 02ff4277259e (see #3948)

	Vincent expressed some legitimate concerns about exporting this to
	all programs lauched by mutt. The user can always set GPG_TTY in
	their .bashrc if needed for $sendmail. cf90bf5989f3 should resolve
	the refresh issue.

2017-06-06 18:38 -0700  Kevin McCarthy  <kevin@8t8.us>  (cf90bf5989f3)

	* sendlib.c: Add a mutt_endwin() before invoking $sendmail. (closes
	#3948)

	This is to support invoking a program such as msmtp that can use gpg
	to decrypt a password. The ncurses pinentry can corrupt the screen
	unless we exit curses.

2017-06-06 18:38 -0700  Kevin McCarthy  <kevin@8t8.us>  (02ff4277259e)

	* init.c, pgp.c: Move setting of GPG_TTY to mutt_init(). (see #3948)

	This allows other programs mutt runs to use the ncurses pinentry if
	needed.

2017-06-06 18:38 -0700  Kevin McCarthy  <kevin@8t8.us>  (915ba3928d49)

	* configure.ac, m4/gettext.m4, pgp.c, protos.h, setenv.c: Restore
	setenv function.

	Partially revert fa1192803257, restoring setenv. It turns out we
	still need the function.

2017-06-02 13:17 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (a11770c2137b)

	* po/ja.po: Updated Japanese translation.

2017-06-01 15:17 -0700  Kevin McCarthy  <kevin@8t8.us>  (f26adb2b0543)

	* curs_main.c, menu.c: Fix tag-prefix to not abort on $timeout.

	If $timeout is set very low, then it can cancel the tag-prefix
	before the user has time to press the desired command.

	Change the code to set the tag flag, and then recontinue with normal
	event processing instead. Cancel on an abort, but continue with a
	timeout.

	Thanks to Lauri Tirkkonen for reporting the issue.

2017-06-01 15:17 -0700  Kevin McCarthy  <kevin@8t8.us>  (ec6530cb0a5a)

	* curs_main.c, enter.c, keymap.c, menu.c, pager.c: Change km_dokey()
	to return -2 on a timeout/sigwinch.

	In some cases, such as tag-prefix or _mutt_enter_string(), it is
	desirable to be able to distinguish between a timeout/sigwinch event
	and an input error/abort/ctrl-g.

2017-06-01 13:55 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (152d548c1bcf)

	* main.c: Enable TEXTDOMAINDIR override to make translation testing
	easier.

	If set, TEXTDOMAINDIR will point to a translation directory instead
	of using the mutt installation directory.

2017-06-01 13:33 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (4e29b337e967)

	* crypt-gpgme.c, hook.c, init.c, main.c, mutt_ssl.c, pattern.c, pop.c,
	pop_auth.c: Fix "format string is not a string literal" warnings.
	(closes #3949)

	Mutt calls msgfmt with '-c' to verify that translation format
	strings match, but it is still safer to indirect strings with no
	formatting through %s.

2017-05-31 16:19 -0700  Kevin McCarthy  <kevin@8t8.us>  (093b0c6c6d86)

	* doc/manual.xml.head: merge stable

2017-05-31 16:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (d3922568a777)

	* doc/manual.xml.head: Add note about message scoring and thread
	patterns. (see #3947)

	Because scoring occurs before the mailbox is sorted, thread patterns
	don't work. Document a suggested workaround of pushing the score
	command in a folder hook.

	Also, fix the link target for the score command synopsis.

2017-05-30 12:49 -0700  Kevin McCarthy  <kevin@8t8.us>  (35fba390b1f3)

	* merge stable

2017-05-30 12:48 -0700  Kevin McCarthy  <kevin@8t8.us>  (fff7d4bb459a)

	* .hgsigs: mutt-1.8.3 signed

2017-05-30 12:47 -0700  Kevin McCarthy  <kevin@8t8.us>  (6a54fbc38fa4)

	* .hgtags: Added tag mutt-1-8-3-rel for changeset fe5275246e13

2017-05-30 12:47 -0700  Kevin McCarthy  <kevin@8t8.us>  (fe5275246e13)

	* ChangeLog, UPDATING, VERSION: automatic post-release commit for
	mutt-1.8.3

2017-05-29 11:48 -0700  Kevin McCarthy  <kevin@8t8.us>  (228364e8abb7)

	* init.h, send.c: Change $postpone_encrypt to use self-encrypt
	variables first.

	The concept of postpone encryption is similar to self-encrypting on
	send. The problem is the $postpone_encrypt_as option doesn't take
	into account whether PGP or S/MIME is being used.

	Since we need to add the new options for self-encryption, modify
	$postpone_encrypt to use them by default instead, falling back to
	$postpone_encrypt_as if they are unset. Note $postpone_encrypt_as is
	deprecated in the documentation.

2017-05-29 11:48 -0700  Kevin McCarthy  <kevin@8t8.us>  (ca95f3e38355)

	* crypt.c, globals.h, init.h, mutt.h: Add self-encrypt options for PGP
	and S/MIME.

	Add $pgp_self_encrypt, $pgp_self_encrypt_as, $smime_self_encrypt,
	$smime_self_encrypt_as.

	$pgp_sign_as and $smime_default_key are inappropriate to use, as
	they specify signing key/certs. In some cases, this is a different
	value than the encryption key/cert.

2017-05-29 11:48 -0700  Kevin McCarthy  <kevin@8t8.us>  (085fc55029d8)

	* smime.c: Convert classic s/mime to space delimit findKeys output.

	Unlike gpgme and classic pgp, smime used a "cert\ncert\n" pattern.
	Convert to use a space-delimited format, so the self-encrypt option
	code can be uniform across pgp, s/mime, and gpgme.

2017-05-24 15:46 -0700  Kevin McCarthy  <kevin@8t8.us>  (a636bc4a4940)

	* imap/message.c: Change imap body cache cleanup to use the uid_hash.

	This should speed up $message_cache_clean cleanup when syncing.

2017-05-23 15:54 -0700  Kevin McCarthy  <kevin@8t8.us>  (8904261ed212)

	* merge stable

2017-05-23 15:53 -0700  Kevin McCarthy  <kevin@8t8.us>  (fa0c2155ab8f)

	* mx.c: Fix memory leak when closing mailbox and using the sidebar.

	The code updating the sidebar counts decremented the msgcount, but
	did not set it back to the original value. Which means fastclose was
	not freeing all the headers.

	Update the sidebar only when something is deleted, since I don't
	believe it's required otherwise and the code is a bit cleaner that
	way.

2017-05-22 18:30 -0700  Kevin McCarthy  <kevin@8t8.us>  (407100d15766)

	* imap/imap.c: Don't clean up msn idata when closing an open-append
	mailbox. (see #3942)

	This is a continuation of commit 59a2125b49f2 with changes made in
	the default branch.

	Thanks again to Will Yardley for helping test the imap read-headers
	changes and discovering this bug.

2017-05-22 18:25 -0700  Kevin McCarthy  <kevin@8t8.us>  (aec6b48e8ea5)

	* imap/imap.c: merge stable

2017-05-22 18:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (59a2125b49f2)

	* imap/imap.c: Don't clean up idata when closing an open-append
	mailbox.

	open-append borrows the idata just for the connection. The "mailbox
	specific" part of the idata may be being used by a normal open-
	mailbox.

	Don't free the idata "mailbox specific" part when closing an open-
	append mailbox.

	Thanks to Will Yardley for discovering the bug as part of testing
	the revised IMAP fetch_headers code (in the default branch).

2017-05-22 05:14 -0700  Kevin McCarthy  <kevin@8t8.us>  (e614fb00459b)

	* merge stable

2017-05-22 05:08 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (1ddf2641f369)

	* mx.c: Fix potential segv if mx_open_mailbox is passed an empty
	string. (closes #3945)

	If path is "", ctx->path will be NULL. realpath() generally will
	segv if the first parameter is NULL.

2017-05-22 04:43 -0700  Kevin McCarthy  <kevin@8t8.us>  (4ab3a8a2e321)

	* imap/message.c: Fix mfc overflow check and uninitialized variable.

	The check borrowed from mx_alloc_memory() works because it is
	incremented 25 at a time. I don't believe it will work for the
	direct set case used in imap_alloc_msn_index(). Instead, use a more
	conservative check.

	In imap_read_headers(), make sure mfhrc is initialized. It would be
	tested without being set if imap_cmd_step() returned OK right away.

2017-05-21 18:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (5904c6376f77)

	* imap/message.c: Don't abort header cache evaluation when there is a
	hole. (see #3942)

	Instead, find the first missing MSN and generate a more complicated
	sequence set specifying the missing ranges.

	This removes the assumption that the header cache query returned
	results in MSN order.

2017-05-21 18:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (1658ab70377b)

	* imap/message.c: Small imap fetch fixes. (see #3942)

	Add an integer overflow test, pulled from mx_alloc_memory(), since
	the count comes from a potentially hostile server.

	After reviewing the RFC a bit, it turns out the server is not
	supposed to send EXPUNGE responses during a FETCH. Change the
	comment, but keep the conservative code.

2017-05-21 10:51 -0700  Kevin McCarthy  <kevin@8t8.us>  (f87c679e508f)

	* imap/message.c: Properly adjust fetch ranges when handling new mail.
	(see #3942)

	When pulling down headers, it is possible for expunge responses to
	happen too. If we get a new mail count, we need to take into account
	changes to the max_msn due to the expunges.

2017-05-20 18:52 -0700  Kevin McCarthy  <kevin@8t8.us>  (77d3173aecff)

	* imap/command.c, imap/imap.c, imap/imap_private.h, imap/message.c:
	Add msn_index and max_msn to find and check boundaries by MSN. (see
	#3942)

	Since there can be gaps in MSNs, the largest MSN in the context is
	not necessarily ctx->msgcount.

	Use max_msn instead of ctx->msgcount for:
	  - the starting MSN of new mail header fetching
	  - boundary checking in fetch, expunge, and other places

	Use msn_index to efficiently look up headers by MSN. This makes the
	expunge code slightly more efficient. It also makes FETCH handling,
	and duplicate FETCH FLAG handling efficient.

2017-05-20 18:52 -0700  Kevin McCarthy  <kevin@8t8.us>  (5289d2caadbb)

	* imap/command.c, imap/imap.c, imap/imap_private.h, imap/message.c:
	Start fixing imap_read_headers() to account for MSN gaps. (see
	#3942)

	Change the parameters to pass MSN instead of index, to make a bit
	simpler.

	Change header cache evaluation to look at the largest MSN retrieved
	instead of ctx->msgcount for the next fetch start point. This still
	depends on the assumption that MSNs are retrieved in ascending
	order, which needs to be fixed.

	Simplify the header cache inner loop termination and memory cleanup
	logic. Fix a memory leak if a hole in the header cache occured.

	Fix the header retrieval logic to take into account MSN gaps in the
	results. Loop only as long as we get IMAP_CMD_CONTINUE instead of
	over a fixed count. Simplify the inner loop termination and memory
	cleanup logic too.

	Simplify the "new mail while fetching" logic by creating a third
	outer loop to handle re-fetches.

	Fix msg_fetch_header() to return -2 if msg_parse_fetch() encounters
	a corrupt FETCH response. Previously it would pass on the rc of
	msg_parse_fetch(), meaning it would return -1 even though the
	response was corrupt.

2017-05-20 18:52 -0700  Kevin McCarthy  <kevin@8t8.us>  (b85bf6466c79)

	* imap/command.c: Fix cmd_parse_fetch() to match against MSN. (see
	#3942)

2017-05-20 18:52 -0700  Kevin McCarthy  <kevin@8t8.us>  (ab3595fbb698)

	* imap/command.c, imap/imap.c: Fix imap expunge to match msn and fix
	index. (see #3942)

	The expunge needs to match against the MSN now. Since
	cmd_parse_expunge() does not automatically fix h->index anymore,
	change imap_expunge_mailbox() to fix up the h->index values.

2017-05-20 18:52 -0700  Kevin McCarthy  <kevin@8t8.us>  (27bb55faa024)

	* imap/message.c, imap/message.h: Move the IMAP msn field to
	IMAP_HEADER_DATA. (see #3942)

	Ticket 3942 revealed that it is possible for a FETCH to have gaps in
	the MSN numbers of the results. The code makes many assumptions that
	equate context index counts and MSN. This is the first in a series
	of commits fixing that assumption.

	The header->index field is supposed to hold the SORT_ORDER index
	number of the message. If there are gaps in the MSN, than the
	highext MSN can in fact be out of the range 0..ctx->msgcount-1.

	After studying the code, I believe curs_main.c would actually work
	with header->index values out of the range, at least for IMAP. But
	some other parts of the code, such as mutt_reopen_mailbox(), do rely
	on the values being a valid index to ctx->hdrs[]. And the
	intertwining of menu->oldcurrent with header->index values makes me
	nervous about future changes.

	So, to be safe, move the MSN to its own field in IMAP_HEADER_DATA.

	The next commit will fix the EXPUNGE behavior.

2017-05-13 09:48 -0700  Kevin McCarthy  <kevin@8t8.us>  (4bffaa6d189a)

	* history.c: Don't filter new entries when compacting history save
	file.

	If new entries are added between the two passes, they won't be in
	the dup_hash. The original intent was to filter added duplicates,
	but the check would also filter brand new entries.

2017-05-12 18:31 -0700  Kevin McCarthy  <kevin@8t8.us>  (7a4cc1750940)

	* doc/manual.xml.head, history.c, init.h: Also remove duplicates from
	the history file.

	When $history_remove_dups is set, remove duplicates from the history
	file when it is periodically compacted.

2017-05-12 18:31 -0700  Kevin McCarthy  <kevin@8t8.us>  (e66c6c0e8cc6)

	* doc/manual.xml.head, history.c, init.h, mutt.h: Add
	$history_remove_dups option to remove dups from history ring.

	When set, duplicate entries will be removed from the history ring
	when a new entry is added. The duplicate removal rearranges the
	history ring such that created empty slots are right after the
	"last" position in the ring, preserving the most history.

	Rewrite the next/prev functions to take into account that blank
	slots can now be in the middle of the array.

2017-05-12 09:16 -0700  Kevin McCarthy  <kevin@8t8.us>  (149f842ed1d0)

	* merge stable

2017-05-12 09:15 -0700  Kevin McCarthy  <kevin@8t8.us>  (a97afb72d892)

	* imap/imap.c: Turn IMAP_EXPUNGE_EXPECTED back off when syncing.
	(closes #3940).

	imap_sync_mailbox() turned on IMAP_EXPUNGE_EXPECTED when issuing a
	EXPUNGE command during a sync. However, it forgot to turn it back
	off.

	That meant that an unexpected EXPUNGE that occurred during a
	mx_check_mailbox -> imap_check_mailbox() -> imap_cmd_finish() call
	was not setting idata->check_status = IMAP_EXPUNGE_PENDING; and so
	imap_check_mailbox() was not returning MUTT_REOPENED.

	This meant that although the Context had been changed, the index did
	not run update_index(), resulting in a possible segfault.

	Thanks to Uroš Juvan for reporting the issue, and his invaluable
	description of how to reproduce the problem.

2017-05-09 16:07 -0700  Kevin McCarthy  <kevin@8t8.us>  (7f95b4c993b2)

	* init.c, init.h, menu.c, mutt_menu.h, pager.c: Create R_PAGER_FLOW
	config variable flag.

	Use this for $header_color_partial, $markers, and $smart_wrap. When
	these options are changed in the pager, this flag will force a
	recalculation of lineInfo.

	Remove the manual checks in OP_ENTER_COMMAND for $markers and
	$smart_wrap, and instead use the same REDRAW_FLOW processing used
	for a SigWinch.

2017-05-09 16:07 -0700  Kevin McCarthy  <kevin@8t8.us>  (3fd8c4af4658)

	* curs_lib.c, mutt_menu.h, pager.c: Rename REDRAW_SIGWINCH to
	REDRAW_FLOW.

	The next patch will attach this redraw flag to pager settings. The
	former name becomes somewhat confusing with the expanded usage, so
	rename it to something more relevant to what is being redrawn.

2017-05-08 18:48 -0700  Kevin McCarthy  <kevin@8t8.us>  (92d9db08a35e)

	* doc/manual.xml.head, init.h, mutt.h, pager.c: Add
	$header_color_partial to allow partial coloring of headers.

	When set, a regexp match will color only the matched text in the
	header. When unset (the default), the entire header will have color
	applied.

	With appropriate regexps, this allows coloring of just the header
	field name. Of course, it can also be used to highlight arbitrary
	phrases in the headers too.

2017-05-07 15:11 -0700  Kevin McCarthy  <kevin@8t8.us>  (5006a0a36405)

	* mh.c: Improve maildir and mh to report flag changes in
	mx_check_mailbox() (closes #3865)

	mx_check_mailbox() would update the header flags, but was not
	returning MUTT_FLAGS back to the index loop. That meant a screen
	redraw was needed to be notified of externally modified flags.

	Change maildir_update_flags() to return 1 if the flags were actually
	changed. Change maildir_check_mailbox() and mh_check_mailbox() to
	return MUTT_FLAGS when that happens.

	Thanks to jcdenton and mike-burns for the original patch.

2017-05-05 14:03 -0700  Kevin McCarthy  <kevin@8t8.us>  (161d5f18cae5)

	* curs_main.c: merge stable

2017-05-05 13:55 -0700  Kevin McCarthy  <kevin@8t8.us>  (71cb68efe98e)

	* curs_main.c: Don't modify LastFolder/CurrentFolder upon aborting a
	change folder operation.

	Set LastFolder and CurrentFolder after mx_close_mailbox() has
	successfully completed. Otherwise, if the close is aborted, they
	will have incorrect values.

2017-05-05 12:46 -0700  Kevin McCarthy  <kevin@8t8.us>  (6d4ceb8c5b9e)

	* curs_main.c, menu.c, pager.c, postpone.c: Change message modifying
	operations to additively set redraw flags.

	With the ability to set redraw flags with the menu stack operations,
	some operations internally modify the current menu redraw flag. For
	instance, _mutt_set_flag() can now set REDRAW_SIDEBAR.

	Change the ops that modify messages to use 'redraw |= REDRAW_X'
	instead of overwriting the flag value.

2017-05-04 18:11 -0700  Kevin McCarthy  <kevin@8t8.us>  (c8ac1df1dcc9)

	* merge stable

2017-05-04 18:05 -0700  Kevin McCarthy  <kevin@8t8.us>  (c08c72a0e24c)

	* mx.c: Fix sidebar count updates when closing mailbox. (closes #3938)

	The context unread and flagged counts were being updated too early
	in mx_close_mailbox(). Cancelling at any of the following prompts
	would leave them in an incorrect state. Additionally, $move could
	increase the delete count (for flagged messages), and $delete, if
	answered no, could turn off message deletion.

	Move all the sidebar buffy stat updating to the bottom of the
	function, after all the prompts and processing.

2017-05-03 18:52 -0700  Kevin McCarthy  <kevin@8t8.us>  (a6db4750f675)

	* color.c, compose.c, doc/manual.xml.head, mutt_curses.h: Add color
	commands for the compose menu headers and security status. (closes
	#3915).

	Add "color compose header" to color the From/To/Subject/etc fields
	in the compose menu.

	Add "color compose security_encrypt/sign/both/none" to color the
	security status of the message.

2017-04-30 15:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (7e1edf6a7ed7)

	* sendlib.c: Remove glibc-specific execvpe() call in sendlib.c. (see
	#3937)

	Changeset fa1192803257 converted all exec calls to use
	mutt_envlist(). Unfortunately, the call in sendlib.c, execvpe(), is
	a glibc extension.

	Convert back to execvp() for now, to fix the build on MacOS.

2017-04-30 15:21 -0700  Kevin McCarthy  <kevin@8t8.us>  (7dd3de416a54)

	* merge stable

2017-04-30 15:20 -0700  Kevin McCarthy  <kevin@8t8.us>  (829584614fd6)

	* headers.c: Refresh header color when updating label. (closes #3935)

	color index with a '~y' pattern were not being updated after
	adding/removing labels.

2017-04-30 14:25 -0700  Kevin McCarthy  <kevin@8t8.us>  (84acb1832fa9)

	* init.c, init.h: merge stable

2017-04-30 14:24 -0700  Kevin McCarthy  <kevin@8t8.us>  (c54ac874a32b)

	* init.c, init.h: Fix unused function warnings when sidebar is
	disabled. (closes #3936)

	parse_path_list/unlist are currently only used by the
	un/sidebar_whitelist commands. Add an ifdef around them to stop an
	unused function warning. Add a comment too, so it's clear why they
	are ifdef'ed.

2017-04-30 13:32 -0700  Kevin McCarthy  <kevin@8t8.us>  (b3d9d7a2f677)

	* merge stable

2017-04-30 13:32 -0700  Kevin McCarthy  <kevin@8t8.us>  (deb66bd24b9d)

	* doc/manual.xml.head: Note that mbox-hooks are dependent on $move.

	Add a note to the "Using Multiple Spool Mailboxes" section.

2017-04-30 12:25 -0700  Vincent Lefevre  <vincent@vinc17.org>  (fa1192803257)

	* configure.ac, m4/gettext.m4, mutt_tunnel.c, pgp.c, protos.h,
	sendlib.c, setenv.c: Convert all exec calls to use mutt_envlist(),
	remove setenv function.

	The documentation implies that all children processes will be
	affected by the setenv command, so convert all the exec calls to use
	mutt_envlist().

	The setenv("GPG_TTY") call is no longer needed so remove it.

	With that removed, there are no other setenv calls in mutt, so
	remove the autoconf check and replacement function.

2017-04-27 21:23 -0700  Kevin McCarthy  <kevin@8t8.us>  (c65d0c23c142)

	* curs_lib.c, keymap.c, mutt_curses.h: merge stable

2017-04-27 21:22 -0700  Kevin McCarthy  <kevin@8t8.us>  (b8952095b583)

	* curs_lib.c, keymap.c, mutt_curses.h: Fix km_error_key() infinite
	loop and unget buffer pollution.

	'bind pager \Ch help' produces an infinite loop when an unbound key
	is pressed in the pager. The reason is because km_error_key() tries
	to verify that the key sequence is really bound to the OP_HELP
	operation. It does this by using km_expand_key(),
	tokenize_unget_string() on the resulting buffer, then checking if
	the next km_dokey() returns OP_HELP.

	The problem is that km_expand_key() does not always produce a string
	that is properly reparsed by tokenize_unget_string(). Control-h
	sequences are expanded to ^H. tokenize_unget_string() recognizes
	this as two characters '^' and 'H'. km_error_key() checks the OP
	returned, which is OP_PAGER_TOP for the '^'. This is not OP_HELP, so
	it prints a generic error and returns. This leaves the 'H' in the
	input buffer! Since 'H' (by default) is unbound in the pager, it
	retriggers km_error_key(), resulting in an infinite loop.

	The same issues can occur without control sequences: bind generic ?
	noop bind generic dq help In the index, hitting an unbound key will
	end up leaving 'q' in the unget buffer, because 'd' is bound in the
	index menu and will be read by km_dokey().

	A simple approach to fix this would be to just use the same code as
	in mutt_make_help(), which has no double-check. This would be no
	worse than the help menu, but can generate an inaccurate error
	message (e.g if '?' were bound to noop)

	This patch instead uses OP_END_COND as a barrier in the unget
	buffer. It directly inserts the keys in the OP_HELP keymap, instead
	of using km_expand_key() + tokenize_unget_string(). After calling
	km_dokey() it flushes the unget buffer to the OP_END_COND barrier.

	Thanks to Walter Alejandro Iglesias for reporting the bug.

2017-04-26 15:43 -0700  Kevin McCarthy  <kevin@8t8.us>  (92671c9c17bd)

	* merge stable

2017-04-26 15:40 -0700  Roger Cornelius  <rac@tenzing.org>  (9a0afe7815d1)

	* mx.c: Fix error message when opening a mailbox with no read
	permission. (closes #3934)

	ctx->mx_ops ends up being NULL for both the case that ctx->magic is
	0 and -1. This meant the mutt_perror() error message was never being
	printed, because the check for ctx->mx_ops == NULL was taking place
	first.

	Move the "ctx->magic == -1" check first, so mutt will print out an
	appropriate perror message in that case.

2017-04-18 16:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (69df899cdfa9)

	* merge stable

2017-04-18 16:15 -0700  Kevin McCarthy  <kevin@8t8.us>  (2c57a7b4dc0b)

	* .hgsigs: mutt-1.8.2 signed

2017-04-18 16:14 -0700  Kevin McCarthy  <kevin@8t8.us>  (455a698f274b)

	* .hgtags: Added tag mutt-1-8-2-rel for changeset c6ea4aed6bec

2017-04-18 16:14 -0700  Kevin McCarthy  <kevin@8t8.us>  (c6ea4aed6bec)

	* ChangeLog, UPDATING, VERSION: automatic post-release commit for
	mutt-1.8.2

2017-04-18 13:13 -0700  Kevin McCarthy  <kevin@8t8.us>  (385ba6449c30)

	* commands.c: Revert sort prompt labels. (see #3930)

	Using the (s)ort style may look a bit better, but it makes the
	prompt over 80 columns. The multichoice prompt supports multiple
	lines now, but it is better to have it fit on one line if possible.

	Revert back to the "capital letter" method, but leave the ticket
	open, to explore other ideas that Vincent and chdiza have for better
	ways to present a long choice like this.

2017-04-18 12:25 -0700  Kevin McCarthy  <kevin@8t8.us>  (67677bca06fe)

	* init.c, pgp.c, protos.h: merge stable

2017-04-18 12:25 -0700  Kevin McCarthy  <kevin@8t8.us>  (33995363e723)

	* filter.c, init.c, pgp.c, protos.h: Fix GPG_TTY to be added to
	envlist. (closes #3931)

	Changeset 37209157e33c converted filters to use the envlist.
	Unfortunately, I missed that pgp.c sets GPG_TTY when using the GnuPG
	agent. Convert to add GPG_TTY to the envlist too.

2017-04-17 17:40 -0700  Kevin McCarthy  <kevin@8t8.us>  (851a7ec95399)

	* pager.c: Handle the pager sort prompt inside the pager.

	Display the prompt in the pager, so a multiline prompt or resize
	doesn't refresh the index menu. Then, bounce back through the index
	to handle resorting and status line updates.

	This also fixes cancelling to stay in the pager.

2017-04-17 17:40 -0700  Kevin McCarthy  <kevin@8t8.us>  (979f1e669c16)

	* commands.c: Change the sort prompt to use (s)ort style prompts.

	This is consistent with the rest of mutt, and in my opinion, more
	readable.

2017-04-16 14:38 -0700  Kevin McCarthy  <kevin@8t8.us>  (61295113f7ab)

	* curs_lib.c: Add multiline and sigwinch handling to mutt_yesorno.
	(closes #3877)

	Most of the yes/no and query_quadoption prompts are pretty short,
	but for completeness add handling for those too.

2017-04-15 12:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (2be3dd383c35)

	* curs_lib.c, pager.c: Set pager's REDRAW_SIGWINCH when reflowing
	windows.

	So that all external reflow handling functions don't have to
	remember to set the flag too.

2017-04-15 12:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (5849d1a052bb)

	* curs_lib.c: Add multiline and sigwinch handling to
	mutt_multi_choice. (see #3877)

	Resize the message window up to three lines to fix wide prompts.

	Enable sigwinch processing and redraw the current menu as needed.

2017-04-15 12:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (24e38e932693)

	* curs_lib.c, enter.c: Add ifdefs around new mutt_resize_screen calls.

	Changeset 231fa2eff206 added sigwinch handling to
	_mutt_enter_string() but neglected to add an ifdef check.

2017-04-12 18:00 -0700  Kevin McCarthy  <kevin@8t8.us>  (39bf12dccf0c)

	* merge stable

2017-04-12 17:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (feccc2ac1b9a)

	* .hgsigs: mutt-1.8.1 signed

2017-04-12 17:44 -0700  Kevin McCarthy  <kevin@8t8.us>  (491f7cfa03d9)

	* .hgtags: Added tag mutt-1-8-1-rel for changeset f44974c10990

2017-04-12 17:43 -0700  Kevin McCarthy  <kevin@8t8.us>  (f44974c10990)

	* ChangeLog, UPDATING, VERSION: automatic post-release commit for
	mutt-1.8.1

2017-04-11 12:15 -0700  Kevin McCarthy  <kevin@8t8.us>  (3c46ef05dca9)

	* compose.c: merge stable

2017-04-11 12:14 -0700  Kevin McCarthy  <kevin@8t8.us>  (b825cbcaf6b5)

	* compose.c: Fix memleak when attaching files.

2017-04-08 14:21 -0700  Kevin McCarthy  <kevin@8t8.us>  (29239b1a6d50)

	* commands.c: Ensure mutt stays in endwin during calls to pipe_msg()
	(closes #3929)

	The previous commit solved the problem reported in #3929:
	progressbar output while downloading a message via IMAP was
	refreshing the mutt ncurses session after launching the pipe
	program.

	To ensure another place in the code doesn't inadvertantly generate
	output, wrap OPTKEEPQUIET around the calls to
	pipe_msg()/mutt_wait_filter() too.

2017-04-08 14:21 -0700  Kevin McCarthy  <kevin@8t8.us>  (0bf83c2fbbf2)

	* merge stable

2017-04-08 14:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (a8b1017a4cc1)

	* imap/message.c: Silence imap progress messages for pipe-message.
	(see #3929)

	_mutt_pipe_message() calls endwin(), and then calls pipe_msg(). If
	an imap message body hasn't already been downloaded, this can end up
	calling imap_fetch_message().

	The progress messages in imap_fetch_message() were restoring curses,
	just after extract_url was running. This was leading to a condition
	where mutt curses didn't think the screen had changed after
	extract_url exited.

	There was already a check for isendwin() inside
	imap_fetch_message(), but it wasn't wrapped around the progressbar
	creation/usage. Add a check for those places too.

2017-04-05 16:09 -0700  Kevin McCarthy  <kevin@8t8.us>  (303fc058692f)

	* query.c: Don't create query menu until after initial prompt. (see
	#3877)

	A resize in the prompt will trigger a redraw, but the data won't be
	loaded yet, displaying a blank screen instead of the previous menu.
	Once the query is done, the data is loaded, but the menu->redraw
	state has been changed by the resize.

	We could manually flag a redraw, but it makes more sense visually
	logically to just create the menu after the query and results are
	loaded.

2017-04-05 16:09 -0700  Kevin McCarthy  <kevin@8t8.us>  (86848e5932b0)

	* curs_lib.c, pager.c: Separate out the pager menu redrawing. (see
	#3877)

	The pager relies on REDRAW_SIGWINCH, so add that to
	_mutt_get_field().

2017-04-05 16:09 -0700  Kevin McCarthy  <kevin@8t8.us>  (dcc95921c3c5)

	* pager.c: Prepare for pager redraw separation. (see #3877)

	Move some of the code inside SigWinch handling into the REDRAW part
	of the code.

	SigInt is handled by mutt_getch(), so remove the redundant code from
	inside the pager.

2017-04-05 16:09 -0700  Kevin McCarthy  <kevin@8t8.us>  (178bd8b53cab)

	* curs_main.c: Separate out the index menu redrawing. (see #3877)

2017-04-05 16:09 -0700  Kevin McCarthy  <kevin@8t8.us>  (c651b528f958)

	* compose.c, menu.c, mutt_menu.h: Separate out the compose menu
	redrawing. (see #3877)

	Add a custom_menu_redraw to the menu and change menu_redraw() to
	call that instead if set.

2017-04-05 16:09 -0700  Kevin McCarthy  <kevin@8t8.us>  (231fa2eff206)

	* curs_lib.c, enter.c, keymap.c, menu.c, mutt_menu.h: Change
	km_dokey() to pass SigWinch on for the MENU_EDITOR. (see #3877)

	Change _mutt_enter_string() to pass the SigWinch through for
	_mutt_get_field() or mutt_enter_string() to handle.

	Add a call to mutt_current_menu() in _mutt_get_field() to properly
	redisplay the screen in that case.

2017-04-05 16:09 -0700  Kevin McCarthy  <kevin@8t8.us>  (7f6ff45a7f59)

	* init.c: Remove redraw flag setting after mutt_endwin().

	There is no need to set a redraw flag in this case. The screen will
	automatically be properly redrawn on the next refresh().

	Remove, lest it get propagated.

2017-03-31 18:15 -0700  Kevin McCarthy  <kevin@8t8.us>  (8b9bbd983b1a)

	* commands.c, compose.c, curs_lib.c, curs_main.c, pager.c, protos.h:
	Remove refresh parameter from mutt_enter_fname().

	Also remove it from mutt_save_message(), which used it to pass
	through to mutt_enter_fname(). The callers of this already had
	redraw logic, to which REDRAW_STATUS merely needed to be added.

2017-03-31 18:15 -0700  Kevin McCarthy  <kevin@8t8.us>  (68bbc47c8498)

	* init.c, init.h: Create R_MENU redraw option.

	Previously, the R_INDEX option meant both the index as well as all
	other menus. The removal of the OPTFORCEREDRAWINDEX option caused
	problems with redrawing other menus for options such as
	arrow_cursor.

	One solution would be change R_INDEX back to meaning "everything"
	except pager, but there are only a handful of options that affect
	other menus.

	Instead, create R_MENU to indicate options that affect either all
	menus or one of the other menus beside the index and pager.

2017-03-31 18:15 -0700  Kevin McCarthy  <kevin@8t8.us>  (7f47e330bd72)

	* curs_lib.c, curs_main.c, init.h, pager.c: Change reflow_windows() to
	set full redraw.

	A full redraw should always be set in this case. This also enables
	us to remove redraw flags for some options.

2017-03-31 18:15 -0700  Kevin McCarthy  <kevin@8t8.us>  (b36e4918d1d9)

	* buffy.c, curs_main.c, flags.c, globals.h, imap/command.c, init.c,
	menu.c, pager.c, sidebar.c: Remove SidebarNeedsRedraw.

	The menu stack can be used to flag a redraw of the sidebar window.

2017-03-31 18:15 -0700  Kevin McCarthy  <kevin@8t8.us>  (06553f524887)

	* color.c, curs_lib.c, curs_main.c, init.c, menu.c, mutt.h,
	mutt_menu.h, pager.c, score.c: Remove the OPTFORCEREDRAW options.

	Use the menu stack to flag redraws for the index and pager.

2017-03-31 17:29 +0200  Vincent Lefevre  <vincent@vinc17.net>  (6fb6021389c8)

	* mbyte.c: Filter other directional markers that corrupt the screen.

2017-03-27 11:46 -0700  Kevin McCarthy  <kevin@8t8.us>  (4c7881c441e7)

	* init.h: merge stable

2017-03-27 11:39 -0700  Kevin McCarthy  <kevin@8t8.us>  (77032036c642)

	* init.c, init.h: Fix (un)sidebar_whitelist to expand paths.

	Thanks to Arturo for reporting the issue.

2017-03-26 18:31 -0700  Kevin McCarthy  <kevin@8t8.us>  (4d06d85a4dd7)

	* curs_main.c: Don't full redraw the index when handling a command
	from the pager.

	This causes a noticable flicker when moving through messages from
	the pager.

2017-03-26 18:31 -0700  Kevin McCarthy  <kevin@8t8.us>  (cb57cd88846b)

	* compose.c, crypt-gpgme.c, crypt-gpgme.h, crypt-mod-pgp-classic.c,
	crypt-mod-pgp-gpgme.c, crypt-mod-smime-classic.c, crypt-mod-smime-
	gpgme.c, crypt-mod.h, cryptglue.c, mutt_crypt.h, pgp.c, pgp.h,
	smime.c, smime.h: Remove redraw parameter from crypt send_menus.

	The parameter was used to notify the caller if the sign (a)s menu
	was invoked, which displayed the key selection menu. This is no
	longer necessary with the menu stack pop operation.

2017-03-26 18:31 -0700  Kevin McCarthy  <kevin@8t8.us>  (7cced4378ed5)

	* addrbook.c, browser.c, commands.c, compose.c, crypt-gpgme.c,
	curs_lib.c, curs_main.c, enter.c, menu.c, mutt.h, mutt_curses.h,
	mutt_menu.h, mutt_ssl.c, pager.c, pgpkey.c, protos.h, query.c,
	remailer.c, remailer.h, smime.c: Set refresh when popping the menu
	stack.

	This removes the need for the OPTNEEDREDRAW option and MAYBE_REDRAW
	macro previously used to communicate back the need to refresh after
	exiting a menu.

	Remove the redraw parameter from ci_bounce_message() and
	mix_make_chain() which served the same purpose.

2017-03-26 18:31 -0700  Kevin McCarthy  <kevin@8t8.us>  (dbb9fbe9b3de)

	* curs_main.c, menu.c, pager.c: Change CurrentMenu to be controlled by
	the menu stack.

	The pager menu is a bit tricky with respect to the menu->menu and
	CurrentMenu, so add a few comments.

2017-03-26 18:31 -0700  Kevin McCarthy  <kevin@8t8.us>  (6551825f99fa)

	* addrbook.c, browser.c, compose.c, crypt-gpgme.c, curs_main.c,
	menu.c, mutt_menu.h, mutt_ssl.c, mutt_ssl_gnutls.c, pager.c,
	pgpkey.c, postpone.c, query.c, recvattach.c, remailer.c, smime.c:
	Add a menu stack to track current and past menus.

	Change the pager to use a MENU, right now just to hold the refresh
	state.

2017-03-26 12:27 -0700  Kevin McCarthy  <kevin@8t8.us>  (b8519ee6bd74)

	* merge stable

2017-03-26 12:27 -0700  Kevin McCarthy  <kevin@8t8.us>  (9da67ea88f25)

	* curs_lib.c: Fix mutt_refresh() pausing during macro events.

	Changeset a07e8215a0ef split input buffering into two pools.
	Unfortunately, the mutt_refresh() was not changed to check the
	correct buffer count, resulting in unnecessary refreshes during
	macros.

	The SSL interactive certificate prompts set OPTIGNOREMACROEVENTS and
	then put up a confirmation menu. Perhaps we've just been lucky, but
	it seems we should refresh the screen in those cases if we're in the
	middle of a macro. Add a check for this option in mutt_refresh()
	too.

2017-03-20 10:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (c875e6f4785d)

	* merge stable

2017-03-20 10:16 -0700  Kevin McCarthy  <kevin@8t8.us>  (7cefa378ab7e)

	* init.c: Fix setenv overwriting to not truncate the envlist. (see
	#3922)

	The refactor in 2b9c40f13e13 exposed a bug I hadn't noticed. The
	match loop performed a FREE() on the slot. Then, below, it was
	checking if (*envp) to see whether it was overwriting or creating a
	new slot. However, FREE() nulls out *envp. This would end up
	truncating the envlist just after the set slot!

	Move the free down, using a mutt_str_replace(), when overwriting the
	slot.

2017-03-18 14:47 -0700  Kevin McCarthy  <kevin@8t8.us>  (741865dfc052)

	* merge stable

2017-03-18 14:39 -0700  Kevin McCarthy  <kevin@8t8.us>  (2b9c40f13e13)

	* init.c: Fix mutt_envlist_set() for the case that envlist is null.
	(see #3922)

2017-03-18 13:48 -0700  Kevin McCarthy  <kevin@8t8.us>  (37209157e33c)

	* filter.c, init.c, protos.h, system.c: Pass envlist to filter
	children too. (closes #3922)

	The new setenv patch neglected to pass the envlist for filters too.

	Unfortunately, the filter code was already set up to pass COLUMNS to
	children, so it needed to be changed to add this to the envlist
	instead.

	Factor out mutt_envlist_set() from the parse_setenv() function,
	which the filter code can then use to set COLUMNS after forking.

2017-03-18 13:38 -0700  Kevin McCarthy  <kevin@8t8.us>  (f09b8b2454c9)

	* main.c: Fix conststrings type mismatches. (closes #3926)

	The generation programs for conststrings.c: txt2c.c and txt2c.sh,
	specified the resultant types as "unsigned char[]" while main.c
	declared them as "const char[]".

	txt2.c generates 0xXX hex codes for each individual character, thus
	the "unsigned" definition. With link-time optimization, some
	versions of gcc notice the mismatch and emit a warning.

	Change the declarations to match the definitions and cast to char[]
	when they are used.

2017-03-13 18:38 -0700  Kevin McCarthy  <kevin@8t8.us>  (23c00b71f653)

	* mutt_ssl.c: Change OpenSSL to use SHA-256 for cert comparison.
	(closes #3924)

	Note the GnuTLS code compares the certs directly to check if they
	are in the certfile.

2017-03-13 01:38 +0100  Vincent Lefevre  <vincent@vinc17.net>  (00cef7557f38)

	* po/fr.po: Updated French translation.

2017-03-12 10:54 -0700  Dmitri Vereshchagin  <dmitri.vereshchagin@gmail.com>  (fc4beb8e0d56)

	* browser.c: Add shortcuts for IMAP and POP mailboxes in the file
	browser

	Mailbox list may not be properly displayed in a standard 80-column
	terminal window if the $folder variable contains a long URL. In such
	a case only left part of each entry name can be visible with the
	default value of $folder_format. What's worse, this visible part may
	not be enough to distinguish between the entries.

	Thus in this case mutt_pretty_mailbox() will be just as useful as
	for local mailboxes.

2017-03-09 13:38 -0800  Kevin McCarthy  <kevin@8t8.us>  (5f65f3bcc066)

	* mutt_ssl_gnutls.c: Add SNI support for GnuTLS. (closes #3923)

2017-03-09 13:00 -0800  Kevin McCarthy  <kevin@8t8.us>  (9d3d80dd963a)

	* mutt_ssl.c: Add SNI support for OpenSSL. (see #3923)

	The original patch for this is by Phil Pennock at:
	https://people.spodhuis.org/phil.pennock/software/mutt-patches/

	I have removed the OpenSSL version check and
	defined(OPENSSL_NO_TLSEXT) check because:
	  * SSL_set_tlsext_host_name() was added in 0.9.8f [11 Oct 2007]
	  * OpenSSL 1.1 no longer has the OPENSSL_NO_TLSEXT compilation option
	  * https://rt.openssl.org/Ticket/Display.html?id=2788&user=guest&pass=g
	uest shows that the no-tlsext compilation option has been broken for
	some time.
	  * Going forward, I'd like to minimize and start removing cruft
	required to support ancient/insecure versions of libraries.

2017-03-09 11:59 -0800  Kevin McCarthy  <kevin@8t8.us>  (be5d02a8e782)

	* mutt_ssl.c: OpenSSL: Don't offer (a)ccept always choice for hostname
	mismatches. (closes #3914)

	On a hostname mismatch, saving the certificate is pointless because
	mutt will ask the user no matter if the certificate is saved or not.

	The only invocation allowing "accept always" is guarded by a call to
	check_certificate_digest(), which means the check_certificate_file()
	check is redundant. Therefore remove that check and add a comment
	noting why.

	Thanks to Matthias Andree for the original version of this patch.

2017-03-09 10:56 -0800  Kevin McCarthy  <kevin@8t8.us>  (f949694ea461)

	* mutt_ssl.c: Prevent skipped certs from showing a second time. (see
	#3916)

	OpenSSL sometimes passes a skipped certificate to
	ssl_verify_callback() a second time, with preverify_ok=1. From
	OpenSSL's viewpoint there is nothing wrong with this, but mutt will
	end up showing the certificate in the interactive prompt again.

	Cache the last cert and position, and compare with the latest when
	skip_mode and preverify_ok are both set.

2017-03-07 18:26 -0800  Kevin McCarthy  <kevin@8t8.us>  (2a0d3c4a9b0f)

	* mutt_ssl.c: Don't allow storing duplicate certs for OpenSSL
	interactive prompt. (closes #3914)

	Check to make sure the certificate is not already in the
	$certificate_file before offering the (a)ccept always option.

	To allow a cert with a new validity timespan to be added to the
	file, check the expiration dates when comparing certificates in the
	certficate file.

2017-03-07 18:26 -0800  Kevin McCarthy  <kevin@8t8.us>  (4cb6408b5fef)

	* configure.ac, doc/makedoc-defs.h, init.h, mutt.h, mutt_ssl.c: Move
	the OpenSSL partial chain support check inside configure.ac. (see
	#3916)

	Instead of directly checking whether X509_V_FLAG_PARTIAL_CHAIN is
	defined everywhere, do it once inside configure. This will allow
	better support in the future if the test needs to change.

2017-03-07 18:26 -0800  Matthias Andree  <matthias.andree@gmx.de>  (5a04f3797f03)

	* doc/makedoc-defs.h, init.h, mutt.h, mutt_ssl.c: Add
	$ssl_verify_partial_chains option for OpenSSL. (closes #3916)

	The reworked OpenSSL certificate validation took away a "feature" of
	the previous implementation: the ability to reject a node in the
	chain and yet continue to the next node.

	If this new option is set to 'yes', enables OpenSSL's
	X509_V_FLAG_PARTIAL_CHAIN flag to reinstate the functionality and
	permit to use a non-root certificate as the trust anchor.

	This option is only available if OpenSSL offers the
	X509_V_FLAG_PARTIAL_CHAIN macro, which should be the case as of
	1.0.2b or later.

	Code written by Kevin McCarthy and Matthias Andree.

2017-03-05 15:26 -0800  Kevin McCarthy  <kevin@8t8.us>  (daa9111c1f42)

	* merge stable

2017-03-05 15:24 -0800  Kevin McCarthy  <kevin@8t8.us>  (f0e3b2875065)

	* account.h: Increase ACCOUNT.pass field size. (closes #3921)

	#3921 reported his password token used for Google XOAUTH2 is size
	129. The ACCOUNT structure currently uses a size 128 buffer. Who
	knew a password field would ever be bigger than that?

	Since the ACCOUNT structure has no allocation/dellocation routines,
	the easiest fix is to increase the size. Bump the size up to 256.

2017-03-02 15:54 -0800  Kevin McCarthy  <kevin@8t8.us>  (d15de76f7123)

	* merge stable

2017-03-02 15:53 -0800  Matthias Andree  <matthias.andree@gmx.de>  (5fc3c0729a07)

	* mutt_ssl.c: SSL: Fix memory leak in subject alternative name code.
	(closes #3920)

2017-03-02 14:58 -0800  Kevin McCarthy  <kevin@8t8.us>  (9ede6c95d3d5)

	* merge stable

2017-03-02 14:53 -0800  Kevin McCarthy  <kevin@8t8.us>  (e3e47b2f1370)

	* mbox.c: Prevent segv if open-appending to an mbox fails. (closes
	#3918)

	If mbox_open_mailbox_append() fails, ctx->fp will be null. Add a
	check in mbox_close_mailbox(), to prevent a segv from passing null
	to fileno().

2017-03-02 13:17 -0800  Kevin McCarthy  <kevin@8t8.us>  (28d7872d0646)

	* merge stable

2017-03-02 13:11 -0800  Kevin McCarthy  <kevin@8t8.us>  (e82253beaa9f)

	* mutt_ssl.c: Clear out extraneous errors before SSL_connect() (see
	#3916)

	Call ERR_clear_error() just before the call to SSL_connect() to make
	sure the error queue doesn't have any old errors in it.

	PEM_read_X509() sets an error PEM_R_NO_START_LINE on end-of-file.
	Clear that out so it doesn't show up as the SSL_connect() error
	message.

2017-02-24 11:00 -0800  Kevin McCarthy  <kevin@8t8.us>  (f85c3eb8d065)

	* merge default into stable

2017-02-24 10:55 -0800  Kevin McCarthy  <kevin@8t8.us>  (7cc47d82cac4)

	* .hgsigs: mutt-1.8.0 signed

2017-02-24 10:50 -0800  Kevin McCarthy  <kevin@8t8.us>  (1672b430cbc3)

	* .hgtags: Added tag mutt-1-8-rel for changeset d897983752f9

2017-02-24 10:50 -0800  Kevin McCarthy  <kevin@8t8.us>  (d897983752f9)

	* ChangeLog, VERSION, po/bg.po, po/ca.po, po/cs.po, po/da.po,
	po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po, po/eu.po,
	po/fr.po, po/ga.po, po/gl.po, po/hu.po, po/id.po, po/it.po,
	po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po,
	po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po,
	po/zh_TW.po: automatic post-release commit for mutt-1.8.0

2017-05-23 15:53 -0700  Kevin McCarthy  <kevin@8t8.us>  (fa0c2155ab8f)

	* mx.c: Fix memory leak when closing mailbox and using the sidebar.

	The code updating the sidebar counts decremented the msgcount, but
	did not set it back to the original value. Which means fastclose was
	not freeing all the headers.

	Update the sidebar only when something is deleted, since I don't
	believe it's required otherwise and the code is a bit cleaner that
	way.

2017-05-22 18:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (59a2125b49f2)

	* imap/imap.c: Don't clean up idata when closing an open-append
	mailbox.

	open-append borrows the idata just for the connection. The "mailbox
	specific" part of the idata may be being used by a normal open-
	mailbox.

	Don't free the idata "mailbox specific" part when closing an open-
	append mailbox.

	Thanks to Will Yardley for discovering the bug as part of testing
	the revised IMAP fetch_headers code (in the default branch).

2017-05-22 05:08 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (1ddf2641f369)

	* mx.c: Fix potential segv if mx_open_mailbox is passed an empty
	string. (closes #3945)

	If path is "", ctx->path will be NULL. realpath() generally will
	segv if the first parameter is NULL.

2017-05-12 09:15 -0700  Kevin McCarthy  <kevin@8t8.us>  (a97afb72d892)

	* imap/imap.c: Turn IMAP_EXPUNGE_EXPECTED back off when syncing.
	(closes #3940).

	imap_sync_mailbox() turned on IMAP_EXPUNGE_EXPECTED when issuing a
	EXPUNGE command during a sync. However, it forgot to turn it back
	off.

	That meant that an unexpected EXPUNGE that occurred during a
	mx_check_mailbox -> imap_check_mailbox() -> imap_cmd_finish() call
	was not setting idata->check_status = IMAP_EXPUNGE_PENDING; and so
	imap_check_mailbox() was not returning MUTT_REOPENED.

	This meant that although the Context had been changed, the index did
	not run update_index(), resulting in a possible segfault.

	Thanks to Uroš Juvan for reporting the issue, and his invaluable
	description of how to reproduce the problem.

2017-05-05 13:55 -0700  Kevin McCarthy  <kevin@8t8.us>  (71cb68efe98e)

	* curs_main.c: Don't modify LastFolder/CurrentFolder upon aborting a
	change folder operation.

	Set LastFolder and CurrentFolder after mx_close_mailbox() has
	successfully completed. Otherwise, if the close is aborted, they
	will have incorrect values.

2017-05-04 18:05 -0700  Kevin McCarthy  <kevin@8t8.us>  (c08c72a0e24c)

	* mx.c: Fix sidebar count updates when closing mailbox. (closes #3938)

	The context unread and flagged counts were being updated too early
	in mx_close_mailbox(). Cancelling at any of the following prompts
	would leave them in an incorrect state. Additionally, $move could
	increase the delete count (for flagged messages), and $delete, if
	answered no, could turn off message deletion.

	Move all the sidebar buffy stat updating to the bottom of the
	function, after all the prompts and processing.

2017-04-30 15:20 -0700  Kevin McCarthy  <kevin@8t8.us>  (829584614fd6)

	* headers.c: Refresh header color when updating label. (closes #3935)

	color index with a '~y' pattern were not being updated after
	adding/removing labels.

2017-04-30 14:24 -0700  Kevin McCarthy  <kevin@8t8.us>  (c54ac874a32b)

	* init.c, init.h: Fix unused function warnings when sidebar is
	disabled. (closes #3936)

	parse_path_list/unlist are currently only used by the
	un/sidebar_whitelist commands. Add an ifdef around them to stop an
	unused function warning. Add a comment too, so it's clear why they
	are ifdef'ed.

2017-04-30 13:32 -0700  Kevin McCarthy  <kevin@8t8.us>  (deb66bd24b9d)

	* doc/manual.xml.head: Note that mbox-hooks are dependent on $move.

	Add a note to the "Using Multiple Spool Mailboxes" section.

2017-04-27 21:22 -0700  Kevin McCarthy  <kevin@8t8.us>  (b8952095b583)

	* curs_lib.c, keymap.c, mutt_curses.h: Fix km_error_key() infinite
	loop and unget buffer pollution.

	'bind pager \Ch help' produces an infinite loop when an unbound key
	is pressed in the pager. The reason is because km_error_key() tries
	to verify that the key sequence is really bound to the OP_HELP
	operation. It does this by using km_expand_key(),
	tokenize_unget_string() on the resulting buffer, then checking if
	the next km_dokey() returns OP_HELP.

	The problem is that km_expand_key() does not always produce a string
	that is properly reparsed by tokenize_unget_string(). Control-h
	sequences are expanded to ^H. tokenize_unget_string() recognizes
	this as two characters '^' and 'H'. km_error_key() checks the OP
	returned, which is OP_PAGER_TOP for the '^'. This is not OP_HELP, so
	it prints a generic error and returns. This leaves the 'H' in the
	input buffer! Since 'H' (by default) is unbound in the pager, it
	retriggers km_error_key(), resulting in an infinite loop.

	The same issues can occur without control sequences: bind generic ?
	noop bind generic dq help In the index, hitting an unbound key will
	end up leaving 'q' in the unget buffer, because 'd' is bound in the
	index menu and will be read by km_dokey().

	A simple approach to fix this would be to just use the same code as
	in mutt_make_help(), which has no double-check. This would be no
	worse than the help menu, but can generate an inaccurate error
	message (e.g if '?' were bound to noop)

	This patch instead uses OP_END_COND as a barrier in the unget
	buffer. It directly inserts the keys in the OP_HELP keymap, instead
	of using km_expand_key() + tokenize_unget_string(). After calling
	km_dokey() it flushes the unget buffer to the OP_END_COND barrier.

	Thanks to Walter Alejandro Iglesias for reporting the bug.

2017-04-26 15:40 -0700  Roger Cornelius  <rac@tenzing.org>  (9a0afe7815d1)

	* mx.c: Fix error message when opening a mailbox with no read
	permission. (closes #3934)

	ctx->mx_ops ends up being NULL for both the case that ctx->magic is
	0 and -1. This meant the mutt_perror() error message was never being
	printed, because the check for ctx->mx_ops == NULL was taking place
	first.

	Move the "ctx->magic == -1" check first, so mutt will print out an
	appropriate perror message in that case.

2017-04-18 16:15 -0700  Kevin McCarthy  <kevin@8t8.us>  (2c57a7b4dc0b)

	* .hgsigs: mutt-1.8.2 signed

2017-04-18 16:14 -0700  Kevin McCarthy  <kevin@8t8.us>  (455a698f274b)

	* .hgtags: Added tag mutt-1-8-2-rel for changeset c6ea4aed6bec

2017-04-18 16:14 -0700  Kevin McCarthy  <kevin@8t8.us>  (c6ea4aed6bec)

	* ChangeLog, UPDATING, VERSION: automatic post-release commit for
	mutt-1.8.2

2017-04-18 12:25 -0700  Kevin McCarthy  <kevin@8t8.us>  (33995363e723)

	* filter.c, init.c, pgp.c, protos.h: Fix GPG_TTY to be added to
	envlist. (closes #3931)

	Changeset 37209157e33c converted filters to use the envlist.
	Unfortunately, I missed that pgp.c sets GPG_TTY when using the GnuPG
	agent. Convert to add GPG_TTY to the envlist too.

2017-04-12 17:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (feccc2ac1b9a)

	* .hgsigs: mutt-1.8.1 signed

2017-04-12 17:44 -0700  Kevin McCarthy  <kevin@8t8.us>  (491f7cfa03d9)

	* .hgtags: Added tag mutt-1-8-1-rel for changeset f44974c10990

2017-04-12 17:43 -0700  Kevin McCarthy  <kevin@8t8.us>  (f44974c10990)

	* ChangeLog, UPDATING, VERSION: automatic post-release commit for
	mutt-1.8.1

2017-04-11 12:14 -0700  Kevin McCarthy  <kevin@8t8.us>  (b825cbcaf6b5)

	* compose.c: Fix memleak when attaching files.

2017-04-08 14:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (a8b1017a4cc1)

	* imap/message.c: Silence imap progress messages for pipe-message.
	(see #3929)

	_mutt_pipe_message() calls endwin(), and then calls pipe_msg(). If
	an imap message body hasn't already been downloaded, this can end up
	calling imap_fetch_message().

	The progress messages in imap_fetch_message() were restoring curses,
	just after extract_url was running. This was leading to a condition
	where mutt curses didn't think the screen had changed after
	extract_url exited.

	There was already a check for isendwin() inside
	imap_fetch_message(), but it wasn't wrapped around the progressbar
	creation/usage. Add a check for those places too.

2017-03-27 11:39 -0700  Kevin McCarthy  <kevin@8t8.us>  (77032036c642)

	* init.c, init.h: Fix (un)sidebar_whitelist to expand paths.

	Thanks to Arturo for reporting the issue.

2017-03-26 12:27 -0700  Kevin McCarthy  <kevin@8t8.us>  (9da67ea88f25)

	* curs_lib.c: Fix mutt_refresh() pausing during macro events.

	Changeset a07e8215a0ef split input buffering into two pools.
	Unfortunately, the mutt_refresh() was not changed to check the
	correct buffer count, resulting in unnecessary refreshes during
	macros.

	The SSL interactive certificate prompts set OPTIGNOREMACROEVENTS and
	then put up a confirmation menu. Perhaps we've just been lucky, but
	it seems we should refresh the screen in those cases if we're in the
	middle of a macro. Add a check for this option in mutt_refresh()
	too.

2017-03-20 10:16 -0700  Kevin McCarthy  <kevin@8t8.us>  (7cefa378ab7e)

	* init.c: Fix setenv overwriting to not truncate the envlist. (see
	#3922)

	The refactor in 2b9c40f13e13 exposed a bug I hadn't noticed. The
	match loop performed a FREE() on the slot. Then, below, it was
	checking if (*envp) to see whether it was overwriting or creating a
	new slot. However, FREE() nulls out *envp. This would end up
	truncating the envlist just after the set slot!

	Move the free down, using a mutt_str_replace(), when overwriting the
	slot.

2017-03-18 14:39 -0700  Kevin McCarthy  <kevin@8t8.us>  (2b9c40f13e13)

	* init.c: Fix mutt_envlist_set() for the case that envlist is null.
	(see #3922)

2017-03-18 13:48 -0700  Kevin McCarthy  <kevin@8t8.us>  (37209157e33c)

	* filter.c, init.c, protos.h, system.c: Pass envlist to filter
	children too. (closes #3922)

	The new setenv patch neglected to pass the envlist for filters too.

	Unfortunately, the filter code was already set up to pass COLUMNS to
	children, so it needed to be changed to add this to the envlist
	instead.

	Factor out mutt_envlist_set() from the parse_setenv() function,
	which the filter code can then use to set COLUMNS after forking.

2017-03-05 15:24 -0800  Kevin McCarthy  <kevin@8t8.us>  (f0e3b2875065)

	* account.h: Increase ACCOUNT.pass field size. (closes #3921)

	#3921 reported his password token used for Google XOAUTH2 is size
	129. The ACCOUNT structure currently uses a size 128 buffer. Who
	knew a password field would ever be bigger than that?

	Since the ACCOUNT structure has no allocation/dellocation routines,
	the easiest fix is to increase the size. Bump the size up to 256.

2017-03-02 15:53 -0800  Matthias Andree  <matthias.andree@gmx.de>  (5fc3c0729a07)

	* mutt_ssl.c: SSL: Fix memory leak in subject alternative name code.
	(closes #3920)

2017-03-02 14:53 -0800  Kevin McCarthy  <kevin@8t8.us>  (e3e47b2f1370)

	* mbox.c: Prevent segv if open-appending to an mbox fails. (closes
	#3918)

	If mbox_open_mailbox_append() fails, ctx->fp will be null. Add a
	check in mbox_close_mailbox(), to prevent a segv from passing null
	to fileno().

2017-03-02 13:11 -0800  Kevin McCarthy  <kevin@8t8.us>  (e82253beaa9f)

	* mutt_ssl.c: Clear out extraneous errors before SSL_connect() (see
	#3916)

	Call ERR_clear_error() just before the call to SSL_connect() to make
	sure the error queue doesn't have any old errors in it.

	PEM_read_X509() sets an error PEM_R_NO_START_LINE on end-of-file.
	Clear that out so it doesn't show up as the SSL_connect() error
	message.

2017-02-24 11:00 -0800  Kevin McCarthy  <kevin@8t8.us>  (f85c3eb8d065)

	* merge default into stable

2017-02-24 10:55 -0800  Kevin McCarthy  <kevin@8t8.us>  (7cc47d82cac4)

	* .hgsigs: mutt-1.8.0 signed

2017-02-24 10:50 -0800  Kevin McCarthy  <kevin@8t8.us>  (1672b430cbc3)

	* .hgtags: Added tag mutt-1-8-rel for changeset d897983752f9

2017-02-24 10:50 -0800  Kevin McCarthy  <kevin@8t8.us>  (d897983752f9)

	* ChangeLog, VERSION, po/bg.po, po/ca.po, po/cs.po, po/da.po,
	po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po, po/eu.po,
	po/fr.po, po/ga.po, po/gl.po, po/hu.po, po/id.po, po/it.po,
	po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po,
	po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po,
	po/zh_TW.po: automatic post-release commit for mutt-1.8.0

2017-02-23 08:56 -0800  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (43e312cee971)

	* po/ja.po: Updated Japanese translation.

2017-02-22 15:58 -0800  Benno Schulenberg  <i18n@benno.vertaalt.nl>  (3e1d26df748e)

	* po/nl.po: Updated Dutch translation.

2017-02-22 12:58 -0800  Benno Schulenberg  <i18n@benno.vertaalt.nl>  (4b445c73fc77)

	* po/eo.po: Updated Esperanto translation.

2017-02-22 12:50 -0800  Kevin McCarthy  <kevin@8t8.us>  (5b68a3022b82)

	* UPDATING, doc/manual.xml.head, init.h: Minor touchups to
	documentation and UPDATING file.

2017-02-19 18:51 -0800  Kevin McCarthy  <kevin@8t8.us>  (715c276641c6)

	* doc/manual.xml.head: Mention $XDG_CONFIG_HOME/mutt/ in the manual.

2017-02-19 18:30 -0800  Kevin McCarthy  <kevin@8t8.us>  (1575671b3c60)

	* UPDATING: Reword some of the UPDATING entries.

	Thanks to Matthias Andree for his feedback and suggestions!

2017-02-18 15:15 -0800  Kevin McCarthy  <kevin@8t8.us>  (e4a5d1913e42)

	* UPDATING: Add 1.8.0 entries to the UPDATING file.

2017-02-18 21:30 +0000  Athanasios Douitsis  <aduitsis@gmail.com>  (943b281abfbb)

	* getdomain.c: Prevent null pointer exception for h->ai_canonname

	The getaddrinfo call in line 54 sets &h to a struct addrinfo. If a
	canonical name cannot be found for the node argument of getaddrinfo,
	h->ai_canonname is set to NULL. In that case, the strchr call in
	line 58 can lead to segfault. This behavior was observed on a macos
	sierra while the hostname was 192.168.1.3 (unfortunately this
	happens quite often in macos).

	The fix is simple, just check h->ai_canonname for the NULL value.

2017-02-17 20:02 -0800  Ivan Vilata i Balaguer  <ivan@selidor.net>  (9b7780b48f47)

	* po/ca.po: Updated Catalan translation.

2017-02-16 12:44 -0800  Vsevolod Volkov  <vvv@mutt.org.ua>  (27ee126fb9c5)

	* po/ru.po: Updated Russian translation.

2017-02-16 12:41 -0800  Vsevolod Volkov  <vvv@mutt.org.ua>  (ed569b004aef)

	* po/uk.po: Updated Ukrainian translation.

2017-02-16 11:22 -0800  Morten Bo Johansen  <mjb@spamcop.net>  (20eccc63e008)

	* po/da.po: Updated Danish translation.

2017-02-13 12:26 -0800  Petr Pisar  <petr.pisar@atlas.cz>  (519a8c8cc55c)

	* po/cs.po: Updated Czech translation.

2017-02-12 13:03 -0800  Matthias Andree  <matthias.andree@gmx.de>  (cec61c6926ea)

	* mutt_ssl.c: Show SHA1 fp in interactive cert check menu.

	While here, fix a few compiler warnings about sign mismatch in
	comparison.

2017-02-12 12:24 -0800  Kevin McCarthy  <kevin@8t8.us>  (2350d7d61b34)

	* mutt_ssl.c: Fix potential cert memory leak in
	check_certificate_by_digest().

	Thanks to Matthias Andree's debugging, it appears the cert is not
	freed when PEM_read_X509() encounters EOF. Change the return value
	check to not overwrite cert. It is already updated via the second
	parameter.

2017-02-12 09:59 -0800  Matthias Andree  <matthias.andree@gmx.de>  (48a1f145c269)

	* mutt_ssl.c: Plug memory leak in weed-expired-certs code.

	X509_STORE_add_cert() creates a copy of the certificate we're
	offering, so we need to free our copy afterwards. This isn't
	documented, but from observed behaviour in OpenSSL 1.0.2 and its
	master branch source code.

	Change PEM_read_X509() call to reuse cert to avoid free/reallocation
	overhead.

2017-02-12 09:59 -0800  Kevin McCarthy  <kevin@8t8.us>  (2632bc4f5b20)

	* mutt_ssl.c: Filter expired local certs for OpenSSL verification.

	OpenSSL has trouble establishing the chain and verifying when
	duplicate expired certs are loaded in from $certificate_file. A
	warning about this is mentioned in
	SSL_CTX_load_verify_locations(3SSL).

	Filter out expired certs when loading verify certs. Note that the
	full certicates file is still used for verification in
	check_certificate_by_digest().

2017-02-10 13:01 -0800  Kevin McCarthy  <kevin@8t8.us>  (7c97a8af8718)

	* alias.c, group.c, hash.c, hash.h, headers.c, imap/message.c, init.c,
	mh.c, mx.c, pop.c, thread.c: Change "allow_dups" into a flag at hash
	creation.

	Instead of having an "allow_dups" parameter for hash_insert(), add a
	flag, MUTT_HASH_ALLOW_DUPS, to hash_create().

	Currently ReverseAlias, subj_hash, and thread_hash allow duplicate
	keys. Change those hashes to pass the flag at creation, and remove
	the last parameter from all callers of hash_insert().

2017-02-10 12:56 -0800  Petr Pisar  <petr.pisar@atlas.cz>  (e2b186a92390)

	* po/cs.po: Updated Czech translation.

2017-02-10 12:51 +0100  Vincent Lefevre  <vincent@vinc17.net>  (a4449ebfb5f4)

	* po/fr.po: Updated French translation.

2017-02-08 07:48 -0800  Kevin McCarthy  <kevin@8t8.us>  (d215a36fd8ee)

	* hcache.c: Fix build for bdb.

	Changeset fca7e504ab6a removed #else/#endif around two blocks of
	code that won't compile with bdb enabled. Restore those directives.

	Thanks to Richard Russon for pointing out the problem and saving me
	from having egg all over my face with the 1.8 release!

2017-02-07 19:36 -0800  Kevin McCarthy  <kevin@8t8.us>  (09bb4a62ceb1)

	* hcache.c, hcache.h, imap/imap.c, imap/message.c, imap/util.c, mh.c,
	pop.c: Create function to free header cache data.

	Kyoto Cabinet documents that data from it should be freed via
	kcfree().

	LMDB claims ownership of the data returned, so convert its free
	operation to be a noop and remove the malloc from its fetch
	function.

2017-02-07 19:36 -0800  Kevin McCarthy  <kevin@8t8.us>  (52481ceb6c6e)

	* configure.ac, doc/manual.xml.head, hcache.c, init.h, mutt.h: Add
	Kyoto Cabinet support to the header cache.

	Retain the defaults as they are, although we might switch to Kyoto
	Cabinet for the next major release.

2017-02-04 12:53 -0800  Kevin McCarthy  <kevin@8t8.us>  (fca7e504ab6a)

	* hcache.c: Fixes to the LMDB header cache. (closes #3691)

	Use mdb_txn_abort() to free up readonly/reset transactions, and
	avoid leaking memory.

	Fix hcache_delete() key generation - looks like this was an
	incorrect copy/paste from the bdb code.

	Use dprint, not fprintf, for debugging messages.

	Remove strange blending of enum and bitfield logic for the txn_mode
	state.

	Remove some duplicate code from store/fetch raw.

2017-02-04 12:53 -0800  Kevin McCarthy  <kevin@8t8.us>  (42aa8b19da95)

	* configure.ac, hcache.c: Add LMDB backend support for header cache.
	(see #3691)

	Based on the original from JP Mens:
	https://gist.github.com/jpmens/15969d9d678a3d450e4e

	The following performance patch was manually applied on top of the
	original patch: https://github.com/neomutt/neomutt/commit/7e5380cd4c
	40d119ff83b2cf5f51f2cdb8a95ab3

	A variant of this patch was added to handle larger mailboxes: https:
	//github.com/neomutt/neomutt/commit/6d337642e701b1dde4b5d0812e01c85f
	41ba65ca

	Thanks to all the developers and contributors to this patch, and to
	Fabian Groffen for bundling and posting this to mutt-dev.

2017-01-31 15:02 -0800  Kevin McCarthy  <kevin@8t8.us>  (142a87f0c855)

	* enter.c: Minor fix to ~y completion.

	Make sure the entire ~y is before curpos when enabling completion.

2017-01-31 14:27 -0800  Kevin McCarthy  <kevin@8t8.us>  (82034c72b6da)

	* enter.c, init.c, protos.h: Simplify mutt_label_complete().

	It was derived from mutt_command_complete(), which had more complex
	requirements. For labels, we just need to skip whitespace and
	complete based on the passed in buffer.

	Therefore, we don't need the pos parameter, or to work backwards
	from the end of the buffer.

2017-01-31 14:27 -0800  Kevin McCarthy  <kevin@8t8.us>  (298654f1d70c)

	* enter.c: Permit tab completion of pattern expressions with ~y
	(labels).

	Thanks to David Champion for the original patch. This version is
	slightly different, as I couldn't get the original patch working.
	This version simply scans backward for the first ~, and if it is ~y,
	invokes completion.

2017-01-31 14:27 -0800  Kevin McCarthy  <kevin@8t8.us>  (9ca99f2b1205)

	* enter.c: Fix the mutt_label_complete() pos parameter.

	i is the state->wbuf index, not the end of the buf. It was "working"
	only because the contents of buf past the null were not "space" most
	of the time.

2017-01-29 11:02 -0800  Kevin McCarthy  <kevin@8t8.us>  (ab2f8882633b)

	* copy.c: Fix the x-label update code check location.

	The x-label comparison was outside the "beginning of header" block.

	This meant that it could theoretically match a continuation line.
	Additionally, the continuation lines of x-labels would not be
	stripped, because the comparison was after the ignore variable was
	reset.

	Move the comparison inside the block and before the ignore reset.

2017-01-28 18:48 -0800  Kevin McCarthy  <kevin@8t8.us>  (d0909785d945)

	* curs_main.c, globals.h, headers.c, init.c, main.c, mbox.c, mutt.h,
	mx.c, pop.c, protos.h: Improve the label completion hash table
	usage.

	Move the hash table inside the Context. Hook message
	arrival/deletion to update the label hash.

	Change the label hash to strdup keys.

	Use hash_find_elem when updating the counter, to reduce unnecessary
	add/delete operations.

2017-01-28 18:47 -0800  David Champion  <dgc@bikeshed.us>  (66cc205ea76a)

	* curs_main.c, doc/manual.xml.head, enter.c, globals.h, headers.c,
	init.c, main.c, mutt.h, protos.h: Adds label completion.

	A global label hash is added, to which labels are added as they're
	parsed from a mailbox file or edited manually by the user. Reference
	counts are kept in the hash table so that unused labels are removed
	from available completions. Completion is available in the label
	editor only, but it may be feasible to add for search expressions if
	the preceding text ends with '~y'.

2017-01-28 18:47 -0800  Kevin McCarthy  <kevin@8t8.us>  (51c5e574a082)

	* hash.c, hash.h: Add hash_find_elem to get the hash element.

	This will be used in the following patch for directly manipulating
	the label counter.

2017-01-28 18:47 -0800  David Champion  <dgc@bikeshed.us>  (169b67b5b666)

	* hash.c, hash.h: Add reentrant hash_walk() function for iterating
	down a hash table.

2017-01-28 18:47 -0800  Kevin McCarthy  <kevin@8t8.us>  (95b892b3f856)

	* commands.c, copy.c, curs_main.c, functions.h, headers.c, pager.c:
	Minor fixes to the x-label patch from David.

	Add L10N comment to sort menu. Mark a couple strings for
	localization.

	Use ascii_strncasecmp() for the X-Label header comparison.

	Simplify label_message() using mutt library routines.

	Bind label editing to "Y" instead of "y". "y" is already used in the
	default sample muttrc to display mailboxes.

2017-01-28 18:47 -0800  David Champion  <dgc@bikeshed.us>  (67525605640e)

	* OPS, commands.c, copy.c, copy.h, curs_main.c, doc/manual.xml.head,
	functions.h, headers.c, imap/imap.c, init.h, mh.c, mutt.h, pager.c,
	protos.h, sort.c, sort.h: Adds capability to edit x-labels inside
	mutt, and to sort by label.

2017-01-24 15:33 -0800  Kevin McCarthy  <kevin@8t8.us>  (e4ad1dc9bfbd)

	* doc/manual.xml.head, init.c: Allow "unsubjectrc *" to remove all
	patterns.

	Thanks to Aaron Schrab for the original patch.

2017-01-23 19:01 -0800  David Champion  <dgc@bikeshed.us>  (9e876d64d3c8)

	* doc/manual.xml.head, globals.h, hdrline.c, init.c, init.h, mutt.h,
	muttlib.c: Add subjectrx command to replace matching subjects with
	something else.

	This lets you define regular expressions-replacement pairs for
	subject display. When a Subject: matches the regular expression, the
	replacement value will be displayed instead in the message index.
	Backreferences are supported.

	This is especially nice for simplifying subjects that are overly
	wordy, such as mailing list posts (with [Listname] tags, etc), mail
	from ticketing systems or bug trackers, etc. It lets you reduce
	clutter in your mutt display without altering the messages
	themselves.

2017-01-23 19:01 -0800  David Champion  <dgc@bikeshed.us>  (f05df6b258f3)

	* globals.h, hcache.c, init.c, mutt.h, muttlib.c, protos.h: Abstract
	the SPAM_LIST as a generic REPLACE_LIST

	REPLACE_LIST can be used more generally as a list of pattern match-
	replace settings. SPAM_LIST was a special case of this, so spam
	handling has been been changed to use REPLACE_LIST instead, and
	SPAM_LIST was removed.

	A generic function for performing a REPLACE_LIST replacement has
	been added in mutt_apply_replace().

	Commited by Kevin McCarthy with some buffer overflow fixes in
	mutt_apply_replace().

2017-01-23 18:46 -0800  Kevin McCarthy  <kevin@8t8.us>  (7a8ea1bb09f0)

	* send.c: Improve Reply-to vs From comparison when replying. (closes
	#3909)

	Prior to this patch, if the Reply-to mailbox matched the From
	mailbox, mutt would always use the From address. This was probably
	done to preserve the display name, as the Reply-to address is often
	missing one.

	Unfortunately, there are circumstances where the Reply-to display-
	name has significance, such as in ticket 3909.

	Change mutt so that it only uses the From address if the Reply-To
	has no display-name.

2017-01-19 14:58 -0800  Kevin McCarthy  <kevin@8t8.us>  (b57c695b7923)

	* doc/manual.xml.head, init.h, sidebar.c, sort.h: Fix sidebar
	references to the "new count" to be "unread". (closes #3908)

	%N in $sidebar_format and "new"in $sidebar_sort_method actually use
	the unread message count. Update the documentation to mention that.

	Add an "unread" method to $sidebar_sort_method, but preserve "new"
	for compatibility.

	Change the SORT_COUNT_NEW constant to SORT_UNREAD, so the code is
	also consistent with the meaning.

	Thanks to cri for reporting the problem and suggesting where to fix
	it in the code.

2017-01-17 16:09 -0800  Kevin McCarthy  <kevin@8t8.us>  (a555ada578b8)

	* addrbook.c, alias.c, init.c: Fix several alias hashtable issues.

	Convert to use the strdup keys hash. Addresses can be converted back
	and forth from intl to local forms. This frees and recreates a new
	addr->mailbox string, resulting in the hash table key being a
	dangling pointer.

	Change alias hash table insert/remove to ensure the address is in
	intl form. The alias menu (previously) converted address entries to
	local form when performing a completion. Even with the pointer issue
	fixed, the entries may not be removed from the hash if the intl and
	local forms are different.

	Lastly, there is no reason for the alias menu to manually convert to
	local form before writing the address to the output buffer.
	rfc822_write_address() has a display parameter that will call
	mutt_addr_for_display() instead when set. Change to set the display
	parameter and remove the conversion calls.

	This last change obviates the first two changes, but they are a good
	idea in any case.

2017-01-17 16:09 -0800  Kevin McCarthy  <kevin@8t8.us>  (fc6990144167)

	* hash.c, hash.h, init.c: Add casecmp and strdup_key flags to
	hash_create()

	Aliases and (in the future), X-Label hashes will require a hash that
	strdups the key. Convert the casecmp parameter of hash_create() to a
	flags parameter, and add a flag to strdup the keys.

2017-01-15 10:00 -0800  Kevin McCarthy  <kevin@8t8.us>  (ac1a2af3aff4)

	* mx.c: Improve error handling in mbox magic detection.

	Thanks to Simon Ruderich for pointing out several small issues with
	the previous commit.

2017-01-14 19:18 -0800  David Champion  <dgc@bikeshed.us>  (945a3f4b15c7)

	* mx.c: Allow initial blank lines in local mailboxes.

	Some mailbox-creation tools erroneously append a blank line to a
	file before appending a UNIXv7-format mail message, resulting in
	mailboxes that are intended to be valid "mbox" folders but are not.
	Notably old versions of Mailman do this, making archive files that
	cannot be read by mutt.

	This patch causes mutt to skip leading NLs and CRs when detecting
	magic.

2017-01-10 14:48 -0800  Simon Ruderich  <simon@ruderich.org>  (79306170e367)

	* doc/manual.xml.head, doc/muttrc.man.head: Fix minor documentation
	issues.

	manual.xml: Wrap line for clarity.

	muttrc.man: Remove superfluous spaces in brackets. Add missing error
	object in color command. Sort the prompt object. Add sidebar color
	objects.

2017-01-06 14:37 -0800  Kevin McCarthy  <kevin@8t8.us>  (7c0e7a0769e4)

	* imap/command.c: Convert cmd_parse_search to use the uid hash.
	(closes #3905)

	Replace the linear scan for each result with a hash lookup. This
	should greatly improve performance for large mailboxes.

2017-01-06 14:23 -0800  Kevin McCarthy  <kevin@8t8.us>  (1ad1013cbf5b)

	* imap/imap.c, imap/imap_private.h, imap/message.c: Create a uid hash
	for imap. (see #3905)

	This hash will allow for more efficient UID SEARCH processing,
	replacing a linear scan with a hash lookup.

2017-01-06 14:17 -0800  Kevin McCarthy  <kevin@8t8.us>  (ebb93147aec7)

	* hash.c, hash.h, thread.c: Convert HASH to be indexable by unsigned
	int. (see #3905)

	Convert the HASH to be usable for either string or unsigned int
	keys, so that a uid hash can be added for imap.

	To keep hash-usage code disruption to a minimum, this introduces new
	create/insert/find/delete functions for the int hash, but keeps the
	old function names for string keys.

	This implementation makes the key a union. It may have been a better
	idea to introduce a whole new structure, but this way allows minimum
	changes to and maximum reuse of the existing hash code.

2017-01-04 19:45 -0800  Kevin McCarthy  <kevin@8t8.us>  (4f0a84b954ef)

	* imap/command.c: Fix imap server-side search to call uid2msgno() only
	once. (see #3905)

	After performing a UID SEARCH, the results are parsed in
	cmd_parse_search(). This was accidentally calling uid2msgno() twice.
	Since that function does a linear search, this has a noticable
	impact on large search results.

2017-01-02 18:08 -0800  Kevin McCarthy  <kevin@8t8.us>  (23b02a482bde)

	* curs_main.c, hook.c, mutt.h, pattern.c, protos.h, score.c: Add a
	pattern_cache_t to speed up a few repeated matches.

	Vincent Lefèvre reported experiencing an index display performance
	issue. This occurred with messages containing many recipients. He
	had many index color lines containing ~l. The ~l ended up being run
	over and over on these messages, resulting in a noticable slowdown
	displaying the index.

	This patch adds caching for just a few of the pattern operations
	(~l, ~u, ~p, ~P) that are potentially expensive and also don't have
	arguments. The caching is only enabled for operations repeatedly
	matching against the same message: color, hooks, scoring.

	The caching is fairly targeted, but isn't that invasive or
	complicated.

2016-12-31 19:57 -0800  Kevin McCarthy  <kevin@8t8.us>  (2bc2ec9ac664)

	* crypt-gpgme.c: Canonicalize line endings for GPGME S/MIME
	encryption. (closes #3904)

	This matches the behavior for S/MIME classic mode: OpenSSL converts
	the line endings to cr/lf before encrypting. Although Mutt always
	canonicalizes the line endings before verifying the signature, some
	clients do not do this for encrypted messages.

	Thanks to cooler for the patch!

2016-12-27 15:23 -0800  Kevin McCarthy  <kevin@8t8.us>  (4cb0cd767af2)

	* globals.h, hdrline.c, init.h, status.c: Make to_chars and
	status_chars accept mulitibyte characters. (closes #3024)

	Change Tochars and StChars to use the mbchars_table type introduced
	in the last commit.

2016-12-27 15:23 -0800  Kevin McCarthy  <kevin@8t8.us>  (1d054932abfb)

	* doc/makedoc.c, init.c, init.h, mutt.h: Create mbchar_table type for
	multibyte character arrays. (see #3024)

	This type is to allow multibyte characters in to_chars and
	status_chars while preserving efficient indexing to each character.

	The arrays are tokenized during initialization, and are re-tokenized
	as the values are unset, reset, and set.

2016-12-25 23:31 +0100  Vincent Lefevre  <vincent@vinc17.net>  (1303567a6ad1)

	* doc/manual.xml.head: In the manual, replaced 2 para by example
	(similar to the first example).

2016-12-13 12:19 -0800  David Champion  <dgc@bikeshed.us>  (b112fd7061fb)

	* curs_main.c, init.h, mutt.h: Add option to control whether threads
	uncollapse when new mail arrives.

	Adds $uncollapse_new: when set, the default, a collapsed thread into
	which a new message arrives will be uncollapsed to reveal the new
	message.

2016-12-13 12:02 -0800  Richard Russon  <rich@flatcap.org>  (1f04f9145eb1)

	* OPS: Remove unused OPS

	OP_MAIN_FIRST_MESSAGE and OP_MAIN_LAST_MESSAGE were added to the
	code 19 years ago. They weren't used then; they haven't been used
	since.

2016-12-13 11:16 -0800  Michał Kępień  <mutt@kempniu.pl>  (b985c324932b)

	* mutt_ssl.c: Rework OpenSSL certificate verification to support
	alternative chains. (closes #3903)

	The way Mutt currently verifies SSL certificates using OpenSSL does
	not support alternative chains, which may cause confusion when some
	popular mail providers (e.g. Gmail) are used with specific sets of
	trusted CA certificates.

	Replace the "manual" verification done by mutt in
	check_certificate_by_signer() with SSL_set_verify() using a
	callback. OpenSSL then does the certificate verification, including
	properly looking at alternative chains. The callback still provides
	the opportunity to override using ~/.mutt_certificates or an
	interactive prompt.

2016-12-11 18:56 -0800  David Champion  <dgc@bikeshed.us>  (8a23708d978b)

	* doc/manual.xml.head, init.c, init.h, main.c, system.c: Add
	setenv/unsetenv commands.

	These can be used to add and remove environment variables passed to
	children via mutt_system().

	Commited by Kevin McCarthy with some cleanup.

2016-12-06 19:07 -0800  Kevin McCarthy  <kevin@8t8.us>  (df1d1e379477)

	* doc/manual.xml.head: Move '@' pattern modifier documentation to the
	right section.

	Somehow, the patch got out of date and the documentation shifted to
	another section. Relocate back to the "Pattern Modifier" section.

2016-12-04 16:04 -0800  Kevin McCarthy  <kevin@8t8.us>  (d930e39ec095)

	* merge stable

2016-12-04 16:03 -0800  Kevin McCarthy  <kevin@8t8.us>  (b9d34372a940)

	* .hgsigs: mutt-1.7.2 signed

2016-12-04 16:01 -0800  Kevin McCarthy  <kevin@8t8.us>  (954f9049e4b3)

	* .hgtags: Added tag mutt-1-7-2-rel for changeset 99f5624d1f52

2016-12-04 16:01 -0800  Kevin McCarthy  <kevin@8t8.us>  (99f5624d1f52)

	* ChangeLog, UPDATING, VERSION: automatic post-release commit for
	mutt-1.7.2

2016-12-04 15:41 -0800  Kevin McCarthy  <kevin@8t8.us>  (a17189b58284)

	* crypt-gpgme.c, mutt_ssl.c: merge stable

2016-11-26 00:57 +0100  Vincent Lefevre  <vincent@vinc17.net>  (a0a970530a8b)

	* crypt-gpgme.c, crypt-gpgme.h, crypt-mod-pgp-gpgme.c: Fix build
	failure with GPGME 1.8: do not steal the gpgme_ prefix.

2016-11-19 19:35 -0800  Kevin McCarthy  <kevin@8t8.us>  (10c4761cea89)

	* mutt_ssl.c: More openssl1.1 fixes: remove uses of X509->name in
	debugging. (closes #3870)

	X509->name was a shortcut for the longer name = X509_NAME_oneline
	(X509_get_subject_name (cert), buf, sizeof (buf)); invocation.
	Change the debugging to print the cert name and chain names in the
	ssl_check_certificate() loop instead.

2016-09-07 20:00 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (2c1d79d3edd5)

	* configure.ac, mutt_ssl.c: Fix openssl 1.1 compilation issues.
	(closes #3870)

	With these changes, Mutt will no longer compile for versions less
	than 0.9.6.

2016-12-03 15:24 -0800  Kevin McCarthy  <kevin@8t8.us>  (d6c10244793f)

	* sidebar.c: Change sidebar_spoolfile coloring to be lower precedence.

	Give sidebar_new and sidebar_flagged higher precedence than
	sidebar_spoolfile, so that new and flagged message colors will show
	up for the spoolfile in the sidebar.

	Thanks to Till Smejkal for the original patch.

2016-11-29 17:48 -0800  Kevin McCarthy  <kevin@8t8.us>  (d72caeecf4af)

	* curs_main.c: Return to pager upon aborting a jump operation. (closes
	#3901)

2016-11-29 17:44 -0800  Kevin McCarthy  <kevin@8t8.us>  (1196c859942e)

	* lib.h, mutt_ssl.c: Add mutt_array_size macro, change
	interactive_check_cert() to use it. (see #3899)

	While I have reservations about the construct, it does make the
	interactive_check_cert() menu->max and part loop less fragile.

2016-11-29 17:44 -0800  Kevin McCarthy  <kevin@8t8.us>  (1a2dc7b21b5b)

	* mutt_ssl.c: Improve openssl interactive_check_cert. (closes #3899)

	Don't use X509_NAME_oneline() with a fixed size buffer, which could
	truncate the string, perhaps leaving off the CN field entirely.
	Instead, work directly off the X509_NAME.

	Rather than use strstr to tokenize it, call
	X509_NAME_get_text_by_NID() with the nid types. Although
	X509_NAME_get_text_by_NID() is "legacy", it is the most directly
	useful for mutt in this simple interactive prompt.

	The function was set up to include the ST and C fields in the
	prompt, but the loop limit was too low. I believe this was an
	oversight, so increase the loop to include those two fields.

2016-11-26 00:57 +0100  Vincent Lefevre  <vincent@vinc17.net>  (84ad86e8b8ab)

	* crypt-gpgme.c, crypt-gpgme.h, crypt-mod-pgp-gpgme.c: Fix build
	failure with GPGME 1.8: do not steal the gpgme_ prefix.

2016-11-22 03:48 +0100  Vincent Lefevre  <vincent@vinc17.net>  (b22c5d0e299d)

	* mutt_ssl.c: Corrected comment.

2016-11-21 18:03 -0800  Kevin McCarthy  <kevin@8t8.us>  (65f180f2904f)

	* mutt_ssl.c: Revert db13010a2e8d but add a comment. (see #3870)

	X509_NAME_oneline() always NULL-terminates the string, even when it
	has to truncate the data to fit in buf.

2016-11-21 23:10 +0100  Vincent Lefevre  <vincent@vinc17.net>  (db13010a2e8d)

	* mutt_ssl.c: Make sure that the output of X509_NAME_oneline is null-
	terminated.

2016-11-20 16:19 -0800  Kevin McCarthy  <kevin@8t8.us>  (c770d2fa615b)

	* mutt_tunnel.c: Minor resource and error logic cleanup in
	tunnel_socket_open()

	Free the conn->sockdata on failure. conn->fd is not set until the
	bottom, and before it is set, conn->conn_close() will not be called.

	Close the pin pipe if the pout pipe fails.

	Call mutt_perror first on a fork failure. Calling after the close()
	may cause errno to be changed on a close failure.

2016-11-20 16:19 -0800  Kevin McCarthy  <kevin@8t8.us>  (b319ec2dc93a)

	* mutt_tunnel.c: Don't close stderr when opening a tunnel. (closes
	#3726)

	Instead of closing stderr, redirect it to /dev/null in
	tunnel_socket_open(). Otherwise a program can accidentally open a
	file into handle 2 and then unknowingly use that when trying to
	print to stderr.

	Thanks to lotheac for the original patch, which I just modified
	slightly.

2016-11-19 19:35 -0800  Kevin McCarthy  <kevin@8t8.us>  (695243ba6374)

	* mutt_ssl.c: More openssl1.1 fixes: remove uses of X509->name in
	debugging. (closes #3870)

	X509->name was a shortcut for the longer name = X509_NAME_oneline
	(X509_get_subject_name (cert), buf, sizeof (buf)); invocation.
	Change the debugging to print the cert name and chain names in the
	ssl_check_certificate() loop instead.

2016-11-20 01:41 +0100  Vincent Lefevre  <vincent@vinc17.net>  (d14ffd58d976)

	* po/fr.po: Updated French translation.

2016-11-18 15:54 -0800  Kevin McCarthy  <kevin@8t8.us>  (4bed0172c27b)

	* OPS, curs_main.c, functions.h: Fix mark-message translation and
	keybind menu.

	Move the OP_MARK_MESSAGE and hotkey macro from MENU_GENERIC to the
	MENU_MAIN keymap. Putting the macro under generic prevents it from
	overriding a keybinding in the index (even if the function is bound
	to noop). Additionally, the macro can only be executed from the
	index, so it doesn't make sense as a generic keybinding.

	Use the term "hotkey" in both the OPS and km_bind description.

	Mark the km_bind description translatable.

	Add L10N messages for the new translation strings.

2016-11-18 14:20 -0800  Kevin McCarthy  <kevin@8t8.us>  (46194ca48b2f)

	* compress.c: Improve two compress translation messages.

	Change the "Error executing" to "Error running", which is used in
	multiple places elsewhere in mutt. This also removes the unnecessary
	newline.

	Remove the leading space in the "Error compressing" message, and
	change it to match the error message in editmsg.c.

2016-11-18 18:17 +0100  Vincent Lefevre  <vincent@vinc17.net>  (174062d0abed)

	* po/fr.po: Updated French translation.

2016-11-18 17:00 +0100  Vincent Lefevre  <vincent@vinc17.net>  (8fa4965beb62)

	* curs_main.c: Make a string translatable.

2016-11-18 16:59 +0100  Vincent Lefevre  <vincent@vinc17.net>  (c15cacbfabe5)

	* smime.c: Make a string translatable. Add a missing space at the end.

2016-11-18 13:07 +0100  Vincent Lefevre  <vincent@vinc17.net>  (c1befb06b4bd)

	* po/fr.po: Updated French translation (except for 1 string).

2016-11-18 12:32 +0100  Vincent Lefevre  <vincent@vinc17.net>  (211afb39a22a)

	* INSTALL: Updated requirement on the C compiler.

2016-11-17 17:54 -0800  Kevin McCarthy  <kevin@8t8.us>  (fa32396b5e26)

	* init.c: Revert changes made to mutt_find_cfg() in 3c6d322912e3

	The usage of MUTT_VERSION in mutt_find_cfg() was fine before the
	commit: it wasn't using MUTT_VERSION inlined into a string with
	format string substitution.

	Revert to the version of mutt_find_cfg() before that changeset.

2016-11-17 15:57 -0800  David Champion  <dgc@bikeshed.us>  (022b604bc46d)

	* OPS, curs_main.c, doc/manual.xml.head, functions.h, globals.h,
	init.h: Adds <mark-message> binding to create "hotkeys" for
	messages.

	<mark-message>foo<enter> will create a new macro "'foo" which will
	return to the current message by searching for that message's
	message id. The initial character of the macro is defined by
	$mark_macro_prefix, and defaults to "'" for verisimilitude vs. vi.

	Pushed by Kevin McCarthy with a minor fix.

2016-11-17 15:07 -0800  Kevin McCarthy  <kevin@8t8.us>  (3c6d322912e3)

	* commands.c, compose.c, dotlock.c, init.c, muttlib.c, status.c:
	Backout inlining of MUTT_VERSION in 42fee7585fae.

	If MUTT_VERSION contains a %, this will result in problems.

2016-11-16 16:05 -0800  David Champion  <dgc@bikeshed.us>  (91b3449f426b)

	* doc/manual.xml.head, mutt.h, pattern.c: Adds the '@' pattern
	modifier to limit matches to known aliases.

	Example: ~f joe matches messages from joe. @~f joe matches messages
	from any joe who is defined as an alias.

	Pushed by Kevin McCarthy with two minor cosmetic fixes.

2016-11-16 15:43 -0800  David Champion  <dgc@bikeshed.us>  (03aa03293c1d)

	* flags.c, init.h, mh.c, mutt.h: When $flag_safe is set, flagged
	messages cannot be deleted.

	This saves them from bulk operations on threads and tagged messages.
	To remove a flagged message, first unflag it.

2016-11-15 12:04 -0800  Kevin McCarthy  <kevin@8t8.us>  (5382e1e4cee1)

	* muttbug.sh.in: Fix muttbug to check $XDG_CONFIG_HOME.

	Fall back to $HOME/.config if $XDG_CONFIG_HOME is not set.

2016-11-15 12:03 -0800  Kevin McCarthy  <kevin@8t8.us>  (0ef0f4d15f75)

	* init.c: Fix loop terminator in in mutt_find_cfg().

	Keep searching even if home is NULL.

2016-11-14 11:02 -0800  Kevin McCarthy  <kevin@8t8.us>  (c78753f98e34)

	* doc/makedoc-defs.h: Ensure the compressed documentation is always
	built.

	Add USE_COMPRESSED to makedoc-defs.h so any conditional
	documentation will always be built.

2016-11-13 20:02 -0800  Kevin McCarthy  <kevin@8t8.us>  (99a3ff6555d9)

	* compress.c: Compress: check mailbox type if possible when appending.

	If an append hook isn't defined, then mutt has to decompress the
	mailbox. In that case, we can check the type of the decompressed
	mailbox instead of defaulting to DefaultMagic.

2016-11-13 20:02 -0800  Kevin McCarthy  <kevin@8t8.us>  (cad0051417eb)

	* compress.c, doc/manual.xml.head: Compress: escape single quotes when
	invoking the compress/decompress commands.

	The format strings are placed in single quotes. mutt_system()
	invokes sh, so escape the single quotes using bourne-shell syntax:
	'\''

2016-11-13 20:02 -0800  Kevin McCarthy  <kevin@8t8.us>  (a51f1c8a038a)

	* compress.c: Compress: fix check_mailbox and sync_mailbox.

	Change check_mailbox to delegate to the child_ops->check_mailbox if
	the compressed mailbox has changed. This allows the mailbox to
	properly recover if both the decompressed mailbox and compressed
	file have changed.

	Change sync_mailbox to call check_mailbox before attempting to sync.
	This will prevent overwriting external changes to the compressed
	mailbox.

2016-11-13 20:02 -0800  Kevin McCarthy  <kevin@8t8.us>  (0a7054904b5b)

	* compress.c, compress.h, imap/imap.c, mbox.c, mh.c, mutt.h, mx.c,
	mx.h, pop.c, pop.h: Create mx_ops.sync operation. Refactor compress
	to use the mx_ops.sync.

	Change compress.sync_mailbox() to lock the compressed mailbox around
	both the tempfile sync and compress operations. This will prevent
	changes made inbetween the two syncs from being overwritten.

	Thanks to Damien Riegel for his original patch refactoring
	mx_ops.sync, which this patch is partially based upon.

2016-11-13 20:02 -0800  Kevin McCarthy  <kevin@8t8.us>  (05f6bd8532ea)

	* compress.c: Compress: pull the lock/unlock operations into the
	open,close,sync operations.

	Some operations, such as open_append and sync, need an exclusive
	lock across a longer period than a single compress/decompress.
	Remove it from the execute_command and pull into the outer callers.
	Store lock information inside compress_info.

	Sync and check_mailbox need more fixes, which will be addressed in
	subsequent patches.

2016-11-13 20:02 -0800  Kevin McCarthy  <kevin@8t8.us>  (b1366f49c7b7)

	* compress.c: Compress: safe_fopen() the tempfile, to prevent tempfile
	attacks.

2016-11-13 20:02 -0800  Kevin McCarthy  <kevin@8t8.us>  (7c055cc893dc)

	* compress.c: Compress: add delegate calls to open_append and close
	mx_ops functions.

	The open_append and close were partially duplicating mbox
	open_append and close operations internally. Change it to call the
	actual delegate functions instead.

	Inline the open_read() function inside open_mailbox(). Having it
	split improved nothing and just complicated the code (i.e. added
	error-handling checks in open_mailbox() that in reality could not
	fail).

2016-11-13 20:02 -0800  Kevin McCarthy  <kevin@8t8.us>  (d1ff983c9bcb)

	* compress.c, compress.h, mx.c: Compress: fix several logic and memory
	bugs.

	setup_paths leaks memory: realpath is already set in
	mx_open_mailbox()

	restore_paths is unneeded. mx_fastclose_mailbox() will free stuff,
	and nothing is looking at the path once we are closing or aborting.

	Make a copy of the hooks. Otherwise 'unhook *' will leave dangling
	pointers.

	Add compress_info freeing inside mx_fastclose_mailbox(). Only free
	inside compress.c when we want to prevent close() from doing
	anything.

	close_mailbox() didn't preserve ctx->path on error.

	execute_command() didn't return an error if the mutt_system()
	command failed.

	mx_open_mailbox_append() should check mutt_comp_can_append() only
	for the case that the mailbox doesn't exist. When it exists,
	mx_get_magic() has already looked at the file contents before
	checking for matching open_hooks.

	In open_append_mailbox() if no append hook is defined, it should't
	call ci->open() if the mailbox doesn't exist. It should act just
	like append and create a temporary file.

	check_mailbox() needs more work. For now, at least have it properly
	close the mailbox on error.

2016-11-13 20:02 -0800  Kevin McCarthy  <kevin@8t8.us>  (c9c120d988a8)

	* commands.c: Compress: remove buffy stats "improvisation".

	Mutt doesn't support polling compressed mailboxes. This code creates
	a false impression and dirties mutt_save_message() in the process. I
	don't like it, so am taking it out.

2016-11-13 20:02 -0800  Kevin McCarthy  <kevin@8t8.us>  (290631db373e)

	* compress.c, compress.h, hook.c, mx.c: Compress: prefix external
	functions with "mutt_"

	Also, include compress.h in compress.c so the mx_comp_ops doesn't
	need to be redeclared.

2016-11-13 20:02 -0800  Kevin McCarthy  <kevin@8t8.us>  (ad519d4b356c)

	* Makefile.am, commands.c, compress.c, compress.h, configure.ac,
	contrib/Makefile.am, contrib/sample.muttrc-compress, curs_main.c,
	doc/Muttrc.head, doc/manual.xml.head, doc/muttrc.man.head, hook.c,
	init.h, main.c, mutt.h, mx.c, mx.h, po/POTFILES.in, po/de.po,
	status.c: Compress patch from the neomutt repository.

	With the following changes:
	- po/de.po changes trimmed to just the compress additions.

	- Move the sample muttrc to contrib, and add it to the Makefile.am
	so it is distributed. Remove the sample vimrc.

	- Remove extra fluff from manual.

	Thanks to Roland Rosenfeld for the original patch, and to the
	NeoMutt team for their work cleaning up the patch.

2016-11-13 18:45 -0800  Damien Riegel  <damien.riegel@gmail.com>  (42fee7585fae)

	* commands.c, compose.c, dotlock.c, init.c, muttbug.sh.in, muttlib.c,
	status.c: search muttrc file according to XDG Base Specification
	(closes #3207)

	First of all, the MUTT_VERSION symbol is now concatenated (when
	possible) at compile time.

	Then, the logic to find the config file has been changed a bit to
	remove unnecessary calls to access(), so now each possible locations
	for the config file is only tested once, and it stops as soon as a
	valid one has been found. So instead of:

	 access("/home/dkc/.muttrc-1.7.1", F_OK) = -1 ENOENT (No such file
	or directory) access("/home/dkc/.muttrc", F_OK) = 0
	access("/home/dkc/.muttrc", F_OK) = 0 access("/home/dkc/.muttrc",
	F_OK) = 0 [... Tests for Muttrc ... ] access("/home/dkc/.muttrc",
	F_OK) = 0

	We now have:

	 access("/home/dkc/.muttrc-1.7+13 (f658e517960e)", F_OK) = -1 ENOENT
	(No such file or directory) access("/home/dkc/.muttrc", F_OK) = 0

	It also cleans up the case where -F is passed on the command line
	but points to a non-existent file by moving the error path closer to
	the actual fail condition.

	Finally, it adds partial support for the XDG Base Directory
	Specification. mutt will now try to locate its config at:

	 $XDG_CONFIG_HOME/mutt/muttrc-MUTT_VERSION
	$XDG_CONFIG_HOME/mutt/muttrc.

	If XDG_CONFIG_HOME is not set, it will use '~/.config' as a default.

2016-11-08 12:42 -0800  Kevin McCarthy  <kevin@8t8.us>  (d18482f6641e)

	* mbox.c, mx.c: Move mbox close-append logic inside
	mbox_close_mailbox().

	The mx_fastclose_mailbox() calls mx_ops->close(), which invokes
	mbox_close_mailbox().

	Also, close the ctx->fp inside mbox_close_mailbox(). This way, the
	(to be added) compress logic can call the mx_ops->close() instead of
	"knowing" to close the fp before recompressing.

	mx_fastclose_mailbox() will safe_fclose() the fp again, but I'm
	leaving it there just in case I missed a usage of the fp in some
	other part of the code.

	Thanks to Damien Riegel for the original patch.

2016-11-07 18:10 -0800  Kevin McCarthy  <kevin@8t8.us>  (d0078268768d)

	* recvattach.c: Chain %d->%F->%f in the attachment menu.

	Previously, %d would use %f if there was no description set.

	Place the new %F option in between %d and %f. This way, %d will fall
	back on %F, which will fall back on %f. This allows the standard
	attachment menu to show d_filename.

	This is useful for forwarding attachments or editing draft files
	with attachments. In these cases the actual filename is sanitized
	but the attachment name is preserved in d_filename.

2016-11-07 18:10 -0800  Damien Riegel  <damien.riegel@gmail.com>  (82e566d393cf)

	* OPS, compose.c, functions.h: compose: add operation to rename an
	attachment

	As opposed to rename-file, which actually renames the underlying
	file of the attachment, rename-attachment puts a value in
	d_filename, which is used in the Content-Disposition header.

2016-11-07 18:06 -0800  Damien Riegel  <damien.riegel@gmail.com>  (a9e7402af4de)

	* init.h, recvattach.c: attach_format: add new %F placeholder

	This new placeholder allows to print the attachment name as it will
	be seen on the recipient side.

2016-11-03 15:49 -0700  Kevin McCarthy  <kevin@8t8.us>  (45023e44c92c)

	* mutt.h: Define PATH_MAX, it's missing on the GNU Hurd. (closes
	#3815)

	I believe this patch originally came from Debian.

	Modified based on a suggestion from Fabian Groffen.

2016-11-03 10:17 +0100  Vincent Lefevre  <vincent@vinc17.net>  (ce07aa118214)

	* configure.ac: Fixed issue from changeset 4da647a80c55. (closes
	#3892)

	Shell variables cannot be used in the first argument of
	AC_CHECK_HEADERS.

2016-11-02 18:54 -0700  Kevin McCarthy  <kevin@8t8.us>  (0e0d54b5a384)

	* date.c: Attempt to silence a clang range warning. (closes #3891)

	When TM_YEAR_MAX > INT_MAX, clang complains the comparison is always
	false.

	Note that this is really a compiler bug, which was fixed by gcc 9
	years ago. https://gcc.gnu.org/bugzilla/show_bug.cgi?id=12963

	Thanks to Vincent Lefèvre for the suggested fix and the gcc bug
	reference.

2016-11-02 18:27 -0700  Kevin McCarthy  <kevin@8t8.us>  (4da647a80c55)

	* configure.ac: Make ncurses and ncursesw header checking the same.

	Previously, ncurses.h wasn't searched for directly in the include
	directory for ncursesw.

	Also, fix a test in case $withval is empty.

	Thanks to Sylvain Bertrand for the original patch.

2016-10-31 20:30 -0700  Kevin McCarthy  <kevin@8t8.us>  (b45bfce1bb0e)

	* Makefile.am, configure.ac: Add a --disable-doc configuration option.

	This allows mutt to be built without the documentation.

	Thanks to Sylvain Bertrand for the original patch.

2016-10-23 15:11 -0700  Kevin McCarthy  <kevin@8t8.us>  (f46ed1718cb4)

	* attach.c, recvattach.c: Perform charset conversion on text
	attachments when piping. (closes #3773) (see #3886)

	When piping a text attachment, there is no reliable way to know the
	charset used.

	Vincent Lefèvre says: It was decided in the past that when there is
	no information on the charset in a transmission to an external
	command (e.g. as for mail composing), texts are expected to be
	transmitted in the local charset.

	Add a MUTT_CHARSET flag to enable charset conversion on text
	attachments for both when $attach_split is set and unset.

2016-10-23 14:49 -0700  Kevin McCarthy  <kevin@8t8.us>  (688ecc6d5a8d)

	* pager.c: merge stable

2016-10-23 14:46 -0700  Kevin McCarthy  <kevin@8t8.us>  (c6704c7f8e23)

	* pager.c: Fix pager segfault when lineInfo.chunks overflows. (closes
	#3888)

	The reporter had an html attachment with extremely long lines,
	combined with a color pattern of "color body default default ." This
	overflowed the lineInfo.chunks, causing a segfault.

	Abort the body color patterns if this happens.

2016-10-23 13:47 -0700  Kevin McCarthy  <kevin@8t8.us>  (40cf141c7383)

	* merge stable

2016-10-23 13:43 -0700  Kevin McCarthy  <kevin@8t8.us>  (a8203b4463c1)

	* date.c: Prevent an integer overflow in mutt_mktime() (closes #3880)

	Check to make sure the year passed in isn't bigger than can be
	represented using time_t on the platform.

	Also add a (time_t) cast to an intermediate "years * 365"
	calculation to prevent an overflow there.

	Thanks to TAKAHASHI Tamotsu for his patch, and to Vincent Lefèvre
	for his improvement. I merely took their code and commited it.

2016-10-20 10:30 +0200  Vincent Lefevre  <vincent@vinc17.net>  (8e270c698bfb)

	* po/fr.po: Updated French translation.

2016-10-19 13:21 -0700  Kevin McCarthy  <kevin@8t8.us>  (77de473642cb)

	* OPS, curs_main.c, functions.h, protos.h, thread.c: Add root-message
	function to jump to root message in thread.

	This seems like a useful feature that was brought up for discussion
	on mutt-users. Proposed solutions involved collapsing/uncollapsing
	threads, but it's not hard to modify the mutt_parent_message()
	function to return the root instead.

2016-10-17 11:23 -0700  Kevin McCarthy  <kevin@8t8.us>  (1acabd35d9a3)

	* crypt-gpgme.c: merge stable

2016-10-17 11:22 -0700  Kevin McCarthy  <kevin@8t8.us>  (113b73b0b616)

	* crypt-gpgme.c: Actually fix gpgme segfault in
	create_recipient_set().

	Changeset 6e44bfa16096 did not fix the segv. (Sorry, I made the fix
	based off a report on IRC but didn't trigger the segv myself: it was
	caused by an out-of-tree patch).

	The actual problem was that the rset was only resized on a
	successful gpgme_get_key(). However, on error, the array still needs
	to be NULL-terminated before calling free_recipient_set().

	Move the resize so it always takes place. This obviates the need for
	the NULL check added in 6e44bfa16096.

2016-10-16 15:44 -0700  Kevin McCarthy  <kevin@8t8.us>  (18c3db1aa8c4)

	* sidebar.c: Change sidebar to only match $folder prefix on a
	$sidebar_divider_char. (closes #3887)

	The reporter had a $spoolfile of ~/Mailbox and a $folder of ~/Mail.
	The sidebar was truncating the spoolfile to "ox" because it only
	looked at a substring prefix match.

2016-10-16 15:14 -0700  Kevin McCarthy  <kevin@8t8.us>  (7e174b2fcbe1)

	* merge stable

2016-10-16 15:12 -0700  Kevin McCarthy  <kevin@8t8.us>  (783dce6dfcd4)

	* sidebar.c: Use mutt_strlen and mutt_strncmp in sidebar.c.

	This prevents a segv if folder is unset.

2016-10-16 14:17 -0700  Kevin McCarthy  <kevin@8t8.us>  (023181b27fb6)

	* crypt-gpgme.c: merge stable

2016-10-16 14:16 -0700  Kevin McCarthy  <kevin@8t8.us>  (6e44bfa16096)

	* crypt-gpgme.c: Fix gpgme segfault in create_recipient_set().

	If gpgme_get_key() errors on the first key, the rset will not be
	allocated yet. Attempting to null-terminate (and then free) the
	array causes a segfault.

2016-10-15 14:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (2a6bfdb9f869)

	* url.c: Allow IPv6 literal addresses in URLs. (closes #3681)

	RFCs 2732 and 3986 specify a literal IPv6 address be surrounded by
	"[]".

	This patch removes the "[]" delimiters when parsing the URL, but
	adds them back in url_ciss_tostring() if the host name contains a
	':'.

	Thanks to Evgeni Golov for the original patch.

2016-10-12 18:10 -0700  Kevin McCarthy  <kevin@8t8.us>  (a3e35631b503)

	* init.h, sendlib.c: Handle presence of '--' delimiter in $sendmail.
	(closes #3168)

	If the delimiter exists, additional sendmail flags will be inserted
	before the delimiter. Any arguments after the delimiter will be
	preserved as recipients.

2016-10-11 19:42 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (7c0995a61268)

	* crypt-gpgme.c: Fix GPGME signature zero timestamp and locale
	awareness issues. (closes #3882)

	GPGME signature information has two minor problems.

	[-- Begin signature information --]
	*BAD* signature from: Name <user@example.com> aka: Name
	<user@example.org> created: Thu Jan 1 09:00:00 1970 [-- End
	signature information --]

	First, the created timestamp is incorrect when the message is not
	verified successfully.

	Second, as the code itself has some "TODO" comments, "aka" and
	"created" lines are not properly-aligned when LC_MESSAGES !=
	English.

2016-10-10 18:09 -0700  Kevin McCarthy  <kevin@8t8.us>  (33d16ccba4cf)

	* pop_auth.c: Add a few explanatory comments to pop_auth_sasl(). (see
	#3862)

2016-10-10 16:33 -0700    <g1pi@libero.it>  (a9764761b692)

	* pop_auth.c: Fix POP3 SASL authentication mechanism DIGEST-MD5.
	(closes #3862)

	sasl_client_step() returns SASL_OK after the fourth step: server
	auth confirmation. However, the protocol requires the client send
	one more blank line to the server, to which the server then replies
	with "+OK". See https://tools.ietf.org/html/rfc5034#section-6.

	The code currently only sends a final response if sasl_client_step
	returns data to send. Change it to always send a final client
	message after the SASL_OK.

2016-10-08 13:24 -0700  Kevin McCarthy  <kevin@8t8.us>  (4bcc3a12cc4d)

	* po/cs.po: merge stable

2016-10-08 12:57 -0700  Kevin McCarthy  <kevin@8t8.us>  (58f4b38312bf)

	* .hgsigs: mutt-1.7.1 signed

2016-10-08 12:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (e8d9ae6f41d3)

	* .hgtags: Added tag mutt-1-7-1-rel for changeset 0ce5f9bff1fd

2016-10-08 12:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (0ce5f9bff1fd)

	* ChangeLog, UPDATING, VERSION, po/bg.po, po/ca.po, po/cs.po,
	po/da.po, po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po,
	po/eu.po, po/fr.po, po/ga.po, po/gl.po, po/hu.po, po/id.po,
	po/it.po, po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po,
	po/pt_BR.po, po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po,
	po/zh_CN.po, po/zh_TW.po: automatic post-release commit for
	mutt-1.7.1

2016-10-06 12:35 -0700  Kevin McCarthy  <kevin@8t8.us>  (323e3d6e5e4c)

	* imap/imap.c: Mark IMAP fast-trash'ed messages as read before
	copying. (see #3860)

	Regular copying/saving messages in mutt via a UID COPY first calls
	imap_sync_message(). However that function is designed to sync all
	flags (including deleted), and so isn't useful for the fast-trash
	code.

	As an easier solution, instead add a UID STORE to set \\Seen for the
	same msgset as the trashed messages.

2016-10-05 15:04 -0700  Petr Pisar  <petr.pisar@atlas.cz>  (227211e0e84c)

	* po/cs.po: Updated Czech translation.

2016-10-04 11:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (8262503d1991)

	* muttlib.c: merge stable

2016-10-04 11:13 -0700  Kevin McCarthy  <kevin@8t8.us>  (5c5848dfa4ea)

	* muttlib.c: Preserve forwarded attachment names in d_filename.

	When forwarding an attachment with an non-ascii name,
	mutt_copy_body() mangles the filename when calling mutt_adv_mktemp.
	Preserve the original attachment filename in d_filename.

	Remove the double copy of b->filename, which is a memory leak.

2016-10-01 16:21 -0700  Kevin McCarthy  <kevin@8t8.us>  (8963e77577ad)

	* crypt-gpgme.c: Ensure signatures exist when verifying
	multipart/signed emails. (closes #3881).

	TAKAHASHI Tamotsu reported that when gpg2 isn't in PATH, the
	gpgme_op_verify() won't return an error, but instead will return a
	result with no signatures.

	verify_one() was only returning an error if a signature actually
	failed, so in this case the function was defaulting to returning
	success.

	Other callers of gpgme_op_verify() check to make sure the
	result->signatures exist before processing signatures. Add a check
	for verify_one() too.

2016-10-01 13:58 -0700  Kevin McCarthy  <kevin@8t8.us>  (e0c0a2820b8b)

	* url.c: RFC2047-decode mailto url headers after RFC2822 parsing.
	(closes #3879)

	Commit 55819a7e6169 performed the RFC2047 decode before the parsing.
	This works okay for headers such as subject, but for others such as
	address fields could lead to parsing errors.

	Change to perform a decode on envelope headers after all the calls
	to mutt_parse_rfc822_line(), using the same list of fields as
	mutt_read_rfc822_header().

	Change the do_2047 parameter of mutt_read_rfc822_line() to true, so
	that user headers are decoded if needed.

2016-09-27 18:15 -0700  Kevin McCarthy  <kevin@8t8.us>  (55819a7e6169)

	* url.c: RFC2047-decode mailto header values. (closes #3879)

	RFC 6068 specifies that the header values (with the exception of
	body) may contain RFC 2047-encoded values.

2016-09-25 13:26 -0700  Kevin McCarthy  <kevin@8t8.us>  (efb8c7808715)

	* merge stable

2016-09-25 13:11 -0700  Kevin McCarthy  <kevin@8t8.us>  (586dad383893)

	* parse.c: Reset invalid parsed received dates to 0. (closes #3878)

	The actual problem in the ticket would be solved by d3f31cf9239e
	(see #3798). However there is still the bug that Mutt considers a
	(hdr->received != 0) to be set and usable, despite not checking the
	return value of mutt_parse_date().

	Change mutt_read_rfc822_header() to unset an invalid received value
	back to 0. We don't do this inside mutt_read_rfc822_line() because
	that would cause the next received line to be parsed.

2016-09-23 16:07 -0700  Kevin McCarthy  <kevin@8t8.us>  (ca8a3451b707)

	* pager.c: Clear pager position when toggling headers.

	It doesn't make sense to try to preserve the pager position when
	toggling headers: the purpose of toggling headers is to see the
	headers in full or weeded state. So, reset the position back to the
	top.

2016-09-22 14:07 -0700  Kevin McCarthy  <kevin@8t8.us>  (87911ba95dae)

	* curs_lib.c, keymap.c: Don't abort the menu editor on sigwinch.
	(closes #3875)

	getch() will return ERR on sigwinch when timeout() is called with a
	positive value. mutt_getch() will therefore return ch==-2 for both a
	timeout and a sigwinch in this case.

	The imap code in km_dokey() exits out of the ImapKeepalive loop for
	a SigWinch, and was skipping past the check for MENU_EDITOR and
	tmp.ch==-2. Move this check below the gotkey: label so the
	ImapKeepalive loop behaves the same as the Timeout code.

	Thanks to nicop for reporting the problem and for the initial patch!

2016-09-21 18:11 -0700  Kevin McCarthy  <kevin@8t8.us>  (f2ae8a2d6e1b)

	* merge stable

2016-09-21 18:10 -0700  Antonio Radici  <antonio@dyne.org>  (ee0fe5834195)

	* po/de.po, po/es.po, po/it.po: Mark some gpgme pgp menu keybinding
	translations as fuzzy. (closes #3874)

	Some translations for crypt-gpgme.c are marked as fuzzy but the
	keybindings attached to these translations are not, this creates
	confusions for the users who see the english message but have the
	keybindings for a message in their own language available.

	As long as the translations are fuzzy, the keybindings should stay
	fuzzy.

2016-09-21 17:52 -0700  Kevin McCarthy  <kevin@8t8.us>  (ccd543466b9f)

	* merge stable

2016-09-21 22:51 +0200  Kevin McCarthy  <kevin@8t8.us>  (9f6e08ba6ff3)

	* mx.c: Check for NULL mx_ops in mx.c

	Eike Rathke reported this happening when in an IMAP index view the
	underlying connection was terminated, ctx->mx_ops was NULL and thus
	accessing ctx->mx_ops->check segfaulted.

	Thanks also to Eike Rathke for the initial patch, for which I
	expanded the checks to other functions.

2016-09-20 15:51 -0700  Antonio Radici  <antonio@dyne.org>  (405cbc43c3ac)

	* crypt-gpgme.c: Use body color for gpgme output. (closes #3872)

	When switching from pgp_* commands to crypt_use_gpgme=yes, Peter
	Colberg noticed that the output was colored 'brightyellow'.

	The issue is that crypt-gpgme.c uses state_attach_puts in various
	places where it should use state_puts to maintain compatibility with
	the previous behavior in pgp.c.

2016-09-20 14:01 -0700  Kevin McCarthy  <kevin@8t8.us>  (c41562a8118b)

	* crypt-gpgme.c: merge stable

2016-09-20 13:58 -0700  Antonio Radici  <antonio@dyne.org>  (8ed017079800)

	* crypt-gpgme.c: Fix gpgme segfault when querying candidates with a
	'+' in the address. (closes #3873)

	list_to_pattern() was not allocating enough space for the '+' to
	'%2B' transformation.

2016-09-07 20:00 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (821022f6c78c)

	* configure.ac, mutt_ssl.c: Fix openssl 1.1 compilation issues.
	(closes #3870)

	With these changes, Mutt will no longer compile for versions less
	than 0.9.6.

2016-09-07 19:12 -0700  Kevin McCarthy  <kevin@8t8.us>  (a60f7d09c386)

	* doc/manual.xml.head, init.h: Add unsidebar_whitelist command.

	This pairs with the sidebar_whitelist command, and operates like the
	other "un..." list commands.

2016-09-07 18:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (485ac2438e0f)

	* doc/manual.xml.head, init.h: merge stable

2016-09-07 18:54 -0700  Kevin McCarthy  <kevin@8t8.us>  (a431c7618def)

	* doc/manual.xml.head, init.h: Fix sidebar documentation a bit.
	(closes #3859)

	Sidebar_whitelist is a command, not a variable. Also add a blurb
	about what it does.

	Fix the sort order for $sidebar_divider_char and
	$sidebar_delim_chars.

2016-09-05 19:04 -0700  Kevin McCarthy  <kevin@8t8.us>  (3ae51b075826)

	* merge stable

2016-09-05 18:50 -0700  Kevin McCarthy  <kevin@8t8.us>  (cd127a968399)

	* contrib/Makefile.am: Add missing sidebar contrib sample files to
	dist tarball.

	I previously added the files, but neglected to add them to the
	contrib/Makefile.am file.

	Thanks to isdtor for pointing out the problem and for the original
	patch.

2016-09-05 12:44 -0700  Kevin McCarthy  <kevin@8t8.us>  (2b9689daf902)

	* merge stable

2016-09-05 12:35 -0700  Kevin McCarthy  <kevin@8t8.us>  (bb25613ce8a4)

	* getdomain.c: Stub out getdnsdomainname() unless HAVE_GETADDRINFO.

	It seems unlikely there are systems without it (given that this
	mistake has been in since 1.6.0), but for correctness we should stub
	out the function for those without it.

2016-09-05 12:22 -0700  Kevin McCarthy  <kevin@8t8.us>  (90c1b756d87d)

	* configure.ac: Autoconf: always check for getaddrinfo().

	The getdnsdomainname() function introduced in 1.6.0 uses
	getaddrinfo().

	Pull the dependency checks for libnsl, libsocket, and getaddrinfo()
	outside of the "need_socket" block, so they are always checked for.

2016-09-04 18:57 -0700  Kevin McCarthy  <kevin@8t8.us>  (8d7f4bea8820)

	* merge stable

2016-09-04 18:50 -0700  Guilhem Moulin  <guilhem@guilhem.org>  (b082bcd5d5e2)

	* pgppubring.c: Fix pgpring reporting of DSA and Elgamal key lengths.
	(closes #3867)

	Patch provided by Guilhem Moulin from an original idea of Fabrizio
	Tarizzo.

	The key length is always the length of the first MPI for RSA, DSA,
	and Elgamal.

2016-09-03 16:19 -0700  Kevin McCarthy  <kevin@8t8.us>  (a9757cff92da)

	* postpone.c: Preserve message-id and mft headers for recalled
	messages. (closes #3081)

	Git patch creates a patch series mailbox, including the Message-ID.
	Using this as draft files was removing the Message-ID, and thus
	breaking the threaded structure.

	The second part of the ticket has already been addressed by
	95a2230ef889 (for ticket 3653).

	Thanks to Chris Webb for the original patch.

2016-09-02 19:33 -0700  Kevin McCarthy  <kevin@8t8.us>  (7a53de8c9251)

	* doc/manual.xml.head: merge stable

2016-09-02 19:32 -0700  Kevin McCarthy  <kevin@8t8.us>  (ba5d900a90db)

	* doc/manual.xml.head, pattern.c: Disable ~X when message scoring.
	(closes #3861)

	mutt_score_message() purposely passes a NULL context to
	mutt_pattern_exec(). The idea was to block slow patterns, and the
	scoring documentation notes this by saying:

	 "For efficiency reasons, patterns which scan information not
	available in the index, such as ~b, ~B or ~h, may not be used"

	~X needs the context to parse the messages (during message scoring
	at least), and thus isn't suitable for message scoring either.

	Block ~X from being used when the context is NULL. Add ~X to the
	list of patterns noted as unusable in the message scoring
	documentation.

2016-09-02 16:24 -0700  Kevin McCarthy  <kevin@8t8.us>  (95e9357ca697)

	* browser.c: merge stable

2016-09-02 16:20 -0700  Kevin McCarthy  <kevin@8t8.us>  (eef1e8abc46f)

	* browser.c: Increase date buffer size for $folder_format. (closes
	#3863)

	The buffer size of 16 was sufficient to hold the %d format, but not
	for using %D. Change to use a SHORT_STRING.

	Thanks to Ian Zimmerman for the original patch, and to Antonio
	Radici for forwarding it on to us.

2016-08-30 18:43 -0700  David Champion  <dgc@bikeshed.us>  (efccbd9bc6f6)

	* mutt_ssl.c: Redraw screen after an SSL cert prompt

2016-08-30 16:30 -0700  David Champion  <dgc@bikeshed.us>  (121fa0badf9e)

	* muttlib.c, send.c: Moves mutt_copy_list to muttlib.c, where it
	belongs.

2016-08-30 16:11 -0700  David Champion  <dgc@bikeshed.us>  (ab403fd7e600)

	* sort.h: Update a confusing and obsolete comment.

	This 2004 comment in sort.h predicted what has recently come to
	pass, so I'm reframing it just to document for future devs what's
	going on with this oddball flag.

2016-08-23 13:32 +0200  Vincent Lefevre  <vincent@vinc17.net>  (768b430f3dca)

	* mbyte.c: Filter out zero width no-break space (U+FEFF).

2016-08-22 20:34 -0700  Kevin McCarthy  <kevin@8t8.us>  (d500c2fd861d)

	* edit.c, send.c: Add missing include <locale.h> to send.c and edit.c.

2016-08-22 20:04 -0700  Kevin McCarthy  <kevin@8t8.us>  (0ae083fb719c)

	* doc/manual.xml.head, edit.c, globals.h, init.h, send.c: Add
	$attribution_locale configuration variable.

	$attribution_locale replaces the just removed $locale, but is only
	used for customizing the LC_TIME locale used for dates in
	$attribution.

	This could be useful in conjunction with folder or send-hooks for
	recipients in different locales.

2016-08-22 20:04 -0700  Kevin McCarthy  <kevin@8t8.us>  (d1ddea6099cd)

	* browser.c, crypt-gpgme.c, crypt.c, globals.h, hdrline.c, init.h,
	main.c, pgpkey.c: Remove the $locale configuration variable.

	$locale was only used to set the LC_TIME locale. Unfortunately, Mutt
	previously defaulted to using "C". This overrode the user's locale
	setting and forced them to re-specify their locale inside their
	.muttrc.

	Remove $locale and instead use the locale specified by the
	environment. Mutt still allows "C locale" dates by using a leading
	"!" in $date_format, ${}, etc.

	Another use of $locale was to customize attribution dates using
	hooks. The next commit will introduce $attribution_locale, which can
	be used for this instead.

	Thanks to Derek Martin for the original patch!

2016-08-17 20:17 -0700  Kevin McCarthy  <kevin@8t8.us>  (328e1a32034b)

	* sys_socket.h: merge default into stable

2016-08-17 20:14 -0700  Kevin McCarthy  <kevin@8t8.us>  (e5fcfc5f9c2e)

	* .hgsigs: mutt-1.7.0 signed

2016-08-17 20:12 -0700  Kevin McCarthy  <kevin@8t8.us>  (be1a70b1c080)

	* .hgtags: Added tag mutt-1-7-rel for changeset a4e83f60e42f

2016-08-17 20:12 -0700  Kevin McCarthy  <kevin@8t8.us>  (a4e83f60e42f)

	* ChangeLog, UPDATING, VERSION, po/bg.po, po/ca.po, po/cs.po,
	po/da.po, po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po,
	po/eu.po, po/fr.po, po/ga.po, po/gl.po, po/hu.po, po/id.po,
	po/it.po, po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po,
	po/pt_BR.po, po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po,
	po/zh_CN.po, po/zh_TW.po: automatic post-release commit for
	mutt-1.7.0

2016-11-26 00:57 +0100  Vincent Lefevre  <vincent@vinc17.net>  (a0a970530a8b)

	* crypt-gpgme.c, crypt-gpgme.h, crypt-mod-pgp-gpgme.c: Fix build
	failure with GPGME 1.8: do not steal the gpgme_ prefix.

2016-11-19 19:35 -0800  Kevin McCarthy  <kevin@8t8.us>  (10c4761cea89)

	* mutt_ssl.c: More openssl1.1 fixes: remove uses of X509->name in
	debugging. (closes #3870)

	X509->name was a shortcut for the longer name = X509_NAME_oneline
	(X509_get_subject_name (cert), buf, sizeof (buf)); invocation.
	Change the debugging to print the cert name and chain names in the
	ssl_check_certificate() loop instead.

2016-09-07 20:00 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (2c1d79d3edd5)

	* configure.ac, mutt_ssl.c: Fix openssl 1.1 compilation issues.
	(closes #3870)

	With these changes, Mutt will no longer compile for versions less
	than 0.9.6.

2016-10-23 14:46 -0700  Kevin McCarthy  <kevin@8t8.us>  (c6704c7f8e23)

	* pager.c: Fix pager segfault when lineInfo.chunks overflows. (closes
	#3888)

	The reporter had an html attachment with extremely long lines,
	combined with a color pattern of "color body default default ." This
	overflowed the lineInfo.chunks, causing a segfault.

	Abort the body color patterns if this happens.

2016-10-23 13:43 -0700  Kevin McCarthy  <kevin@8t8.us>  (a8203b4463c1)

	* date.c: Prevent an integer overflow in mutt_mktime() (closes #3880)

	Check to make sure the year passed in isn't bigger than can be
	represented using time_t on the platform.

	Also add a (time_t) cast to an intermediate "years * 365"
	calculation to prevent an overflow there.

	Thanks to TAKAHASHI Tamotsu for his patch, and to Vincent Lefèvre
	for his improvement. I merely took their code and commited it.

2016-10-17 11:22 -0700  Kevin McCarthy  <kevin@8t8.us>  (113b73b0b616)

	* crypt-gpgme.c: Actually fix gpgme segfault in
	create_recipient_set().

	Changeset 6e44bfa16096 did not fix the segv. (Sorry, I made the fix
	based off a report on IRC but didn't trigger the segv myself: it was
	caused by an out-of-tree patch).

	The actual problem was that the rset was only resized on a
	successful gpgme_get_key(). However, on error, the array still needs
	to be NULL-terminated before calling free_recipient_set().

	Move the resize so it always takes place. This obviates the need for
	the NULL check added in 6e44bfa16096.

2016-10-16 15:12 -0700  Kevin McCarthy  <kevin@8t8.us>  (783dce6dfcd4)

	* sidebar.c: Use mutt_strlen and mutt_strncmp in sidebar.c.

	This prevents a segv if folder is unset.

2016-10-16 14:16 -0700  Kevin McCarthy  <kevin@8t8.us>  (6e44bfa16096)

	* crypt-gpgme.c: Fix gpgme segfault in create_recipient_set().

	If gpgme_get_key() errors on the first key, the rset will not be
	allocated yet. Attempting to null-terminate (and then free) the
	array causes a segfault.

2016-10-08 12:57 -0700  Kevin McCarthy  <kevin@8t8.us>  (58f4b38312bf)

	* .hgsigs: mutt-1.7.1 signed

2016-10-08 12:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (e8d9ae6f41d3)

	* .hgtags: Added tag mutt-1-7-1-rel for changeset 0ce5f9bff1fd

2016-10-08 12:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (0ce5f9bff1fd)

	* ChangeLog, UPDATING, VERSION, po/bg.po, po/ca.po, po/cs.po,
	po/da.po, po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po,
	po/eu.po, po/fr.po, po/ga.po, po/gl.po, po/hu.po, po/id.po,
	po/it.po, po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po,
	po/pt_BR.po, po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po,
	po/zh_CN.po, po/zh_TW.po: automatic post-release commit for
	mutt-1.7.1

2016-10-04 11:13 -0700  Kevin McCarthy  <kevin@8t8.us>  (5c5848dfa4ea)

	* muttlib.c: Preserve forwarded attachment names in d_filename.

	When forwarding an attachment with an non-ascii name,
	mutt_copy_body() mangles the filename when calling mutt_adv_mktemp.
	Preserve the original attachment filename in d_filename.

	Remove the double copy of b->filename, which is a memory leak.

2016-09-25 13:11 -0700  Kevin McCarthy  <kevin@8t8.us>  (586dad383893)

	* parse.c: Reset invalid parsed received dates to 0. (closes #3878)

	The actual problem in the ticket would be solved by d3f31cf9239e
	(see #3798). However there is still the bug that Mutt considers a
	(hdr->received != 0) to be set and usable, despite not checking the
	return value of mutt_parse_date().

	Change mutt_read_rfc822_header() to unset an invalid received value
	back to 0. We don't do this inside mutt_read_rfc822_line() because
	that would cause the next received line to be parsed.

2016-09-21 18:10 -0700  Antonio Radici  <antonio@dyne.org>  (ee0fe5834195)

	* po/de.po, po/es.po, po/it.po: Mark some gpgme pgp menu keybinding
	translations as fuzzy. (closes #3874)

	Some translations for crypt-gpgme.c are marked as fuzzy but the
	keybindings attached to these translations are not, this creates
	confusions for the users who see the english message but have the
	keybindings for a message in their own language available.

	As long as the translations are fuzzy, the keybindings should stay
	fuzzy.

2016-09-21 22:51 +0200  Kevin McCarthy  <kevin@8t8.us>  (9f6e08ba6ff3)

	* mx.c: Check for NULL mx_ops in mx.c

	Eike Rathke reported this happening when in an IMAP index view the
	underlying connection was terminated, ctx->mx_ops was NULL and thus
	accessing ctx->mx_ops->check segfaulted.

	Thanks also to Eike Rathke for the initial patch, for which I
	expanded the checks to other functions.

2016-09-20 13:58 -0700  Antonio Radici  <antonio@dyne.org>  (8ed017079800)

	* crypt-gpgme.c: Fix gpgme segfault when querying candidates with a
	'+' in the address. (closes #3873)

	list_to_pattern() was not allocating enough space for the '+' to
	'%2B' transformation.

2016-09-07 18:54 -0700  Kevin McCarthy  <kevin@8t8.us>  (a431c7618def)

	* doc/manual.xml.head, init.h: Fix sidebar documentation a bit.
	(closes #3859)

	Sidebar_whitelist is a command, not a variable. Also add a blurb
	about what it does.

	Fix the sort order for $sidebar_divider_char and
	$sidebar_delim_chars.

2016-09-05 18:50 -0700  Kevin McCarthy  <kevin@8t8.us>  (cd127a968399)

	* contrib/Makefile.am: Add missing sidebar contrib sample files to
	dist tarball.

	I previously added the files, but neglected to add them to the
	contrib/Makefile.am file.

	Thanks to isdtor for pointing out the problem and for the original
	patch.

2016-09-05 12:35 -0700  Kevin McCarthy  <kevin@8t8.us>  (bb25613ce8a4)

	* getdomain.c: Stub out getdnsdomainname() unless HAVE_GETADDRINFO.

	It seems unlikely there are systems without it (given that this
	mistake has been in since 1.6.0), but for correctness we should stub
	out the function for those without it.

2016-09-05 12:22 -0700  Kevin McCarthy  <kevin@8t8.us>  (90c1b756d87d)

	* configure.ac: Autoconf: always check for getaddrinfo().

	The getdnsdomainname() function introduced in 1.6.0 uses
	getaddrinfo().

	Pull the dependency checks for libnsl, libsocket, and getaddrinfo()
	outside of the "need_socket" block, so they are always checked for.

2016-09-04 18:50 -0700  Guilhem Moulin  <guilhem@guilhem.org>  (b082bcd5d5e2)

	* pgppubring.c: Fix pgpring reporting of DSA and Elgamal key lengths.
	(closes #3867)

	Patch provided by Guilhem Moulin from an original idea of Fabrizio
	Tarizzo.

	The key length is always the length of the first MPI for RSA, DSA,
	and Elgamal.

2016-09-02 19:32 -0700  Kevin McCarthy  <kevin@8t8.us>  (ba5d900a90db)

	* doc/manual.xml.head, pattern.c: Disable ~X when message scoring.
	(closes #3861)

	mutt_score_message() purposely passes a NULL context to
	mutt_pattern_exec(). The idea was to block slow patterns, and the
	scoring documentation notes this by saying:

	 "For efficiency reasons, patterns which scan information not
	available in the index, such as ~b, ~B or ~h, may not be used"

	~X needs the context to parse the messages (during message scoring
	at least), and thus isn't suitable for message scoring either.

	Block ~X from being used when the context is NULL. Add ~X to the
	list of patterns noted as unusable in the message scoring
	documentation.

2016-09-02 16:20 -0700  Kevin McCarthy  <kevin@8t8.us>  (eef1e8abc46f)

	* browser.c: Increase date buffer size for $folder_format. (closes
	#3863)

	The buffer size of 16 was sufficient to hold the %d format, but not
	for using %D. Change to use a SHORT_STRING.

	Thanks to Ian Zimmerman for the original patch, and to Antonio
	Radici for forwarding it on to us.

2016-08-17 20:17 -0700  Kevin McCarthy  <kevin@8t8.us>  (328e1a32034b)

	* sys_socket.h: merge default into stable

2016-08-17 20:14 -0700  Kevin McCarthy  <kevin@8t8.us>  (e5fcfc5f9c2e)

	* .hgsigs: mutt-1.7.0 signed

2016-08-17 20:12 -0700  Kevin McCarthy  <kevin@8t8.us>  (be1a70b1c080)

	* .hgtags: Added tag mutt-1-7-rel for changeset a4e83f60e42f

2016-08-17 20:12 -0700  Kevin McCarthy  <kevin@8t8.us>  (a4e83f60e42f)

	* ChangeLog, UPDATING, VERSION, po/bg.po, po/ca.po, po/cs.po,
	po/da.po, po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po,
	po/eu.po, po/fr.po, po/ga.po, po/gl.po, po/hu.po, po/id.po,
	po/it.po, po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po,
	po/pt_BR.po, po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po,
	po/zh_CN.po, po/zh_TW.po: automatic post-release commit for
	mutt-1.7.0

2016-08-17 18:07 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (c513c311026f)

	* po/ja.po: Updated Japanese translation.

2016-08-15 10:17 -0700  Morten Bo Johansen  <morten.bo.johansen@gmail.com>  (83d0f5383325)

	* po/da.po: Updated Danish translation.

2016-08-15 09:15 -0700  Benno Schulenberg  <i18n@benno.vertaalt.nl>  (f02122b5eeeb)

	* po/eo.po: Updated Esperanto translation.

2016-08-15 09:09 -0700  Benno Schulenberg  <i18n@benno.vertaalt.nl>  (7e54c1fe55b4)

	* po/nl.po: Updated Dutch translation.

2016-08-10 09:29 -0700  Ivan Vilata i Balaguer  <ivan@selidor.net>  (2de6949a0f08)

	* po/ca.po: Updated Catalan translation.

2016-08-10 02:20 +0200  Vincent Lefevre  <vincent@vinc17.net>  (53b4b412dd79)

	* po/fr.po: Updated French translation.

2016-08-09 14:34 -0700  Vsevolod Volkov  <vvv@mutt.org.ua>  (8847b913432a)

	* po/ru.po: Updated Russian translation.

2016-08-09 14:32 -0700  Vsevolod Volkov  <vvv@mutt.org.ua>  (08251fb01f90)

	* po/uk.po: Updated Ukrainian translation.

2016-08-08 13:13 -0700  Kevin McCarthy  <kevin@8t8.us>  (7abc19ad2d10)

	* curs_main.c, pager.c, protos.h: Clear pager position upon returning
	to the index menu.

	This fixes a bug where opening a message sometimes shows it scrolled
	down.

	The easiest way to trigger this is to open a long message in a
	mailbox with no new messages, scroll down, hit <next-new-then-
	unread> and then reopen the message. The pager will "remember" the
	position and scroll down. If you simply exit the message and re-
	enter it, the position is not saved.

	More annoyingly, once in a very great while I will open a new
	message and have the message scrolled down partway. I believe this
	is due to OldHdr happening to point to the same address as the
	Header of the new message.

	This is somewhat easily triggered on a mailbox with one message,
	which you open, scroll down in, hit <next-new-then-unread> to exit,
	and then delete/sync. In another mutt instance, copy the same
	messsage back to the mailbox, then open the message in the original
	mutt instance. At least some of the time, the OldHdr pointer matches
	the new message, and so it opens scrolled down.

	This patch solves the problem by clearing the pager position once
	all redirections through the index menu are done.

2016-08-06 23:35 +0200  Vincent Lefevre  <vincent@vinc17.net>  (15c4c16bed07)

	* po/fr.po: Updated French translation.

2016-08-05 14:33 -0700  Kevin McCarthy  <kevin@8t8.us>  (108ad5dcf194)

	* rfc2047.c: Remove nonsensical size check in mutt_choose_charset()

	The charsets parameter is being tokenized by the : delimeter.

	The checks against ENCWORD_LEN_MAX and ENCWORD_LEN_MIN make no
	sense, and appear to be the result of a large merge a very long time
	ago (changeset cb27682966d5).

	I can only guess where this check was supposed to be, but it
	certainly doesn't belong here.

2016-08-05 13:43 -0700  Kevin McCarthy  <kevin@8t8.us>  (a39c8bdca361)

	* rfc2047.c: Fix memory leak in mutt_choose_charset().

2016-08-05 13:43 -0700  Kevin McCarthy  <kevin@8t8.us>  (1ef5734f6593)

	* mh.c: Fix memleak in mh_read_dir() when sequence parsing fails.

2016-08-05 11:02 -0700  Kevin McCarthy  <kevin@8t8.us>  (f6b5f533f9ce)

	* COPYRIGHT, buffy.c, getdomain.c, globals.h, init.c, init.h, main.c,
	sidebar.c: Update copyright notices.

2016-08-02 19:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (f9a4023b86ad)

	* pop.c: Explicitly NULL unimplemented pop mx_ops functions.

	The struct initialization already does this for unlisted fields, but
	I'd rather be explicit about unimplemented operations.

2016-08-02 19:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (01541185e6f4)

	* mx.c: Use the ctx->mx_ops instead of calling mx_get_ops()

	With mx_open_mailbox_append() setting the ctx->mx_ops, all contexts
	should have mx_ops set.

	Remove calls to mx_get_ops() and instead directly use ctx->mx_ops.

2016-08-01 18:25 -0700  Kevin McCarthy  <kevin@8t8.us>  (e778db6e693c)

	* mailbox.h, mh.c, mx.c: Use a different flag in
	mx_open_mailbox_append() when mailbox doesn't exist.

	The previous commit re-used MUTT_NEWFOLDER, but the meaning of that
	flag is slightly different: it causes mbox to use fopen with mode
	"w", and is used only for the case of a brand-new mktemp-generated
	mbox.

	Setting it for other non-existing mbox files leads to a race
	condition between the stat and the fopen/lock, and so could end up
	truncating an existing mailbox created in-between!

	Create a different flag, MUTT_APPENDNEW to notify the open_append()
	functions that the mailbox doesn't exist. Change maildir and mh to
	check for that flag to create their directory structures.

2016-08-01 15:04 -0700  Kevin McCarthy  <kevin@8t8.us>  (2b9d6165b8b7)

	* imap/imap.c, imap/imap.h, mbox.c, mh.c, mutt.h, mx.c, pop.c: Convert
	mx_open_mailbox_append() to use ctx->mx_ops.

	Set the flag MUTT_NEWFOLDER to signal Maildir and MH to create the
	directory structure.

	Distribute the "open append" code to mbox, mh, and imap/imap.c.

	Set pop's mx_ops handler to NULL to signal it is not supported.

2016-07-31 18:42 -0700  Kevin McCarthy  <kevin@8t8.us>  (3834da0c024e)

	* mbox.c, mx.c: Move fflush and fsync to the mbox and mmdf commit_msg
	functions.

	The case statement in mx_commit_message() was previously distributed
	to the various ops->commit_msg() handlers, but the fflush and fsync
	were not.

2016-07-30 11:11 -0700  Kevin McCarthy  <kevin@8t8.us>  (27b77b5c97cf)

	* browser.c, browser.h, imap/browse.c, imap/imap.h, init.h: Add unread
	and total message count format strings to $folder_format.

	%n will show the unread message count in the mailbox. %m will show
	total message count. Except for %n with IMAP, these both require
	$mail_check_stats to be set, which puts these counts inside BUFFY.

	Since the imap_mboxcache is never fresher than the value in BUFFY,
	remove the special imap_mailbox_state() call. Instead, just update
	from the current Context for all mailboxes.

	Remove the logic that overrode the %N format string to show unread
	count for IMAP mailboxes. If they want to see unread count, they
	will have to change the $folder_format.

	Although it doesn't look possible to reuse browser_state.entry
	slots, change the OP_DELETE_MAILBOX to memset(0) the deleted slot.
	Then, we can change to logic in add_folder() so it doesn't need to
	zero-out unset values.

2016-07-25 12:25 -0700  Richard Russon  <rich@flatcap.org>  (4f4c258ab95c)

	* imap/command.c: Fix imap buffy msg_count overwrite issue.

	The sidebar updates the buffy->msg_count with the context. This can
	cause it to become out of sync with the imap_mboxcache.

	If the imap_buffy doesn't request MESSAGES, don't overwrite the
	buffy->msg_count with a stale value.

2016-07-22 14:55 -0700  Kevin McCarthy  <kevin@8t8.us>  (7b9763564598)

	* buffy.c, mx.c: Convert buffy_mbox_check() and trash_append() to use
	local context.

	buffy_mbox_check() was leaking the dynamically allocated context.
	Rather than add a call to free, just convert it to use a local
	variable.

	Make the same change to trash_append(), which doesn't need the
	dynamically allocated context either.

2016-07-21 14:00 -0700  Kevin McCarthy  <kevin@8t8.us>  (81ecc31f8197)

	* mx.c: Fix memleak in the new trash folder code.

	Free the context in opened in trash_append()

2016-07-21 12:49 +0200  Vincent Lefevre  <vincent@vinc17.net>  (2d1279b26e22)

	* po/fr.po: Updated French translation.

2016-07-20 16:29 -0700  Kevin McCarthy  <kevin@8t8.us>  (89b266256a85)

	* mbyte.c, mbyte.h, pager.c: Filter directional markers that corrupt
	the screen. (closes #3854)

	Thanks to Vincent Lefèvre for working on these utf-8 screen display
	issues.

2016-07-19 18:56 -0700  Anton Lindqvist  <anton.lindqvist@gmail.com>  (69bbe4da959f)

	* curs_lib.c: Fix arithmetic exception due to menu->pagelen being
	negative.

	Resizing the terminal window down to two lines when in an empty
	mailbox causes mutt to crash due to division by zero since menu->max
	equals 0 and menu->pagelen < 0 in status.c:205.

	Fixing the problem at this specific line felt wrong since I did
	notice menu->pagelen being negative. The pagelen is inherited from
	the rows calculation in mutt_reflow_windows. Since the number of
	lines can potentially be smaller than the accumulated number of rows
	acquired by the status, help and message window, make sure the
	calculation does not turn negative.

2016-07-17 19:31 -0700  Kevin McCarthy  <kevin@8t8.us>  (f1d5a884ffed)

	* imap/imap.c, imap/imap.h, mutt.h, mx.c: Add imap-fast-trash patch.

	This is based on the patch by Paul Miller.

	Modifications are:

	* Create a new flag, MUTT_TRASH for imap_make_msg_set(), rather than
	use MUTT_EXPIRED.

	* Change imap_make_msg_set(MUTT_TRASH) to only look at
	hdrs[n]->deleted && !hdrs[n]->purge, behaving like MUTT_TAG, rather
	than looking at the HEADER_DATA.

	* Reimplement imap_fast_trash() based on imap_copy_message(). It
	looks the old version was too, but it lacked handling of TRYCREATE
	and also queued the UID COPY but didn't exec it. (Presumably this
	happened in the subsequent sync).

	* Move the Context magic and mx_is_imap() checks outside of
	imap_fast_trash()

2016-07-17 19:31 -0700  Kevin McCarthy  <kevin@8t8.us>  (280f9b195192)

	* OPS, curs_main.c, functions.h, pager.c: Add purge-message patch.

	This is based on the patch by Cedric Duval. Modifications are:

	* Use the exising M_PURGE flag from the trash folder patch, rather
	than adding a separate flag.

	* Undelete operations are already handled by the trash folder patch.

2016-07-17 19:31 -0700  Kevin McCarthy  <kevin@8t8.us>  (20499921a4e5)

	* commands.c, curs_main.c, editmsg.c, flags.c, globals.h,
	imap/message.c, init.h, mbox.c, mutt.h, mx.c, pager.c, pattern.c,
	postpone.c: Add the trash folder patch.

	This is based on the trash folder patch by Cedric Duval.
	Modifications to the original patch are:

	* Use a flag called M_PURGE instead of M_APPENDED. The same flag is
	then used in the following "purge" patch instead of adding a
	different flag.

	* Removed the counter in context. The existing context->deleted is
	all that's needed.

	* Removed the "auto unset M_PURGE" when M_DELETED is unset inside
	_mutt_set_flag(), although this is convenient, it easily leads to
	header->purge not being reset in a few situations.

	* Reset purge flag along with the deleted flag if $delete is
	answered no.

	* Set M_PURGE on an edited message. (edit_one_message())

	* Preserve purge flag in mutt_reopen_mailbox()

	* Turn off OPTCONFIRMAPPEND when saving to the trash, rather than
	hardcoding it off in mutt_save_confirm(). That way, normal save to
	the folder will respect the option.

2016-07-16 14:04 -0700  Will Fiveash  <will.fiveash@oracle.com>  (b2cb7a38c1ed)

	* mutt_sasl.c: Fix memory leak in mutt_sasl_cb_pass.

	SASL doesn't free the sasl_secret_t, so this was leaking. Instead,
	keep our own pointer to it, and safe_realloc() each time.

	sasl_secret_t doesn't need the data field null terminated, so memcpy
	the password over.

2016-07-12 18:04 -0700  Kevin McCarthy  <kevin@8t8.us>  (488f91a85115)

	* muttlib.c, sendlib.c: Fix BODY->d_filename memory leaks.

	mutt_message_to_7bit() and transform_to_7bit() were overwriting
	d_filename without freeing the previous value.

	mutt_free_body() was not freeing the d_filename pointer.

2016-07-12 17:46 -0700  Kevin McCarthy  <kevin@8t8.us>  (b4de6941bbb9)

	* muttlib.c, sendlib.c: Fix BODY->charset memory leaks.

	mutt_get_content_info() was directly setting charset without freeing
	the previous value.

	mutt_free_body() was not freeing the charset.

2016-07-11 18:36 -0700  Kevin McCarthy  <kevin@8t8.us>  (9378d21fc7fe)

	* curs_lib.c, main.c: Initialize mutt windows even in batch mode.
	(closes #3853)

	mutt_select_fcc() calls mutt_addr_hook() -> mutt_make_string() which
	refers to MuttIndexWindow->cols when calling mutt_FormatString(). In
	batch mode, MuttIndexWindow hasn't been initialized, leading to a
	segfault.

	This might be the only overlap, but it seems wiser to just
	initialize the mutt windows in case there are other references (now
	or in the future) when processing format strings in batch mode.

2016-07-08 19:08 -0700  rich burridge  <rich.burridge@oracle.com>  (89ae904a6b30)

	* Makefile.am: Fix conststrings compiler version string generation.
	(closes #3852)

	The Makefile.am tries compiler flags -v, --version, and -V but
	neglected to filter error messages if these flags aren't recognized.

2016-07-08 18:52 -0700  Kevin McCarthy  <kevin@8t8.us>  (ec4c113a3d2b)

	* sidebar.c: Change sidebar highlighted mailbox behavior.

	Delay selecting the highlighted mailbox until prepare_mailbox(), to
	avoid a hidden mailbox being selected during the Buffy list
	population (in mutt_sb_notify_mailbox()).

	Change update_entries_visibility() to not automatically make the
	highlighted mailbox visible.

	Change prepare_sidebar() to (re)set the highlighted mailbox when the
	current highlighted mailbox is hidden.

2016-07-08 18:52 -0700  Kevin McCarthy  <kevin@8t8.us>  (5fb53b95afa7)

	* sidebar.c: Fix sidebar pagedown/up when mailboxes on the end are
	hidden.

	The pageup/pagedown code was setting the highlighted mailbox to the
	top and bottom index without checking if those were hidden.

2016-07-08 18:47 -0700  Kevin McCarthy  <kevin@8t8.us>  (4dc1831fd6d7)

	* imap/message.c: Don't overwrite imap_status->uidnext with a lower
	value. (closes #3771)

	imap_read_headers() updates the idata and imap_status uidnext after
	reading through all the new headers.

	The idata is updated properly (only if its uidnext is below
	maxuid+1), but the imap_status was always being set to maxuid.

	This causes a problem with new mail checking if the most recent
	messages are deleted. Then the uidnext will be greater than maxuid+1
	in the mailbox, and if there are any other unread messages it will
	*always* report new mail even if $mail_check_recent is set.

2016-07-07 12:00 -0700  Kevin McCarthy  <kevin@8t8.us>  (6f2fe8f32dab)

	* sidebar.c: Fix the sidebar TopIndex and BotIndex when
	$sidebar_new_mail_only is set.

	When set, some of the entries can be hidden, so a simple division by
	page_size to find the correct top/bottom isn't correct.

	Instead, manually partition into groups of page_size visible entries
	and set top and bottom based on the interval around the highlighted
	entry.

2016-07-07 09:21 -0700  Kevin McCarthy  <kevin@8t8.us>  (5229c7fbc37e)

	* mbyte.c, pager.c: Filter soft hypen from pager and headers. (closes
	#3848)

	Add U+00AD SOFT HYPHEN to the filtered characters in headers and the
	pager. In some terminals and situations it causes major display
	problems.

2016-07-06 12:31 -0700  Richard Russon  <rich@flatcap.org>  (81e9c352e5d7)

	* sidebar.c: Fix sidebar crash for non-existent mailbox

	If you <change-folder> to a non-existent mailbox, there will be no
	Context.

2016-07-06 10:43 -0700  Kevin McCarthy  <kevin@8t8.us>  (88793198dfcb)

	* po/fr.po: merge stable

2016-07-02 12:32 -0700  Kevin McCarthy  <kevin@8t8.us>  (bf1c73de2b7c)

	* doc/manual.xml.head, init.h: Fix the documented sort methods for
	sidebar_sort_method.

	Remove references to unused "date" and "size", and add "flagged".

2016-07-02 12:25 -0700  Kevin McCarthy  <kevin@8t8.us>  (20089a780e8e)

	* init.c, init.h: Add R_SIDEBAR to redraw sidebar when its settings
	change.

	Add to the sidebar settings that control formatting of the sidebar.

2016-07-02 12:24 -0700  Kevin McCarthy  <kevin@8t8.us>  (d404059a7619)

	* sidebar.c: Fix sidebar "unsorted" order to match Buffy list order.

	Since the previous commit decoupled the sidebar from the Buffy list,
	we can now restore the order to match the buffy list when
	sidebar_sort_method is set (back) to "unsorted".

2016-07-02 12:22 -0700  Kevin McCarthy  <kevin@8t8.us>  (b05c170b4c91)

	* buffy.h, sidebar.c: Decouple the sidebar from the Buffy list.

	Change the sidebar to use an array of SBENTRY* instead. Move the
	"is_hidden" into SBENTRY. Remove the added "prev" pointer from
	BUFFY.

	This way, sorting the sidebar doesn't affect the BUFFY list order,
	and we don't need elements inside BUFFY just for the sidebar
	presentation.

	Fix sidebar-next for the case where the mailboxes are unsorted and
	$sidebar_new_mail_only is set. Change sorting not to clump hidden
	mailboxes at the bottom, instead simply skip over hidden mailboxes
	in sidebar-next/prev.

2016-07-01 13:39 -0700  Kevin McCarthy  <kevin@8t8.us>  (c62f5cd3c8e4)

	* send.c: merge stable

2016-06-30 12:57 -0700  Kevin McCarthy  <kevin@8t8.us>  (6b147a411f68)

	* doc/makedoc-defs.h: Fix missing sidebar documentation links. (closes
	#3847)

	USE_SIDEBAR needed to be set in doc/makedoc-defs.h so that the
	sidebar option documentation is generated whether mutt is configured
	with the sidebar or not.

2016-06-29 18:58 -0700  Kevin McCarthy  <kevin@8t8.us>  (4b6829229176)

	* m4/gssapi.m4: Fix cppflags and muttlibs duplication with --with-gss.

	When krb5-config was found, MUTT_AM_PATH_GSSAPI included CFLAGS in
	GSSAPI_CFLAGS and MUTTLIBS in GSSAPI_LIBS. However, configure.ac
	afterwards sets: CPPFLAGS="$CPPFLAGS $GSSAPI_CFLAGS"
	MUTTLIBS="$MUTTLIBS $GSSAPI_LIBS" This caused the flags and libs to
	be duplicated.

2016-06-29 18:58 -0700  Kevin McCarthy  <kevin@8t8.us>  (c84aa0d62ce3)

	* configure.ac: Include ncurses tinfo library if found.

	Thanks to Fabian Groffen for reporting this issue and providing a
	couple possible patches. From Fabian's report:

	 For some time now, ncurses can be built in a mode where the low
	level terminfo functionality lives in a separate lib called
	libtinfo. Because some people do, this means Mutt needs to include
	this library in that case to avoid linking errors [...]

2016-06-29 12:25 -0700  Kevin McCarthy  <kevin@8t8.us>  (b62483975c94)

	* init.h: Clarify oppenc option documention. (closes #3846)

	Rephrase the option description to try and make it clearer what the
	option does, and how to enable/disable it within a message.

2016-06-28 16:06 -0700  Kevin McCarthy  <kevin@8t8.us>  (2baed7154180)

	* init.h, sidebar.c, sort.h: Remove unused SORT_DESC.

	This came over with the sidebar patch, but I believe is only used by
	the notmuch extension.

2016-06-28 15:59 -0700  Fahri Cihan Demirci  <fcdemirci@fastmail.fm>  (5bac9dacae1d)

	* contrib/sample.muttrc-sidebar: Remove $sidebar_refresh_time from
	Sample Sidebar Config

	The $sidebar_refresh_time option was removed with the changeset
	1f840760e6e0. Remove it from the sample sidebar configuration as
	well, so that anyone using that file in its entirety won't have to
	deal with "unknown variable" errors.

2016-06-23 12:38 -0700  Kevin McCarthy  <kevin@8t8.us>  (b45c8ec1e54c)

	* buffy.c, buffy.h, curs_main.c, imap/imap.c, main.c, mutt.h, mx.c,
	pop.c, sidebar.c, sidebar.h: Change sidebar to consistently use
	realpath for context and buffy comparison.

	The original sidebar patch contained a half-implemented attempt to
	use realpath() mailbox paths for comparison. (Presumably so the open
	mailbox remains highlighted despite symlink issues).

	Add realpath to the Context, and set it when opening a mailbox.
	Remove sidebar ifdef for the buffy member, and always set it there
	too.

	Change the sidebar to use the realpath for comparison everywhere.

	mutt_buffy_check() is using stat device and inode for comparison.
	Perhaps this can be changed to use realpath instead, but that's
	beyond the scope of this patch.

2016-06-22 09:20 -0700  Kevin McCarthy  <kevin@8t8.us>  (c8613259dc38)

	* sidebar.c: Change sidebar next/prev-new to look at buffy->new too.

	Look at new in addition to msg_unread count, to account for when
	$mail_check_stats is unset or when the sidebar only shows the %n
	status flag.

2016-06-20 20:09 -0700  Kevin McCarthy  <kevin@8t8.us>  (3d87b0521a45)

	* doc/manual.xml.head, init.h: Add documentation to the "New Mail
	Detection" section of the manual.

	Mention the behavior change with $mail_check_recent.

	Add a section about $mail_check_stats.

2016-06-20 10:11 +0200  Vincent Lefevre  <vincent@vinc17.net>  (069c7a655ad5)

	* po/fr.po: Updated French translation.

2016-06-18 13:36 -0700  Damien Riegel  <damien.riegel@gmail.com>  (91af19866bbd)

	* imap/imap.c, imap/imap.h, imap/imap_private.h, mbox.c, mh.c, mutt.h,
	mx.c, mx.h: add commit_msg to struct mx_ops

2016-06-18 13:36 -0700  Damien Riegel  <damien.riegel@gmail.com>  (28688fee52a5)

	* mbox.c, mx.c, mx.h: add mmdf_commit_message function

	Move MMDF operations that were done in mx_commit_message to a
	dedicated mmdf_commit_message function.

2016-06-18 13:36 -0700  Damien Riegel  <damien.riegel@gmail.com>  (4c6539a88f0a)

	* mbox.c, mx.c, mx.h: add mbox_commit_message function

	Move mbox operations that were done in mx_commit_message to a
	dedicated mbox_commit_message function.

2016-06-18 13:36 -0700  Damien Riegel  <damien.riegel@gmail.com>  (16bfe31ef8b3)

	* imap/imap.h, imap/message.c, mx.c: add imap_commit_message function

	Move IMAP operations that were done in mx_commit_message to a
	dedicated imap_commit_message function.

2016-06-18 13:36 -0700  Damien Riegel  <damien.riegel@gmail.com>  (37140981e746)

	* mh.c, mx.c, mx.h: add maildir_commit_message function

	This commit adds a maildir_commit_message with a prototype
	consistent with other kind of mailboxes, to simplify upcoming
	refactoring.

2016-06-18 13:36 -0700  Damien Riegel  <damien.riegel@gmail.com>  (93d4169b0886)

	* mh.c, mx.c, mx.h: prepend maildir_commit_message function name with
	an underscore

	Basically, rename maildir_commit_message to _maildir_commit_message.
	This commit is preparatory to make the maildir_commit_message symbol
	available for further use.

	Symbols starting with underscore should be avoided but this one is
	long enough to prevent collision.

2016-06-18 13:36 -0700  Damien Riegel  <damien.riegel@gmail.com>  (e5d87ebe0f5b)

	* mh.c, mx.c, mx.h: remove unused HEADER parameter in
	mh_commit_message

	mh_commit_message is only called in one place with the header
	parameter set to NULL. To make the commit function consistent with
	other mailboxes, which only takes ctx and msg as parameters, remove
	this unused parameter.

2016-06-18 12:41 -0700  Damien Riegel  <damien.riegel@gmail.com>  (ce2e5caf4339)

	* imap/imap.c, imap/imap_private.h, imap/message.c, mbox.c, mh.c,
	mutt.h, mx.c, pop.c: add close_msg to struct mx_ops

2016-06-18 12:41 -0700  Damien Riegel  <damien.riegel@gmail.com>  (4bab14a24dbe)

	* mailbox.h, mx.c: Remove magic member in MESSAGE structure

	The "magic" was copied from the context to the message structure to
	be able to determine which close function had to be called in
	mx_close_message. Now that this function is context aware, there is
	no need to store the magic in the MESSAGE structure and it can be
	safely removed.

2016-06-18 12:41 -0700  Damien Riegel  <damien.riegel@gmail.com>  (3ec6c133641c)

	* attach.c, commands.c, copy.c, editmsg.c, mailbox.h, mh.c, mx.c,
	parse.c, pattern.c, pop.c, postpone.c, recvattach.c, sendlib.c: pass
	context in mx_close_message

	The mx_close_message is one of the few mx_* functions that don't
	have a context as parameter. To make them more consistent, pass the
	context.

2016-06-17 19:01 -0700  Damien Riegel  <damien.riegel@gmail.com>  (70eb7e0dbb58)

	* imap/imap.c, imap/imap.h, imap/imap_private.h, imap/message.c,
	mbox.c, mh.c, mutt.h, mx.c, pop.c, pop.h: Add open_msg to struct
	mx_ops

	Add the callback to open an existing message to struct mx_ops. For
	mbox, mmdf, maildir, and mh, the code was implemented directly into
	mx_open_message, so it is moved in their respective source files.
	For imap and pop, there were already <mailbox>_fetch_message
	functions, but their argument order has been changed to pass the
	context as a first argument.

2016-06-17 10:33 -0700  Olaf Hering  <olaf@aepfle.de>  (d83239fd794a)

	* browser.c, browser.h: folder_file: remove struct stat

	Add and use new flag to indicate the folder is on local filesystem.
	Add and use new gid, uid and nlink member. Use existing ->mode
	member instead of stat->st_mode. Use existing ->size member instead
	of stat->st_size. Use existing ->mtime member instead of
	stat->st_mtime. Remove struct stat, the used values were already
	duplicated in the struct. This reduces memory usage.

2016-06-17 10:33 -0700  Olaf Hering  <olaf@aepfle.de>  (8e671bbe094d)

	* regex.c: Add real prototype for re_match_2_internal in regex.c

	Fixes compilation warning with -Wunprototyped-calls

2016-06-17 10:30 -0700  Kevin McCarthy  <kevin@8t8.us>  (5817d3d93b7a)

	* buffy.c, buffy.h, mh.c, mx.h: Combine the basic and extended buffy
	functions.

	Add a check_stats parameter to the mbox, maildir, and mh buffy
	functions. Use that parameter to determine whether to also count
	total, new, and flagged messages.

	This makes the functions a bit more complicated, but improves
	efficiency (for maildir and mh).

	Also includes the following cleanup/fixes:
	* Move the orig-value counter reset to the beginnining of the loop,
	(before tmp->new is set to 0).

	* Change trashed maildir messages to not be counted in msg_count

	* Remove an incorrect setting of mailbox->new based on msg_count in
	maildir. (I missed this one for 1f840760e6e0)

	* Change mbox to use the context->mtime for stats_last_checked,
	removing a race condition.

	* Fix mh to actually count the messages in order to generate
	msg_count. mh_sequences only covers the range of messages with some
	sort of flag.

2016-06-15 11:09 +0200  Vincent Lefevre  <vincent@vinc17.net>  (c29c521eec0a)

	* po/fr.po: Updated French translation.

2016-06-14 13:11 -0700  Kevin McCarthy  <kevin@8t8.us>  (5ad82360c6ea)

	* imap/imap.c: Reset buffy->new for the current mailbox in IMAP.

	1f840760e6e0 moved the buffy->new reset inside the STATUS processor.
	Since the current mailbox is not STATUS'ed, it needs to be reset in
	imap_buffy_check().

	Thanks to Aaron Schrab for reporting this issue (and for helping
	test tip).

2016-06-12 13:49 -0700  Kevin McCarthy  <kevin@8t8.us>  (f447c67f511b)

	* OPS.MIX, OPS.SIDEBAR: Fix the case of messages in OPS.MIX and
	OPS.SIDEBAR

	Thanks to Vincent Lefèvre for spotting the discrepancy.

2016-06-07 15:02 -0700  Kevin McCarthy  <kevin@8t8.us>  (1f840760e6e0)

	* buffy.c, buffy.h, contrib/sample.muttrc-sidebar,
	doc/manual.xml.head, globals.h, imap/command.c, imap/imap.c,
	imap/imap.h, init.h, mailbox.h, mbox.c, mh.c, mutt.h, mx.c, mx.h,
	sidebar.c, sidebar.h: Make extended buffy independent of the
	sidebar.

	Add new boolean option $mail_check_stats (default off) and
	$mail_check_stats_interval. The first turns extended buffy on. The
	second sets the amount of time in between extended buffy checks
	(defaulting to 60 seconds).

	Remove the option $sidebar_refresh_time.

	Change mutt_buffy_check() to only notify the sidebar to redraw if a
	mailbox buffy value changes.

	Remove the #ifdefs around the extended buffy functions. The next
	patch will merge these functions with the basic functions and pass a
	parameter instead.

	Imap is a special case, because it sends out the status in one
	batch. Change this to perform the comparisons inside
	cmd_parse_status() and flag the sidebar there. It was previously
	directly assigning the status counters (unsigned int) to the
	buffy->new (short). Change this to assign 1/0.

2016-06-08 14:43 -0700  Kevin McCarthy  <kevin@8t8.us>  (4be8b077c81f)

	* doc/manual.xml.head, init.h: Change the default for sidebar_format
	to use %n.

	The next series of patches is going to create a new option,
	$mail_check_stats defaulting off. When off, the extended buffy which
	calculates total/new/flagged messages won't be run. To help reduce
	"sidebar is broken" bug reports, this changes the default format to
	something not requiring extended buffy.

	The previous default is documented in the option and preserved in
	the sample sidebar muttrc in contrib.

2016-06-08 13:16 -0700  Kevin McCarthy  <kevin@8t8.us>  (594137a8ea12)

	* init.h, sidebar.c: Add sidebar_format flag '%n' to display 'N' on
	new mail.

2016-06-11 17:59 +0200  Vincent Lefevre  <vincent@vinc17.net>  (123e36398eea)

	* po/fr.po: Updated French translation.

2016-06-09 12:06 -0700  Richard Russon  <rich@flatcap.org>  (93c4ae03689e)

	* compose.c: Fix alignment in the compose menu.

	Several of the compose-panel labels didn't use the TITLE_FMT to
	align themselves. This causes formatting problems when the width is
	changed, e.g. by the NNTP patch.

2016-06-08 13:28 +0200  Vincent Lefevre  <vincent@vinc17.net>  (1fad3bfd4aab)

	* Makefile.am: Corrected OPS.SIDEBAR filename in EXTRA_DIST.

2016-06-07 13:40 -0700  Richard Russon  <rich@flatcap.org>  (fc33b34d637b)

	* sidebar.c: Setting $sidebar_width to more than 128 would cause bad
	things to happen.

	First, give the users more than enough space. Second, don't pad out
	short strings beyond the buffer

	--- sidebar.c | 11 ++++++----- 1 file changed, 6 insertions(+), 5
	deletions(-)

2016-06-07 13:27 -0700  Kevin McCarthy  <kevin@8t8.us>  (9937540dab42)

	* commands.c, hdrline.c, pager.c, protos.h, status.c: Fix columns used
	for $status_format and $pager_format in the pager.

	The code was hardcoding use of MuttIndexWindow->cols in
	mutt_make_string_info() and MuttStatusWindow->cols in
	menu_status_line().

	Add a parameter to mutt_make_info_string(). Change
	menu_status_line() to use menu->statuswin->cols, falling back to
	MuttStatusWindow if no menu is passed in.

	Set menu->statuswin appropriately inside pager.c.

	Thanks to Richard Russon for tracking down this problem, and for the
	initial patch.

2016-06-05 18:30 -0700  Kevin McCarthy  <kevin@8t8.us>  (5270cd795043)

	* doc/makedoc.c: Add warning in makedoc for unexpected prefices. (see
	#3845)

	In case other types get renamed again in the future, add a warning
	message to makedoc.c.

2016-06-05 18:05 -0700  Kevin McCarthy  <kevin@8t8.us>  (91608dca6f12)

	* mx.c: Fix sidebar buffy stats updating on mailbox close.

	Move the mutt_sb_set_buffystats() call from mx_fastclose_mailbox()
	to the bottom of mx_close_mailbox(). Append-only mailboxes don't
	have msgcount set, so fastclose was the wrong place to be doing
	these updates.

2016-06-04 11:32 -0700  Kevin McCarthy  <kevin@8t8.us>  (8e342d73159b)

	* buffy.c, mh.c: Start to fix sidebar buffy modifications.

	The extended buffy for mh had incorrect placement of the loop
	brackets. The counters weren't being incremented in the loop.

	Fix extended buffy for maildir to count a maildir message as new if
	it doesn't have the info delimeter.

	Remove shortcircuits added to the basic buffy stating there is new
	mail when (msg_unread > 0). This is not necessarily true, depending
	on $mail_check_recent.

	Note: the extended buffy still needs more fixes, which will be done
	when it is refactored into its own option.

2016-06-04 11:32 -0700  Kevin McCarthy  <kevin@8t8.us>  (5d117fd810a9)

	* sidebar.c: Various fixes to the sidebar logic.

	Use strfcpy instead of strncpy. The current logic could write past
	the end of the buffer.

	Don't mess with BUFFY next pointers during removal. The
	mutt_parse_mailboxes() is fine, but this is still not something that
	should be done inside sidebar.c.

	On removal, set next->prev since we can.

	Fix unmailboxes logic:
	  * only fix the prev pointers once.
	  * if we unmailbox the open mailbox, set it to NULL.

	Lastly, flag a redraw on mailboxes/unmailboxes.

2016-06-04 11:32 -0700  Kevin McCarthy  <kevin@8t8.us>  (b542812c262e)

	* buffy.c, curs_main.c, main.c, menu.c, mx.c, pager.c, sidebar.c,
	sidebar.h: Add "mutt_" prefix to global sidebar functions.

	Also, remove unused sb_init declaration.

2016-06-04 11:32 -0700  Kevin McCarthy  <kevin@8t8.us>  (cb23ed20d035)

	* doc/manual.xml.head, init.h: Clean up the sidebar manual.

	Remove the introduction section. It's a nice effort, but reads more
	like a tutorial than something that belongs in section 2. Will
	probably put in on the website instead.

	Remove references to a "patch", neomutt, and the history.

	Remove the sample muttrc from the manual.

	Fix validation errors for the documentation.

2016-06-04 11:32 -0700  Kevin McCarthy  <kevin@8t8.us>  (517d4f0debab)

	* sidebar.c: Re-indent and style sidebar.c.

2016-06-04 11:32 -0700  Kevin McCarthy  <kevin@8t8.us>  (39639dc7e9e7)

	* sidebar.c: Fix sidebar check_sec.sh warnings.

	Use safe_malloc, FREE, and the safe_strcat functions.

2016-06-04 11:32 -0700  Kevin McCarthy  <kevin@8t8.us>  (08f9ba9efab9)

	* Makefile.am, buffy.c, configure.ac, curs_main.c, flags.c, globals.h,
	keymap.c, menu.c, mutt_menu.h, pager.c, sidebar.c: Sidebar clean up:
	building and drawing logic.

	Fix the autoconf/makefile.am changes to be consistent.

	Create a global SidebarNeedsRedraw to indicate a redraw is needed,
	instead of putting sb_draw() everywhere in the code.

	Create a menu_redraw_sidebar() function and use the REDRAW_SIDEBAR
	flag instead of piggy-backing it inside the index loop.

	Fix curs_main.c and pager.c to be a bit cleaner by using the global
	and REDRAW_SIDEBAR.

	Start to clean up some of the buffy code, but this needs to
	refactored and fixed.

2016-06-04 11:31 -0700  Richard Russon  <rich@flatcap.org>  (8ad6090903db)

	* Makefile.am, OPS.SIDEBAR, buffy.c, buffy.h, color.c, configure.ac,
	contrib/sample.muttrc-sidebar, contrib/sample.vimrc-sidebar,
	curs_main.c, doc/manual.xml.head, flags.c, functions.h, globals.h,
	imap/command.c, imap/imap.c, init.c, init.h, keymap.c, mailbox.h,
	main.c, mbox.c, menu.c, mh.c, mutt.h, mutt_curses.h, mutt_menu.h,
	mx.c, mx.h, pager.c, sidebar.c, sidebar.h, sort.h: Add neomutt
	version of sidebar patch. (closes #3829)

	This is the patch from neomutt; branch 'devel/win-sidebar'; commit
	c796fa85f9cacefb69b8f7d8545fc9ba71674180 with the following changes:

	 - move the sample muttrc and vimrc to contrib.
	  - remove the README.sidebar.
	  - empty out the PATCHES file.

2016-05-31 13:20 -0700  Kevin McCarthy  <kevin@8t8.us>  (52f48b083cc0)

	* doc/makedoc.c: Fix documentation for DT_MAGIC types. (closes #3845)

	With the rename of M_ to MUTT_, the documentation generator in
	makedoc.c needed to be adjusted for the new prefix size.

	Thanks to Damien Riegel for the suggested fix.

2016-05-26 14:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (cd316a555bd7)

	* copy.h, group.h, mailbox.h, mutt.h, mutt_curses.h, pager.h: Fix
	header file indentation after M_ prefix renaming.

	The use of tabs caused misalignment of various macro definitions.

2016-05-26 14:05 -0700  Damien Riegel  <damien@riegel.io>  (2821e77c1a54)

	* imap/imap.c, imap/imap.h, mbox.c, mh.c, mutt.h, mx.c, mx.h, pop.c,
	pop.h: add check operation to struct mx_ops

	In mx_check_mailbox switch case, we simply call
	<mailbox>_check_mailbox, so this operation can be move into the
	mx_ops structure pretty easily.

	This commit adds a mandatory "check" operation to struct mx_ops and
	change all mailboxes to use it. Check functions are made static as
	they are only used in their respective source files now.

2016-05-26 14:05 -0700  Damien Riegel  <damien@riegel.io>  (a28ed1c725c6)

	* curs_main.c, mailbox.h, mx.c: mx_check_mailbox: remove lock argument
	in function call

	This function is only called in one place with lock = 0. Basically,
	all code under if (lock) is dead code, so we can remove it, making
	the function simpler to factorize.

2016-05-26 14:05 -0700  Damien Riegel  <damien@riegel.io>  (0ae29df8a81a)

	* imap/imap.c, imap/imap.h, mx.c: add function
	imap_check_mailbox_reopen

	In mx_check_mailbox, imap mailbox is the only function with a
	different prototype: it has an extra force argument.

	In order to move the check operation to the mx_ops structure, we
	need that all mailboxes have the same prototype. To do so, a new
	function imap_check_mailbox_reopen is added.

2016-05-25 15:58 -0700  Kevin McCarthy  <kevin@8t8.us>  (261939e71d80)

	* mx.c: Add a TODO to mx_open_new_message() to use mx_ops in the
	future.

	We can't use it until mx_open_mailbox_append() is converted to set
	mx_ops.

2016-05-25 15:53 -0700  Damien Riegel  <damien@riegel.io>  (63cb99b46c34)

	* imap/imap.c, mailbox.h, mbox.c, mh.c, mutt.h, mx.c, mx.h: add
	open_new_msg operation to struct mx_ops

	The code was already using a function pointer to do this operation.
	This commit moves this function pointer to the mx_ops structure and
	the open_new_message functions to their respective source files if
	it needs to.

2016-05-24 12:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (79c379cb0c21)

	* keymap.c: merge stable

2016-05-12 12:41 -0700  Damien Riegel  <damien.riegel@gmail.com>  (ae203b2c56a6)

	* imap/imap.c, imap/imap.h, mbox.c, mh.c, mutt.h, mx.c, mx.h, pop.c,
	pop.h: Start decoupling mailbox operations.

	Introduce a dedicated structure for mailbox operations: struct
	mx_ops. Move the open and close operations into that structure.

	Assign this structure to the context in mx_open_mailbox. This is
	currently based on the "magic" for the mailbox type, but may be
	refactored in the future.

	Add a stub mbox_close_mailbox function. This function does nothing,
	the main purpose is to introduce a mx_ops structure for mbox, so its
	usage is similar to mh/imap/pop. We reuse the name that was made
	available by the previous commmit. Note that the actual closing of
	the descriptor is done in mx.c.

	To be more consistent with other mailboxes, introduce functions
	mh_open_mailbox and maildir_open_mailbox, and create a dedicated
	structure for mmdf.

2016-05-12 12:41 -0700  Damien Riegel  <damien.riegel@gmail.com>  (6356f1068fe2)

	* mbox.c, mx.c, mx.h: rename mbox_close_mailbox to
	mx_close_mailbox_append and move it

	mbox_close_mailbox was used as the counterpart of
	mx_open_mailbox_append. To make things clearer, rename it
	mx_close_mailbox_append.

	As it is only used in mx.c, move it there and make it static.

2016-05-10 09:42 -0700  Kevin McCarthy  <kevin@8t8.us>  (391492f27fef)

	* doc/manual.xml.head, filter.c: Set COLUMNS to MuttIndexWindow->cols
	in mutt_create_filter_fd. (closes #3837)

	This allows filters to automatically (or via a command line
	argument) adjust to the width of the pager/index. This is even more
	important with the sidebar, since the width of the pager is smaller
	than the terminal width.

	Thanks to Vincent Lefèvre for his helpful information and
	suggestions, and to Richard Russon for the initial patches.

2016-05-09 14:06 -0700  Kevin McCarthy  <kevin@8t8.us>  (d18cd04e3f5a)

	* Makefile.am, getdomain.c, mutt_sasl.c, mutt_socket.c, mutt_tunnel.c,
	sys_socket.h: Back out wrapper sys_socket.h workaround
	(23334e967dd7)

	After renaming all internal macros from M_* to MUTT_*, the
	sys_socket.h workaround is no longer necessary.

2016-05-09 14:06 -0700  Derek Martin  <code@pizzashack.org>  (59b77d5c73e0)

	* account.c, account.h, addrbook.c, alias.c, attach.c, browser.c,
	buffy.c, buffy.h, charset.c, charset.h, color.c, commands.c,
	compose.c, copy.c, copy.h, crypt-gpgme.c, crypt.c, curs_lib.c,
	curs_main.c, doc/makedoc.c, editmsg.c, enter.c, flags.c,
	functions.h, group.h, handler.c, hcache.c, hcache.h, hdrline.c,
	help.c, hook.c, imap/browse.c, imap/command.c, imap/imap.c,
	imap/imap_private.h, imap/message.c, imap/util.c, init.c, init.h,
	keymap.c, lib.c, lib.h, mailbox.h, main.c, mbox.c, menu.c, mh.c,
	mutt.h, mutt_curses.h, mutt_menu.h, mutt_sasl.c, mutt_socket.c,
	mutt_socket.h, mutt_ssl.c, mutt_ssl_gnutls.c, muttlib.c, mx.c, mx.h,
	pager.c, pager.h, parse.c, pattern.c, pgp.c, pgpinvoke.c, pgpkey.c,
	pop.c, pop_auth.c, pop_lib.c, postpone.c, protos.h, query.c,
	recvattach.c, recvcmd.c, remailer.c, rfc1524.c, rfc2047.c,
	rfc2231.c, rfc3676.c, score.c, send.c, sendlib.c, smime.c, smtp.c,
	status.c, system.c, thread.c: Change M_* symbols to MUTT_*

	Changeset 23334e967dd7 created a workaround for a namespace conflict
	with Solaris and derivatives. After some discussion, the team
	decided it would be best to move away from using the "M_" prefix for
	macros.

	This patch was automatically generated by running: perl -wpi -e
	's/\bM_(\w+)\b/MUTT_$1/g' `find . -name '*.[ch]' -print` with the
	exception that sys_socket.h was exempted. (That file will be backed
	out subsequent to this commit.)

	Thanks to Andras Salamon for supplying the perl script used to make
	this change.

2016-05-03 13:21 -0700  Kevin McCarthy  <kevin@8t8.us>  (b74dfb9fa901)

	* mbyte.c, pager.c: Skip bidi markers in the pager and index. (closes
	#3827)

	Curses and slang don't support them, so there's little point in
	showing them or attempting to somehow deal with them.

	This patch adds filtering in the pager, and changes the filtering
	added in 6e0aca94cdb0 for the index to completely skip the marker.

2016-05-03 09:46 -0700  Kevin McCarthy  <kevin@8t8.us>  (9dfe211355b6)

	* curs_lib.c: Change mutt_window_getyx() to accept NULL *y/*x params.

	Thanks to Vincent Lefèvre for suggesting this nice cleanup.
	Previously, _mutt_get_field() was employing an ugly hack to avoid an
	unused var warning.

2016-04-30 14:39 -0700  Kevin McCarthy  <kevin@8t8.us>  (fb68199318ae)

	* po/fr.po: merge stable

2016-04-30 13:05 -0700  Kevin McCarthy  <kevin@8t8.us>  (e1cec1a958e9)

	* pager.c: Fix pager mini-index drawing when $pager_index_lines = 1
	and $status_on_top.

	When $pager_index_lines is 1, there is room for the index status
	line, but not for any actual index entries. The index redraw part
	was always calling menu_redraw_current() which doesn't actually
	check if there is room for the current row.

	This bug only shows up with $status_on_top, due to the order things
	are redrawn.

2016-04-30 10:50 -0700  Kevin McCarthy  <kevin@8t8.us>  (d0746905cb3f)

	* pager.c: Fix pager layout when $status_on_top with no mini-index.
	(closes #3836)

	The pager_window->row_offset should only be adjusted when we have a
	mini-index.

	Pull common window initialization above, and adjust only when the
	mini-index is enabled. The pager_window rows and row_offset code
	could be further consolidated (since the status line is always a
	height of one), but I think the code reads a bit more clearly when
	the adjustments are explicitly stated.

2016-04-29 18:00 -0700  Kevin McCarthy  <kevin@8t8.us>  (e369be9d490b)

	* pager.c: Remove newline insertion from pager. (closes #3835)

	The window patches commited now manually move to the next line, so
	there is no need to insert newlines for that purpose.

	The newlines also goof windows placed to the right of the pager, as
	is the case for the (currently external) sidebar-on-the-right
	functionality.

	Thanks to Richard Russon for the original patch and help testing the
	revised patch.

2016-04-27 17:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (efa6f7910c94)

	* addrbook.c, browser.c, compose.c, crypt-gpgme.c, hdrline.c,
	muttlib.c, pgpinvoke.c, pgpkey.c, protos.h, query.c, recvattach.c,
	remailer.c, smime.c, status.c: Add cols parameter to
	mutt_FormatString()

	Continuing with the conversion to using windows for screen drawing,
	mutt_FormatString() was directly using COLS for right justification
	and similar formatting. Instead pass in a parameter, cols.

	This change involved seeding the parameter through callback
	functions too, as many of them call mutt_FormatString() back.

2016-04-27 17:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (04f1846c56c1)

	* buffy.c, commands.c, flags.c, handler.c, help.c, init.c, keymap.c,
	mutt_curses.h, muttlib.c, recvattach.c, recvcmd.c, sendlib.c: Fix
	remaining direct usages of COLS/LINES to use mutt window functions.

	Most of these were just message update/clearing.

2016-04-27 17:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (9f9bcde2d0ff)

	* remailer.c: Change remailer to use mutt windows.

2016-04-27 17:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (8ad6164d9fe4)

	* edit.c: Modify the built-in editor to use windows.

	This only involved changing to use the MuttMessageWindow.

2016-04-27 17:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (0989f9d01b5c)

	* compose.c: Modify the compose screen to use windows.

	The header field positions enum is now started at 0: the windows
	compute the relative positioning as needed. A small improvement from
	this is that the headers now align with the top: there isn't a gap
	if $help is turned off.

2016-04-27 17:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (fd3fe386c24a)

	* copy.c, mutt_curses.h, pager.c, rfc3676.c: Modify the pager to use
	windows.

	The pager view is somewhat complex, due to the "mini-index" and the
	positioning of the index_status vs pager_status changes depending on
	$status_on_top as well as $pager_index_lines and $help.

	To make things simpler, it creates four "pager windows":
	index_status_window, index_window, pager_status_window,
	pager_window.

	mutt_term_width() is renamed to mutt_window_wrap_cols() and a
	mutt_window_t parameter passed in.

	Also, the pager drawing loop calling display_line() has a
	mutt_window_move() added to move to the beginning of the next line
	each time. This is in case the pager_window isn't flush with the
	left side of the terminal.

2016-04-27 17:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (4e20ab8ebf42)

	* curs_main.c: Modify the index to use windows.

	Change the index screen to use MuttIndexWindow and MuttStatusWindow.

2016-04-27 17:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (1b8abb069c37)

	* curs_lib.c, edit.c, enter.c, protos.h: Modify enter.c routines to
	use windows.

	This modifies the mutt_enter_string() functions to use
	MuttMessageWindow.

	Thanks to Richard Russon for pointing out slang doesn't support
	getcurx.

2016-04-27 17:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (47e9732b3a3c)

	* curs_lib.c: Modify the curs_lib.c to use windows.

	This changes some of the "prompting" routines to use the
	MuttMessageWindow.

2016-04-27 17:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (48676eb3e400)

	* menu.c, mutt_curses.h, mutt_menu.h: Modify the menu code to use
	windows.

	Change menu.c to use the mutt_window_t structures and functions. The
	index/stats/help/message window pointers are stored inside the
	menu_t. This is useful for the pager, where the "index" we want to
	use is a mini-index.

2016-04-27 17:56 -0700  Kevin McCarthy  <kevin@8t8.us>  (ac4f746e614f)

	* curs_lib.c, init.c, init.h, main.c, mutt_curses.h, resize.c: Add
	window structures to use for screen layout.

	This is a series of 11 patches, centralizing Mutt screen drawing
	inside windows (mutt_window_t structures).

	Currently, the screen drawing and cursor positioning logic is
	distributed all over the code, resulting in many files having the
	same logic of where the help, status, message windows are.
	Additionally, the code directly uses move and mvadd*/mvprint*
	functions, which means if the layouts are changed, the row/column
	computation logic needs to be changed all over the place.

	The patch creates a (very simple) mutt_window_t structure and
	functions for moving, addch/str/printw, along with clearing the
	line. The windows keep track of where they are on the screen,
	allowing the Mutt code to simply position elements relative to the
	window.

	During curses initalization, and when the window is resized, the
	window sizes and positions and recomputed. Also, a new option flags,
	R_REFLOW is added for options that need to force a reflow when they
	are changed.

	Thanks to Richard Russon for pointing out the slang compilation
	issue.

2016-04-27 13:21 -0700  Kevin McCarthy  <kevin@8t8.us>  (8083387557d9)

	* merge stable

2016-04-14 12:35 -0700  Kevin McCarthy  <kevin@8t8.us>  (9a9c515e09d3)

	* muttlib.c: Fix soft-padding available columns computation.

	If arrow_cursor is set, it's possible that COLS < offset. Compute
	avail_cols, floored at 0, and use that instead.

2016-04-14 12:35 -0700  Kevin McCarthy  <kevin@8t8.us>  (ca1af57e1855)

	* muttlib.c: Fix right justify buffer-truncated pad calculation in
	mutt_FormatString()

	Vincent Lefèvre noted that the computation had implementation
	defined behavior and was potentially incorrect.

	Change to make sure the subtraction won't lead to a wrap-around, and
	set pad to 0 in that case.

2016-04-14 12:35 -0700  Kevin McCarthy  <kevin@8t8.us>  (92bbc02fdf9c)

	* muttlib.c: Pre-space softfill multi-column padding.

	Similar to the previous patch, this deals with multi-column padding
	characters and soft-fill. This will add spacing so the padding and
	content after padding aligns with the right side.

	You can see the effect by setting set index_format="%s %*我[ooooo]"
	and resizing the terminal. The right hand side will be jagged
	without the patch.

2016-04-14 12:35 -0700  Kevin McCarthy  <kevin@8t8.us>  (fef5b5ed0f44)

	* muttlib.c: Add spacing to truncated multi-column characters when
	using soft-fill.

	First, fix the left-hand side column truncation calculation: "col +
	pad*pw -offset" pad = (COLS - col - wid) / pw, so this becomes "col
	+ COLS - col - wid - offset" => "COLS - wid - offset"

	The problem is that pad was calculated *before* the right side was
	mutt_wstr_trunc() truncated, which may adjust wid! We want that
	calculation, with correct values, so instead just use the final
	reduction directly. (Note, the reduction ignores integer truncation,
	but pad shouldn't be used here in any case, because it's negative:
	there is no padding occuring).

	Second, when the left-hand side is truncated, multi-column
	characters may get chopped in the middle. Truncated characters are
	not included in the wlen and col values returned. Add spaces until
	the number of columns lines up (checking to make sure we don't run
	out of space too).

2016-04-11 12:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (eb94f64ad81a)

	* mutt_ssl.c: Add null-terminator to BIO_get_mem_data() output.

	It turns out the output isn't necessarily null-terminated.

2016-04-11 21:17 +0200  Vincent Lefevre  <vincent@vinc17.net>  (46f37be4afef)

	* po/fr.po: Updated French translation.

2016-04-11 11:55 -0700  Kevin McCarthy  <kevin@8t8.us>  (0b66f6fd3d44)

	* mutt_ssl.c: Add an error message and debugging if SSL_CTX_new()
	fails. (closes #3831)

	Generate a mutt_error(). Add a debugging function
	ssl_dprint_err_stack() to dprint the ssl error stack.

2016-04-11 11:28 +0200  Vincent Lefevre  <vincent@vinc17.net>  (78aa3a1db632)

	* po/fr.po: Updated French translation.

2016-04-10 19:10 -0700  Kevin McCarthy  <kevin@8t8.us>  (00c0c155d992)

	* mutt_ssl.c: Check for SSL_CTX_new returning NULL in ssl_sock_open().
	(closes #3831)

	Thanks to Yuan Kang and the security researchers at Columbia
	University and the University of Virginia for reporting the bug.

2016-04-10 18:30 -0700  Kevin McCarthy  <kevin@8t8.us>  (5464329344cd)

	* merge stable

2016-04-10 14:14 -0700  Kevin McCarthy  <kevin@8t8.us>  (685b9dfba297)

	* imap/browse.c: Add error message string for imap_mailbox_rename() on
	root folder.

	This was fixed just before 1.6.0, but due to the string freeze,
	could not add an error message.

2016-04-08 18:38 -0700  Kevin McCarthy  <kevin@8t8.us>  (b8240918eded)

	* rfc2047.c: Fix potential memory leak in rfc2047_encode. (closes
	#3825)

	If convert_string() has nonreversible characters, the allocated
	output buffer would be overwritten (and not freed) in
	rfc2047_encode().

	Thanks to Richard Russon for the bug report and initial patch, and
	to TAKAHASHI Tamotsu for the analysis and revised fix suggestion.

2016-04-08 15:27 -0700  Kevin McCarthy  <kevin@8t8.us>  (180a90d05ed4)

	* pager.c: Fix pager.c format_line() to use size_t for mbrtowc()
	retvals.

	While fixing up the error checking for mbrtowc(), I noticed the uses
	in pager.c format_line() were assigning the retval to an int.

	The cleanup for this was a little tricky, because it was making use
	of possible negative values for (k1 - k). The backspace detection
	loop condition was a bit heavy, so this patch first pulled the
	initialization and first call above, and put the second call inside
	the loop.

	Note that k1 previously included k, but this patch changes it to be
	just the retval of mbrtowc. This means the second mbrtowc()
	arguments are changed to include k, as is the ch increment at the
	bottom of the loop.

2016-04-08 15:20 -0700  Kevin McCarthy  <kevin@8t8.us>  (a8bc75e7c4e1)

	* alias.c, curs_lib.c, help.c, pager.c: Reset mbstate for other
	mbrtowc() calls returning -1

	Continue the cleanup started in changesets c8c76a6a1e61 and
	a3450fd50d11. In those changesets, a bug was occurring due to the
	mbstate not being reset when mbrtowc() returned -1.

	This patch fixes other callers of mbrtowc() to reset mbstate when it
	returns -1.


2016-07-06 10:43 -0700  Kevin McCarthy  <kevin@8t8.us>  (88793198dfcb)

	* po/fr.po: merge stable

2016-07-06 10:41 -0700  Kevin McCarthy  <kevin@8t8.us>  (88030069f94d)

	* .hgsigs: mutt-1.6.2 signed

2016-07-06 10:40 -0700  Kevin McCarthy  <kevin@8t8.us>  (592270259a8e)

	* .hgtags: Added tag mutt-1-6-2-rel for changeset 7ccd4417bd70

2016-07-06 10:40 -0700  Kevin McCarthy  <kevin@8t8.us>  (7ccd4417bd70)

	* ChangeLog, UPDATING, VERSION, po/bg.po, po/ca.po, po/cs.po,
	po/da.po, po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po,
	po/eu.po, po/fr.po, po/ga.po, po/gl.po, po/hu.po, po/id.po,
	po/it.po, po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po,
	po/pt_BR.po, po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po,
	po/zh_CN.po, po/zh_TW.po: automatic post-release commit for
	mutt-1.6.2

2016-07-01 13:33 -0700  Kevin McCarthy  <kevin@8t8.us>  (7e817890913c)

	* send.c: Check $pgp_autoinline and $pgp_replyinline if oppenc is set.
	(closes #3846)

	The first oppenc call takes place after the initial checks of
	$pgp_autoline and $pgp_replyinline, and doesn't go through the pgp
	menu.

	Therefore, check for $pgp_autoline and $pgp_replyinline if oppenc is
	set too, to avoid oppenc enabling encryption without INLINE being
	set in those cases.

	a6a4d6ed0f19 previously cleaned things up so that it is safe to set
	INLINE even if encryption isn't enabled.

2016-05-24 12:08 -0700  Kevin McCarthy  <kevin@8t8.us>  (f1f1af650910)

	* keymap.c: Fix infinite loop when help is bound to a named key
	combination.

	Commit a07e8215a0ef introduced a bug in km_error_key, which is
	called when an unbound key is pressed.

	If help is bound to a sequence containing named keys (e.g. <esc>),
	the raw (untokenized) string would be pushed back into the unget
	buffer. This could lead to an infinite loop of unbound key presses
	triggering more unbound keys being put into the unget buffer.

	Change km_error_key to tokenize the string before putting it in the
	unget buffer.

	Much thanks to Jiri Bohac for his bug report, analysis, and initial
	patch!

2016-04-30 14:21 -0700  Kevin McCarthy  <kevin@8t8.us>  (1ef1e39a7218)

	* ChangeLog, UPDATING, VERSION, po/bg.po, po/ca.po, po/cs.po,
	po/da.po, po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po,
	po/eu.po, po/fr.po, po/ga.po, po/gl.po, po/hu.po, po/id.po,
	po/it.po, po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po,
	po/pt_BR.po, po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po,
	po/zh_CN.po, po/zh_TW.po: automatic post-release commit for
	mutt-1.6.1

2016-04-30 14:23 -0700  Kevin McCarthy  <kevin@8t8.us>  (2822cefa33d6)

	* .hgtags: Added tag mutt-1-6-1-rel for changeset 1ef1e39a7218

2016-04-30 14:25 -0700  Kevin McCarthy  <kevin@8t8.us>  (e3bc23cbe3d1)

	* .hgsigs: mutt-1.6.1 signed

2016-04-27 13:08 -0700  Kevin McCarthy  <kevin@8t8.us>  (23334e967dd7)

	* Makefile.am, getdomain.c, mutt_sasl.c, mutt_socket.c, mutt_tunnel.c,
	sys_socket.h: Create a wrapper sys_socket.h to work around Solaris
	namespace issues. (closes #3833)

	Solaris includes "sys/stream.h" inside their "sys/socket.h". This
	include file adds many non-reserved macros to Mutt's namespace, two
	of which conflict with existing Mutt macros.

	The simplest fix would be to rename those macros in Mutt, however
	this will cause difficulty with out-of-tree patches. This fix
	creates a wrapper include file that preserves those existing macros
	and prevents the Solaris values from entering Mutt's namespace.

2016-04-10 16:02 -0700  Kevin McCarthy  <kevin@8t8.us>  (a6a4d6ed0f19)

	* crypt.c, send.c: Fix mutt_protect() when INLINE is set. (closes
	#3828)

	The oppenc changes allow security bits to be set even when not
	encrypting or signing (for instance, OPPENCRYPT and INLINE).

	mutt_protect() assumed that if INLINE is set, then either ENCRYPT or
	SIGN must also be set. Specifically, it would end up inline-signing
	the message even though neither was set.

	Ensure mutt_protect() is a noop if neither SIGN or ENCRYPT are set.

	In ci_send_message(), check for sign or encrypt before calling the
	crypt_get_keys() / mutt_protect() block, and also in the fcc section
	(since clear_content would be NULL if not).

	The second change to the fcc part is somewhat redundant, but better
	to be explicit and avoid the case where the subtype is somehow
	"encrypted" or "signed" even though msg->security wasn't set thus.

2016-04-05 14:31 -0700  Kevin McCarthy  <kevin@8t8.us>  (f7db9cefd3b0)

	* Makefile.am, configure.ac, mutt_idna.h: Fix IDNA functions for
	systems without iconv.

	The IDNA changes for SMTPUTF8 support introduced a bug for systems
	without iconv. For those systems, the local<->intl functions would
	return an error due to the charset conversion failing.

	Change mutt_idna.c back to being conditionally compiled, but this
	time based on HAVE_ICONV. If there is no iconv, stub out the
	functions in mutt_idna.h.

2016-04-02 13:04 -0700  Kevin McCarthy  <kevin@8t8.us>  (b983eb6c1a04)

	* merge default into stable

2016-04-02 11:55 -0700  Kevin McCarthy  <kevin@8t8.us>  (b81408b02cbb)

	* .hgsigs: mutt-1.6.0 signed

2016-04-02 11:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (349f9cb71427)

	* .hgtags: Added tag mutt-1-6-rel for changeset be82a2fde82f

2016-04-02 11:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (be82a2fde82f)

	* ChangeLog, UPDATING, VERSION, po/bg.po, po/ca.po, po/cs.po,
	po/da.po, po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po,
	po/eu.po, po/fr.po, po/ga.po, po/gl.po, po/hu.po, po/id.po,
	po/it.po, po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po,
	po/pt_BR.po, po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po,
	po/zh_CN.po, po/zh_TW.po: automatic post-release commit for
	mutt-1.6.0

2016-04-01 09:38 -0700  Kevin McCarthy  <kevin@8t8.us>  (503bd3a3c818)

	* Makefile.am: Fix hcversion.h generation error when using included
	gettext.

	When configuring mutt with --enable-hcache and
	--with-included-gettext, there is an automake ordering issue:
	BUILT_SOURCES are processed before SUBDIRS. Therefore, the
	'hcversion.h' target is run before the included gettext (intl) is
	built.

	The hcversion.h target runs the cpp over config.h and mutt.h, but
	mutt.h includes lib.h which tries to #include <libintl.h>.
	Unfortunately, libintl.h (in this configuration) is generated by the
	intl subdir build and so doesn't exist yet.

	While the build doesn't completely fail, the resulting hcversion.h
	is incorrect: it's just the md5sum of the initial value of
	BASEVERSION.

	This fix is somewhat of a hack but is cleaner than trying to change
	automake's behavior. It inserts a '#undef ENABLE_NLS' in between the
	config.h and mutt.h sent to the cpp. Since hcachever.sh is just
	scanning the data structures used by mutt, this shouldn't affect the
	hash generated.

	Thanks to Will Yardley for reporting this issue.

2016-03-30 13:16 -0700  Kevin McCarthy  <kevin@8t8.us>  (6e0aca94cdb0)

	* mbyte.c: Filter out bidi marks in rfc2047 and rfc2231 encoding. (see
	#3827)

	Filter out U+200F RIGHT-TO-LEFT MARK and U+200E LEFT-TO-RIGHT MARK
	in rfc2047 and 2231 encoded fields. GNU Screen has a bug that
	corrupts the display, and can cause the wrong email to appear to be
	selected in the index. Until screen fixes the issue, filter it out
	in mutt.

2016-03-29 14:07 -0700  Kevin McCarthy  <kevin@8t8.us>  (96b7714fef87)

	* doc/manual.xml.head: Fix documentation: mime_lookup (not mime-
	lookup).

2016-03-29 15:06 +0200  Vincent Lefevre  <vincent@vinc17.net>  (47aeb87ce9cd)

	* doc/manual.xml.head: Fix typo.

2016-03-26 15:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (62e478a3f1c8)

	* imap/imap.c: Fix error handling in sync_helper() and
	imap_sync_mailbox(). (closes #3817)

	This patch is based on the one Richard Russon found in the Fedora
	package.

	If an error occurs during one of the imap_exec() calls in
	imap_sync_mailbox(), the mailbox could end up being closed. This
	would cause idata->ctx to be NULL. Add a check in sync_helper() for
	the case where idata->ctx == NULL.

	In imap_sync_mailbox(), check the return value of sync_helper(). To
	keep the code simple, change rc from being the sum of the calls to
	the bitwise-OR of the calls. (We only need to know if a single flag
	needs to be updated, and bitwise-OR will detect negatives.)

	Below the calls to sync_helper(), if the call to imap_exec() fails,
	make sure rc is set to -1.

2016-03-26 13:30 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (0b1f1daba437)

	* po/ja.po: Updated Japanese translation.

2016-03-24 12:07 -0700  Benno Schulenberg  <i18n@benno.vertaalt.nl>  (484b34e23f2a)

	* po/eo.po: Updated Esperanto translation.

2016-03-23 15:28 -0700  Kevin McCarthy  <kevin@8t8.us>  (55a389b96d0b)

	* imap/browse.c: Prevent renaming root folder in imap.

	The root folder results in mx.mbox being NULL, which causes a
	segfault. This can be triggered by entering a subfolder and trying
	to rename the ".." entry.

	Due to the translation string freeze, no visible error message is
	displayed. Add a TODO note about this for post-1.6 release.

2016-03-23 14:20 -0700  Kevin McCarthy  <kevin@8t8.us>  (27cde0a2fe32)

	* imap/browse.c: Fix uninitialized prompt buffer in
	imap_mailbox_rename(). (closes #3819)

	This is a patch from OpenBSD to initialize the newname buffer in
	imap_mailbox_rename(). Previously it would generate random garbage
	in the prompt.

	This version of the patch initializes the prompt to the old mailbox
	name.

	Thanks to TAKAHASHI Tamotsu for finding this patch.

2016-03-23 13:17 -0700  Kevin McCarthy  <kevin@8t8.us>  (789500dae762)

	* doc/manual.xml.head: Add "-d" command-line option to manual. (closes
	#3816)

	Thanks to Richard Russon for finding this patch in the Fedora
	package.

2016-03-23 13:06 -0700  Ivan Vilata i Balaguer  <ivan@selidor.net>  (180380cd9119)

	* po/ca.po: Updated Catalan translation.

2016-03-22 18:00 -0700  Kevin McCarthy  <kevin@8t8.us>  (a3450fd50d11)

	* curs_lib.c, protos.h: Clean up mutt_wstr_trunc() some more.

	* Change return type to size_t. The return value is the cumulation
	of values from mbrtowc(), which returns size_t. All callers already
	assign the return value to a size_t, requiring no external changes.

	* Change the local variables n, w, l, and cl to size_t. n is the
	strlen of the src parameter. l and cl are used for the return value.
	w is assigned to the *width parameter, which is size_t.

	 cw is kept as an int, because wcwidth returns type int.

	* Change error handling of mbrtowc to be the same as other functions
	in mutt: only reset mbstate when the retval==-1. When retvat==-2,
	set cl=n to break out of the loop. Also, set wc to replacement_char
	and allow the logic below to determine the width instead of
	hardcoding to 1.

2016-03-20 17:06 -0700  Karel Zak  <kzak@redhat.com>  (c8c76a6a1e61)

	* curs_lib.c: Improve error handling in mutt_wstr_trunc().

	This is Karel Zak's patch to fix handling of (illegal) multi-byte
	chars.

	 * mutt_wstr_trunc(): Reset mbstate after error in mbrtowc(). Set
	wc=0 if wcwidth returns < 0.

	Addresses: https://github.com/karelzak/mutt-kz/issues/58

	Thanks to Richard Russon for bringing this patch to our attention.

2016-03-22 12:35 -0700  Benno Schulenberg  <i18n@benno.vertaalt.nl>  (b302f9868d78)

	* po/nl.po: Updated Dutch translation.

2016-03-21 01:31 +0100  Vincent Lefevre  <vincent@vinc17.net>  (b3703e907d83)

	* po/fr.po: Updated French translation.

2016-03-20 15:38 -0700  Vsevolod Volkov  <vvv@mutt.org.ua>  (2a73a6e7c6e7)

	* po/ru.po: Updated Russian translation.

2016-03-20 15:36 -0700  Vsevolod Volkov  <vvv@mutt.org.ua>  (b3504a7b6cc2)

	* po/uk.po: Updated Ukrainian translation.

2016-03-20 15:30 -0700  Morten Bo Johansen  <mbj@spamcop.net>  (1f8e728ac6af)

	* po/da.po: Updated Danish translation.

2016-03-19 17:25 -0700  Kevin McCarthy  <kevin@8t8.us>  (7992020e522d)

	* sendlib.c: Turn off asserts in sendlib.c.

	The Doctor reported triggering an assertion in convert_file_to(),
	due to an unexpected errno from iconv(). According to the comments,
	the assertions were only enabled for debugging and should have been
	turned off. We certainly don't want to abort mutt for this case, so
	just disable them as the comment indicates.

2016-03-19 16:19 -0700  Petr Pisar  <petr.pisar@atlas.cz>  (36bf3b7ebd2c)

	* po/cs.po: Updated Czech translation.

2016-03-19 06:08 -0700  Kevin McCarthy  <kevin@8t8.us>  (36f855a4a2cc)

	* crypt-gpgme.c, init.c, mutt_ssl.c, pgp.c: Fix a few typos in
	translation messages.

	Thanks to Moritz Barsnick for reporting these.

2016-03-18 12:12 +0100  Vincent Lefevre  <vincent@vinc17.net>  (fb13f458ad16)

	* po/fr.po: Updated French translation.

2016-03-18 10:15 +0100  Vincent Lefevre  <vincent@vinc17.net>  (6630c196ecd8)

	* mutt_ssl.c: Fix typo in debug message.

2016-03-17 17:33 -0700  Richard Russon  <rich@flatcap.org>  (cbf073e5e0d7)

	* recvattach.c: Fix typo picked up by Debian's QA.

	This was allegedly fixed 5 years ago (see #3493).

2016-03-17 17:22 -0700  Richard Russon  <rich@flatcap.org>  (1fb2a924a7c0)

	* Makefile.am: Use '$(PACKAGE).pot' instead of 'mutt.pot' in
	Makefile.am

2016-03-17 17:12 -0700  Richard Russon  <rich@flatcap.org>  (80926cec6d41)

	* hcache.c, imap/auth_gss.c: Fix three build warnings when DEBUG isn't
	defined.

2016-03-16 14:15 -0700  Kevin McCarthy  <kevin@8t8.us>  (cc1af19c0763)

	* hcache.c: Fix tcbdb error reporting to use ecode, not errno.

	After committing aff8d62ebddb and taking a closer look at the tcbdb
	documentation, I realized those functions don't set errno.

	Change the error handling messages to instead get the ecode and
	message using tcbdbecode() and tcbdberrmsg().

2016-03-16 13:33 -0700  Kevin McCarthy  <kevin@8t8.us>  (aff8d62ebddb)

	* hcache.c: Fix crash in hcache_open_tc() when open fails and debug is
	on. (closes #3813)

	When the hcache open fails, it was trying to dprint. The dprint had
	a %s where it was passing errno, leading to a crash in strlen.

	Unify the dprint messages for tcdbopen and tcdbclose to report the
	path, strerror, and errno.

	Thanks to Will Yardley for capturing the stack trace!

2016-03-15 18:04 -0700  Kevin McCarthy  <kevin@8t8.us>  (29b254ac7c12)

	* mbox.c: Prevent ctx->fp from being closed twice in the event of an
	error.

	The previous patch from Vincent exposed a crash if ftruncate() fails
	in mbox_sync_mailbox(). Change fclose() to safe_fclose(), to avoid
	it being called twice.

2016-03-15 18:01 -0700  Vincent Lefevre  <vincent@vinc17.org>  (2a152212cd9a)

	* mbox.c: Check return value of ftruncate() in mbox_sync_mailbox().

	Generate an error in the event that ftruncate() fails.

2016-03-13 19:04 -0700  Kevin McCarthy  <kevin@8t8.us>  (73c8c033e184)

	* init.h: Update the $hostname documentation.

	Change to reflect the updates in changeset ce71d168c819.

2016-03-13 18:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (ad14066bf6c1)

	* UPDATING: Update the UPDATING file for 1.6.0

2016-03-13 11:19 -0700  Kevin McCarthy  <kevin@8t8.us>  (90d0935c3142)

	* rfc2231.c: Fix RFC2231 continuation join order. (closes #3811)
	(closes #3741)

	The function generating a list of parts to join had incorrect
	sorting logic. It was comparing values, not attributes.
	Additionally, the order logic wasn't correct.

	Thanks to TAKAHASHI Tamotsu for pointing out the value vs attribute
	comparison bug.

2016-03-11 13:47 +0100  Vincent Lefevre  <vincent@vinc17.net>  (bd0e695f627e)

	* po/fr.po: Updated French translation.

2016-03-10 15:52 -0800  Kevin McCarthy  <kevin@8t8.us>  (b5f170446e14)

	* doc/manual.xml.head: Improve the mailto_allow documentation.

	Add to the commands list. Document unmailto_allow. Mention the new
	behavior in the Security Considerations section about mailto: links.

2016-03-10 14:59 -0800  Michael Elkins  <me@sigpipe.org>  (ad94dd58966b)

	* doc/manual.xml.head, doc/muttrc.man.head, globals.h, init.c, init.h,
	url.c: Restrict mailto header fields using mailto_allow.

	By default, only the body and subject fields are allowed. These can
	be changed with the mailto_allow and unmailto_allow commands.

2016-03-10 14:20 -0800  Kevin McCarthy  <kevin@8t8.us>  (b46ee6523400)

	* configure.ac: Check stat return value in configure.ac. (closes
	#3810)

2016-03-08 15:57 -0800  Kevin McCarthy  <kevin@8t8.us>  (d07d2e9f1e34)

	* init.h, main.c, mutt.h: Add $resume_edited_draft_files option.

	This adds an extra header when saving edited draft files (-E -H on
	the command line). With this header, the next time they are edited,
	they are automatically "resumed" (by setting $resume_draft_files).

	The idea is to prevent multiple user-defined headers and signatures
	from being added to the draft message by avoiding processing it as a
	brand new message after the first time.

2016-03-08 15:57 -0800  Kevin McCarthy  <kevin@8t8.us>  (24b4f14e9538)

	* init.h, mutt.h, send.c: Add $resume_draft_files option.

	When set, draft files are processed the same as when resuming
	postponed messages. One use of this option is to avoid multiple
	user-defined headers and signatures being added to the message.
	(e.g. when -E is used repeatedly on the draft files).

2016-03-08 13:12 -0800  Derek Martin  <code@pizzashack.org>  (ce71d168c819)

	* getdomain.c, init.c: Improve method of determining FQDN. (closes
	#3298)

	Rather than reading /etc/resolv.conf, use gethostname() and
	getaddrinfo() to get the canonical domain.

	Thanks to Vincent Lefèvre for the memory leak fix.

2016-03-02 15:08 -0800  Kevin McCarthy  <kevin@8t8.us>  (8e77637a1a69)

	* init.h: Document that GPGME doesn't support creating inline PGP
	messages.

2016-03-02 15:08 -0800  Kevin McCarthy  <kevin@8t8.us>  (6034900d1636)

	* crypt-gpgme.c: Add hard redraw for the gpgme application/pgp
	handler.

	Will Yardley reported display artifacts and keyboard issues after
	decrypting a traditional pgp message using gpgme. It turns out the
	gpgpme code path was missing a hard_redraw() to repaint the screen
	after pinentry.

2016-02-28 19:42 -0800  Kevin McCarthy  <kevin@8t8.us>  (d11b6776532f)

	* main.c, mutt.h, send.c: Draft file tweeks: rename flag, don't auto-
	abort on no change.

	Rename the flag to SENDDRAFTFILE since it will be used in contexts
	other than the body allocation.

	Don't automatically abort if the message was unchanged; it seems
	possible the draft files could be used as the entire message reply.

2016-02-15 19:44 -0800  Kevin McCarthy  <kevin@8t8.us>  (909cf6dd067c)

	* contrib/gpg.rc, crypt-gpgme.c, globals.h, init.h, pgp.c: Add
	$pgp_decryption_okay to verify multipart/encrypted are actually
	encrypted. (closes #3770)

	In pgp classic mode, if the $pgp_decrypt_command generated output,
	it assumed the content was encrypted. However, gpg will generate
	output even if the block is simply signed and armored text. The
	problem is that mutt was then printing mime headers labelling the
	output as encrypted text in the ui.

	Add a new option, and suggested value of: set
	pgp_decryption_okay="^\\[GNUPG:\\] DECRYPTION_OKAY" If set, the
	output from the decrypt command will be scanned for this regexp to
	confirm an actual decryption occurred.

	Note that gpgme already correctly rejects this form of spoofed
	message.

2016-02-11 15:12 -0800  Kevin McCarthy  <kevin@8t8.us>  (b55c6a64a07b)

	* crypt-gpgme.c: Update the status message after decryption using
	gpgpme.

	Change gpgme to behave the same as classic pgp mode: after a
	decryption, update the status message to overwrite the initial
	"Invoking PGP..." message.

2016-02-11 02:15 +0100  Vincent Lefevre  <vincent@vinc17.net>  (3b59ef2bf032)

	* po/fr.po: Updated French translation.

2016-02-07 10:15 -0800  Kevin McCarthy  <kevin@8t8.us>  (87c46e1f6f8c)

	* postpone.c: Fix pgp and smime decryption in mutt_prepare_template().

	Change the "combined" multipart decryption block to only work for
	pgp, since mutt_is_multipart_encrypted() currently only checks for
	pgp headers and it therefore only worked for pgp in the first place.

	Fix the newhdr->security to be based on what that function returns,
	instead of the "context" hdr passed in.

	Add a smime decryption block below when iterating through the
	content.

	Fix the application/pgp decryption block to assign to hdr->security
	using the type of the app/pgp part instead of hdr->content.

2016-02-07 10:15 -0800  Kevin McCarthy  <kevin@8t8.us>  (a4d885bb36ab)

	* compose.c, doc/manual.xml.head, doc/mutt.man, main.c, mutt.h,
	protos.h, send.c: Add new flag -E to modify draft/include file.
	(closes #3799)

	Specifying -E with -i will cause mutt to directly edit the include
	file.

	Specifying -E with -H will cause the draft file to be regenerated
	from the latest version of the email on exit.

	Improve -H so that it will read (and write) multipart messages.

2016-01-26 13:46 -0800  Kevin McCarthy  <kevin@8t8.us>  (e8f7a08cb7ac)

	* doc/manual.xml.head: Mention <what-key> under the key bindings
	documentation.

2016-01-23 12:30 -0800  Kevin McCarthy  <kevin@8t8.us>  (df42596d08fe)

	* lib.h: Increase HUGE_STRING size to 8192. (see #3804)

	The interface for editing a large number of recipients is poor and
	perhaps shouldn't be using a fixed buffer size. Until a redesign can
	be thought about, this will help.

2016-01-19 14:05 -0800  Kevin McCarthy  <kevin@8t8.us>  (b315c4d4ede7)

	* imap/auth_sasl.c, pop_auth.c, smtp.c: Make sasl authentication
	buffers dynamically sized. (see #3804)

	The reporter found that the current buffer of HUGE_STRING was
	insufficient in his case to encode the clientout response back to
	the server in imap_auth_sasl().

	Since sasl gives us the size of "clientout", we can dynamically
	malloc and resize the buffer as needed. This patch uses
	max(LONG_STRING, (clientoutlen*2)). This is sufficient to hold the
	base64 encoded value plus additional prefix/suffix needed in each
	protocol.

	The size is rechecked after each sasl_client_step() and resized as
	needed.

	Similar code is in pop_auth_sasl() and smtp_auth_sasl(), so convert
	all three to use a dynamic buffer.

2016-01-05 18:08 -0800  Kevin McCarthy  <kevin@8t8.us>  (7c0bd34546f4)

	* smime.c: Allow tab as a delimiter in smime .index files. (closes
	#3802)

	The old parsing code used fscanf, and so happened to allow a tab as
	a delimiter. Even though smime_keys.pl uses a space, some users
	maintain their own .index files by hand (using tab delimiters), so
	continue to allow that delimiter.

	Thanks to Andre for the bug report and patch.

2016-01-04 16:28 -0800  Kevin McCarthy  <kevin@8t8.us>  (cf4c1c21e58d)

	* compose.c: Add a couple missing ATTACHPTR->tree frees.

	While working on ticket 3800, I noticed the tree wasn't being freed
	inside OP_COMPOSE_EDIT_HEADERS. Add a free there, and in the cleanup
	at the end of mutt_compose_menu().

	A few other sections in mutt_compose_menu() are performing a free-
	on-error where the tree isn't allocated yet, so skip it for those.

	I believe this is actually not fixing a memory leak: all attachments
	are always at level 0 in the compose menu (as far as I know); so
	nothing is ever allocated in the tree pointer. However since other
	parts of the code in compose.c clean this up, it make sense to add
	them here too.

2016-01-04 13:57 -0800  S. Gilles  <sgilles@math.umd.edu>  (960017a249f7)

	* color.c: Prefer bright versions (8-15) of colors for brightXXX
	backgrounds.

	When a bright color is specified as a background, try to use the
	bright version of that color, falling back to the A_BLINK method
	only on terms which do not support enough colors.

2016-01-01 12:24 -0800  Kevin McCarthy  <kevin@8t8.us>  (d3f31cf9239e)

	* parse.c: Use strrchr to search for Received date separator. (closes
	#3798)

	Sample email provided by the submitter showed a Received header with
	a ";" at the end of each line, instead of a single ";" in front of
	the date. The emails are obviously not RFC compliant, but the fix is
	simple enough: find the last ";" using strrchr instead of the first.

2016-01-01 12:16 -0800  Kevin McCarthy  <kevin@8t8.us>  (cec45c0a405e)

	* doc/manual.xml.head: Update manual copyright too.

2016-01-01 12:07 -0800  Kevin McCarthy  <kevin@8t8.us>  (b74ce90c7ba1)

	* account.c, account.h, ascii.h, bcache.c, bcache.h, commands.c,
	crypt-gpgme.c, crypt.c, cryptglue.c, curs_lib.c, curs_main.c,
	enter.c, globals.h, imap/auth.c, imap/auth.h, imap/auth_sasl.c,
	imap/browse.c, imap/command.c, imap/imap.c, imap/imap.h,
	imap/imap_private.h, imap/message.c, imap/message.h, imap/util.c,
	init.h, keymap.c, lib.c, mutt_idna.c, mutt_sasl.c, mutt_sasl.h,
	pager.c, parse.c, pattern.c, pgp.c, pgp.h, pgpkey.c, pgplib.h,
	pgppacket.c, pop.c, postpone.c, rfc3676.c, rfc822.c, send.c,
	smime.c, smime.h, smime_keys.pl, smtp.c, url.c: Convert copyright
	years to all use 4 digit years.

	Vincent Lefèvre pointed out the common shortcut, e.g 1996-9, is
	actually not allowed for copyright years. Convert all the copyright
	years (for mutt files) to use 4 digits.

2016-01-01 12:07 -0800  Kevin McCarthy  <kevin@8t8.us>  (fdd3fdd6f708)

	* COPYRIGHT, account.h, attach.c, bcache.c, browser.c, buffy.c,
	buffy.h, color.c, compose.c, copy.c, crypt-gpgme.c, curs_lib.c,
	curs_main.c, enter.c, from.c, handler.c, headers.c,
	imap/auth_login.c, imap/command.c, imap/imap.c, imap/imap_private.h,
	imap/util.c, init.c, init.h, keymap.c, keymap.h, lib.c, lib.h,
	main.c, mbox.c, mh.c, mime.h, mutt.h, mutt_curses.h, mutt_idna.c,
	mutt_sasl.c, muttlib.c, mx.c, mx.h, pager.c, parse.c, pattern.c,
	pgp.c, pop.c, postpone.c, protos.h, query.c, recvattach.c,
	rfc1524.c, rfc2047.c, rfc822.c, send.c, sendlib.c, signal.c,
	smime_keys.pl, system.c: Update copyright notices.

	This patch only updates existing copyright notices in the source
	files, using commit dates since the last copyright update in commits
	e3af935cdb1a and f8fd60d8d3f2.

	Add a notice to the COPYRIGHT file to refer to our mercurial
	repository for the full commit history.

	Add myself to the COPYRIGHT file and smime_keys.pl file.

2016-01-01 09:52 -0800  Kevin McCarthy  <kevin@8t8.us>  (c6471322c68f)

	* compose.c: merge stable

2016-01-01 09:48 -0800  Kevin McCarthy  <kevin@8t8.us>  (f99561e22a99)

	* compose.c: Fix segfault when deleting and reusing attachment slots.
	(closes #3800)

	When attachments are deleted, delete_attachment() slides the entries
	down in the idx array, but forgets to NULL out the last vacated
	slot.

	If more attachments are added later on via OP_COMPOSE_EDIT_HEADERS
	and the Attach: pseudo-header, mutt_gen_attach_list() will attempt
	to re-use the ATTACHPTR in that last slot because it wasn't set to
	NULL. This will be pointing to freed memory and likely segfault (at
	best).

2015-12-17 12:25 -0800  Kevin McCarthy  <kevin@8t8.us>  (9480a363a68a)

	* init.h: Add missing "yes" to $recall option documentation.

	Also add a blurb about the <recall-message> function.

2015-12-17 07:37 -0800  Kevin McCarthy  <kevin@8t8.us>  (52df4013b0b7)

	* doc/manual.xml.head: Reword new f=f documentation.

	Reword a couple parts, as Oswald Buddenhagen suggested the original
	wording was somewhat confusing.

2015-12-15 15:29 -0800  Kevin McCarthy  <kevin@8t8.us>  (e52d3e9c83d8)

	* doc/manual.xml.head, init.h, mutt.h, rfc3676.c: Add
	$reflow_space_quotes option. (closes #3309)

	When viewing and replying to a flowed email, add spacing between the
	quotes to improve readability and interoperability with non-flowed
	replies.

	Add a section to the documentation discussing support for viewing
	and non-flowed replies to flowed emails.

2015-12-08 09:12 -0800  Kevin McCarthy  <kevin@8t8.us>  (02bc14ed1569)

	* merge stable

2015-12-08 09:11 -0800  Kevin McCarthy  <kevin@8t8.us>  (f542783e257d)

	* mh.c: Fix hash table key "use after free" in mh_check_mailbox().
	(closes #3797)

	The fnames hash uses the maildir->header->path as the key. As
	matches are found, the headers are freed. This inadvertantly also
	freed the key to the hashtable entry; the next hash_find() going to
	the same bucket might end up comparing keys with a freed string.

	This patch stores the path in the struct maildir canon_fname field
	(just as maildir_check_mailbox() does) and uses that as the hash key
	instead. This field isn't used outside of maildir_check_mailbox(),
	and is automatically freed for us in the maildir_move_to_context()
	call at the bottom of both functions.

	Note there are other ways to fix this problem:
	- Add a new mode to the hash table, causing it to strdup the keys and
	free them itself.
	- Delete the entries in the fnames hash, rather leaving them there.
	The first seems the cleanest, but would end up touching much more
	code. The second is also clean, but might have a negative
	performance impact.

	Additionally, peeking back in history to changeset 1d45a50b6f9b, it
	looks like the canon_fname used to be used by mh too, so perhaps
	removing the strdup may have been a mistake during refactoring at
	some point.

2015-12-07 12:22 +0100  Vincent Lefevre  <vincent@vinc17.net>  (72fbf15cd9a1)

	* po/fr.po: Updated French translation.

2015-12-03 15:23 -0800  Kevin McCarthy  <kevin@8t8.us>  (bce2a0e71bf6)

	* crypt.c: Provide a better prompt and error for inline PGP with
	attachments. (closes #3738)

	Change mutt_protect() to check for text/plain before trying to
	invoke crypt_pgp_traditional_encryptsign(). This way, mutt can
	provide a bit more specific prompt and error message.

	Since pgp_mime_auto says it will prompt in the event of any failure,
	keep the more generic prompt after the encryptsign call too.

2015-12-01 18:20 -0800  Kevin McCarthy  <kevin@8t8.us>  (5e5aff1782dc)

	* crypt.c: Loosen mutt_signed_handler() protocol value consistency
	check. (closes #3639)

	Apparently, for S/MIME, some MUAs mismatch the protocol value of the
	multipart/signed and the content-type of the signature: putting
	"pkcs7-signature" in one and "x-pkcs7-signature" in the other.

	Change mutt_signed_handler() to independently verify the values of
	the protocol and the content-type. This still checks for correct
	values but doesn't ensure they match between the two (for S/MIME).

2015-11-30 15:52 -0800  Kevin McCarthy  <kevin@8t8.us>  (428a92464d5b)

	* contrib/smime.rc, globals.h, init.h, smime.c: smime: allow signing
	message digest algorithm to be specified.

	Currently, Mutt hardcodes micalg=sha1 for signed messages.
	Unfortunately, the actual message digest algorithm used defaults to
	the value in the "Signature Algorithm" field in the signing key's
	certificate.

	Add a new configuration option $smime_sign_digest_alg, defaulting to
	sha256. Add a new printf format string, %d, to be used in the
	signing command to specify the digest algorithm. Modify the sample
	$smime_sign_command to include "-md %d".

	Note: This solution requires using the modified $smime_sign_command,
	or else the micalg parameter again may not match the algorithm used.
	An alternative solution would be to query the certificate "Signature
	Algorithm" field and try to change the micalg to match it, but this
	method is easier to implement and provides better control for the
	user to configure, in any case.

2015-11-26 11:01 -0800  Kevin McCarthy  <kevin@8t8.us>  (ff560d1f3f7a)

	* smtp.c: Clean up address_uses_unicode() (closes #3794)

	Pull the null check out of the loop. Use a bit comparison to detect
	if the high bit is set: this avoids a warning for platforms where
	char is implicitly signed (where comparing < 128 is always true).

2015-11-24 21:45 -0800  Kevin McCarthy  <kevin@8t8.us>  (94186a96ca17)

	* mutt_idna.c: Fix bad idn error on local mailboxes. (closes #3795)

	Commit 831abf39d53a pulled the mbox_to_udomain() call inside the
	conversion functions. Unfortunately, this causes local (user only)
	mailboxes to be considered conversion errors instead of just
	skipping them.

	Revert mbox_to_udomain() back to using a static buffer and pull back
	into the mutt_addrlist_to_local/intl() functions.

	Pass the user and domain into the conversion functions instead of
	the address.

2015-11-24 15:49 -0800  Kevin McCarthy  <kevin@8t8.us>  (0d7ce56bbafd)

	* mutt_idna.c: Add user reversibility check in intl_to_local.

	This ensures we don't lose information by converting to the local
	charset.

2015-11-24 15:49 -0800  Kevin McCarthy  <kevin@8t8.us>  (935c779db0ea)

	* smtp.c: Implement SMTPUTF8 capability support in smtp.c

	This is patch 4 of 4 implementing support for SMTPUTF8 (RFC 6531).

	RFC6532 support already worked: rfc822*.c already parsed messages in
	exactly the way RFC6532 wants.

	Thanks for Arnt Gulbrandsen for the original patch.

2015-11-24 15:49 -0800  Kevin McCarthy  <kevin@8t8.us>  (151ff413e21a)

	* init.h, mutt.h, mutt_idna.c: Add option 'idn_encode'; rename option
	'use_idn' to 'idn_decode'.

	This is patch 3 of 4 implementing support for SMTPUTF8 (RFC 6531).

	Add an option to control whether international domains are encoded
	with IDN or not. This defaults to set, for backward compatibility.

	Rename the use_idn option to idn_decode, since that more properly
	reflects its purpose.

2015-11-24 15:49 -0800  Kevin McCarthy  <kevin@8t8.us>  (831abf39d53a)

	* mutt_idna.c: Rewrite address local-to-intl conversion functions.

	This is patch 2 of 4 implementing support for SMTPUTF8 (RFC 6531).

	Perform charset conversion from local to UTF-8 for both the user and
	domain parts of the address.

	If IDN is enabled and the options (added in the next patch) are
	turned on, encode/decode the domain part.

	Use the intl_checked and is_intl status bits to record the
	intl/local status of the ADDRESS mailbox part.

2015-11-24 15:49 -0800  Kevin McCarthy  <kevin@8t8.us>  (814ece9689cc)

	* Makefile.am, alias.c, commands.c, compose.c, configure.ac, edit.c,
	init.c, main.c, mutt_idna.c, mutt_idna.h, query.c, recvcmd.c,
	rfc822.c, rfc822.h, send.c, sendlib.c: Rename idna functions and
	bits for smtputf8 changes.

	This is patch 1 of 4 implementing support for SMTPUTF8 (RFC 6531).

	Change mutt_idna.c to be always compiled. Remove the stub functions
	in mutt_idna.h. Instead, put #ifdefs around the idna function calls.
	The conversion functions will be fixed up in the next patch.

	Rename the conversion functions to mutt_addrlist_to_intl() and
	mutt_env_to_intl(). Rename the ADDRESS idna status bits to "intl"
	status bits.

2015-11-21 15:28 -0800  Kevin McCarthy  <kevin@8t8.us>  (e635ce43b001)

	* imap/browse.c: Remove redundant mbox delimiter check in
	imap_browse(). (closes #3646)

	imap_fix_path() removes duplicate and trailing delimiters, so the
	check below it was redundant. This also made it appear list.delim
	could be used uninitialized.

	Remove the check, but add a check to make sure the "fixed" path has
	len>0, to prevent oob accesses of mbox[n-1] below.

	Lastly, remove a redundant n=strlen(mbox) inside the initial LIST
	processing loop. The mbox isn't changed from above, so there is no
	need to rerun strlen.

2015-11-18 16:14 -0800  Kevin McCarthy  <kevin@8t8.us>  (444f1f013f1b)

	* enter.c: Fix memcpy buf=NULL/len=0 issue in replace_part(). (closes
	#3790)

	Calling memcpy with src or dest=NULL is technically illegal, even if
	len=0. Recent compilers seem to now be generating warnings/errors
	with this.

	replace_part() is currently the only place we are getting bug
	reports, so for now just fix the problem in this one place.

2015-11-09 18:53 -0800  Kevin McCarthy  <kevin@8t8.us>  (c799162691b2)

	* pattern.c: Improve error messages for eat_date() and eat_regexp().

	After calling mutt_extract_token(), s->dptr will typically be at the
	end of the string if an error occurred. Save a pointer to the
	beginning of the expression, so it can be properly displayed in the
	error message.

	Convert eat_date() and eat_regexp() to use the same iconv strings
	for the error message.

2015-11-09 15:40 -0800  Kevin McCarthy  <kevin@8t8.us>  (1c151d8800de)

	* curs_lib.c, lib.h, pattern.c, rfc2047.c, rfc822.c: Fix possible
	unintentional '\0' strchr matches.

	After fixing the ticket 3787 strchr issue, this patch cleans up
	other potentially incorrect uses of strchr for the '\0' case.

	In mutt_multi_choice(), mutt_getch() can technically return 0.
	Although it seems the user would have to try quite hard to do this,
	it's incorrect to return that index into letters. Change "ch.ch==0"
	to be considered the same as an abort.

	is_email_wsp() is used in a couple places where it wasn't obvious
	whether '\0' was being accounted for, so add an explicit check to
	the function.

	Inside eat_date(), if mutt_extract_token() had no input and returned
	"", the strchr ("<>=", buffer.data[0]) below would return a pointer.
	In actuality, this is prevented by an empty parameter check inside
	mutt_pattern_comp(), but it doesn't hurt to make it the same as
	eat_regexp() and have the check explicitly done here too.

	rfc2047_encode() was another borderline case for adding a check. The
	convert_string() sets a length, so it seems highly unlikely that *t
	could be 0, but doesn't hurt to add the check.

	The find_encoded_word() fix looks necessary. If the passed in s was
	something like "=?charset?" (followed by EOS, '\0'), the
	strchr("BbQq", q[1]) would in fact return a pointer and the
	following q[2] would read past the end of string. If q[2] happened
	to be '?', it might even continue reading in the for loop below.

	Lastly, in parse_mailboxdomain(), the potential overread was already
	fixed in changeset:a6919571eb59, but although the nonspecial and
	special strchr() line happens to "work" for the case of '\0', it's
	pretty fragile to leave as is. It's better to be explicit and just
	return if we hit EOS without calling next_token().

2015-10-20 17:59 +0200  Vincent Lefevre  <vincent@vinc17.net>  (17991330c086)

	* po/fr.po: Updated French translation.

2015-10-18 20:05 +0800  Kevin McCarthy  <kevin@8t8.us>  (41af5a753d6f)

	* merge stable

2015-10-18 19:45 +0800  Kevin McCarthy  <kevin@8t8.us>  (a6919571eb59)

	* rfc822.c: Fix next_token() oob read. (closes #3787)

	With specially crafted input to 'mutt -H', the line "Return-Path:<()
	" is read and passed to mutt_parse_rfc822_line(). "<() " is then
	passed through to rfc822_parse_adrlist().

	Eventually, inside next_token(), is_special(*s) is called when s
	points to the end of the string ('\0'). This macro calls strchr,
	which will actually match and return a pointer to the trailing '\0'
	in RFC822Specials! This causes "s + 1" to be returned, skipping past
	the end of string inside parse_mailboxdomain().

	This patch adds a check to make sure *s is non-null before calling
	is_special(*s).

2015-10-17 11:15 +0800  Kevin McCarthy  <kevin@8t8.us>  (19c3406fbad9)

	* compose.c: Fix error message for attach-message. (closes #3785)

	Currently if mx_open_mailbox() fails when trying to attach a
	message, mutt_perror() is called. Change this to call mutt_error()
	instead, since errno isn't set for all failure cases.

2015-10-08 13:17 +0200  Vincent Lefevre  <vincent@vinc17.net>  (7aa4e6fc6884)

	* po/fr.po: Updated French translation.

2015-10-04 10:08 +0800  Kevin McCarthy  <kevin@8t8.us>  (a07e8215a0ef)

	* browser.c, commands.c, curs_lib.c, curs_main.c, keymap.c, menu.c,
	mutt.h, mutt_curses.h, mutt_ssl.c, mutt_ssl_gnutls.c: Create a
	separate macro/push/exec event buffer. (closes #3779)

	Currently, the SSL and TLS certficate prompts turn on
	OPTUNBUFFEREDINPUT, (to prevent macros and such from running right
	through the dialog). Unfortunately, the menu dialog processing in
	menu_dialog_dokey() is using mutt_ungetch() to forward non-dialog
	keys on to standard menu processing. With OPTUNBUFFEREDINPUT set,
	those keys never make it to the menu and are buffered until after
	the menu dialog.

	This patch creates a new event buffer, separate from the standard
	"unget" buffer, for use by macros, exec, and push events. These
	events can be temporarily ignored by setting OPTIGNOREMACROEVENTS
	(renamed from OPTUNBUFFEREDINPUT), while continuing to allow unget
	events to be processed.

	Since the "push" and "unget" functions now go to different buffers,
	function names were slightly renamed, to make it less easy to
	unintentionally use the wrong function at the wrong time.

2015-10-04 10:08 +0800  Kevin McCarthy  <kevin@8t8.us>  (ac156dcc2c54)

	* menu.c, mutt_ssl.c, mutt_ssl_gnutls.c: Fix menu type in certificate
	prompt. (see #3779)

	The menu type is used in several places as a direct index into
	Keymaps[], so passing in -1 to mutt_new_menu() was leading to
	illegal memory accesses later on.

	Add a range check in mutt_new_menu(), defaulting to MENU_GENERIC, to
	prevent this problem in the future.

2015-10-01 15:38 +0800  Kevin McCarthy  <kevin@8t8.us>  (9de2f1c6da87)

	* compose.c: Improve prompt when switching between PGP and S/MIME.
	(closes #3777)

	Only prompt when encrypt or sign is enabled.

	Also, improve oppenc to run and refresh the status when switching.

2015-09-30 11:25 +0800  Kevin McCarthy  <kevin@8t8.us>  (909dfe9878ff)

	* smime.c: Fix chomp in smime_handle_cert_email.

	During a review of the previous patch, Oswald Buddenhagen noticed
	two of the fixed oob reads had another problem: they were "chomping"
	(the newline) without verifying there actually was a newline at the
	end of the string.

2015-09-30 11:25 +0800  Kevin McCarthy  <kevin@8t8.us>  (d9142ca37afb)

	* smime.c: merge stable

2015-09-30 11:21 +0800  Kevin McCarthy  <kevin@8t8.us>  (590ff6eebe1a)

	* parse.c, smime.c, smtp.c: Fix oob reads when fgets returns "\0".
	(closes #3776)

	The ticket reported an out of bounds read in mutt_read_rfc822_line()
	when a '\0' was embedded on its own line in the headers. The
	function assumed if fgets() didn't return NULL, then the string
	would have at least one character.

	I scanned the rest of the code and found three other places making
	the same assumption for fgets.

	Thanks to hanno for finding this with the "american fuzzy lop" tool.

2015-09-20 20:37 -0400  Derek Schrock  <dereks@lifeofadishwasher.com>  (aec82c4dd826)

	* UPDATING, hdrline.c, init.h, send.c: Add new optional index_format
	expandos %r and %R.

	These generate a comma separated list of all the To and Cc
	recipients.

	Also, increase the attribution buffer size to accommodate these new
	expandos.

2015-09-21 10:28 +0800  bat guano  <bat.guano@don.blech.e4ward.com>  (93c6ae1ef01b)

	* po/de.po: German translation fix. (closes #3701)

2015-09-20 19:05 +0800  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (2fdec286cfb7)

	* po/ja.po: Updated Japanese translation.

2015-09-20 18:58 +0800  Kevin McCarthy  <kevin@8t8.us>  (61c754a8effd)

	* pager.c: Translation improvements.

	Thanks to TAKAHASHI Tamotsu for pointing out these ones I missed.

2015-09-13 14:41 +0800  Kevin McCarthy  <kevin@8t8.us>  (e85eda4ee425)

	* po/Makefile.in.in, po/bg.po, po/hu.po, po/ko.po, po/pt_BR.po,
	po/uk.po: Enable msgfmt translation check flag -c.

	Fix discovered translation format string errors.

2015-09-13 11:47 +0800  Kevin McCarthy  <kevin@8t8.us>  (6eb6b41f5d45)

	* compose.c, crypt-gpgme.c, curs_main.c, edit.c, editmsg.c,
	imap/message.c, mutt_ssl.c, muttlib.c, pgp.c, send.c, smime.c: Add
	translation comments and improvements.

	These were suggested by TAKAHASHI Tamotsu.

2015-09-12 11:25 +0800  Kevin McCarthy  <kevin@8t8.us>  (1a281a527cb7)

	* crypt-gpgme.c: Improve translation string in crypt-gpgme.c

	Combine into a single buffer to make the translation easier. Also,
	mark a couple todos for alignment problems.

2015-09-06 16:31 -0700  Kevin McCarthy  <kevin@8t8.us>  (2dac9fa02842)

	* imap/browse.c: Fix double-decode during IMAP browse.

	cmd_parse_list() already calls imap_unmunge_mbox_name() on the
	mailbox names returned from the server. However,
	browse_add_list_result() was taking those mailbox names and passing
	them to imap_add_folder(), which was calling
	imap_unmunge_mbox_name() yet again.

	The reason is that imap_browse() was directly calling
	imap_add_folder() too, passing in a previously encoded "mbox" name.
	After looking carefully at the code, I could find no reason that
	mbox needed to be encoded outside of the LIST commands.. Therefore I
	changed imap_browse() to call imap_munge_mbox_name() on mbox for the
	two LIST commands generated from it instead, and removed the
	imap_unmunge_mbox_name() call inside imap_add_folder().

2015-09-06 07:41 -0700  Kevin McCarthy  <kevin@8t8.us>  (c6a6b7d3b83d)

	* merge stable

2015-09-06 07:40 -0700  Kevin McCarthy  <kevin@8t8.us>  (40c47fcc9d17)

	* mx.c: Fix use after free of ctx->last_tag. (closes #3775)

	When using imap to access gmail, tagging and saving messages to "all
	mail" and pressing <sync-mailbox> can result in the call path:
	mx_check_mailbox() imap_check_mailbox() imap_cmd_finish()
	imap_expunge_mailbox() mx_update_tables() followed by:
	mx_sync_mailbox()

	The HEADER pointed to by ctx->last_tag will be removed and FREE'ed
	in mx_update_tables(), but will subsequently be accessed in
	mx_sync_mailbox().

	This patch simply sets ctx->last_tag=NULL if it is freed inside
	mx_update_tables().

	Thanks to Peter Lekensteyn for the bug report and ASAN report.

2015-09-05 19:55 -0700  Morten Bo Johansen  <mbj@spamcop.net>  (58cbc3235db6)

	* po/da.po: Updated Danish translation.

2014-07-17 16:05 +0200  Kevin McCarthy  <kevin@8t8.us>  (bd2c2a6058a7)

	* imap/browse.c, imap/command.c, imap/imap.c, imap/imap_private.h,
	imap/message.c, imap/utf7.c, imap/util.c: Add support for utf-8
	mailboxes in imap.

	This adds support for RFC6855 to imap/*.c.

	Thanks to Arnt Gulbrandsen for the original patch.

2015-09-02 18:14 -0700  Kevin McCarthy  <kevin@8t8.us>  (5700b43f1e5b)

	* crypt-gpgme.c: merge stable

2015-09-02 18:11 -0700  Kevin McCarthy  <kevin@8t8.us>  (f675e853af12)

	* crypt-gpgme.c: Add time_t conversion to fix gpgme segfault on
	OpenBSD.

	time_t isn't the same size as gpgme_subkey_t->timestamp on OpenBSD.
	Passing &subkey->timestamp to localtime was therefore passing an
	address to the wrong size int and was causing a segfault.

	Thanks to Hannes Wenzel for reporting the bug and providing a patch.

2015-09-02 15:02 -0700  Kevin McCarthy  <kevin@8t8.us>  (8bbcfa2af7b6)

	* crypt-gpgme.c, pgp.c, smime.c: Add L10N messages for the pgp/smime
	send menus.

	This documents the 'f' "forget it" choice for translators.

	Thanks to Benno Schulenberg for pointing this out and for the
	original patch.

2015-09-02 14:43 -0700  Kevin McCarthy  <kevin@8t8.us>  (f7859d96006c)

	* alias.c, curs_main.c, doc/devel-notes.txt, po/Makefile.in.in: Flag
	translator comments using L10N.

	Add comment to devel-notes.txt documentation.

2015-08-31 09:32 -0700  Kevin McCarthy  <kevin@8t8.us>  (62730ecbc17d)

	* mkinstalldirs: merge default into stable

2015-08-30 10:27 -0700  Kevin McCarthy  <kevin@8t8.us>  (2f0d516fc638)

	* .hgsigs: mutt-1.5.24 signed

2015-08-30 10:26 -0700  Kevin McCarthy  <kevin@8t8.us>  (a494c8f932fa)

	* .hgtags: Added tag mutt-1-5-24-rel for changeset 08e81162482f

2015-08-30 10:26 -0700  Kevin McCarthy  <kevin@8t8.us>  (08e81162482f)

	* ChangeLog, VERSION, po/bg.po, po/ca.po, po/cs.po, po/da.po,
	po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po, po/eu.po,
	po/fr.po, po/ga.po, po/gl.po, po/hu.po, po/id.po, po/it.po,
	po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po,
	po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po,
	po/zh_TW.po: automatic post-release commit for mutt-1.5.24

2015-08-30 10:21 -0700  Benno Schulenberg  <i18n@benno.vertaalt.nl>  (d9b1c4b6662f)

	* po/eo.po: Partially updated Esperanto translation.

2015-08-30 10:18 -0700  Benno Schulenberg  <i18n@benno.vertaalt.nl>  (b9864644b6a2)

	* commands.c: Minor translation fixes.

	This makes two equivalent translation messages the exact same so
	they only need to be translated once.

	It also adds a missing translation marker (for the same string).

	This same string is used in recvcmd.c so does not generate a new
	translation string.

2015-08-30 10:08 -0700  Kevin McCarthy  <kevin@8t8.us>  (934fbd272ce6)

	* UPDATING: Set release date. Minor fixes to release notes.

2015-08-29 12:51 -0700  Ivan Vilata i Balaguer  <ivan@selidor.net>  (faa85ed8a7c9)

	* po/ca.po: Updated Catalan translation.

2015-08-29 12:40 -0700  Benno Schulenberg  <i18n@benno.vertaalt.nl>  (14a2ad40e954)

	* po/nl.po: Updated Dutch translation.

2015-08-29 07:40 -0700  Benno Schulenberg  <i18n@benno.vertaalt.nl>  (0d346dc8dccb)

	* smime.c: Minor translation fix.

	This makes two equivalent translation messages the exact same so
	they only need to be translated once.

2015-08-28 07:35 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (e33ba8f72a40)

	* po/ja.po: Updated Japanese translation.

2015-08-20 11:18 -0700  Vsevolod Volkov  <vvv@mutt.org.ua>  (b3c095648df6)

	* po/ru.po: Updated Russian translation.

2015-08-19 09:41 -0700  Petr Pisar  <petr.pisar@atlas.cz>  (83760f05bb46)

	* po/cs.po: Updated Czech translation

2015-08-17 14:51 -0700  Kevin McCarthy  <kevin@8t8.us>  (c0180991c352)

	* configure.ac: Add idn to MUTTLIBS instead of LIBS (see #3638)

	Currently, -lidn is included while linking all the mutt binaries.
	Add it to MUTTLIBS instead so it's only used for the mutt linking.

	Also, add $LIBICONV to $LIBS before checking for some of the idna
	functions. On some sytems, there are apparently issues when using
	static linking. (Thanks to grarpamp for reporting).

2015-08-17 12:31 -0700  Kevin McCarthy  <kevin@8t8.us>  (356443232291)

	* muttlib.c, protos.h: Change mutt_adv_mktemp to call mutt_mktemp
	instead of mktemp. (see #3638).

	mutt_mktemp is currently called in 95% of the cases in mutt, and is
	already our "own rolled" version of mktemp. The "insecure mktemp
	warning" discussion keeps coming up, so instead add prefix and
	suffix functionality to mutt_mktemp() and call that.

	All other uses of Tempdir in the mutt source did not call
	mutt_expand_path() first, so remove that from mutt_adv_mktemp().

2015-08-17 12:26 -0700  Kevin McCarthy  <kevin@8t8.us>  (8b2fe6a4db79)

	* configure.ac: Enable C99 mode for compiler. (See #3638).

	This is already the default for clang (FreeBSD) so shouldn't cause
	any issues.

	Enabling this will increase the allowed static string length and
	remove the Copyright length warning.

2015-08-11 11:20 -0700  Kevin McCarthy  <kevin@8t8.us>  (55ea6e829b46)

	* Makefile.am: Compile txt2c using automake rules.

	The compilation rule used $< which isn't portable for ordinary make
	rules.

2015-08-11 11:20 -0700  David Champion  <dgc@bikeshed.us>  (eb4aaf4581ac)

	* txt2c.sh: Fix txt2c.sh sed invocations to use posix syntax.

2015-08-07 03:38 +0200  Vincent Lefevre  <vincent@vinc17.net>  (711708700602)

	* po/fr.po: Updated French translation.

2015-07-29 09:26 -0700  Kevin McCarthy  <kevin@8t8.us>  (34ca1c5fdd45)

	* doc/manual.xml.head: Minor documentation fix.

	In one place, the documentation mentioned 'alternative-order'
	instead of 'alternative_order'.

2015-07-29 09:07 -0700  Kevin McCarthy  <kevin@8t8.us>  (75e398daa94c)

	* doc/manual.xml.head, hook.c: Add error handling for ^ and other
	empty mailbox shortcuts.

	(closes #2402) (closes #3735)

	Explicitly mention the ^ example in the documentation added in
	6d733cab6b45.

	Add an error message for ^ when CurrentFolder is not set. Add checks
	for other mailbox shortcuts that expand to the empty string. This
	could happen if the @alias shortcut was accidentally used, or the
	value referenced by a shortcut isn't set yet.

2015-07-27 14:09 -0700  Kevin McCarthy  <kevin@8t8.us>  (6d733cab6b45)

	* doc/manual.xml.head: Add "Mailbox Matching in Hooks" section to
	manual.

	Folder-hook and mbox-hook perform mailbox shortcut expansion on the
	regexp parameter. Add a section to the manual to give examples and
	make the behavior clearer.

2015-07-26 14:48 -0700  Kevin McCarthy  <kevin@8t8.us>  (21a08f9abc80)

	* crypt-gpgme.c, crypt.c, handler.c, mutt_crypt.h, pgp.c,
	recvattach.c: Handle malformed ms-exchange pgp-encrypted block.
	(closes #3742)

	In certain circumstances, Exchange corrupts a multipart/encrypted
	block into: <multipart/mixed> <text/plain> <application /pgp-
	encrypted> [BASE64-encoded] <application/octet-stream>
	[BASE64-encoded]

	This patch pulls the full detection of valid/invalid multiparts into
	mutt_body_handler(). It extracts a run_decode_and_handler()
	function, which is reused by new intermediate handlers to decode the
	application/octet-stream part before passing it directly to
	crypt_pgp_encrypted_handler. These intermediate handlers then check
	and set any GOODSIG flags back into the parent part.

	This change may result in less error messages for invalid
	multipart/encrypted parts. Instead, mutt will default to the
	multipart_handler if it isn't fully "correct".

	Viewing attachments uses crypt_pgp_decrypt_mime() which bypasses the
	handler mechanism. Add decoding to the decrypt_mime() functions for
	pgp and gpgme.

	Thanks to Vincent Brillault for his analysis and initial patch.

2015-07-18 18:40 +0200  Martin Sandsmark  <martin@sandsmark.ninja>  (e40e3e0391ea)

	* UPDATING, buffy.c, init.h, mutt.h: Add support for checking cur/ in
	Maildir for unread mails in buffy.

	Also skip messages with the S flag when checking for unread mails.

2015-07-24 13:36 -0700  Kevin McCarthy  <kevin@8t8.us>  (fdafc56a854f)

	* doc/Makefile.am: Set AUTOMAKE_OPTIONS in doc/Makefile.am. (closes
	#3766)

	Add the "foreign" option to silence warnings generated by
	flymake.am.

2015-07-24 13:15 -0700  Kevin McCarthy  <kevin@8t8.us>  (cbae8642cb3d)

	* UPDATING: Update the UPDATING file with changes since 1.5.23.

2015-07-23 14:57 -0700  Kevin McCarthy  <kevin@8t8.us>  (8c16206f50a1)

	* hcache.c, help.c, imap/util.c, protos.h, sendlib.c: Fix compiler
	type warnings. (closes #3765)

	The output of mutt_local_tz() was being passed to abs(). Technically
	the return type is time_t, but it represents a small value: the
	timezone offset in seconds. Add a safe explicit cast to int.

	Change the txt parameter of mutt_make_help() to type const char *.
	Typically all calls run the txt parameter through _(), which accepts
	const char * and returns a char *. However, if NLS is not enabled,
	_() is a noop, simply returning the parameter itself. In
	mutt_compile_help(), items[i].name is const char *, so it will
	generate a warning when passed as the txt parameter of
	mutt_make_help().

	On some systems, e.g. OS X, snprintf is defined as a macro. One call
	in hcache.c was embedding directives inside the snprintf call. This
	is apparently undefined behavior, so duplicate the call instead.

2015-07-22 19:23 -0700  Kevin McCarthy  <kevin@8t8.us>  (c60fed102d79)

	* imap/message.c, keymap.c, pop_lib.c: Fix a few small compiler
	warnings. (See #3638)

	In certain configurations, unused variables and labels were causing
	warnings.

	Add a missing "#include <netinet/in.h>" to pop_lib.c.

2015-07-21 12:41 -0700  Kevin McCarthy  <kevin@8t8.us>  (704e0622cc67)

	* imap/imap.c: merge stable

2015-07-21 12:34 -0700  Kevin McCarthy  <kevin@8t8.us>  (e5fe2f80e797)

	* imap/imap.c: Imap: Fix flag caching after sync.

	The flags cached in IMAP_HEADER_DATA were not updated to match the
	HEADER flags after a sync. This means if a flag were toggled and
	synced twice, the second sync was not sending the flag update.

	Thanks to Noah Misch for the patch.

2015-07-19 15:55 -0700  Kevin McCarthy  <kevin@8t8.us>  (100835c4a8ac)

	* init.h: Add note about gpg fixed-list-mode. (closes #3763).

	Thanks to Gregor Zattler for the original patch.

2015-07-11 14:36 -0700  Kevin McCarthy  <kevin@8t8.us>  (2ca89bed6448)

	* main.c: Fix batch mode lockup. (closes #3761) (closes #3760)

	The new TS capability check was also running when curses wasn't
	initialized. Move check inside the !OPTNOCURSES block.

2015-07-09 14:50 -0700  Kevin McCarthy  <kevin@8t8.us>  (7e91a8855dc3)

	* Makefile.am, doc/Makefile.am, imap/Makefile.am: Use $(VAR) instead
	of @VAR@ in Makefile.am files. (closes #3664)

	The @VAR@ form is not overridable, such as the case for #3664 where
	the reporter wanted to override DOTLOCK_GROUP.

	It's doubtful targets need to be overriden, but it makes sense to be
	consistent in the usage of automake substituted variables unless
	there is a particular reason/bug to work around.

2015-07-05 13:38 -0700  Kevin McCarthy  <kevin@8t8.us>  (79cd2f34961d)

	* crypt-gpgme.c: Remove 'hit enter' prompt for GPGME initialization
	errors.

	Older GPGMEs are missing CMS (S/MIME) support. Don't force the poor
	users to hit enter every time they start mutt.

2015-07-02 11:21 -0700  Kevin McCarthy  <kevin@8t8.us>  (39422ec14f60)

	* .hgignore, mkinstalldirs: Remove the automake mkinstalldirs script.

	Add to .hgignore so it doesn't accidentally get added again.

2015-07-02 11:21 -0700  Kevin McCarthy  <kevin@8t8.us>  (97ef326274e7)

	* Makefile.am, configure.ac, contrib/Makefile.am, doc/Makefile.am,
	intl/Makefile.in, m4/gettext.m4, po/Makefile.in.in: Convert from
	using mkinstalldirs to $(MKDIR_P).

	The automake mkinstalldirs script is now deprecated. "install-sh -d"
	can be used in place. Configure.ac already includes AC_PROG_INSTALL,
	which will ensure install-sh is bundled. Add AC_PROG_MKDIR_P, which
	will set $(MKDIR_P) to either a thread-safe "mkdir -p" or will fall
	back to using install-sh.

2015-07-02 11:18 -0700  Kevin McCarthy  <kevin@8t8.us>  (67d945e38074)

	* build-release: Fix build-release to always update automake tools.
	(closes #3671)

	1.5.22 and 1.5.23 include a version of "missing" older than the
	version of automake/aclocal used to generate configure.

	Fix the build-release script to always copy and force update of the
	automake tools.

2015-06-29 14:35 -0700  Kevin McCarthy  <kevin@8t8.us>  (9802a6172edf)

	* doc/manual.xml.head: Add note to manual clarifying push/exec and
	folder-hook order.

	Folder-hooks are executed in the order declared. However, push/exec
	commands will simply prepend to the keyboard buffer. If there are
	multiple push/exec commands, each will prepend to the earlier one.
	The result is that they will end up being "run" in reverse order
	once keyboard buffer processing starts.

2015-06-26 12:23 -0700  Kevin McCarthy  <kevin@8t8.us>  (3bbb1f569eb1)

	* imap/auth_sasl.c, imap/imap.c: Fix IMAP segfault due to NULL capstr.

	After a failed login, the connection is left open but capstr is
	freed. If a second login attempt is made, imap_auth_sasl was trying
	to strstr using the NULL capstr.

	Add a NONULL around the capstr parameter to strstr. Change
	imap_conn_find() to keep the capstr around until a successful
	authentication occurs.

2015-06-26 11:38 -0700  Kevin McCarthy  <kevin@8t8.us>  (b4be5796a458)

	* crypt-gpgme.c, pgp.c, smime.c: Add comment about "(f)orget it"
	choice in pgp/smime send menus.

2015-06-26 12:28 +0200  Vincent Lefevre  <vincent@vinc17.net>  (b640b23e64a8)

	* po/fr.po: Updated French translation.

2015-06-07 13:59 -0700  Kevin McCarthy  <kevin@8t8.us>  (17a4f92e4a95)

	* smime.c, smime.h: Rewrite S/MIME key searching. Add purpose
	checking.

	Model the smime.c searching off of classic pgp searching. Create
	smime_get_key_by_hash()/addr()/str() functions that use a single
	smime_get_candidates() function to search the index.

	Use the new smime_keys generated purpose flag in the index to filter
	by KEYFLAG_CANENCRYPT and KEYFLAG_CANSIGN. Old style indices fall
	back to all-inclusive behavior.

2015-06-07 13:59 -0700  Kevin McCarthy  <kevin@8t8.us>  (106914bc9406)

	* smime_keys.pl: smime_keys: Add refresh command.

	Refresh verifies the trust of each certificate and adds the purpose
	flag if it is missing. It pushes those values to the private keys'
	index file too.

2015-06-07 13:59 -0700  Kevin McCarthy  <kevin@8t8.us>  (aabd030b25cb)

	* smime_keys.pl: smime_keys: Add purpose flag to index.

	A subsequent patch will change smime.c to use the purpose to filter
	certs and keys that can't be used for signing or encryption.

	Issuer, trust, and purpose flags were also added to the keys index
	file, to keep parsing simpler in smime_keys as well as smime.c. The
	trust and purpose are derived from the cert. Issuer is set to '?' as
	this should never be needed for keys.

2015-05-25 10:59 -0700  Kevin McCarthy  <kevin@8t8.us>  (0255b37be491)

	* smime_keys.pl: smime_keys: Handle certificate chains in add_cert.
	(closes #3339) (closes #3559)

	Find all chains in the certificate provided. For each chain create a
	separate leaf and intermediate certificate file. Because Mutt
	controls the label prompt, use a single label for all chains.

	Also, loosen up cert file parsing to allow attributes even if they
	aren't delimited by a "Bag Attributes" header.

	Thanks to David J. Weller-Fahy for his testing and feedback!

2015-05-18 13:27 -0700  Kevin McCarthy  <kevin@8t8.us>  (577987ca2d02)

	* smime_keys.pl: smime_keys: Convert openssl execution to use
	open("-|",...). (see #3575) (see #2456)

	This does a fork/exec, bypassing the shell, and so handles spaces,
	quotes, and other shell-characters problems better than the simple
	fix in changeset:c66a6bd5d0d5

	This also fixes the "verify with crl" bug in #2456: the grep is now
	done in perl.

	Thank you Vincent Lefevre for your review and feedback!

2015-05-18 03:25 +0200  Vincent Lefevre  <vincent@vinc17.net>  (82d43abf2a37)

	* po/fr.po: Updated French translation (related to PGP & S/MIME, with
	corrections).

2015-05-15 14:09 -0700  Kevin McCarthy  <kevin@8t8.us>  (c66a6bd5d0d5)

	* smime_keys.pl: smime_keys: quote filenames. (closes #3575) (see
	#2456)

	Wrap the various filename parameters in single quotes in case there
	are spaces in the filename.

2015-05-15 10:47 -0700  Kevin McCarthy  <kevin@8t8.us>  (babc30377614)

	* smime_keys.pl: Start cleaning up and fixing smime_keys.pl (closes
	#3324) (see #2456)

	* Convert to using File::Temp (#3324). This was also suggested at
	https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=775199

	* Use File::Temp for add_p12 temp file. (#2456)

	* Make the query_label() method a bit more robust with empty
	strings, ctrl-d, and leading spaces.

	* Clean up openssl_do_verify() logic. Mark cert as invalid rather
	that die'ing if an openssl verify command fails.

	* General cleanup:
	  - Clearly separate op handler, certificate management, and helper
	functions by section and using prefixes.
	  - Create openssl helper functions to reduce copy/paste invocations and
	make the code clearer.
	  - Make indentation consistent at 2 spaces.
	  - Change handle_add_pem() to re-use handle_add_chain() once the
	correct files are identified.
	  - Change openssl_parse_pem() to return a single array of data
	structures representing the parsed certs/keys.

2015-05-03 16:25 -0700  Kevin McCarthy  <kevin@8t8.us>  (c46dfbdb5eff)

	* globals.h, init.h, mutt_ssl.c, mutt_ssl_gnutls.c: Provide SSL cipher
	selection option. (closes #3167)

	Creates a $ssl_ciphers option that allows direct selection of the
	ciphers for OpenSSL (via SSL_CTX_set_cipher_list) and GnuTLS (via
	gnutls_priority_set_direct).

	Thank you Sergio Gelato for the patch.

2015-04-25 19:00 -0700  Seth Forshee  <seth@forshee.me>  (755a18da99bc)

	* handler.c: Fix performance regression for ~b/~B searching. (closes
	#3743)

	In mutt_is_autoview(), changeset b58cdfacfb89 introduced a call to
	rfc1524_mailcap_lookup() before checking if the MIME type should be
	autoviewed based on the user's preferences. This caused a major
	performance regression for ~b/~B searching.

	Rearrange mutt_is_autoview() to check the user preferences first,
	then search for a mailcap entry only if the MIME type should be
	autoviewed.

	In order to preserve correct mime_lookup behavior, re-add a call to
	mutt_check_lookup_list() before scanning the AutoViewList.

2015-04-19 13:15 -0700  Kevin McCarthy  <kevin@8t8.us>  (067a3ac42c3b)

	* crypt-gpgme.c, doc/manual.xml.head, init.h, mutt.h, pgp.c: Add
	$crypt_confirmhook option. (see #3727)

	Allow the confirmation prompt for crypt-hooks to be disabled. This
	is useful for multiple crypt-hook users (e.g. encrypted mailing
	lists), or just for people who are certain of their crypt-hooks and
	don't want to be prompted every time.

	Thanks to Dale Woolridge for the original patch.

2015-04-19 13:15 -0700  Kevin McCarthy  <kevin@8t8.us>  (b4c57d3fd7e8)

	* crypt-gpgme.c, doc/manual.xml.head, doc/muttrc.man.head, hook.c,
	pgp.c, protos.h: Allow multiple crypt-hooks with the same regexp.
	(closes #3727).

	Changes the crypt-hook to accumulate a LIST of hooks with the same
	regexp, as opposed to replacing the hook data. This is useful for
	the case of encrypted mailing lists.

	Update pgp classic and gpgme to process a LIST of crypt-hook values
	instead of just one.

	This version of the patch creates a new _mutt_list_hook() function
	that (in theory) other hooks could use if they were changed to
	return a list. It also changes the behavior when a crypt-hook is
	declined: previously it would immediately use the original recipient
	for key selection. Now it will only do that if all crypt-hooks for a
	recipient are declined. This allows all, a subset, or none of the
	hooks to be used.

	Thanks to Rejo Zenger, Remco Rijnders, and Dale Woolridge for their
	work on various versions of this patch.

2015-04-15 19:25 -0700  Kevin McCarthy  <kevin@8t8.us>  (1e26a962ab7a)

	* doc/manual.xml.head: Fix a few more incorrect documentation lines
	for hooks.

	Hopefully this finishes up aac979f8b529 and ca5aff2a4b6e.

2015-04-15 18:57 -0700  Kevin McCarthy  <kevin@8t8.us>  (d12cb775b779)

	* crypt-gpgme.c, doc/manual.xml.head, init.h, pgp.c, pgp.h, pgpkey.c:
	Use fingerprints instead of keyIDs internally. (see #3695)

	Add a helper function, pgp_fpr_or_lkeyid(), that returns the
	fingerprint if available, otherwise falls back to the long key id.
	Convert Mutt to use that value for pgp command invocation.

	Change gpgme to use an equivalent crypt_fpr_or_lkeyid() function in
	a couple places too (for keylist generation and sign-as key
	selection).

	Update documentation to mention fingerprints and the --with-
	fingerprint option for gpg invocation.

	Change pgp_long_ids to default: yes, but add a note mentioning it's
	only used for the display of key IDs in a few places.

2015-03-12 14:48 -0700  Kevin McCarthy  <kevin@8t8.us>  (bd21cff208c4)

	* recvattach.c: Allow attachments from unencrypted emails to be
	deleted.

	Print a warning if the message is signed or partly signed.

	Thanks to David Haguenauer for the original patch!

2015-04-06 18:39 -0700  Kevin McCarthy  <kevin@8t8.us>  (ca5aff2a4b6e)

	* doc/muttrc.man.head: Clarify hook pattern vs regexp in muttrc.man
	page.

	Updates to the muttrc.man page were inadvertently not included in
	changeset:aac979f8b529. Fix mbox-hook and crypt-hook to show they
	accept a regexp, not a pattern.

2015-04-05 13:52 -0700  Kevin McCarthy  <kevin@8t8.us>  (e3e6febd8240)

	* contrib/smime.rc: Fix smime.rc typos and spacing issues. (closes
	#3745)

	Thanks to David J. Weller-Fahy for that patch.

2015-03-30 15:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (1bd26d871d76)

	* crypt-gpgme.c: Fix const errors caused by find_keys() changes.

	Part 4 of the oppenc series changed the keyID type to const as part
	of some cleanup changes. At the time, that only propagated to
	crypt_getkeybystr(), but with the fingerprint changes, this is
	starting to propagate too far.

	Create a separate non-const variable to deal with the crypt hook
	value and revert crypt_getkeybystr()'s parameter to non-const.

2015-03-30 15:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (b8ead28d8e84)

	* compose.c, crypt-gpgme.c, pgp.c, smime.c: Add ui elements for oppenc
	mode.

	Add a status message to the Security line when oppenc is enabled.

	For each send menu, add the ability to toggle it on or off. When
	enabled, the menus won't show the (e)ncrypt or (b)oth options, and
	the (c)lear function only clears the SIGN bit when it is active.

	Change the gpgme_send_menu() to directly use the ENCRYPT and SIGN
	flags instead of the PGPENCRYPT/SIGN and SMIMEENCRYPT/SMIME flags.
	Using the latter sometimes resulted in the APPLICATION bit unset,
	which made oppenc unhappy.

	The send_menus previously used a switch statement using choice
	numbers. Since the menus now vary based on the oppenc option and
	message bit being set, these were all changed to convert the numbers
	back to a choice letter.

2015-03-30 15:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (2ec6a8d91de4)

	* crypt.c, mutt.h, mutt_crypt.h, postpone.c, send.c, sendlib.c: Add a
	security bit to the message for oppenc mode.

	This allows oppenc to be enabled/disabled on a message level. If
	something initially enables encryption, such as crypt_autoencrypt or
	crypt_replyencrypt, oppenc is turned off for the message.

	Change the postpone/resume code to persist the oppenc bit.

	Also change resend message to enable and invoke oppenc if the option
	is set.

2015-03-30 15:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (b38c4838976f)

	* compose.c, crypt.c, init.h, mutt.h, send.c: Add the
	crypt_opportunistic_encrypt option and calls.

	This patch creates the OPTCRYPTOPPORTUNISTICENCRYPT option and
	documentation.

	It also adds calls to crypt_opportunistic_encrypt() during initial
	message composition, after updating to, cc, or bcc, and after
	editing the message (if edit_headers is enabled).

2015-03-30 15:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (b10d0a945623)

	* crypt.c, mutt_crypt.h, send.c: Implement
	crypt_opportunistic_encrypt().

	This function will be called to flip encryption on and off based on
	message recipients.

2015-03-30 15:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (db2abe57adb5)

	* crypt-gpgme.c, pgp.c, pgp.h, pgpkey.c, smime.c: Implement
	oppenc_mode in the find_keys methods.

	oppenc_mode is used by crypt_opportunistic_encrypt to determine
	whether there are valid keys for all recipients of a message,
	without prompting the user.

	The patch wraps around prompts, and makes getkeybyaddr methods
	return a valid address-matching key without prompting.

	The patch also fixes a small problem with gpgme's getkeybyaddr. When
	determining if there were multiple strong matches, it was comparing
	the crypt_key_t instead of its kobj member (gpgme_key_t).

	The patch also enables a call to crypt_is_numerical_keyid() in
	find_keys(), so that crypt-hooks can actually be checked without
	prompting when gpgme is enabled. (The addition was patterned off of
	the pgp_findKeys() function).

2015-03-30 15:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (80b963ff82d3)

	* crypt.c, mutt_crypt.h, pgp.c: Pull is_numerical_keyid() into
	crypt.c.

	A subsequent patch (re?)-introduces a call to is_numerical_keyid
	inside find_keys(). Rather than duplicate the function, this patch
	pulls it into crypt.c, where find_keys() and pgp_findKeys() can both
	call it.

2015-03-30 15:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (04eb395d80a7)

	* crypt-gpgme.c, crypt-gpgme.h, crypt-mod-pgp-classic.c, crypt-mod-
	pgp-gpgme.c, crypt-mod-smime-classic.c, crypt-mod-smime-gpgme.c,
	crypt-mod.h, crypt.c, cryptglue.c, mutt_crypt.h, pgp.c, pgp.h,
	smime.c, smime.h: Introduce an oppenc_mode parameter

	It's added to the parameter lists through the call stack down to the
	find_keys calls.

	No functionality is implemented yet. This patch is separated just to
	keep other patches more readable.

2015-03-30 15:45 -0700  Kevin McCarthy  <kevin@8t8.us>  (5b443e7da81b)

	* crypt-gpgme.c, crypt-gpgme.h, crypt-mod-pgp-classic.c, crypt-mod-
	pgp-gpgme.c, crypt-mod-smime-classic.c, crypt-mod-smime-gpgme.c,
	crypt-mod.h, crypt.c, cryptglue.c, mutt_crypt.h, pgp.c, pgp.h,
	smime.c, smime.h: Refactor the address list generation out of the
	find_keys routines.

	All four find_keys routines have a similar set up code for
	generating a single address list out of the to, cc, bcc lists. This
	patch pulls all the code into crypt_get_keys.

	This is done to simplify the functions before later patches make
	them more complicated (with the oppenc_mode parameter).

2015-03-17 16:28 -0700  Kevin McCarthy  <kevin@8t8.us>  (59bd9030e898)

	* doc/manual.xml.head: Document limitation of color index and server-
	side searches. (see #3723)

2015-03-17 16:28 -0700  Kevin McCarthy  <kevin@8t8.us>  (ab101844dc07)

	* doc/manual.xml.head: Add entries for =B and =h in pattern modifier
	table.

	Since these operate differently for IMAP, it's worth adding explicit
	entries to the table for these two.

2015-03-17 16:28 -0700  Kevin McCarthy  <kevin@8t8.us>  (aac979f8b529)

	* doc/manual.xml.head: Clarify hook documentation to specify regexp
	instead of pattern.

	Account-hook, crypt-hook, and mbox-hook accept a regexp parameter,
	not a pattern.

2015-03-04 19:24 -0800  Kevin McCarthy  <kevin@8t8.us>  (09be71b645a7)

	* pgp.c: Fix pgp_application_pgp_handler to remove all tempfiles.

	If multiple PGP blocks are present in an email, Mutt only cleans up
	the tempfiles for the last block. Thanks to Dennis Preiser for the
	patch and sample mbox file demonstrating the problem.

	This patch also fixes the argument to mutt_perror for the pgpout
	tempfile.

2015-02-19 11:00 -0800  Kevin McCarthy  <kevin@8t8.us>  (71f12fef8c6f)

	* sendlib.c: merge stable

2015-02-10 18:29 +0100  Peter Wu  <peter@lekensteyn.nl>  (70b85d8b232b)

	* sendlib.c: Fix buffer underread for empty header values. (closes
	#3736)

	When a header has no value (*p == '\0' so l == 0), do not read
	outside the buffer but print the newline anyway when a tag is
	already printed (col != 0).

	Caught by ASAN while opening a draft with no Subject.

2015-02-11 21:38 +0100  Eike Rathke  <erack@erack.de>  (f5b1b75c5958)

	* crypt-gpgme.c, crypt.c, mutt_crypt.h, pgpkey.c: Allow fingerprint
	user input for key selection. (see #3695)

	Accept and check input of a fingerprint and find the matching key.

	Note that for both to work, match against and display of
	fingerprint, the pgp_list_pubring_command and
	pgp_list_secring_command need to contain the
	--with-fingerprint option, or have with-fingerprint in
	~/.gnupg/gpg.conf.

2015-02-15 10:09 -0800  Kevin McCarthy  <kevin@8t8.us>  (af5951f5d81c)

	* contrib/gpg.rc, gnupgparse.c: Add fingerprint record parsing for pgp
	list keys. (see #3695)

	Modify parse_pub_line to parse fpr records and add the fingerprint
	to the pgp_key_t's fingerprint field.

	Add "--with-fingerprint --with-fingerprint" to the
	pgp_list_pubring_command and pgp_list_secring_command commands in
	contrib/gpg.rc. The second invocation generates fpr records for
	subkeys too.

2015-02-15 10:08 -0800  Kevin McCarthy  <kevin@8t8.us>  (47b4e57b2f1c)

	* pgplib.c, pgplib.h, pgppubring.c: Convert pgp_key_t fingerprint to a
	char* (see #3695)

	Currently only pgppubring.c is using the fingerprint field, and is
	using it to store a binary version of the fingerprint.

	Convert the field to store a null-terminated string. Modify
	pgppubring.c to use to use the new field.

2015-02-10 12:14 -0800  Kevin McCarthy  <kevin@8t8.us>  (385d7434c9d6)

	* pgpkey.c: Protect addr with NONULL in pgp_getkeybyaddr.

	This was introduced by bb3b01f41ed2, but wasn't included in the
	NONULL checks added in 9a75aa4bd69e.

2015-02-08 14:19 -0800  Kevin McCarthy  <kevin@8t8.us>  (addd7cea01d4)

	* crypt-gpgme.c: Cache uid validity in crypt_key_t.

	In order to find the validity for a crypt_key_t, the code has to
	loop through the key->kobj->uids list up to the correct index. This
	is a bit silly since the uid is available when the crypt_key_t is
	created in get_candidates().

	This patch adds a validity field, and changes the various places to
	use that instead of looping.

	Also fix a bug in _crypt_compare_trust(): it was using the validity
	of the first uid instead of the corresponding uid's validity.

2015-02-08 13:44 -0800  Kevin McCarthy  <kevin@8t8.us>  (7162033d1fb8)

	* crypt-gpgme.c: Fix pgp-gpgme to set revoke/expired/disabled flags.

	The code wasn't settings those flags in get_candidates(). This patch
	adds it to the pgp path. I don't know if these flags apply to SMIME
	so am leaving them out for the smime branch.

	Fix up crypt_select_key() to follow the same logic as
	pgp_select_key().

2015-02-03 15:39 -0800  Kevin McCarthy  <kevin@8t8.us>  (2fd1b9f17b80)

	* contrib/smime.rc, init.h: Change the smime_encrypt_with default to
	aes256.

	Openssl supports -aes256 at least since 2004, and it's a stronger
	algorithm than des3.

	Also:
	- Remove the incorrect documentation comment about defaulting to 3des
	if unset.
	- Change the default set in contrib/smime.rc.

2015-02-04 11:04 -0800  Kevin McCarthy  <kevin@8t8.us>  (d2f5832a9e68)

	* send.c: Protect SmimeDefaultKey for postpone/resume.

	PgpSignAs is saved and restored in ci_send_message(), but
	SmimeDefaultKey was not.

	Also, fix a bug where an empty PgpSignAs was not restored back to
	empty if the postponed email contained a SignAs value.

2015-02-02 13:25 -0800  Kevin McCarthy  <kevin@8t8.us>  (3f4dc0ce66ae)

	* postpone.c: Fix mutt_parse_crypt_hdr() sign_as behavior.

	Currently, if a message is postponed with only the E encryption
	flag, when it is resumed, pgp_sign_as will be overwritten (with an
	empty string).

	This intention of the behavior was probably to restore the exact
	state of pgp_sign_as upon resuming. However, if the message wasn't
	marked for signing, the state of pgp_sign_as is not known. This
	patch changes the mutt_parse_crypt_hdr() to only set an empty
	pgp_sign_as if there is an S flag (and if set_empty_signas is true).

	mutt_edit_headers() also uses the function, but it doesn't want to
	overwrite pgp_sign_as with just an S flag. The set_signas parameter
	is renamed to (a hopefully clearer) "set_empty_signas".

2015-01-31 20:05 -0800  Kevin McCarthy  <kevin@8t8.us>  (1235dd48ef3f)

	* contrib/smime.rc, init.h: Update smime_encrypt_with documentation to
	list all algorithms.

	Thanks to Michael Schwipps for the patch!

2015-01-15 14:18 -0800  Kevin McCarthy  <kevin@8t8.us>  (688d66ae6014)

	* imap/message.c, mailbox.h, mx.c, sendlib.c: Send the IMAP \Draft
	flag when postponing a message.

	This patch adds a mx_open_new_message() flag, M_SET_DRAFT. It also
	adds a MESSAGE->flags.draft flag.

	mutt_write_fcc() passes the M_SET_DRAFT flag to
	mx_open_new_message(), which then sets MESSAGE->flags.draft. Then,
	imap_append_message() is able to see this flag and so adds the
	\Draft flag.

	The imap_append_message() function started to have a bit too many
	flags, so this version of the patch separates out the flag
	generating code into a simpler version.

2015-01-31 11:53 -0800  Brendan Cully  <brendan@kublai.com>  (200185ed86bc)

	* crypt-mod-pgp-gpgme.c: gpgme: typo in previous commit

2015-01-31 11:21 -0800  Brendan Cully  <brendan@kublai.com>  (20e46d7bc453)

	* configure.ac, crypt-gpgme.c, crypt-mod-pgp-gpgme.c: gpgme: guard
	mail-key on presence of gpgme_op_export_keys

	This function is too new to be assumed present.

2015-01-30 14:17 +0100  Vincent Lefevre  <vincent@vinc17.net>  (b804f2daca31)

	* po/fr.po: Updated French translation.

2015-01-29 15:40 -0800  Kevin McCarthy  <kevin@8t8.us>  (282832c0329a)

	* mutt_sasl.c: Clean up sasl warnings.

	These were caused by assigning callback functions to the
	sasl_callback_t.proc member. The callback type doesn't list any
	parameters, because parameters vary by callback. The fix was simply
	assigning a cast.

	Cyrus-sasl2 has a sasl_callback_ft typedef that their sample code
	uses for this purpose, but it is in a different header, saslplug.h,
	and isn't in their 1.5 tree. Since this is probably not portable to
	other implementations, I just added an equivalent cast.

2015-01-27 16:15 -0800  Kevin McCarthy  <kevin@8t8.us>  (73b97b986e0d)

	* configure.ac, mutt_ssl_gnutls.c: Clean up gnutls warnings.

	Most of the warning were caused by deprecated types:
	gnutls_certificate_credentials gnutls_certificate_status
	gnutls_datum gnutls_digest_algorithm gnutls_session
	gnutls_transport_ptr gnutls_x509_crt Even though I believe the
	replacements have been around for a while, the patch adds autoconf
	checks and fallback typedefs.

	One warning was caused by casting an int to a pointer for the second
	parameter to gnutls_transport_set_ptr(). Recent gnutls has a
	replacement gnutls_transport_set_int() macro, but this macro simply
	(eventually) casts the parameter using
	"(gnutls_transport_ptr_t)(long)". So this patch just does the same.

2015-01-25 18:09 -0800  Kevin McCarthy  <kevin@8t8.us>  (df55f14f4585)

	* crypt-gpgme.c, init.h, pgp.c: Remove GPG_AGENT_INFO check for GnuPG
	2.1 compatibility. (closes #3715)

	GnuPG version 2.1 stops exporting the GPG_AGENT_INFO environment
	variable, so mutt can't check for the presence of that to ensure the
	agent is running.

	For GPGME, we can check for the OpenPGP protocol being present. For
	classic pgp, we have to trust the user setting.

	This patch is based on the patches sent by CustaiCo and muffins.
	Thank you both for reporting the problem and creating a patch.

2015-01-27 00:52 +0100  Vincent Lefevre  <vincent@vinc17.net>  (a0a5e505463e)

	* po/fr.po: Updated French translation.

2015-01-26 13:07 +0100  Vincent Lefevre  <vincent@vinc17.net>  (aa67709a73ce)

	* INSTALL, README.SECURITY, README.SSL, TODO, configure.ac,
	curs_lib.c, help.c, imap/message.c, lib.c, mh.c: Corrected various
	spelling mistakes (most of them reported by codespell).

2015-01-23 10:33 -0800  Kevin McCarthy  <kevin@8t8.us>  (ec93761e3e12)

	* crypt-gpgme.c, crypt-mod-pgp-gpgme.c: Implement mail-key, Esc-K, for
	gpgme. (closes #3488)

	This patch implements the make-key-attachment function for gpgme,
	modeled after the pgp version.

	It also adds an optional tempf parameter to
	data_object_to_tempfile() so the function can be reused for make-
	key-attachment.

2015-01-19 15:58 -0800  Kevin McCarthy  <kevin@8t8.us>  (b39219ffe75b)

	* pgpkey.c: pgp_getkeybystr: Pull key matching out of the address
	match loop.

	Since the key is invariant inside the address loop, there is no need
	to match against it with each address.

	All the keys should have at least one address record (see
	bb3b01f41ed2), but in case a record was malformed, add a check for
	that to keep the same logic.

2015-01-21 10:14 +0100  Eike Rathke  <erack@erack.de>  (5d7345b4c516)

	* doc/devel-notes.txt: HEAD is dead, remove wrong instruction from doc
	/devel-notes.txt

	Branch HEAD was closed over a year ago. If one was following the
	instruction to update -C HEAD you'd end up with an empty source tree
	and had to checkout the default branch again.

2015-01-18 17:50 +0100  Eike Rathke  <erack@erack.de>  (6e5a62946141)

	* crypt-gpgme.c: Allow short and long key ID user input in
	crypt_getkeybystr()

	The following did not work, e.g. when leaving a key list, and at the
	"Sign as" or "Encrypt to" prompt attempting to enter a key ID:
	* set pgp_long_ids=no
	  * enter a long key ID, with or without leading 0x
	* set pgp_long_ids=yes
	  * enter a short key ID without leading 0x

	Specifically entering a long key ID should always be possible as
	evil32.com has shown.

	This also cleans up the logic used to determine the matching
	condition, which was quite convoluted.. it even slightly speeds up
	the loop as less string operations are involved in the inner
	condition.

	This only changes how the result obtained from the crypt_* gpgme
	interface is filtered.

2015-01-18 17:45 +0100  Eike Rathke  <erack@erack.de>  (63ad7cf0d0de)

	* pgp.c, pgp.h, pgpkey.c: Allow short and long key ID user input in
	pgp_getkeybystr()

	The following did not work, e.g. when leaving a key list, and at the
	"Sign as" or "Encrypt to" prompt attempting to enter a key ID:
	* set pgp_long_ids=no
	  * enter a long key ID, with or without leading 0x
	* set pgp_long_ids=yes
	  * enter a short key ID without leading 0x

	Specifically entering a long key ID should always be possible as
	evil32.com has shown.

	This also cleans up the logic used to determine the matching
	condition, which was quite convoluted.. it even slightly speeds up
	the loop as less string operations are involved in the inner
	condition.

	This only changes how the result obtained from the pgp_* command
	line interface is filtered.

2015-01-17 14:34 -0800  Kevin McCarthy  <kevin@8t8.us>  (58a9dbfd0d25)

	* crypt-gpgme.c: Fix some context, data, and key memory leaks in
	gpgme.

	The context and data cleanup just involved adding missing
	gpgme_release() and gpgme_data_release() calls in a few places.

	The key usage was a little more involved:
	  * Fix crypt_free_key(). It wasn't freeing the key passed in, and
	didn't work properly if multiple keys were passed in. It also was
	missing a call to gpgme_key_unref().

	 * Add free_recipient_set() to properly unref all the keys before
	freeing the array.

	 * Fix get_candidates() to ref keys added to the crypt_key_t list,
	and unref the keys returned by gpgme_op_keylist_next().

	 * Change usages of gpgme_key_release() to gpgme_key_unref(). The
	former was deprecated in gpgme version 0.4.1 (2003-06-06).

2015-01-17 14:42 -0800  Kevin McCarthy  <kevin@8t8.us>  (cc7903944687)

	* hcache.c: Fix the hcache type punning warning.

	This patch fixes the type punning warning by switching from (safe
	but perhaps not elegant) casting to using a union.

	Thanks to Vincent Lefevre for his input and suggestion to use the
	union as a better solution to the problem!

2015-01-15 13:19 +0100  Vincent Lefevre  <vincent@vinc17.net>  (d732298789f2)

	* curs_lib.c: Also colorize the initial mutt_enter_fname prompt.

	Note: the new prompt obtained after a key is typed was already
	colorized.

2014-08-12 14:04 -0700  Kevin McCarthy  <kevin@8t8.us>  (4ba366bc7c45)

	* doc/manual.xml.head, enter.c, history.c, history.h: Add a scratch
	buffer to the history ring. (closes #3082)

	This patch creates an extra slot in the history ring for a scratch
	buffer (at h->last). If you are editing inside that buffer, it is
	preserved when you scroll up/down through the history. Editing while
	in other places in history are *not* preserved with this patch.

	Another behavior change worth noting with this patch: the position
	in history is now reset to the scratch buffer after each input
	entry. Before, the position would be stay wherever it was - you
	didn't restart at the "bottom" each time.

2013-11-06 13:07 -0800  Kevin McCarthy  <kevin@8t8.us>  (8a2d9d352e2c)

	* globals.h, init.h, mutt.h, send.c: Add option to encrypt postponed
	messages. (closes #3665)

	This patch is based on Christian Brabandt's patch sent to mutt-
	users.

	Add two new configuration variables: $postpone_encrypt and
	$postpone_encrypt_as. When $postpone_encrypt is set and a message is
	marked for encryption, the message will be encrypted using the key
	specified in $postpone_encrypt_as before saving the message.

	In this patch, $postpone_encrypt_as must be specified. I
	experimented with passing safe_strdup( NONULL (PostponeEncryptAs))
	when unspecified, but although gpg.conf has a default-key setting, I
	could not get it to work properly. (pgpclassic gave an error message
	and gpgme sefaulted.)

	Although not necessary, this patch turns off signing during
	encryption of the postponed message (and turns it back on before
	saving), since there is no need to sign the message yet.

2015-01-09 14:22 -0800  Kevin McCarthy  <kevin@8t8.us>  (25430a489665)

	* color.c, contrib/colors.default, contrib/colors.linux, curs_lib.c,
	doc/manual.xml.head, doc/muttrc.man.head, mutt_curses.h: Add color
	type for prompts.

	This adds a new color type, MT_COLOR_PROMPT, that can be used to
	colorize prompts (fields, yes/no, multi_choice).

	Thanks to Ben Boeckel for the patch!

2013-10-29 18:25 -0700  Kevin McCarthy  <kevin@8t8.us>  (789501922727)

	* crypt-gpgme.c, pgp.c: Add gpg signature name. (closes #3478)

	Some mail clients display "noname" for the gpg signature attachment.
	This patch sets the mime name to "signature.asc".

	The patch is based on http://dev.mutt.org/trac/attachment/ticket/347
	8/gpg_signature_name.patch with the changes:
	  - removes the configuration options
	  - removes mime description

2015-01-06 14:38 -0800  Kevin McCarthy  <kevin@8t8.us>  (cd57f8893b43)

	* configure.ac, globals.h: merge stable

2014-12-31 20:35 -0800  Kevin McCarthy  <kevin@8t8.us>  (31ce789af3df)

	* crypt-gpgme.c: Fix segfault of extract-keys (^K) under gpgme.
	(closes #3698)

	This patch is based on the patch by Ben Price, which relocated the
	safe_fclose (&in) after its use by keydata in
	pgp_gpgme_extract_keys. Thank you for the patch!

	In addition, this patch:
	  * removes spurious (debug?) output when the extract keys is finished.
	  * adds a gpgme_data_release() call to free the keydata.

2014-10-10 14:17 +0800  Kevin McCarthy  <kevin@8t8.us>  (e7a77a6bfb84)

	* query.c: Fix a memory leak in mutt_query_complete.

	When a single result was returned, it was written to the buffer and
	returned, but the query result was never freed.

	This patch creates a free_query function and changes the code to use
	that everywhere.

2014-08-14 20:12 -0700  Kevin McCarthy  <kevin@8t8.us>  (c7f116b6dc20)

	* configure.ac: Fix variable name in configure.ac.

	$ac_cv_search_STRINGPREP_CHECK_VERSION should be
	$ac_cv_search_stringprep_check_version, to match the first parameter
	of the AC_SEARCH_LIBS([stringprep_check_version] above.

	Running configure was giving a "test: =: unary operator expected"
	error.

2014-12-28 09:41 -0800  Kevin McCarthy  <kevin@8t8.us>  (8a981dce369e)

	* globals.h: Remove duplicate SmimeCryptAlg declaration in globals.h

	Thank you Elias Diem for the patch.

2015-01-06 14:31 -0800  Kevin McCarthy  <kevin@8t8.us>  (59c2c4be08a7)

	* pgpkey.c: merge stable

2014-12-01 14:19 -0800  Kevin McCarthy  <kevin@8t8.us>  (0aebf1df4359)

	* sendlib.c: Revert write_one_header() to skip space and tab. (closes
	#3716)

	This patch fixes CVE-2014-9116 in the stable branch. It reverts
	write_one_header() to the pre [f251d523ca5a] code for skipping
	whitespace.

	Thanks to Antonio Radici and Tomas Hoger for their analysis and
	patches to mutt, which this patch is based off of.

2015-01-05 18:28 -0800  Kevin McCarthy  <kevin@8t8.us>  (5a86319adad0)

	* pgpkey.c: Fix segv in pgp_getkeybystr(). (closes #3725)

	When searching for keys, and the user supplies "" to match against,
	pgp_getkeybystr will have values: p = ""; l = 0; After returning
	from pgp_select_key(), it will try to assign to p[l-1].

	(As a note, the function is chopping off and restoring the trailing
	"!" character because of ticket #1928.)

2015-01-03 11:33 -0800  Kevin McCarthy  <kevin@8t8.us>  (79ea10b2d81c)

	* commands.c: Change bounce to use mutt_parse_adrlist() for address
	parsing.

	When prompting for recipients, forwarding, replying, and mailing all
	use mutt_parse_adrlist() to parse the addresses. This allows for
	addresses to be separated by spaces.

	Bounce message currently uses rfc822_parse_adrlist(), which doesn't
	allow the spaces. This one-line patch simply changes bounce to
	behave the same as mail, reply, and forwarding for the address
	prompt.

	Thanks to Roger Cornelius for the patch!

2014-12-31 20:35 -0800  Kevin McCarthy  <kevin@8t8.us>  (5530e9fb17d9)

	* crypt-gpgme.c: Fix segfault of extract-keys (^K) under gpgme.
	(closes #3698)

	This patch is based on the patch by Ben Price, which relocated the
	safe_fclose (&in) after its use by keydata in
	pgp_gpgme_extract_keys. Thank you for the patch!

	In addition, this patch:
	  * removes spurious (debug?) output when the extract keys is finished.
	  * adds a gpgme_data_release() call to free the keydata.

2014-08-12 14:33 -0700  Kevin McCarthy  <kevin@8t8.us>  (9a75aa4bd69e)

	* gnupgparse.c, pgpkey.c: Wrap pgp_uid_t->addr in NONULL(). (closes
	#3564)

	The previous patch introduced the possibility for addr to be null.
	Mutt is surprisingly robust against null strings, but there are a
	few places that should be wrapped in NONULL().

2014-08-12 14:33 -0700  Kevin McCarthy  <kevin@8t8.us>  (bb3b01f41ed2)

	* gnupgparse.c: Fix parse_pub_line to allow an empty User-ID field for
	a pub record. (see #3564)

	A key whose primary uid record has an empty User-ID will result in
	the user being unable to use the key to encrypt an email in mutt.
	This is because the mutt functions for key selection iterate through
	the address fields of a key for matching against and for displaying
	to the user.

	This change allows a pgp_uid_t record to be created for a pub record
	whose User-ID field is blank. So the key will have one address
	record, albeit with a null addr field.

2013-11-02 20:12 -0700  Kevin McCarthy  <kevin@8t8.us>  (4909bd9c9149)

	* main.c: Override draft headers with arguments. (closes #3580)

	Currently, if the -H option is used, it is not possible to redefine
	the recipient addresses with positional argument. This patch fixes
	it as well as CC, Bcc, and Subject headers.

	This patch is based on the patch by Petr Písař at http://dev.mutt.or
	g/trac/attachment/ticket/3580/override_draft_headers_with_arguments.
	patch

	This version of the patch merges the To, Cc, and Bcc commandline
	arguments into the template, and fixes a few small problems with the
	previous patch.

	This patch also moves the fin close outside the "if (tempfile)"
	block, since it is opened outside that block.

2014-06-21 13:51 -0700  Kevin McCarthy  <kevin@8t8.us>  (daf61444d454)

	* pgpinvoke.c: Enable %a format string for all pgp command configs.
	(closes #3699)

	Currently, the documentation states that, with the exception of
	pgp_getkeys_command, all the PGP format commands should be available
	to the pgp_*_command configuration variables.

	However, the %a format is actually only enabled for
	pgp_clearsign_command, pgp_encrypt_sign_command, and
	pgp_sign_command.

	Philip Rinn discovered this problem when he was trying to add a
	"--encrypt-to %a" to pgp_encrypt_only_command. Rather than just fix
	the one configuration he was having the problem with, this patch
	enables %a usage for all of them. (With the exception of the
	documented pgp_getkeys_command.)

2013-12-18 19:19 -0800  Kevin McCarthy  <kevin@8t8.us>  (630bbc147022)

	* doc/manual.xml.head: Note correct usage of $edit_headers. (closes
	#3673)

	Ticket 3673 shows that it isn't necessarily obvious a blank line is
	needed between the headers and body of a message when using
	$edit_headers. This patch adds a small note to the documentation,
	indicating the blank line should be preserved between the headers
	and body.

	Thank you Sinan Kaan Yerli for the patch.

2014-08-13 13:46 -0700  Kevin McCarthy  <kevin@8t8.us>  (89b17d3cd510)

	* doc/mutt.man, doc/pgpring.man: Clarify PGPPATH usage in manpages.

	Make more clear that, when used with the original PGP program, mutt
	and pgpring rely on this being set.

2014-10-10 14:17 +0800  Kevin McCarthy  <kevin@8t8.us>  (45fbc40193aa)

	* query.c: Fix a memory leak in mutt_query_complete.

	When a single result was returned, it was written to the buffer and
	returned, but the query result was never freed.

	This patch creates a free_query function and changes the code to use
	that everywhere.

2014-08-21 18:41 -0700  Kevin McCarthy  <kevin@8t8.us>  (b1ef16f25425)

	* init.c: Remove unused variable t in start_debug().

	t was set but never used. This was generating a compiler warning.

2014-08-14 20:12 -0700  Kevin McCarthy  <kevin@8t8.us>  (80186ee6eb57)

	* configure.ac: Fix variable name in configure.ac.

	$ac_cv_search_STRINGPREP_CHECK_VERSION should be
	$ac_cv_search_stringprep_check_version, to match the first parameter
	of the AC_SEARCH_LIBS([stringprep_check_version] above.

	Running configure was giving a "test: =: unary operator expected"
	error.

2014-12-28 09:41 -0800  Kevin McCarthy  <kevin@8t8.us>  (1630cee66057)

	* globals.h: Remove duplicate SmimeCryptAlg declaration in globals.h

	Thank you Elias Diem for the patch.

2014-11-04 23:40 -0600  David Champion  <dgc@uchicago.edu>  (39d3ddb56d34)

	* init.h: Disable SSLv3 by default.

	Since Oct. 14 2014 SSLv3 is no longer considered safe. See POODLE:
	https://en.wikipedia.org/wiki/Transport_Layer_Security#POODLE_attack

2014-10-11 13:20 -0700  Brendan Cully  <brendan@kublai.com>  (3a46874d5845)

	* hcache.c: hcache tcdb debug logging

2014-10-11 11:05 -0700  Brendan Cully  <brendan@kublai.com>  (85393e522337)

	* Makefile.am, doc/Makefile.am, flymake.am, imap/Makefile.am: add
	check-syntax target for flymake

2014-10-11 10:59 -0700  Brendan Cully  <brendan@kublai.com>  (bb7f59864d47)

	* .hgignore: ignore generated pgpewrap/pgpring man pages

2014-10-11 10:58 -0700  Brendan Cully  <brendan@kublai.com>  (0dc2dafab53a)

	* .hgignore: ignore gnu global tags

2014-09-07 12:00 -0700  Brendan Cully  <brendan@kublai.com>  (4a814b05874f)

	* merge stable

2014-09-07 11:04 -0700  Brendan Cully  <brendan@kublai.com>  (1b583341d5ad)

	* mutt_sasl.c: mutt_sasl: fix double negative in iptostring result
	check (fixes #3705)

2014-09-07 10:52 -0700  Brendan Cully  <brendan@kublai.com>  (769905e66205)

	* mutt_sasl.c: mutt_sasl: whitespace only

2014-09-07 10:36 -0700  Brendan Cully  <brendan@kublai.com>  (c81c93e64af8)

	* UPDATING, po/nl.po: merge stable

2014-07-25 20:43 +0200  Vincent Lefevre  <vincent@vinc17.net>  (b8bebc2f9a55)

	* po/fr.po: Updated French translation.

2014-03-13 23:37 +0000  Ivan Vilata i Balaguer  <ivan@selidor.net>  (375ba5ce358c)

	* po/ca.po: Updated Catalan translation.

2014-03-13 17:41 +0000  Vsevolod Volkov  <vvv@mutt.org.ua>  (99dda89b7685)

	* po/uk.po: Updated Ukrainian translation.

2014-03-13 17:41 +0000  Vsevolod Volkov  <vvv@mutt.org.ua>  (061217dd31ef)

	* po/ru.po: Updated Russian translation.

2014-03-13 17:36 +0000  Jonathan Wakely  <bugs@kayari.org>  (fd531fc9188c)

	* doc/mutt.man: fix typo in man page.

2014-03-13 03:56 +0000  Petr Pisar  <petr.pisar@atlas.cz>  (67673770fb96)

	* po/cs.po: Updated Czech translation

2014-03-12 09:44 -0700  Brendan Cully  <brendan@kublai.com>  (d9f45fa9458c)

	* .hgsigs: mutt-1.5.23 signed

2014-03-12 09:28 -0700  Brendan Cully  <brendan@kublai.com>  (4790aa52f0f2)

	* .hgtags: Added tag mutt-1-5-23-rel for changeset b8a63730c848

2014-03-12 09:28 -0700  Brendan Cully  <brendan@kublai.com>  (b8a63730c848)

	* ChangeLog, VERSION, po/bg.po, po/ca.po, po/cs.po, po/da.po,
	po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po, po/eu.po,
	po/fr.po, po/ga.po, po/gl.po, po/hu.po, po/id.po, po/it.po,
	po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po,
	po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po,
	po/zh_TW.po: automatic post-release commit for mutt-1.5.23

2014-03-12 09:25 -0700  Brendan Cully  <brendan@kublai.com>  (07556816c588)

	* build-release: build-release: make sure version is picked up by
	autoconf

	* mkchangelog.sh: mkchangelog: only show log entries on current branch

	* build-release: No more devel

2014-03-11 10:04 -0700  Michael Elkins  <me@sigpipe.org>  (3c13c4188912)

	* UPDATING: add user visible changes since 1.5.22 release.

	* copy.c: Fix buffer overrun caused by not updating a string length
	after address expansion.

2013-10-24 09:55 -0700  Michael Elkins  <me@sigpipe.org>  (3d5e23a66a1a)

	* init.h: remove trailing period from documentation for
	$pgp_list_secring_command

	* init.h: remove trailing period from documentation for
	$pgp_list_pubring_command

2013-04-26 12:10 -0700  Kevin McCarthy  <kevin@8t8.us>  (914e13a3694d)

	* postpone.c: Fix postpone/resume to not remove a Mail-Followup-To
	header (closes #3070)

	This solution changes mutt_prepare_template() to check whether the
	message_id field is NULL to decide whether to wipe the message-id
	and mail-followup-to headers when instantiating the message.

	If we are resending a message, we don't want the previous message-id
	and mail-followup-to headers. If we are resuming a postponed
	message, however, we want to keep the mail-followup-to header if any
	was set before the postpone. (grafted from
	d7d83298011a6e7aa31bde49e0b6b21209a85fd2)

2013-10-22 15:12 -0500  Aaron Schrab  <aaron@schrab.com>  (4a24e6233a5f)

	* version.sh: version.sh: step back from $() to ``. closes #3661
	(grafted from 01cf5814dfe5e79b65b1d950aab1276d19a9f031)

2013-07-14 19:48 -0700  Kevin McCarthy  <kevin@8t8.us>  (b5c894182719)

	* muttlib.c: Allow filename prompt when saving multiple attachments to
	a directory. (closes #3083)

	Currently, if you specify a directory when saving multiple
	attachments and choose (a)ll, the first attachment is saved without
	confirming the filename. Subsequent attachments prompt for the
	filename.

2013-10-04 18:22 +0000  Michael Elkins  <me@sigpipe.org>  (95a2230ef889)

	* mutt.h, postpone.c, send.c: When recalling a postponed message that
	does not have a x-mutt-fcc header field, generate a default FCC just
	as we do for new messages. If x-mutt-fcc is present but empty, we
	assume that means the user does not want a copy.

	closes #3653

2013-10-23 11:11 -0700  Michael Elkins  <me@sigpipe.org>  (331d48da153b)

	* crypt-gpgme.c: Ensure that at least one signature was generated to
	catch the case where $pgp_sign_as is unset and no default key is
	specified in ~/.gnupg/gpg.conf

	closes #3658

2013-10-06 09:15 -0700  Michael Elkins  <me@sigpipe.org>  (99d913f46eb9)

	* handler.c, smime.c: use LOFF_T as the type for variables used in
	fseeko()

	closes #3487

2013-10-04 18:04 +0000  Michael Elkins  <me@sigpipe.org>  (dd67e8649ea4)

	* crypt-gpgme.c: Display the KeyID when the pubkey is not found in the
	user's keyring during signature verification.

	closes #3654

2013-10-23 11:11 -0700  Michael Elkins  <me@sigpipe.org>  (db3028e34ce0)

	* mutt_ssl_gnutls.c: return 0 if import of cert failed to match other
	error conditions.

2013-10-23 11:11 -0700  Michael Elkins  <me@sigpipe.org>  (4dde4bcda519)

	* mutt_ssl_gnutls.c: only terminate the write-half of the TLS
	connection to avoid hanging if the remote doesn't respond.

	RFC5246 section 7.2.4 states that the initiator of the closure need
	not wait for the remote to response before closing the read-half.

	closes #3633

2013-10-22 21:11 -0700  Brendan Cully  <brendan@kublai.com>  (2ab618f4f6b0)

	* create stable branch

2013-10-21 11:58 -0700  Michael Elkins  <me@sigpipe.org>  (0d9d7c486331)

	* doc/manual.xml.head: add note about use of ! ~Q in send-hook when
	paired with reply-hook.

2013-10-19 11:23 -0700  Michael Elkins  <me@sigpipe.org>  (84acf5f0ce92)

	* crypt-gpgme.c: remove <stdbool.h> and use "1" instead of "true".
	closes #3657

	see #3642 for the change that caused this bug.

2013-10-18 14:12 -0700  Michael Elkins  <me@sigpipe.org>  (b9693e10f431)

	* UPDATING: update UPDATING with 1.5.22 release date

2013-10-17 22:55 -0700  Brendan Cully  <brendan@kublai.com>  (6f5fe49fdf64)

	* .hgsigs: mutt-1.5.22 signed

2013-10-17 22:43 -0700  Brendan Cully  <brendan@kublai.com>  (941ba77040a8)

	* .hgtags: Added tag mutt-1-5-22-rel for changeset 8c5ea668e7e0

2013-10-17 22:43 -0700  Brendan Cully  <brendan@kublai.com>  (8c5ea668e7e0)

	* ChangeLog, VERSION, po/bg.po, po/ca.po, po/cs.po, po/da.po,
	po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po, po/eu.po,
	po/fr.po, po/ga.po, po/gl.po, po/hu.po, po/id.po, po/it.po,
	po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po,
	po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po,
	po/zh_TW.po: automatic post-release commit for mutt-1.5.22

2013-10-16 16:04 +0000  Michael Elkins  <me@sigpipe.org>  (5648f4b2ed44)

	* rfc822.c: Rework logic to avoid advancing list pointer inside the
	for loop.

	closes #3531

2013-10-15 15:41 +0000  Ivan Vilata i Balaguer  <ivan@selidor.net>  (20954d6af1b1)

	* po/ca.po: updated Catalan translation

2013-10-11 15:51 +0000  Vsevolod Volkov  <vvv@mutt.org.ua>  (d60465c5ee6a)

	* po/uk.po: updated Ukranian translation

2013-10-11 15:49 +0000  Tamotsu TAKAHASHI  <ttakah@lapis.plala.or.jp>  (b9ba481ed72a)

	* po/ja.po: updated Japanese translation

2013-10-07 17:32 +0000  Michael Elkins  <me@sigpipe.org>  (804e46bc366e)

	* doc/pgpewrap.man, doc/pgpring.man: add missing files that were
	supposed to be included with
	[76f8df0ac80396559aa80e7f145be6f235a6db51]

2013-10-07 17:21 +0000  hhorak  <hhorak@redhat.com>  (76f8df0ac803)

	* doc/Makefile.am, doc/PGP-Notes.txt: adds some missing options in doc
	and adds man pages for binaries pgpewrap and pgpring.

	closes #3643

2013-10-07 17:09 +0000  esr  <esr@thyrsus.com>  (8d888e4d4f0b)

	* doc/makedoc.c, doc/muttrc.man.head: Problems with muttrc.5:

	Ambiguous or invalid backslash. This doesn't cause groff a problem.
	but it confuses doclifter and may confuse older troff
	implementations.

	Unknown or invalid macro. That is, one that does not fit in the
	macro set that the man page seems to be using. This is a serious
	error; it often means part of your text is being lost or rendered
	incorrectly.

	Use local definitions of .EX/.EE or .DS/.DE to avoid low-level troff
	requests in the page body. There are plans to add these to groff
	man; in the interim, this patch adds a compatible definition to your
	page.

2013-10-07 16:10 +0000  esr  <esr@thyrsus.com>  (02234de89d2a)

	* doc/mutt.man: Problems with mutt.1:

	Ambiguous or invalid backslash. This doesn't cause groff a problem.
	but it confuses doclifter and may confuse older troff
	implementations.

	Spelling error or typo.

2013-10-06 09:31 -0700  nihilhill  <nihilhill@gmail.com>  (24bb691dcde7)

	* crypt-gpgme.c: include <stdbool.h> for definition 'true'

	closes #3642

2013-10-05 15:57 +0800  Kevin McCarthy  <kevin@8t8.us>  (035306822940)

	* attach.c: Fix segfault when viewing text attachments in compose
	menu. (closes #3644)

	The segfault was introduced in changeset b9f9e3147eb4. Since
	decoding and charset conversion aren't needed for attachments when
	composing a message, this patch reverts to just using
	mutt_save_attachment() to view "raw data" for text attachments in
	the compose/send case.

	This patch is based on Michael Elkins' patch at http://dev.mutt.org/
	trac/attachment/ticket/3644/view_attach_compose_segfault with just a
	missing return value check added.

2013-10-06 14:32 +0000  Aaron Schrab  <aaron+mutt@schrab.com>  (6bcde5f1c7a7)

	* commands.c, hook.c, imap/command.c, imap/imap.c: Ensure that BUFFER
	variables are initialized to prevent later attempts to traverse an
	uninitialized pointer.

2013-10-05 19:25 +0000  Aaron Schrab  <aaron+mutt@schrab.com>  (132861c8b4e9)

	* commands.c, hook.c, imap/command.c, imap/imap.c, imap/message.c,
	init.c, keymap.c, pattern.c, score.c: Consistently use
	mutt_buffer_init function

	Despite the existence of the mutt_buffer_init function, most
	initializations were instead done with memset. Use the specific
	function instead to make it easier if later changes are made to how
	the initialization should be done.

2013-10-04 16:47 +0000  Michael Elkins  <me@sigpipe.org>  (0beba37c336b)

	* crypt-gpgme.c, handler.c, init.c, pop_auth.c: fix more comment typos

2013-07-23 14:07 +0200  Ondřej Bílka  <neleai@seznam.cz>  (bc7e7cf0fed3)

	* compose.c, crypt-gpgme.c, crypt-mod.h, curs_lib.c, date.c,
	doc/makedoc.c, editmsg.c, handler.c, imap/util.c, init.c,
	intl/gettextP.h, intl/plural.c, keymap.c, lib.c, mbox.c, mkdtemp.c,
	mutt.h, mutt_menu.h, mutt_ssl.c, mutt_ssl_gnutls.c, muttlib.c, mx.c,
	parse.c, pattern.c, pop.c, pop_auth.c, pop_lib.c, recvcmd.c,
	regex.c, send.c, signal.c, smime.c, snprintf.c, sort.h, thread.c:
	fix typos in comments

2013-04-16 20:12 -0700  Kevin McCarthy  <kevin@8t8.us>  (d3096e8796e7)

	* pager.c: Don't exit pager if quit=ask is answered "no".

	This patch addresses ticket 2788.

	Currently if you quit ('Q') from inside the pager, with quit=ask-yes
	or quit=ask-no, and you respond "no", mutt leaves you back in the
	index menu.

	This patch changes it so that mutt does not exit the pager.

2013-04-11 02:17 +0000  Michael Elkins  <me@sigpipe.org>  (4c5163272b9c)

	* browser.c, enter.c, imap/message.c, init.c, mbox.c, muttlib.c, mx.c,
	pop.c, query.c, smime.c, system.c: backout c1371176ea45

2013-04-11 01:59 +0000  Michael Elkins  <me@sigpipe.org>  (f99e91980f0f)

	* getdomain.c, init.c: Backed out changeset 1142ed8974fa

2013-04-10 23:40 +0000  Michael Elkins  <me@sigpipe.org>  (1142ed8974fa)

	* getdomain.c, init.c: use gethostname() to determine the system host
	name

	use getaddrinfo() to look up canonical DNS name, and fall back to
	hinting from /etc/resolv.conf

	see #3298

2013-04-10 22:38 +0000  Michael Elkins  <me@sigpipe.org>  (c1371176ea45)

	* browser.c, enter.c, imap/message.c, init.c, mbox.c, muttlib.c, mx.c,
	pop.c, query.c, smime.c, system.c: fix various compiler warnings;
	most were due to unchecked return values from system calls.

2013-03-04 04:14 +0000  is  <is@netbsd.org>  (d498f0e91914)

	* lib.c: use mkdtemp() to create temporary directory rather than
	mktemp() followed by mkdir()

	closes #3637

2013-02-23 03:12 +0000  Michael Elkins  <me@sigpipe.org>  (4c16c0d1ba9e)

	* pop.c, pop_lib.c: use of sscanf() had undefined behavior, replace
	with simple parsing instead

	see #3636

2013-02-22 18:31 +0000  Michael Elkins  <me@sigpipe.org>  (c7eff98bb299)

	* smime.c: increase string size by one byte to accomodate the
	terminating null character in fscanf() since the maximum field width
	does not include it

	closes #3636

	hat tip: Will Fiveash

2013-02-22 16:30 +0000  john beck  <john.beck@oracle.com>  (14596ac2b323)

	* rfc1524.c, sendlib.c: fix potential buffer overflow in off-by-one
	bounds checking error

	closes #3635

2013-02-08 17:06 +0000  Michael Elkins  <me@sigpipe.org>  (302044b4ed3f)

	* curs_lib.c: explicitly call mutt_refresh() prior to endwin() to
	force a screen redraw.

	[4903e80356d3] removed the call, but some environments (screen+xterm
	under SuSE11/12) don't properly flush without it prior to the
	endwin() call

2013-01-31 05:06 +0000  Michael Elkins  <me@sigpipe.org>  (2a1c5d3dd72e)

	* curs_lib.c: do not use mutt_message() to display prompt in
	mutt_yesorno().

	properly calculate screen width of prompt string by using
	mutt_strwidth() rather than strlen()

	use safe_asprintf() return the formatted yes/no string since
	specifying COLS+1 is wrong when dealing with multibyte characters

	closes #3412 closes #3352

2013-01-23 21:52 +0000  Michael Elkins  <me@sigpipe.org>  (b86b154f3988)

	* buffy.c, buffy.h, mh.c, mx.h: add support for $mail_check_recent to
	mh mailbox driver

	closes #3629

2013-01-23 19:52 +0000  Michael Elkins  <me@sigpipe.org>  (4903e80356d3)

	* curs_lib.c: do not explicitly reset the terminal attributes and move
	the cursor in mutt_endwin(). endwin() itself should handle this.

	closes #3627

2013-01-22 02:02 +0000  Michael Elkins  <me@sigpipe.org>  (acc8b2afdf29)

	* configure.ac: remove PKG_CHECK_MODULE() check and always use
	AC_CHECK_HEADERS()

	only check for <idn/idna.h> when <idna.h> isn't found

	closes #3626

2013-01-20 21:45 +0000  Michael Elkins  <me@sigpipe.org>  (98e031cd81d4)

	* configure.ac, main.c, mutt_idna.h: use pkg-config to look for libidn
	if available.

	checking <idn/idna.h> rather than including -I/usr/include/idn for
	Solaris 11.

	closes #3624

2013-01-17 23:04 +0000  Michael Elkins  <me@sigpipe.org>  (7fcc0049f250)

	* attach.c: backout [392e945dfba7]

	closes #3293 see #3234

2013-01-17 23:03 +0000  Michael Elkins  <me@sigpipe.org>  (b9f9e3147eb4)

	* attach.c: when falling back to viewing an attachment as text in the
	internal pager, perform charset conversion

	this change is meant to replace [392e945dfba7]

	see #3234 see #3293

2013-01-17 02:43 +0000  Michael Elkins  <me@sigpipe.org>  (571e945d6544)

	* hcache.c, hcache.h, imap/util.c, mh.c, pop.c: use a separate flag
	for mutt_hcache_store() to signal that the gettimeofday() value
	should be substituted, so that a 0 uidvalidity can be used by the
	imap driver.

	closes #3501

2013-01-17 02:10 +0000  Michael Elkins  <me@sigpipe.org>  (b58cdfacfb89)

	* attach.c, handler.c, protos.h: change semantics of
	mutt_is_autoview() to return 1 if there is a matching mailcap entry
	and either $implicit_autoview is set or the MIME type matches the
	user's auto_view list.

	closes #3496 closes #3426

2013-01-14 20:39 -0800  Michael Elkins  <me@mutt.org>  (1a75c9e477b4)

	* from.c: detect pipermail-style obscured return path in mbox From
	lines

	see #1200

2013-01-14 19:23 -0800  Michael Elkins  <me@mutt.org>  (8c75478735a3)

	* curs_main.c: allow use of sync-mailbox when the current limit has no
	visible messages

	closes #3538

2013-01-14 08:50 -0800  Michael Elkins  <me@sigpipe.org>  (05cd8d0d1450)

	* handler.c: avoid debug warning about trailing whitespace in a base64
	encoded attachment

	closes #3558

2013-01-04 04:05 +0000  Michael Elkins  <me@sigpipe.org>  (90f7869decec)

	* Makefile.am: When "make install" fails to chgrp or chmod the
	mutt_dotlock binary, add the reason why we are doing this so the
	user knows what to look for.

2013-01-03 16:12 -0800  Michael Elkins  <me@sigpipe.org>  (d7d26c40e1e5)

	* pager.c: Fix regression introduced by [10cc06eff52b] where the
	CLEARLINE() removal was not replaced by a move() to position the
	cursor at the correct location to draw the status bar.

	closes #3619

2013-01-03 19:04 +0000  Michael Elkins  <me@sigpipe.org>  (7fe92ce1cfc1)

	* parse.c: Remove unused variable `matched'.

2013-01-03 19:04 +0000  Michael Elkins  <me@sigpipe.org>  (6f4ce8ce80a7)

	* parse.c: Fix memory leak when multiple x-label or supersedes header
	fields exist in the header.

	In order to keep the current behavior where the value of the last
	header field present is the one used, free any previous value.

2013-01-03 08:03 -0800  Michael Elkins  <me@sigpipe.org>  (21457574a9b6)

	* main.c: Backed out changeset bf84f24e512d

2013-01-02 23:43 +0000  Michael Elkins  <me@sigpipe.org>  (bf84f24e512d)

	* main.c: display +/-NCURSES_WIDECHAR when displaying ncurses version
	to show whether we are linked against -lncurses or -lncursesw

2013-01-01 21:39 +0100  Matthias Andree  <matthias.andree@gmx.de>  (ea52317444ef)

	* hcache.c: Drop unneeded variable HEADER_CACHE that causes clang
	warnings.

	The variable was unused and clang warned that it was not emitted to
	the .o file.

2012-12-31 23:29 +0000  Michael Elkins  <me@sigpipe.org>  (32ec63debe52)

	* init.h: fix xml validation error in manual.xml in auto-generated
	content due to missing paragraph mark in the $editor docstring

2012-12-31 15:03 -0800  guns  <self@sungpae.com>  (474e9e809054)

	* rfc822.c: Fix accidental var redeclation with --enable-exact-address

	closes #3615

2012-12-31 14:54 -0800  Michael Elkins  <me@sigpipe.org>  (bf6bf2a80c35)

	* merge

2012-12-31 14:52 -0800  Michael Elkins  <me@sigpipe.org>  (5196c3d6c5d0)

	* curs_lib.c: reset to color normal before clearing to end of line
	when printing a message/error string

	closes #3617

2012-12-31 19:06 +0000  Michael Elkins  <me@sigpipe.org>  (ca67a3dad949)

	* doc/gen-map-doc: update regexp to include const keyword. The auto
	generated documentation of functions was failing due to a change in
	the source code format.

2012-12-30 19:48 -0800  Antonio Radici  <antonio@dyne.org>  (b1b49019fec0)

	* headers.c: Ensure that the in-reply-to header field was actually
	present before deciding it was removed.

	closes #3378

2012-12-30 19:17 -0800  Michael Elkins  <me@sigpipe.org>  (a90f57e0adbd)

	* ChangeLog: update ChangeLog

2012-12-30 19:14 -0800  Michael Elkins  <me@sigpipe.org>  (c03ba94d8750)

	* imap/message.c: add __FREE_CHECKED__

2012-12-30 19:12 -0800  Michael Elkins  <me@sigpipe.org>  (f7247ad288e7)

	* UPDATING: document the TLS changes since 1.5.21

2012-12-30 18:49 -0800  Michael Elkins  <me@sigpipe.org>  (10cc06eff52b)

	* color.c, compose.c, curs_lib.c, curs_main.c, menu.c, mutt_curses.h,
	pager.c, remailer.c: make the SETCOLOR() macro use bkgdset() on
	systems which have it, and attrset() when we don't.

	closes #3005

2012-12-30 09:26 -0800  Michael Elkins  <me@sigpipe.org>  (8c0b9ddee11f)

	* configure.ac: remove m4_translit because it generates a warning with
	newer versions of autoconf when used in AC_INIT. Instead, use tr -d
	to output the version string without a trailing newline.

2012-12-27 21:04 -0800  Michael Elkins  <me@mutt.org>  (b0265d385207)

	* version.sh: restore ability for version.sh to cope with a repository
	directory with a space in it.

2012-12-27 20:33 -0800  Aaron Schrab  <aaron@schrab.com>  (13c9a5d820f2)

	* configure.ac, version.sh: Use the directory where the version.sh
	script is located as the directory where it is run. Since this will
	be run in a separate shell anyway, there's no need to worry about
	changing current directory.

	This eliminates the need for the caller to specify where the source
	directory is located, and doesn't require that the code take special
	care to use the appropriate directory. The fallback method of using
	`cat VERSION` was broken in this respect, it would not work when run
	from a different directory.
	--- configure.ac | 2 +- version.sh | 7 ++++--- 2 files
	changed, 5 insertions(+), 4 deletions(-)

2012-12-27 17:37 -0800  Michael Elkins  <me@sigpipe.org>  (0f281c548d69)

	* configure.ac: use [] around body of AC_CHECK_HEADER to avoid
	problems with older versions of autoconf

2012-12-27 18:56 -0800  Michael Elkins  <me@mutt.org>  (8728418605fd)

	* configure.ac: avoid using m4_esyscmd_s() since it is not available
	in older versions of autoconf. use m4_esyscmd() and m4_translit()
	to whack the newline instead.

	see #3613

2012-12-22 18:00 -0800  Michael Elkins  <me@sigpipe.org>  (de974f67eba3)

	* configure.ac, init.h, mutt_ssl.c: Uses SSLv23_client_method() in
	mutt_ssl_starttls() because TLSv1_2_client_method() does not honor
	the SSL_OP_NO_TLS* flags.

	closes #3612

2012-12-22 15:04 -0800  Michael Elkins  <me@sigpipe.org>  (d07c9ee9a92b)

	* configure.ac: If neither --with-idn nor --without-idn are given, use
	-I/usr/include/idn when checking for the libidn header files, if
	present (needed for Solaris 11).

	Don't bother checking for the idna_* functions if we didn't find
	-lidn

2012-12-21 11:17 +0100  Matthias Andree  <matthias.andree@gmx.de>  (7d55bad3b11f)

	* patchlist.sh: Fix VPATH-based generation of non-hg-mq based
	patchlists.

	Note: Makefile.am runs patchlist.sh with $(srcdir)/PATCHES provided
	on stdin.

2012-12-21 11:07 +0100  Matthias Andree  <matthias.andree@gmx.de>  (759dd53302a0)

	* version.sh: Fix VPATH build outside Mercurial repositories.

2012-12-21 12:37 -0800  Michael Elkins  <me@sigpipe.org>  (494af2a964cb)

	* Makefile.am: add version.sh and check_sec.sh to EXTRA_DIST so they
	are including in the "make dist" output.

2012-12-20 21:13 -0800  Michael Elkins  <me@mutt.org>  (5554d811eb99)

	* imap/util.c: fix forgotten RETSIGTYPE change id [18a724e9eba0]

2012-12-20 20:49 -0800  Michael Elkins  <me@mutt.org>  (18a724e9eba0)

	* configure.ac, sendlib.c, signal.c: remove deprecated check for
	signal() return type

2012-12-20 20:45 -0800  Michael Elkins  <me@mutt.org>  (6de2578088ab)

	* configure.ac: update configure.ac with autoupdate

2012-12-20 20:34 -0800  Michael Elkins  <me@mutt.org>  (fe28a8bdd598)

	* configure.ac: change AM_CONFIG_HEADER to AC_CONFIG_HEADERS and move
	it after the AM_INIT_AUTOMAKE. config.h was not being generated
	from the dist package.

2012-12-20 17:09 -0800  Michael Elkins  <me@sigpipe.org>  (21c085ae6e8f)

	* configure.ac: modernize intialization of configure.ac

2012-12-21 00:38 +0100  Matthias Andree  <matthias.andree@gmx.de>  (0703095bf52d)

	* Makefile.am: Fix 'make distcheck': missing txt2c* and po/mutt.pot
	cleanup

2012-12-20 14:44 -0800  Michael Elkins  <me@sigpipe.org>  (f8774119c433)

	* menu.c: remove redundant #include statements

2012-12-20 14:40 -0800  Michael Elkins  <me@sigpipe.org>  (489031af8fdd)

	* menu.c: remove extern decl for Charset_is_utf8 since menu.c includes
	mbyte.h which has the same decl.

2012-12-20 11:20 -0800  Michael Elkins  <me@mutt.org>  (6674c087fd4f)

	* configure.ac: backout out changeset 36b0cc717ecc

2012-12-19 15:26 -0800  Michael Elkins  <me@sigpipe.org>  (879c9516154c)

	* crypt-gpgme.c: allow for CRLF line endings when comparing for the
	OpenPGP block identifiers

	adapted from http://svnweb.freebsd.org/ports/head/mail/mutt/files
	/patch-pgp?revision=301308&view=markup

2012-12-19 14:52 -0800  Michael Elkins  <me@sigpipe.org>  (41089c2982e3)

	* pager.c: support nbsp in the pager.

	imported from http://svnweb.freebsd.org/ports/head/mail/mutt/files
	/patch-nbsp?revision=301308&view=markup

2012-12-19 14:40 -0800  Michael Elkins  <me@sigpipe.org>  (fd2d94a0eb20)

	* configure.ac: detect newer BDB versions up to 5.2

	imported from http://svnweb.freebsd.org/ports/head/mail/mutt/files
	/patch-bdb?revision=301308&view=markup

2010-07-22 20:06 +0200  Fabian Groffen  <grobian@gentoo.org>  (bc39bac75ea8)

	* regex.c: http://thread.gmane.org/gmane.mail.mutt.devel/15710

	Interix doesn't have btowc, but it does have mbtowc. Linux manpage
	also discourages the use of btowc.

2012-12-19 13:29 -0800  Petr Pisar  <petr.pisar@atlas.cz>  (f7bd9642217f)

	* po/cs.po: updated cs.po

2012-12-19 11:56 -0800  Michael Elkins  <me@sigpipe.org>  (73900ca5db9a)

	* menu.c: use WACS_* macros for printing wide versions of the line
	drawing characters when linking against ncursesw.

	This patch is based on http://prefix.gentooexperimental.org:8000
	/mutt-patches/file/fea851a2808f/solaris-ncurses-chars.patch

2012-12-19 11:08 -0800  Michael Elkins  <me@sigpipe.org>  (36b0cc717ecc)

	* configure.ac: make configure define _POSIX_C_SOURCE, _XOPEN_SOURCE
	and _XOPEN_SOURCE_EXTENDED to comply with POSIX.1-2008 and XSI
	conforming applications.

2012-12-19 06:57 -0800  Vsevolod Volkov  <vvv@mutt.org.ua>  (52219fecdac8)

	* po/ru.po: update ru.po

2012-12-19 06:55 -0800  Vincent Lefevre  <vincent@vinc17.org>  (caf64f14142d)

	* charset.c: remove duplicate const keyword

2012-12-18 20:46 -0800  Michael Elkins  <me@mutt.org>  (940e528ef852)

	* mutt_ssl.c: disable tls v1.1/1.2 in mutt_ssl_starttls() based on
	$ssl_use_tlsv1_*

	see #3571

2012-12-18 20:38 -0800  Michael Elkins  <me@mutt.org>  (6bdd35fb3378)

	* mutt_ssl_gnutls.c: add support for TLSv1.1/1.2 when using GNUTLS.

	see #3571

2012-12-18 19:44 -0800  hncaldwell  <hncaldwell>  (fab920f01ca7)

	* init.h, mutt.h, mutt_ssl.c: add variables for disabling TLSv1.1/1.2
	when compiled against OpenSSL 1.0.1

	see #3571

2012-12-18 13:50 -0800  Michael Elkins  <me@mutt.org>  (f251d523ca5a)

	* headers.c, lib.h, mutt_crypt.h, parse.c, pop_lib.c, postpone.c,
	rfc1524.c, rfc822.c, send.c, sendlib.c, url.c: rename iswsp() to
	is_email_wsp()

	add new inline funtion skip_email_wsp() to be used in lieu of
	SKIPWS() when parsing ASCII protocols rather than user input.

	change use of SKIPWS() to skip_email_wsp() in places where it is
	likely to be a problem.

2012-12-18 02:21 -0800  Michael Elkins  <me@mutt.org>  (897dcc62e4aa)

	* sendlib.c: fix problem where mutt_substrdup() was called with the
	start pointer > end pointer, as a result of using SKIPWS(). This
	occurred because the header field had an empty body, so the trailing
	newline was skipped over. The fix is to just skip over ascii space
	and htab.

	closes #3609

2012-12-18 01:53 -0800  Honza Horak  <hhorak@redhat.com>  (d7f4b2e2b09a)

	* mutt_ssl_gnutls.c: if the peer's x.509 cert is not valid, we need to
	allow the user to inspect it even if the digital signatures are
	valid

	closes #3506

2012-12-17 20:42 -0800  Vincent Lefevre  <vincent@vinc17.org>  (722c47f6ede9)

	* po/fr.po: updated fr.po

2012-12-17 17:09 -0800  Honza Horak  <hhorak@redhat.com>  (ca4747442189)

	* pop.c: fix segfault in pop driver. when rereading the message
	header, the ENVELOPE* struct is freed, but ctx->subj_hash retains a
	pointer to env->real_subj, so the hash table entry must be deleted
	prior to calling mutt_free_envelope()

	http://pkgs.fedoraproject.org/cgit/mutt.git/tree/mutt-1.5.21-pophash
	.patch?h=f18

2012-12-17 16:47 -0800  Petr Pisar  <petr.pisar@atlas.cz>  (9f8e41dd4e1d)

	* crypt-gpgme.c: Fix NULL pointer dereference in notation name

	closes #3574

2012-12-17 10:39 -0800  Michael Elkins  <me@sigpipe.org>  (e6b271ed1d7f)

	* configure.ac, mutt_ssl.c: use TLSv1.2 if available in the system
	OpenSSL when using starttls

2012-12-17 10:09 -0800  Michael Elkins  <me@sigpipe.org>  (d77d81a69999)

	* mutt_ssl.c: use SSL_get_version() to display the actual SSL protocol
	used rather than the fixed string SSL.

2012-12-16 20:23 -0800  Andrew Gaul  <andrew@gaul.org>  (ed06326ae8a8)

	* doc/dotlock.man, doc/makedoc.c, doc/smime_keys.man, po/bg.po,
	po/ca.po, po/cs.po, po/da.po, po/de.po, po/el.po, po/eo.po,
	po/es.po, po/et.po, po/eu.po, po/fr.po, po/ga.po, po/gl.po,
	po/hu.po, po/id.po, po/it.po, po/ja.po, po/ko.po, po/lt.po,
	po/nl.po, po/pl.po, po/pt_BR.po, po/ru.po, po/sk.po, po/sv.po,
	po/tr.po, po/uk.po, po/zh_CN.po, po/zh_TW.po, rfc1524.c: Correct
	typos

2012-12-16 19:33 -0800  Michael Elkins  <me@mutt.org>  (5e745e37fe6e)

	* init.h: update documentation for $pgp_getkeys_command to note that
	%r is replaced with the email address, not the public key ID

	closes #1208

2012-12-16 13:28 -0800  Michael Elkins  <me@mutt.org>  (1cc05de753c2)

	* rfc822.c, rfc822.h: use new function iswsp() in place of isspace()
	when testing for whitespace.

	closes #3608 closes #2956

2012-12-15 07:48 -0800  Michael Elkins  <me@mutt.org>  (8aee8497cc2b)

	* imap/command.c, imap/imap.c, imap/imap_private.h, imap/message.c,
	imap/util.c: make imap_private.h include message.h for
	IMAP_HEADER_DATA definition

	cast &ctx->data to IMAP_HEADER_DATA** to fix compiler warning

	imap_free_header_data should check for *data being NULL, rather than
	"data"

2012-09-09 19:54 -0700  Andrew Gaul  <andrew@gaul.org>  (d39813193f27)

	* imap/imap_private.h, imap/message.c: Make imap_free_header_data
	type-safe

	Also push conditional into function for safety and consistency with
	other free functions.

2012-12-08 12:31 +0100  Matthias Andree  <matthias.andree@gmx.de>  (c4c65eadeb71)

	* Makefile.am: Fix VPATH build by running txt2c.sh from ${srcdir}
	rather than ".".

2012-12-07 09:51 -0800  Michael Elkins  <me@sigpipe.org>  (d626fb87c489)

	* crypt-gpgme.c: invoke gpgme_check_version() as required to
	initialize the library.

	move locale code to initialization function.

	closes #3300

2012-12-06 07:56 -0800  Michael Elkins  <me@mutt.org>  (ed5ad234aeed)

	* init.h: additional documentation for $editor. closes #3602

2012-12-01 14:48 -0800  Michael Elkins  <me@mutt.org>  (dace74dd904a)

	* doc/manual.xml.head: list-reply documentation should mention its
	behavior wrt the List-Post header field.

	closes #3599

2012-12-01 14:32 -0800  Michael Elkins  <me@mutt.org>  (109ebf6d4e53)

	* send.c: don't perform rfc3676 space stuffing when recalling a
	postponed message where it has already been done.

	closes #3600

2012-12-01 14:31 -0800  Michael Elkins  <me@mutt.org>  (2bf065dd23d6)

	* ascii.c: make ascii_strcasecmp properly handle unequal length
	strings with the same prefix

	closes #3601

2012-10-16 18:13 -0500  David Champion  <dgc@uchicago.edu>  (d414971f0c48)

	* .hgignore, Makefile.am, main.c, muttbug.sh.in, txt2c.c, txt2c.sh:
	Add compiler and configure info to mutt -v output (closes #3537)

	Makefile(.am) updated to produce conststrings.c, which contains C
	strings representing:

	* the compiler's own version information;
	* the CFLAGS value from the Make environment
	* the ./configure options

	main.c is updated to print them when running 'mutt -v'.

	txt2c.sh is added to produce conststrings.c. txt2c.sh uses a
	compiled txt2c binary if possible, for complete fidelity to the
	source strings in whatever encoding they may use. If txt2c is not
	available (could not be compiled, or was not compiled natively) it
	falls back on a shell function to approximate the output using sed
	and tr.

2012-07-22 11:15 -0700  Brendan Cully  <brendan@kublai.com>  (70810a88ce9f)

	* muttlib.c: mutt_buffer_init: just memset the buffer (closes #3588)

	This was meant to be part of the previous commit.

2012-07-21 19:51 -0700  Brendan Cully  <brendan@kublai.com>  (99dbd23ce78f)

	* imap/imap.c, imap/util.c, mbyte.c, muttlib.c, parse.c, protos.h:
	Split mutt_buffer_new out of mutt_buffer_init.

	Currently, no callers were providing a non-NULL buffer to
	mutt_buffer_init, and splitting it will allow more sane semantics
	for buffer allocation, initialization, and destruction in a later
	patch.

2012-07-20 12:32 -0700  Brendan Cully  <brendan@kublai.com>  (6d6df167185c)

	* commands.c, hook.c, init.c, pattern.c: Do not use stack-allocated
	space for BUFFERs

	It will cause mutt_buffer_* to segfault if it needs to grow the
	space. Thanks to Steve Losh for discovering the issue. I have done
	some simple grepping to find other cases, but some may remain.

2012-07-08 22:40 -0700  Dan Fandrich  <dan@coneharvesters.com>  (2f2ebc24920d)

	* send.c: Set text_flowed after send-hook has been applied (closes
	#3550)

2012-07-08 22:27 -0700  Brendan Cully  <brendan@kublai.com>  (5bf02605d988)

	* mutt_ssl_gnutls.c: silence some style warnings

2012-07-08 17:34 -0700  Antonio Radici  <antonio@dyne.org>  (33415ca7d976)

	* copy.c, crypt.c, edit.c, enter.c, init.c: Fix some spelling errors
	(closes #3493)

2012-07-08 17:25 -0700  Brendan Cully  <brendan@kublai.com>  (243710db60e0)

	* mutt_ssl_gnutls.c: gnutls:tls_compare_certificates: check strstr for
	failure (closes #3547)

	A malformed certificate file could cause strstr to return an
	unhandled NULL. Thanks to hhorak for the proposed patch. This one is
	similar but avoids using memmem for the first time (I am not sure
	about its portability).

2012-07-07 21:57 -0700  Antonio Radici  <antonio@dyne.org>  (8fabaffc2c00)

	* init.c: check_charset: check for NULL before calling strtok_r
	(closes #3326)

	Otherwise, if strtok_r cannot handle NULL an empty *charset setting
	will segfault

2012-07-07 15:50 -0700  Brendan Cully  <brendan@kublai.com>  (c6a44f4f6a99)

	* imap/auth_sasl.c: Do not use SASL for login unless AUTH=LOGIN is
	advertised (closes #3556)

2012-05-25 22:30 +0200  Marco Paolone  <marcopaolone@gmail.com>  (e452440f92a4)

	* po/it.po: Update Italian translation

2012-05-24 22:02 -0700  Brendan Cully  <brendan@kublai.com>  (0488deb39a35)

	* configure.ac: Remove AM_C_PROTOTYPES from configure.ac (closes
	#3579)

	I doubt we have any users of that macro nowadays. It will be
	interesting to hear about it if we do.

2012-05-23 23:29 -0400  Brendan Cully  <brendan@kublai.com>  (0fb6d7579fd1)

	* account.h: Support passwords of up to 127 characters.

	I received a report on IRC of a failure due to a 64-byte password.

2012-04-29 22:15 -0700  Brendan Cully  <brendan@kublai.com>  (41a8d7dceb6c)

	* mutt_ssl_gnutls.c: gnutls: catch gnutls_init failures

	I haven't actually experienced these, but it seems like a good idea.

2012-04-29 22:14 -0700  Brendan Cully  <brendan@kublai.com>  (aadaeb69cbd0)

	* mutt_sasl.c: give user time to read SASL init error message

2011-12-20 22:24 -0800  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (c26dbc7021f4)

	* po/ja.po: Updated Japanese translation

2011-12-03 11:13 -0800  Dan Fandrich  <dan@coneharvesters.com>  (9e756d1adb76)

	* addrbook.c, browser.c, charset.c, color.c, compose.c, crypt-gpgme.c,
	curs_lib.c, curs_main.c, date.c, enter.c, functions.h, globals.h,
	handler.c, help.c, imap/auth.c, imap/command.c, imap/message.c,
	imap/utf7.c, imap/util.c, init.c, init.h, keymap.c, keymap.h, lib.c,
	mapping.h, mime.h, mutt_ssl.c, pager.c, parse.c, pattern.c,
	pgpkey.c, pgpmicalg.c, pop_auth.c, postpone.c, protos.h, query.c,
	recvattach.c, remailer.c, rfc2047.c, rfc822.c, rfc822.h, sendlib.c,
	url.c: Declare many structures const (closes #3552)

	Many structs used in mutt are actually constant but are defined
	without the 'const' keyword. This can slow initialization (slightly)
	in some environments due to extra copying and increases the amount
	of writable RAM required at run-time, which can be significant on
	non-MMU systems. Using const can also increase the opportunities for
	compiler optimization.

	The attached patch marks many such structures as const. On my test
	x86 build, this reduces the size of .data by over 50%.

2011-12-03 11:07 -0800  Dan Fandrich  <dan@coneharvesters.com>  (1ed2657f6e24)

	* ascii.c: Inline some small, often-used functions (closes #3551)

	When I first sent this patch to the mailing list in 2008, my
	benchmarking found a reduction in startup time of 15%.

2011-11-26 20:41 -0800  Vincent Lefevre  <vincent@vinc17.net>  (d7b14ea9f708)

	* po/fr.po: Updated French translation

2011-11-28 09:46 -0800  Michael Elkins  <me@mutt.org>  (6f65f6d7d4c9)

	* enter.c: make kill-eow and kill-word consistent in considering words
	to consist only of alphanumeric characters. closes #3549.

2011-11-25 12:52 -0800  Michael Elkins  <me@mutt.org>  (ab1b84289213)

	* sendlib.c: Check that $sendmail is set to avoid potential segfault.
	Closes #3548.

2011-07-13 11:05 -0500  David Champion  <dgc@uchicago.edu>  (b01d63af6fea)

	* hcache.c: Invalidate header caches when spam rules change. closes
	#3473

	User 'exg' on #mutt reported a problem when using header cache with
	IMAP and spam rules. Spam tags are retrieved from cache and not
	updated when spam rules change.

	1. Enable header caching in muttrc 2. Set spam rules in muttrc 3.
	Use IMAP (or POP or Maildir). Your spam rules store spam tags into
	your message headers, and these get cached. 4. Quit mutt 5. Change
	your spam rules in muttrc 6. Relaunch mutt 7. Because of header
	caching, the rfc822 headers are not reparsed, and spam rules are
	not reapplied. User has outdated spam tags.

	Spam rules are applied during rfc822 header parsing because it's the
	only time we get a full and unadulterated view of all headers. Once
	header parse is done we have only processed headers and 'user
	headers' (X-headers). We might do spam rule matching against the
	struct HEADER copy of headers, except that:

	a. the header might not be in HEADER if it's non-standard and not an
	X-header; b. spam rules are regular expressions matching any
	arbitrary header line, and we would need to map these regexps to
	the header used to create the HEADER fields. This would change
	the syntax and behavior of spam rules dramatically.

	One solution, perhaps stopgap, is to invalidate the header cache
	when spam rules change. That's what this patch does. It alters the
	hcache versioning algorithm so that in addition to using the
	compiled-in checksum of mutt's structures definitions, we also mix
	in the user's runtime spam rules. Any time spam rules change the
	hcachever hash value changes, causing the hcache to be rewritten.

2011-07-01 18:21 -0700  Brendan Cully  <brendan@kublai.com>  (54a454492bd0)

	* ChangeLog: Update ChangeLog

2011-07-01 17:23 -0700  Brendan Cully  <brendan@kublai.com>  (94eee9410f7a)

	* version.sh: version.sh: fix(?) failure due to bizarre sh quoting
	rules

	I have not checked POSIX, and sh quoting always makes my head hurt,
	but this seems to suffice for my sh (actually bash in sh mode) when
	HGROOT contains a space.

2011-05-23 13:22 +0200  Olaf Hering  <olaf@aepfle.de>  (81a7c41040bf)

	* browser.c, browser.h: folder_file: change type of new from short to
	int

	As requested by Rocco Rutte in bug #2421 increase the type to int.

	Signed-off-by: Olaf Hering <olaf@aepfle.de>

	* pgppubring.c: fix gcc 4.6 warning -Wunused-but-set-variable in
	pgppubring.c

	pgppubring.c: In function 'pgp_parse_pgp3_sig': pgppubring.c:424:17:
	warning: variable 'hashalg' set but not used [-Wunused-but-set-
	variable] pgppubring.c:423:17: warning: variable 'pkalg' set but not
	used [-Wunused-but-set-variable]

	Signed-off-by: Olaf Hering <olaf@aepfle.de>

2011-06-29 12:01 -0500  David Champion  <dgc@uchicago.edu>  (8b5e41c6a517)

	* version.sh: version.sh: 1003.1 "-k" instead of obsolete "+" syntax
	(closes: #3528)

	* configure.ac, version.sh: version.sh: support building outside of
	source directory

	Reported by Emanuele Giaquinta <e.giaquinta@glauco.it>. Thanks also
	to Michael Elkins <me@sigpipe.org>.

2011-06-25 20:07 -0700  Brendan Cully  <brendan@kublai.com>  (b477d7c5733e)

	* imap/command.c: Parentheses suggested

	* imap/command.c: Do not subscribe to \noselect mailboxes. Closes
	#3445

2011-06-25 15:42 -0700  Honza Horak  <hhorak@redhat.com>  (0e4f1782ea2e)

	* imap/message.c: Avoid creating sparse ctx array when fetch responses
	are ignored. Closes #3288.

2011-06-25 15:23 -0700  Brendan Cully  <brendan@kublai.com>  (53dcb3a21da4)

	* compose.c, muttlib.c: Silence some eclipse warnings

2011-06-20 16:39 -0700  Michael Elkins  <me@mutt.org>  (b574d6f9f532)

	* sendlib.c: rfc2047 encode recipient list in resent-to header field.
	closes #3512

	* rfc822.c: copy idn status when duplicating address object

2011-06-20 16:07 -0700  antonio  <antonio@dyne.org>  (1bb9002567c4)

	* doc/manual.xml.head: fix regexp example in documentation

2011-06-18 21:29 -0700  antonio  <antonio@dyne.org>  (b9856206eee4)

	* mutt_ssl_gnutls.c: Remove the deprecated
	gnutls_certificate_verify_peers() in favour of the new
	gnutls_certificate_veirfy_peers2()

	Reported on http://bugs.debian.org/624085

	closes #3516

2011-06-18 21:07 -0700  Michael Elkins  <me@mutt.org>  (beebe6a4d25d)

	* imap/auth_login.c: clear logging in message when login succeeded.
	closes #3524

2011-05-23 12:59 +0200  Olaf Hering  <olaf@aepfle.de>  (8570f8a10572)

	* smime.c: fix gcc 4.6 warning -Wunused-but-set-variable in smime.c

	smime.c: In function 'smime_handle_entity': smime.c:1663:8: warning:
	variable 'last_pos' set but not used [-Wunused-but-set-variable]

	Signed-off-by: Olaf Hering <olaf@aepfle.de>

	* pgp.c: fix gcc 4.6 warning -Wunused-but-set-variable in pgp.c

	pgp.c: In function 'pgp_application_pgp_handler': pgp.c:254:8:
	warning: variable 'start_pos' set but not used [-Wunused-but-set-
	variable]

	Signed-off-by: Olaf Hering <olaf@aepfle.de>

	* crypt-gpgme.c: fix gcc 4.6 warning -Wunused-but-set-variable in
	crypt-gpgme.c

	crypt-gpgme.c: In function 'show_one_sig_status': crypt-
	gpgme.c:1311:21: warning: variable 'uid' set but not used [-Wunused-
	but-set-variable] crypt-gpgme.c: In function
	'pgp_gpgme_application_handler': crypt-gpgme.c:2285:27: warning:
	variable 'anywarn' set but not used [-Wunused-but-set-variable]
	crypt-gpgme.c:2159:8: warning: variable 'start_pos' set but not used
	[-Wunused-but-set-variable] crypt-gpgme.c: In function
	'crypt_getkeybystr': crypt-gpgme.c:4094:7: warning: variable 'match'
	set but not used [-Wunused-but-set-variable]

	Signed-off-by: Olaf Hering <olaf@aepfle.de>

	* rfc1524.c: fix gcc 4.6 warning -Wunused-but-set-variable in
	rfc1524.c

	rfc1524.c: In function 'rfc1524_expand_filename': rfc1524.c:453:20:
	warning: variable 'r' set but not used [-Wunused-but-set-variable]

	Signed-off-by: Olaf Hering <olaf@aepfle.de>

	* compose.c: fix gcc 4.6 warning -Wunused-but-set-variable in
	compose.c

	compose.c: In function 'redraw_crypt_lines': compose.c:113:7:
	warning: variable 'off' set but not used [-Wunused-but-set-variable]

	Signed-off-by: Olaf Hering <olaf@aepfle.de>

	* imap/imap.c: fix gcc 4.6 warning -Wunused-but-set-variable in imap.c

	imap.c: In function 'imap_open_mailbox': imap.c:558:15: warning:
	variable 'conn' set but not used [-Wunused-but-set-variable] imap.c:
	In function 'imap_open_mailbox_append': imap.c:777:15: warning:
	variable 'conn' set but not used [-Wunused-but-set-variable] imap.c:
	In function 'imap_subscribe': imap.c:1816:15: warning: variable
	'conn' set but not used [-Wunused-but-set-variable] imap.c: In
	function 'imap_complete': imap.c:1944:15: warning: variable 'conn'
	set but not used [-Wunused-but-set-variable]

	Signed-off-by: Olaf Hering <olaf@aepfle.de>

2011-05-22 22:13 -0700  Brendan Cully  <brendan@kublai.com>  (1fc2afbf9e3a)

	* keymap.c, mbox.c: Fix some minor warnings

2011-03-30 07:52 -0700  Michael Elkins  <me@mutt.org>  (f7160c94ff70)

	* keymap.c: fix bug where SIGWICH is ignored when $imap_keepalive <
	$timeout

	closes #3507

2011-03-07 10:17 -0600  David Champion  <dgc@uchicago.edu>  (8d0281f79b21)

	* configure.ac, dotlock.c, mutt.h, version.sh: Extra information in
	mutt version string, redux.

	Restores [f1b4d1d17200] functionality with a slight change to keep
	'make dist' working (see backout in [6b38124a5b81]).

	Automake is too much voodoo for me at this time, so I let it keep
	VERSION. mutt.h defined MUTT_VERSION as VERSION and the code used
	that, so I removed MUTT_VERSION from mutt.h and put it into config.h
	via configure.ac. A couple of tweaks were needed elsewhere. This
	restores the fancy-versioning feature within mutt and keeps 'make
	dist' happy.

2011-03-06 07:31 -0800  Brendan Cully  <brendan@kublai.com>  (6b38124a5b81)

	* configure.ac, version.sh: Back out f1b4d1d17200. It is nice, but it
	breaks make dist.

2011-01-03 13:19 -0600  David Champion  <dgc@uchicago.edu>  (b107737c415c)

	* patchlist.sh: Include mq-based patches in the mutt patch list.

	This augments the contents of the PATCHES file, so that mq-based
	builds do not need to maintain that file.

	* configure.ac, version.sh: Include extra information in mutt version
	string for developer builds.

	When a build is based on an hg clone, include extra information
	about the changeset node, distance from a tagged release, and mq
	applied patch count.

	For example, after this patch is applied my mutt build identifies
	itself (in mutt -v and in <show-version>) as:

	Mutt 1.5.21+26,mq+22 (7edc2073390d) (2010-09-15)

	I have applied 26 changesets applied since 1.5.21 was tagged, 22 of
	which are in my mq patch series. A 1.5.21 release build that is not
	mercurial-based would still appear simply as "1.5.21".

2011-02-21 23:12 -0800  Brendan Cully  <brendan@kublai.com>  (047bd501d6db)

	* UPDATING, init.h: Lower $imap_keepalive default to 300
	seconds

2010-12-30 10:09 -0800  Brendan Cully  <brendan@kublai.com>  (f01b306ebe0e)

	* sendlib.c: Handle missing : in write_one_header debug statement.
	Closes #3483

2010-10-13 07:38 -0700  Ralf Wildenhues  <wildenhues@ins.uni-bonn.de>  (57568da7d9aa)

	* thread.c: fix a minor logic error in thread.c, and a dead code line

2010-10-11 07:56 -0700  Michael Elkins  <me@mutt.org>  (033acdc0a947)

	* pager.c: Backed out changeset 11399121296a

2010-10-07 14:43 -0700  Michael Elkins  <me@mutt.org>  (11399121296a)

	* pager.c: support non-breakable space character in the pager

2010-10-01 07:14 -0700  Michael Elkins  <me@mutt.org>  (1a4c43138685)

	* muttlib.c: fix segfault when $message_cachedir is set and opening a
	POP3 mailbox.

	fixes #3457

2010-09-30 18:11 -0700  Roman Kagan  <rkagan@mail.ru>  (c10f8863e979)

	* crypt-gpgme.c: use gpgme_strerror() in lieu of gpg_strerror()

2010-09-29 14:17 -0700  Michael Elkins  <me@mutt.org>  (a23835db228d)

	* globals.h, handler.c, init.h, mutt.h, rfc3676.c: Add $reflow_text
	boolean, and $reflow_wrap variables to control display of
	format=flowed text parts.

	* rfc3676.c: fix typoh in comment

	* rfc3676.c: fix handling of format=flowed when $wrap is 0.

2010-09-23 11:06 -0700  Michael Elkins  <me@mutt.org>  (f2452f1f1fef)

	* rfc2047.c: RFC2047 encode/decode the group name in an address list.
	closes #3317

2010-09-23 06:56 -0700  Ivan Vilata i Balaguer  <ivan@selidor.net>  (51ee8e8a56bb)

	* po/ca.po: updated Catalan translation

2010-09-20 14:04 +0100  Emanuele Giaquinta  <e.giaquinta@glauco.it>  (d2f10c550d90)

	* mbox.c: Fix typo

2010-09-16 07:19 -0700  Vsevolod Volkov  <vvv@mutt.org.ua>  (0ca7ed91fe7f)

	* po/ru.po: update ru.po for 1.5.21

2010-09-15 11:47 -0700  me  <me@sigpipe.org>  (59aad6c21703)

	* regex.c: fix compile error with --with-regex and --without-wc-funcs

2010-09-15 10:53 -0700  Brendan Cully  <brendan@kublai.com>  (bd0afbb35c65)

	* UPDATING: Belatedly update UPDATING

2010-09-15 10:21 -0700  Brendan Cully  <brendan@kublai.com>  (b42be44bb41a)

	* .hgsigs: mutt-1.5.21 signed

2010-09-15 10:10 -0700  Brendan Cully  <brendan@kublai.com>  (9c7bd63635de)

	* .hgtags: Added tag mutt-1-5-21-rel for changeset 25a7f8f7d50d

2010-09-15 10:10 -0700  Brendan Cully  <brendan@kublai.com>  (25a7f8f7d50d)

	* VERSION, po/bg.po, po/ca.po, po/cs.po, po/da.po,
	po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po, po/eu.po,
	po/fr.po, po/ga.po, po/gl.po, po/hu.po, po/id.po, po/it.po,
	po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po,
	po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po,
	po/zh_TW.po: automatic post-release commit for mutt-1.5.21

2010-09-15 10:05 -0700  Michael Elkins  <me@mutt.org>  (54e3139a0362)

	* safe_asprintf.c: suppress check_sec errors

2010-09-13 17:25 -0700  Michael Elkins  <me@mutt.org>  (20b2d496349f)

	* init.h: make $mail_check_recent set by default

2010-09-13 19:00 +0100  Emanuele Giaquinta  <e.giaquinta@glauco.it>  (fea3860ff672)

	* imap/command.c: Restore the previous behaviour of checking for new
	messages in imap folders when mail_check_recent is set.

2010-09-12 19:54 -0700  Michael Elkins  <me@mutt.org>  (a51df78218e8)

	* buffy.c, buffy.h, imap/command.c, init.h, mbox.c, mutt.h: add
	$mail_check_recent boolean to control whether Mutt will notify about
	all new mail, or just new mail received since the last visit to a
	mailbox

	closes #3271

	partly addresses #3310

	* smime.c: fix crash when index contains 0 keys

2010-09-11 07:34 -0700  Michael Elkins  <me@mutt.org>  (0f962f1a6bbb)

	* send.c: Allow setting message security in send2-hook

	This patch delays checking the message security options until after
	the user has an initial chance to edit the message. This allows the
	security options to be set in a send2-hook when using $edit_headers.
	Without this patch, the user has no way of automatically setting
	security based on recipients since the to/cc prompts are bypassed.

	The other change in behavior is if the user happened to use a
	send2-hook to see if the message had security applied *prior* to
	editing the message, that no longer works.

	* keymap.c, keymap.h, main.c: support for ncurses extension allowing
	binding to function keys with modifiers

	* keymap.c: allow octal codes with more than three digits

	* crypt-gpgme.c, mime.h, pgp.c, recvattach.c, sendlib.c: add DISPNONE
	to mean no preferred Content-Disposition; make pgp-signature parts
	DISPNONE for multipart/signed

	* recvcmd.c: fix problem with reply-hook not working when a
	message/rfc822 attachment is selected

	* rfc2047.c: more lenient RFC2047 decoding: accept illegal spaces and
	bare question marks in encoded words

	* curs_main.c, mx.c: fix crash when new mail is received during IMAP
	IDLE

	closes #3335

2010-08-25 00:30 +0100  Emanuele Giaquinta  <e.giaquinta@glauco.it>  (5302767aa6aa)

	* rfc2047.c: Use mutt_substrdup in rfc2047_decode_word

2010-08-24 16:40 -0700  Michael Elkins  <me@mutt.org>  (92b02f77e780)

	* rfc2047.c: detect failure to decode word and copy raw string
	instead; avoids calling strlen() on uninitialized memory

	closes #2923

2010-08-24 18:39 +0100  Emanuele Giaquinta  <e.giaquinta@glauco.it>  (ebd4beafe5eb)

	* mutt_ssl.c: Fix typo.

	* browser.c, hook.c, init.c, menu.c, mutt_ssl_gnutls.c, pager.c: Do
	not call regfree if regcomp fails. The content of the regex_t
	structure is undefined in this case.

	* curs_lib.c, mutt_ssl_gnutls.c: use REGCOMP() macro

2010-08-24 10:03 -0700  Michael Elkins  <me@mutt.org>  (5d59c8b737ba)

	* init.c: add REG_ICASE accidentally removed in changeset 1a35f096c8cb

	* muttlib.c: do not print debug message on ENOENT

2010-08-14 09:18 -0700  Michael Elkins  <me@mutt.org>  (04fd8ddea579)

	* url.c: avoid c99 syntax for backwards compat

2010-08-06 21:52 +0200  Matthias Andree  <matthias.andree@gmx.de>  (24a7b1aa2e55)

	* buffy.c: Fix comparison signedness warnings.

2010-08-12 16:04 -0700  Michael Elkins  <me@mutt.org>  (ced5d3dca974)

	* imap/util.c: Fix bug in imap_keepalive() which erroneously free
	Context when the IMAP connection is shut down by the server.

	Closes #3410

	* url.c: url_parse_mailto should return 0 on success

	fix memory leak errors when unable to parse mailto: URL

	closes #3441

	* mh.c: always update message body size when parsing a maildir message

	* safe_asprintf.c: call va_end() even when vasprintf returns <0

2010-08-09 20:48 -0700  Michael Elkins  <me@mutt.org>  (6572e8bcd723)

	* Makefile.am, imap/message.c, lib.c, lib.h, safe_asprintf.c: rename
	mutt_sprintf() to safe_asprintf() to match the GNU extension that
	performs a similar task

2010-08-09 10:27 -0700  Vincent Lefevre  <vincent@vinc17.org>  (e86ee9991dc3)

	* postpone.c: In postpone.c, function mutt_num_postponed, the old
	{{{OldPostponed}}} is never freed.

	closes #3442

2010-08-09 09:38 -0700  Michael Elkins  <me@mutt.org>  (8051fc8b631c)

	* send.c: clear the real name when $reverse_realname is unset and a
	match is hit so that $realname can be set in a reply- or send-hook

	closes #3427

	* doc/manual.xml.head: fix example of mailto: use on the command line

	* pager.c: fix buffer underrun when processing ANSI escape sequences

	closes #3371

2010-08-08 12:29 -0700  Michael Elkins  <me@mutt.org>  (4dcf19c58139)

	* doc/manual.xml.head, doc/mutt.man: document support for mailto: URLs
	on the command line

	closes #3400

	* imap/message.c: avoid error when the user has requested many extra
	headers via IMAP

	closes #3435

	* lib.c, lib.h: add a malloc+sprintf combo function

2010-08-08 10:21 -0700  Fabian Groffen  <grobian@gentoo.org>  (d4d703e21cdd)

	* pattern.c: fix crash in limit when user enters invalid regexp

	closes #3417

2010-08-07 06:44 -0700  Michael Elkins  <me@mutt.org>  (cc881d855f05)

	* mutt_ssl.c: Fix comparison signedness warnings

	* pop_lib.c: add comment about safety of cast

2010-08-06 21:58 +0200  Matthias Andree  <matthias.andree@gmx.de>  (55f50b2db1f8)

	* pop_lib.c: Fix comparison signedness warning.

	* status.c: Fix signedness warning.

	* .hgignore: Ignore backup files ending in a tilde character.

	* url.c: Fix comparison signedness warnings.

	* gnupgparse.c, pop_auth.c: Fix comparison signedness warnings.

	* lib.h: Resolve if/else empty body ambiguity/warnings when compiling
	without DEBUG.

2010-08-06 17:08 -0700  Michael Elkins  <me@mutt.org>  (5b15d4d96277)

	* configure.ac, init.c, protos.h: detect availablity of 'long long'

	cast time_t to 'long long' prior to bitshifting since it can be a
	float value according to POSIX.1-2008

	closes #3439

2010-08-06 21:22 +0200  Matthias Andree  <matthias.andree@gmx.de>  (bf13863e682e)

	* md5.c: Drop declaration for unused argv/argc parameters.

	Fixes GCC warning with -Wextra.

2010-08-06 13:11 -0700  Michael Elkins  <me@mutt.org>  (998ca956b41b)

	* init.c, muttlib.c: use a 64-bit random value in temporary filenames.

	closes #3158

	* browser.c: avoid using C99 bool

	* browser.c, init.h: add %D format string to $folder_format to expand
	the time based on $date_format.

	properly set the locale for LC_TIME prior to calling strftime()
	closes #1734 closes #3406

	* mutt_ssl.c: fix compiler warning about wrong type for
	SslSessionCerts

2010-08-06 09:58 +0200  Matthias Andree  <matthias.andree@gmx.de>  (473fbe29f626)

	* mutt_ssl.c: Unbreak X.509 SubjAltName checks,

	regression in 6016:dc09812e63a3 that calls strlen on an SSL sk
	rather than its string payload.

	closes #3426

2010-08-06 07:12 -0700  Michael Elkins  <me@mutt.org>  (4ae33a8a1391)

	* configure.ac: properly set _XOPEN_SOURCE to 600 (POSIX.1-2004) when
	detecting th wc*() functions

	closes #3341

2010-08-05 21:57 -0700  Michael Elkins  <me@mutt.org>  (bc5fb152e2ba)

	* mbox.c: when parsing From_ lines in mmdf/mbox, the TZ should be
	computed based on the time in the string rather than the current
	time, otherwise DST issues cause the computed time to be wrong.

	closes #2177

	* thread.c: explanatory comments

2010-08-05 17:03 -0700  andreas  <andreas.amann@tyndall.ie>  (0666d9588eac)

	* curs_main.c, functions.h: do not leave pager when changing sort
	order.

	closes #2143

2010-08-05 16:47 -0700  Michael Elkins  <me@mutt.org>  (57d4b3839172)

	* curs_main.c: do not leave pager when using read-thread and read-
	subthread

	closes #2137

2010-08-04 17:04 -0700  Petr Písař  <petr.pisar@atlas.cz>  (59ca5d7b1656)

	* ChangeLog, po/cs.po: Updated Czech translation

2010-08-04 06:37 -0700  Vincent Lefevre  <vincent@vinc17.org>  (a7f05f29d9bc)

	* po/fr.po: updated French translation

2010-08-03 10:10 -0700  Michael Elkins  <me@mutt.org>  (2c42f4760c8f)

	* browser.c: add locale.h for compililng with -std=c99

	* main.c: adjust help for -a to make it clearer that -- is required
	terminator

2010-07-31 08:21 -0700  Michael Elkins  <me@mutt.org>  (7cd85c18bfaf)

	* muttlib.c: Fix buffer underflow in expansion of format pipes. Add
	better error detection.

	Closes #3432.

2010-07-18 14:24 -0700  Michael Elkins  <me@mutt.org>  (1a35f096c8cb)

	* init.c: use REGCOMP() macro

2010-07-18 22:09 +0100  Emanuele Giaquinta  <e.giaquinta@glauco.it>  (d0e0d174d620)

	* init.c: Skip 'attachments' directive if minor type is not a valid
	regexp

2010-07-09 11:07 -0700  Joel Dahl  <joel@FreeBSD.org>  (6b13e8319c1f)

	* po/sv.po: fix misspelling in Swedish translation

2010-05-18 08:39 -0700  Michael Elkins  <me@sigpipe.org>  (29e37994a536)

	* send.c: Consider any negative return value from send_message() to be
	an error and allow the user to resend.

	Closes #3411.

2010-04-24 16:10 -0700  Brendan Cully  <brendan@kublai.com>  (4cd2daafd03b)

	* mutt_ssl.c: openssl: only call SSL_shutdown during clean
	shutdown (closes #3407)

2010-04-22 09:14 -0700  Vincent Lefevre  <vincent@vinc17.net>  (6ebdfd09abc1)

	* po/fr.po: updated French translation

2010-04-14 15:47 -0700  Michael Elkins  <me@mutt.org>  (15b9d6f3284f)

	* pgp.c: remove toggle and replace with format in pgp-menu

2010-04-12 15:13 -0500  David Champion  <dgc@uchicago.edu>  (41a46373ddd9)

	* compose.c: Improve clarity/uniformity in compose menu's crypto
	display

	Incorporates feedback on "Security: None" key hints.

2010-04-13 06:49 -0700  Michael Elkins  <me@mutt.org>  (4d798ee2898e)

	* muttlib.c: fix bug handling wide pad char in soft-fill mode

2010-04-11 20:00 -0700  Michael Elkins  <me@mutt.org>  (2cd62f40d840)

	* compose.c: increase size of buffer used for displaying addresses in
	the compose menu to avoid truncating on widescreen displays

	* curs_lib.c: clear prompt when user cancels with ^G from a yes/no
	prompt

	* muttlib.c: Fix bug in soft-fill (%*) in $index_format not accounting
	for 'set arrow_cursor'

	* pgp.c: Remove the (i) option from the PGP-menu when encryption or
	signing is not yet selected. The toggle between PGP/MIME and
	Traditional doesn't make sense unless some type of security has been
	requested.

	Closes #3402.

2010-04-06 09:47 -0700  Michael Elkins  <me@mutt.org>  (889aa698cc49)

	* configure.ac, muttlib.c: fix for compiling Mutt with clang: check
	for wchar_h prior to wctype_h in check for wc funcs

2010-04-05 11:12 -0700  Michael Elkins  <me@mutt.org>  (844174efa648)

	* doc/manual.xml.head: [doc] Remove bogus -group parameter from
	unlists and unsubscribe commands; add links to address group section
	for context.

2010-04-03 20:34 -0700  Michael Elkins  <me@mutt.org>  (cf97505addf8)

	* init.c: prevent user from setting $charset to an empty string since
	other code requires it to be set to a valid string

	closes #3326

	* pager.c: allow regexps to match on continuation header lines in
	'color header' commands.

	closes #3373

	* pattern.c: Fix crash on invalid regexp in search string due to
	uninitialized BUFFER variable.

	Closes #3401

2010-04-01 10:10 -0700  Simon Ruderich  <simon@ruderich.org>  (b9baa0234846)

	* attach.c, commands.c, filter.c, muttlib.c, send.c: fix comment typos

2010-04-01 09:59 -0700  Michael Elkins  <me@mutt.org>  (96ed7cdacdc6)

	* init.h: Improve documentation for $query_command to note that Mutt
	automatically adds quotes according to shell quoting rules (thx:
	Simon Ruderich).

	* doc/manual.xml.head: Clarify the documentation on what the line-
	editor is (thx: Simon Ruderich)

2010-03-31 08:50 -0700  Michael Elkins  <me@mutt.org>  (7e9e31b1bd7b)

	* muttlib.c: avoid buffer overflow when expanding the format string
	associated with a 'spam' command.

	closes #3397

2010-03-23 16:03 -0700  Michael Elkins  <me@mutt.org>  (fe29d691deff)

	* doc/muttrc.man.head: remove errant commands in secton on setting
	alternates

2010-03-22 22:16 -0700  Brendan Cully  <brendan@kublai.com>  (69e9a1a0ba2f)

	* sendlib.c: Fix a format string warning

2010-03-22 20:02 -0700  Marcel Telka  <marcel@telka.sk>  (f544730656c1)

	* compose.c: redraw entire screen when exiting editor after re-editing
	the message body in the send menu.

	closes #3393.

2010-03-21 09:52 -0700  Michael Elkins  <me@mutt.org>  (0a29e3f4f4b9)

	* sendlib.c: Do not assume whitespace follows the colon in a header
	field.

	Closes #3385.

2010-03-08 15:13 -0800  Brendan Cully  <brendan@kublai.com>  (ad6d799951cb)

	* configure.ac: Comment about search libsasl for sasl2 functions

2010-03-08 14:04 -0600  Will Fiveash  <Will.Fiveash@Sun.COM>  (b92b9c6a1c85)

	* configure.ac: OpenSolaris sasl fix for configure.ac

2010-03-08 15:00 -0800  Brendan Cully  <brendan@kublai.com>  (05cec973f0d9)

	* pattern.c: When regexp compilation fails, report actual pattern
	along with error.

	* muttlib.c: mutt_buffer_printf: NULL dptr means use data

	* pattern.c: If regcomp fails, assume rx has not been allocated. Fixes
	a core dump for save-hook '~f foo\.bar@(something|other)\.com' =foo.

2010-03-02 11:31 -0800  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (fec2720ff6ef)

	* rfc822.c: Fix #2014. Thanks to Vincent Lefevre for help
	with this one.

2010-03-02 11:16 -0800  Brendan Cully  <brendan@kublai.com>  (41cf44ddbb4c)

	* copy.c: Fix thinko in [cc02f079b1b9]

2010-03-01 22:40 -0800  Brendan Cully  <brendan@kublai.com>  (cc02f079b1b9)

	* copy.c: Guard dequote with NULL check on personal field

	* copy.c, rfc822.c, rfc822.h: Another attempt to dequote
	RFC2047-encoded address comments (see #2014)

	* rfc822.c: Backed out changeset 2a4ca6917fd0. It is incompatible with
	$assumed_charset (see #2014).

2010-02-28 23:03 -0800  Brendan Cully  <brendan@kublai.com>  (2a4ca6917fd0)

	* rfc822.c: RFC-2047 decode address text before dequoting it (see
	#2014)

	* doc/manual.xml.head: Fix next-unread-mailbox name in
	documentation. Closes #3319.

2010-02-28 17:23 -0800  Antonio Radici  <antonio@dyne.org>  (25459cbb132a)

	* po/de.po: Fix German translation of "No undeleted messages." (closes
	#3372)

	* pop_lib.c: pop: allow user-specified port to override
	default in URL. Closes #3322.

2010-02-28 17:00 -0800  ludwig  <ludwig@fh-worms.de>  (2c78b28027cc)

	* crypt-gpgme.c: GPGME: Sender verification should be canse-
	insensitive for domain names. Closes #2180

2010-02-26 18:18 -0800  Brendan Cully  <brendan@kublai.com>  (40eca68c394a)

	* UPDATING, init.h: Make $thorough_search default to yes
	(closes #3386)

2010-02-23 12:42 -0800  Brendan Cully  <brendan@kublai.com>  (57124ea5592e)

	* commands.c: Don't use freed ctx.path when updating utime of target
	mailbox in save-message. Thanks to Sean Boudreau for the bug report.

2010-02-22 23:01 -0800  Vincent Lefevre  <vincent@vinc17.net>  (f17302c10229)

	* po/fr.po: Updated French translation.

2010-02-21 13:16 -0800  Brendan Cully  <brendan@kublai.com>  (a6fddecdc5f5)

	* curs_lib.c: Make mutt_yesorno use mutt_message to print query.
	Closes #3352.

2010-02-20 21:56 -0800  Gregory Shapiro  <dev.mutt.org@g.gshapiro.net>  (f723e07c8e6d)

	* OPS, UPDATING, curs_main.c, functions.h: Add imap-logout-
	all to log out of all IMAP connections. Closes #2880.

2010-02-17 00:47 -0800  Simon Ruderich  <simon@ruderich.org>  (260d39279161)

	* doc/manual.xml.head: Document 'n' and 'o' flags in index

	* doc/devel-notes.txt, doc/muttrc.man.head, init.h,
	rfc1524.c: Spelling fixes

2010-02-10 23:29 -0800  Brendan Cully  <brendan@kublai.com>  (b7ec848af36b)

	* doc/manual.xml.head: Fix a typo (closes #3379)

2010-02-01 23:40 -0800  Antonio Radici  <antonio@dyne.org>  (e9965b78e92d)

	* po/sv.po: The Swedish translation has a suboptimal
	translation of the word "Bad" in several places. The proposed patch
	substitutes Dålig (which implies bad "as in quality", and not bad
	"as in error") for Felaktig (erroneous).

	Closes #3370.

	* init.h: Small fix to the muttrc manpage. Closes #3374

2010-01-13 19:12 +0100  Matthias Andree  <matthias.andree@gmx.de>  (e2c60de29015)

	* configure.ac: Fix hcache build on systems with $(EXEEXT), include it
	in mutt_md5.

2009-12-29 00:33 -0500  Brendan Cully  <brendan@kublai.com>  (31881f38ca1e)

	* curs_lib.c: Hack mutt_wstr_trunc to treat M_TREE characters as 1
	cell. Closes #3364.

2009-12-28 22:13 -0500  Brendan Cully  <brendan@kublai.com>  (359de549b2d1)

	* doc/manual.xml.head: Remove spurious quotes from query_command
	example. Closes #3365.

2009-12-14 10:24 -0800  Brendan Cully  <brendan@kublai.com>  (736b6af3c5f1)

	* rfc1524.c: Fix off-by-one errors in mailcap parser.
	Closes #3362

2009-12-10 22:52 -0800  Daniel Jacobowitz  <dan@debian.org>  (b7d2cb7c7ce1)

	* hcache.c: Do not store header color in hcache. If the color
	directive is removed from muttrc, the cached value from the last
	directive would otherwise still be in effect.

2009-12-07 23:08 -0800  Patrick Welche  <prlw1@cam.ac.uk>  (1cf34ea1f128)

	* mutt_ssl.c: STACK* is not defined with newer SSL, use
	STACK_OF instead. Closes #3356.

2009-12-07 22:46 -0800  Peter Rosin  <peda@lysator.liu.se>  (fc9563de3dcb)

	* snprintf.c: Output %p as unsigned in the bundled snprintf

2009-11-14 14:31 -0800  Brendan Cully  <brendan@kublai.com>  (6928f522ac48)

	* curs_main.c: Back out e67f4c347bb4.

	I could not reproduce the problem, and the change makes it
	impossible to change to a real folder when no folder is currently
	open.

2009-10-28 23:03 -0700  Brendan Cully  <brendan@kublai.com>  (89fb586edda2)

	* sendlib.c: Unfold headers to wrap length in pager, when weed is set.

	From Rocco's patch queue.

2009-09-22 23:29 -0700  Antonio Radici  <antonio@dyne.org>  (5037c59a589e)

	* po/it.po: Correct Italian translation of y/n/a prompt.
	Closes #3336

2009-08-27 22:10 -0700  Petr Písař  <petr.pisar@atlas.cz>  (605559e4f88f)

	* po/cs.po: Updated Czech translation.

2009-08-20 11:34 +0200  René Clerc  <rene@clerc.nl>  (6b48ff4e69a3)

	* doc/manual.xml.head: No-brain documentation typo fix

2009-08-20 11:33 +0200  Rocco Rutte  <pdmef@gmx.net>  (e196cfc00105)

	* doc/manual.xml.head: Backed out changeset c9dd93b09ce7

2009-08-20 11:25 +0200  René Clerc  <rene@clerc.nl>  (c9dd93b09ce7)

	* doc/manual.xml.head: No-brain documentation typo fix Hi Rocco,

	Attached a patch for the documentation that fixes a small typo I
	stumbled upon. If you'd rather have me opening a trac ticket,
	please say so; since this is such a no-brainer I figured I'd e-mail
	you directly.

2009-08-17 17:07 +0200  Rocco Rutte  <pdmef@gmx.net>  (d0fce0eec0b3)

	* doc/manual.xml.head, doc/muttrc.man.head, init.h: Doc: fix more
	typos

	* doc/Makefile.am, doc/mutt.pwl: Doc: fix aspell calls, add
	custom mutt-only wordlist

	* curs_main.c: Require already opened folder when using templates for
	change-folder.

	For example, start with -y and type a wrong IMAP password so that no
	mailbox is open. Trying to change folders resulted in a crash.

2009-08-14 21:29 +0200  Rocco Rutte  <pdmef@gmx.net>  (6a08a5244d60)

	* pattern.c: Clear last search pattern if it's invalid.
	Closes #3315.

	We keep both, the string version and compiled version around for
	search-next; however, in case of parsing errors we dropped only the
	compiled version and not the string one making the code attempting
	to perform a search using a NULL pattern.

	* pattern.c: Bail on missing pattern modifiers at end of pattern.
	Closes #3314.

2009-08-13 23:49 +0200  Rocco Rutte  <pdmef@gmx.net>  (f8d50e968853)

	* doc/Muttrc.head, doc/manual.xml.head, init.h: Docs: fix
	typos/style

2009-08-11 12:22 -0700  Tomas Hoger  <thoger@redhat.com>  (dc09812e63a3)

	* mutt_ssl.c: Catch SSL null prefix attach (openssl)

2009-08-09 14:45 -0700  Brendan Cully  <brendan@kublai.com>  (002b4676d502)

	* buffy.c: Add buffy_new and buffy_free abstractions.

2009-08-09 14:53 +0200  Christian Ebert  <blacktrash@gmx.net>  (0153dbc12dc4)

	* doc/manual.xml.head: manual: fix wrong spell checker assumptions

2009-08-09 14:35 +0200  Rocco Rutte  <pdmef@gmx.net>  (59b4c73e7254)

	* doc/manual.xml.head: Manual: Fix typos, consequently use
	en_US spelling

2009-08-08 22:50 -0700  Brendan Cully  <brendan@kublai.com>  (d4ea7f571f10)

	* buffy.c: Split out mailbox-specific code in mutt_buffy_check

	* buffy.c, muttlib.c, mx.c, mx.h, status.c: Unconditionally define
	M_IMAP, M_POP. These aren't bloat, and not having them creates a lot
	of #ifdef clutter.

	* curs_lib.c: Abort prompt on ^C, as was the case prior to
	12a6de725483

2009-08-04 10:47 -0700  Vincent Lefevre  <vincent@vinc17.org>  (15a695678b7b)

	* po/fr.po: Updated French translation.

2009-08-04 12:34 +0200  Rocco Rutte  <pdmef@gmx.net>  (25c2d70f2f00)

	* doc/manual.xml.head: Manual: Add some words of warning to really
	remove IRT header when intended

	* doc/manual.xml.head: Manual: Put mailbox shortcuts into
	table for readability

	* doc/manual.xml.head: Manual: Fix docs for push/exec

2009-08-04 12:08 +0200  Johan D  <djo33@free.fr>  (14bb498c6a1c)

	* mh.c: Fix MH parsing, fixes [0698e8195545]. Closes #3312

2009-08-01 15:16 +0200  Rocco Rutte  <pdmef@gmx.net>  (29727d19634a)

	* doc/manual.xml.head: Manual: use full names for &eacute; and
	&egrave; entities. Closes #3286.

	This is necessary because we want to install a us-ascii manual.txt
	that would contain only "e" instead of accented characters.

2009-07-30 17:56 +0200  Rocco Rutte  <pdmef@gmx.net>  (4a572310c3b5)

	* main.c: Fix mutt -h output for -a/-- options

2009-07-29 13:26 -0700  Brendan Cully  <brendan@kublai.com>  (a2a4286491b4)

	* hcache.c, hcache.h, imap/util.c: Harmonize hcache uidvalidity size
	to unsigned int (per IMAP RFC). Closes #3296.

2009-07-28 23:16 +0200  Rocco Rutte  <pdmef@gmx.net>  (153eac9e03e7)

	* Makefile.am: Add group.h to distribution

	* group.c, group.h, init.c, rfc822.c: Fix some issues with
	ungroup [...] *

2009-07-27 21:14 -0700  Kees Cook  <kees@outflux.net>  (2fc9348684fe)

	* mh.c: Properly propagate mh_read_sequences result. Closes #3308.

2009-07-27 20:49 -0700  Brendan Cully  <brendan@kublai.com>  (5c076ed18883)

	* configure.ac: Do not overwrite docdir unless --with-
	docdir was explicitly given. This allows --docdir from autoconf
	2.60+ to work, though if given --with-docdir will silently override
	--docdir. Closes #3282.

2009-07-24 14:30 +0200  Rocco Rutte  <pdmef@gmx.net>  (86e066a206ac)

	* po/de.po: Update German translation

	* init.c: Fix check_sec.sh warning

2009-07-23 23:36 -0400  Aron Griffis  <agriffis@n01se.net>  (0ee27568ad09)

	* init.c: fix :reset to work with empty strings

	Signed-off-by: Aron Griffis <agriffis@n01se.net>

2009-07-23 23:32 -0700  Vincent Lefevre  <vincent@vinc17.org>  (223020f50cb7)

	* po/fr.po: Updated French translation.

2009-07-23 23:51 +0200  Matthias Andree  <matthias.andree@gmx.de>  (1e77b368ef55)

	* charset.h, rfc2047.c: Use proper prototype for
	mutt_get_default_charset(), fix fallout.

	* bcache.c, charset.c: Fix two warnings "the address of 'foo' will
	always evaluate as 'true'".

2009-07-23 17:28 +0200  Rocco Rutte  <pdmef@gmx.net>  (1597c2074a52)

	* doc/manual.xml.head: Manual: better document what address
	groups are (for)

	* group.c, group.h, init.c, init.h, pattern.c, protos.h, rfc822.c,
	rfc822.h: Implement ungroup command. Closes #3304.

	* init.c, mutt.h, muttlib.c: Move remove_from_rx_list() to muttlib.c,
	name it mutt_remove_from_rx_list()

2009-07-22 15:25 +0200  Fabian Groffen  <grobian@gentoo.org>  (d41e043fa775)

	* keymap.c: Use CRYPT_BACKEND_GPGME instead of non-existent
	HAVE_GPGME

2009-07-22 14:43 +0200  kees  <kees@outflux.net>  (848f08512bf3)

	* hcache.c, rfc822.h: Properly restore addresses from hcache using
	rfc822_new_address(). Closes #3302.

	* mh.c: Don't leak mhs flags in mh_buffy(). Closes #3303.

2009-07-17 17:57 -0400  Aron Griffis  <agriffis@n01se.net>  (a3c4b605cfad)

	* UPDATING: add batch mode send-hooks note to UPDATING

2009-07-14 20:25 -0700  Aron Griffis  <agriffis@n01se.net>  (084fb086a0e7)

	* send.c: Make send-hooks work for batch mode. Closes
	#3219.

	Handle SENDBATCH inline with the normal sending code, instead of
	handling it separately. This allows send-hooks to run, along with
	removing a number of unnecessarily lines of code.

2009-07-11 14:52 +0200  Rocco Rutte  <pdmef@gmx.net>  (6f942afe60b5)

	* charset.c, mbyte.c: Recognize charset extensions, see #3150.

	With utf-8//TRANSLIT, we internally didn't recognize it as utf-8.
	This leads to badly broken behaviour if --without-wc-funcs is used
	for some reason. In that case, if we have utf-8 as charset, we
	implement our own wide char functions; for all other charsets, we
	use the system single-byte locale functions. And using these with
	utf-8 is broken.

	* curs_lib.c: Render blanks to spaces in index, fixes
	[298194c414f0]

	wcwidth(<tab>) returns -1 so 'foo<tab>bar' was rendered to 'foobar',
	and now to 'foo bar'. Closes #3270 again.

2009-07-08 13:37 +0200  Rocco Rutte  <pdmef@gmx.net>  (f22b71d8005a)

	* mbyte.c: Fix compiler warning

2009-07-07 15:03 +0200  Rocco Rutte  <pdmef@gmx.net>  (d5e03a46518c)

	* TODO: Update TODO

2009-07-07 10:49 +0200  Matthias Andree  <matthias.andree@gmx.de>  (cc4d6044b31e)

	* INSTALL: GNU-make based VPATH builds work.

2009-07-07 13:16 +0200  Rocco Rutte  <pdmef@gmx.net>  (f161c2f00d84)

	* UPDATING, bcache.c, doc/manual.xml.head, hcache.c,
	muttlib.c, protos.h: Make hcache+bcache paths always UTF-8. Closes
	#3284.

	* UPDATING, globals.h, init.h, sendlib.c: Add $wrap_headers. Closes
	#3135

	* doc/manual.xml.head: Manual: mention terminal setup for
	charsets, more unicode pros.

	Closes #3292.

2009-07-06 15:28 +0200  Rocco Rutte  <pdmef@gmx.net>  (ccab6c56b557)

	* doc/manual.xml.head: Manual: Add a note about when/why to use utf-8

2009-07-05 18:36 -0700  Brendan Cully  <brendan@kublai.com>  (118b8fef8aae)

	* buffy.c, buffy.h, mx.c: Suppress new mail notification
	from mailbox just left. Closes #3290.

2009-07-02 20:42 +0200  Rocco Rutte  <pdmef@gmx.net>  (042f2ce0b870)

	* doc/manual.xml.head: Manual: minor fixes

	* doc/manual.xml.head, doc/mutt.css: Manual: Render
	comments in examples a lighter for readability

	* doc/manual.xml.head, doc/manual.xml.tail: Manual: Reformat
	paragraphs, fix &tilde; -> ~ breakage

	* doc/manual.xml.head: Manual: rework MIME chapter a bit

	* doc/gen-map-doc, doc/manual.xml.tail, functions.h: Manual: Generate
	more pretty titles/ids for key binding tables

	* doc/manual.xml.head: Manual: fix supported version
	numbers for mixmaster

2009-07-02 00:06 -0700  Brendan Cully  <brendan@kublai.com>  (029ba140fb48)

	* curs_main.c: Handle keepalive failure when changing folders. There
	are probably many other places where this kind of thing could happen
	though. See #3028.

2009-07-01 18:13 -0700  Rocco Rutte  <pdmef@gmx.net>  (f6c6066a5925)

	* account.c, mutt_sasl.c, smtp.c: Make getuser/pass abort
	if input is required in batch mode. Replaces [0a3de4d9a009]. See
	#3289.

	* doc/manual.xml.head: Manual: Add detailed section on charset
	handling

	* smtp.c: SMTP: use $smtp_pass in batch mode. Closes #3289.

	mutt_account_getpass() copying the password from $smtp_pass into the
	account structure is only called from the SASL callback we only use
	if we're sure we don't need curses (i.e. have the pass already).

2009-06-30 17:32 +0200  Rocco Rutte  <pdmef@gmx.net>  (f4baa2f1251a)

	* pgpewrap.c: Add missing config.h include to pgpewrap.c

	It technically doesn't need it, but pgpewrap should be rebuilt after
	configure ran, too.

	* doc/Makefile.am: Manual: Run lynx with --display_charset
	=us-ascii, see #3286.

2009-06-29 18:20 +0000  Rocco Rutte  <pdmef@gmx.net>  (03c65df651e0)

	* UPDATING, doc/manual.xml.head: Manual: Move new mail detection into
	its own section

	This also updates some parts of docs and adds missing ones. It also
	adds a note about the recent changes, also to UPDATING.

2009-06-29 18:03 +0200  Rocco Rutte  <pdmef@gmx.net>  (d3a7e0334e5d)

	* url.c, url.h: Revert URL path encoding for now

	It breaks gmail url display and makes bcache use different paths.
	Still we need to think about whether we want to allow any character
	in bcache paths (possibly multibyte, possibly depending on
	$charset).

2009-06-28 20:49 -0700  Brendan Cully  <brendan@kublai.com>  (298194c414f0)

	* configure.ac, curs_lib.c: Allow tabs in index subject. Closes #3270.

	* imap/util.c: Allow ImapDelimChars to be unset

	* mutt.h: Rename struct thread to struct mutt_thread. Closes #3279.

	* imap/command.c: Not being able to start an IMAP command
	is a fatal error. Closes #3155.

	* imap/auth_login.c: IMAP LOGIN does not support separate user and
	login accounts. Use the user account for both. Closes #3240.

2009-06-28 22:40 +0200  Rocco Rutte  <pdmef@gmx.net>  (71a84cf22c42)

	* url.c, url.h: Fix URL parser to encode paths

2009-06-28 15:42 +0200  Deng Xiyue  <manphiz@gmail.com>  (fe688db8099a)

	* po/zh_CN.po: Update Simplified Chinese translation. Closes #3281.

2009-06-27 17:07 +0200  Rocco Rutte  <pdmef@gmx.net>  (7ca8d09f7d2c)

	* hg-commit: hg-commit: drop changelog entries from hg log

	* doc/makedoc.c, doc/manual.xml.head: Manual: stop using DocBook
	entities mapping to ascii chars

	There's no real benefit, it only makes reading/writing the manual
	harder. All entities that potentially map to non-ascii characters
	(&mdash, &auml, etc.) are left so that manual.xml remains pure
	ascii.

2009-06-26 21:47 -0700  Brendan Cully  <brendan@kublai.com>  (b2b97c7a2ae6)

	* imap/imap_private.h, imap/message.c, imap/util.c: Set
	internaldate of messages appended to IMAP mailboxes

2009-06-26 20:27 +0200  Rocco Rutte  <pdmef@gmx.net>  (156e6d6e34fc)

	* doc/manual.xml.head: Manual: try to explain that and why
	copiousoutput should come last

	* po/de.po: Update German translation

2009-06-25 21:46 +0200  Rocco Rutte  <pdmef@gmx.net>  (c5d0252e8f72)

	* rfc3676.c: Fix f=f corner case with DelSp=yes abuse

	* sendlib.c: header folding: treat From_ specially, never wrap on
	sending side

	* sendlib.c: Add Date: header to postponed messages

	* sendlib.c: Only add Status: header (fcc/postpone) when
	saving to mbox/mmdf

	* compose.c: Treat messages written with <write-fcc> as fcc, not
	postponed.

2009-06-23 10:13 -0700  Vincent Lefevre  <vincent@vinc17.org>  (bc2463863c15)

	* po/fr.po: Updated French translation.

2009-06-23 16:56 +0200  Rocco Rutte  <pdmef@gmx.net>  (d152033cf967)

	* doc/manual.xml.head: Manual: Simply type conversion section wording.

	* Makefile.am, configure.ac: Don't build hcversion.h and mutt_md5
	without hcache

	* handler.c, mutt.h, muttlib.c: Implement state_putws() and
	state_putwc(), see #3148.

	This is needed to unbreak text/enriched rendering on Linux.

	* commands.c: Only use keypad() when curses is running

2009-06-23 00:28 -0700  Vincent Lefevre  <vincent@vinc17.org>  (642987450d83)

	* curs_lib.c: Only beep when displaying error messages (unbreaks
	[54bc1ef602e7])

2009-06-23 00:20 -0700  Brendan Cully  <brendan@kublai.com>  (f5849c72a274)

	* crypt-gpgme.c: Update crypt-gpgme for mutt_mktemp change
	in [ed7eb5de7536]

2009-06-22 17:36 +0200  Rocco Rutte  <pdmef@gmx.net>  (54bc1ef602e7)

	* curs_lib.c: Make mutt_curses_(error|message) format message to COLS
	chars. Closes #3278.

	While I'm at it, fold both functions into one.

2009-06-22 17:21 +0200  Alexey Tourbin  <at@altlinux.org>  (e378bbdc3f0f)

	* smime_keys.pl: smime_keys: use Time::Local module. Closes #3277.

2009-06-22 17:17 +0200  Rocco Rutte  <pdmef@gmx.net>  (4899f140ec25)

	* mbyte.c: Fix included iswupper(). Closes #3276.

	* lib.c: Catch range errors when converting to long.

2009-06-21 21:57 +0200  Rocco Rutte  <pdmef@gmx.net>  (ed7eb5de7536)

	* attach.c, commands.c, crypt.c, editmsg.c, handler.c, headers.c,
	help.c, history.c, imap/message.c, main.c, mbox.c, muttlib.c, mx.c,
	pattern.c, pgp.c, pgpkey.c, pgpmicalg.c, pop.c, protos.h,
	recvattach.c, recvcmd.c, rfc3676.c, send.c, sendlib.c, smime.c: Pass
	buffer size to mutt_mktemp()

	* handler.c, rfc3676.c: Port f=f and text/plain handlers to
	mutt_read_line()

	* lib.c: mutt_read_line(): make line counting ptr optional

	* sendlib.c: Silently drop headers not in "key: value"
	format. Fixes out-of-memory exits.

2009-06-20 23:09 +0200  Rocco Rutte  <pdmef@gmx.net>  (6447ebe80797)

	* handler.c: f=f: Don't kill signature separator when stripping
	trailing spaces. Closes #3275.

	* curs_main.c: Disallow breaking threads for messages not part of
	a thread

2009-06-20 15:22 +0200  Rocco Rutte  <pdmef@gmx.net>  (580ab0256c49)

	* doc/manual.xml.head: Manual: Clarify and extend variable type
	conversion section

2009-06-19 19:56 -0400  Aron Griffis  <agriffis@n01se.net>  (ee3d174297bb)

	* rfc822.c: remove bogus FREE

	It's impossible for cur->personal to be non-NULL at this point,
	since cur was calloc'd just a couple lines prior.

	Signed-off-by: Aron Griffis <agriffis@n01se.net>

2009-06-19 22:49 +0200  Rocco Rutte  <pdmef@gmx.net>  (9ae13dedb5ed)

	* mbox.c, mx.c, mx.h: Fixup atime for mbox/mmdf also when mailbox is
	unchanged but has new mail. See #1362.

	* mbox.c: Don't mangle atime/mtime for mbox folders without new
	mail upon sync. Closes #1362, #3271.

	* doc/manual.xml.head: Manual: Add note and example for type
	conversions with my_vars

	* sendlib.c: Enforce 998 char length limit on header lines when
	sending.

2009-06-18 15:06 +0200  Antonio Radici  <antonio@dyne.org>  (c6fe0bb8cf11)

	* doc/Makefile.am, doc/smime_keys.man: Provide
	smime_keys(1). Closes #3272.

2009-06-18 14:56 +0200  Rocco Rutte  <pdmef@gmx.net>  (508bfe4a2e23)

	* mbox.c: Backout experimental patch

	* UPDATING, mbox.c: UPDATING: add note about -a and --

2009-06-17 16:19 -0700  Antonio Radici  <antonio@dyne.org>  (25e46aad362b)

	* buffy.c: Do not free statically-allocated buffy buffer. Unbreaks
	unmailboxes, closes #3273.

2009-06-17 15:23 -0700  Petr Písař  <petr.pisar@atlas.cz>  (fe94f01b369a)

	* ChangeLog, po/cs.po: Updated Czech translation.

2009-06-17 13:58 -0700  Ivan Vilata i Balaguer  <ivan@selidor.net>  (ef9b67c7ebc4)

	* po/ca.po: Updated Catalan translation.

2009-06-17 13:57 -0700  Vincent Lefevre  <vincent@vinc17.org>  (62471a5d3186)

	* po/fr.po: Updated French translation.

2009-06-17 20:42 +0200  Rocco Rutte  <pdmef@gmx.net>  (33376ae23d8f)

	* doc/devel-notes.txt: Mention check_sec.sh in doc/devel-notes.txt

2009-06-17 11:09 -0700  Brendan Cully  <brendan@kublai.com>  (7f37d0a57d83)

	* crypt-gpgme.c, pgp.c: Display unsigned part of traditional PGP
	messages. Unbreaks [e2780a423d96], closes #3269

2009-06-17 19:29 +0200  Antonio Radici  <antonio@dyne.org>  (a2a868fc40ea)

	* mx.c: Leave error handling of mx_get_magic() up to the
	caller. Closes #3268.

2009-06-17 18:02 +0200  Rocco Rutte  <pdmef@gmx.net>  (4b5326d8d2ee)

	* UPDATING, muttlib.c: Always display text/* parts inline,
	overrideable by auto_view. Closes #3246.

2009-06-15 22:05 +0200  Rocco Rutte  <pdmef@gmx.net>  (f40de578e8ed)

	* handler.c: Unbreak header weeding for message/rfc822
	parts. Closes #3265.

	* init.c, lib.c, lib.h: Print timestamps in debug files. Closes #3263.

	* doc/manual.xml.head, doc/muttrc.man.head: bind: Clarify function
	argument usage

	* doc/manual.xml.head, init.h, url.c: Fixup URL parser

	The fixes are: 1) allow / in usernames for IMAP (by %-encoding /, :
	and % when pretty-printing urls), 2) for POP/SMTP the trailing / is
	no longer mandatory, 3) more strict %-decoding to avoid unexpected
	results

2009-06-15 17:49 +0200  Bertrand Janin  <tamentis@neopulsar.org>  (abc8fa0abeee)

	* UPDATING: Fix UPDATING

2009-06-15 17:06 +0200  Rocco Rutte  <pdmef@gmx.net>  (d6f88fbf8387)

	* url.c: Don't parse URL port as signed short, but to int and cast to
	unsigned short. Closes #3264.

	* doc/manual.xml.head: Manual: Add a short note about new header
	folding

	...so we don't get bug reports for tab folding.

	* init.h: Clarify what $wrap=0 does

	* doc/mutt.css: CSS update for newer docbook xslt versions

	* pager.c: pager: intermediate fix for wrapping long header lines with
	$smart_wrap set

	The header folding algorithm outputs a word without spaces and
	longer than $wrap as-is. The pager however tries to break it. With
	$smart_wrap unset, it simply breaks at $wrap regardless if there's a
	space or not. With $smart_wrap set it tried to find a space and
	break if the next word is too long. This logic doesn't work for
	folded header lines which always start with space. Thus, the output
	would always contain the folding whitespace on a line by itself
	detaching the header value from the header name.

	As an intermediate fix we don't try to be smart if the line begins
	with space or tab.

	* pager.c, sendlib.c: pager: Ignore $wrap for attachment markers

2009-06-14 20:57 -0700  Brendan Cully  <brendan@kublai.com>  (d2e0b495b148)

	* build-release: Remove duplicate update-changelog call.

2009-06-14 20:51 -0700  Antonio Radici  <antonio@dyne.org>  (fef17099376d)

	* doc/mutt.man: Escape hyphens in man page. Closes #1937 again.

2009-06-14 12:29 -0700  Brendan Cully  <brendan@kublai.com>  (7f8a2ba64516)

	* UPDATING: Update UPDATING

	* VERSION, po/bg.po, po/ca.po, po/cs.po, po/da.po, po/de.po,
	po/el.po, po/eo.po, po/es.po, po/et.po, po/eu.po, po/fr.po,
	po/ga.po, po/gl.po, po/hu.po, po/id.po, po/it.po, po/ja.po,
	po/ko.po, po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po, po/ru.po,
	po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po, po/zh_TW.po:
	automatic post-release commit for mutt-1.5.20

	* imap/imap.c: Save a dereference, and close #3226 with voodoo.

	* sendlib.c: Initialize pointer before use under -d4

2009-06-13 19:52 -0700  Brendan Cully  <brendan@kublai.com>  (83ffb5593bc6)

	* curs_main.c: Adjust menu position after sync more
	carefully. Closes #3092.

	* init.h: Force status to redraw when $postponed changes.

	* postpone.c: Fix check for changed $postponed. The pointer-based
	check fails when the new $postponed string is stored in the same
	location.

2009-06-13 01:08 +0200  Rocco Rutte  <pdmef@gmx.net>  (536771b4e085)

	* commands.c, copy.c, copy.h, handler.c, protos.h, send.c, sendlib.c:
	Rewrite header folding

	We now distinct between sending and display case. For display, we
	always use tabs for folding for readability; for sending we now
	correctly fold using whitespace found in the header.

	Closes #2995. Closes #3080.

2009-06-12 23:10 +0200  Rocco Rutte  <pdmef@gmx.net>  (23de0e3c81f8)

	* UPDATING, init.h, mutt.h, send.c: Turn $fcc_attach into a
	quadoption. Closes #2528.

	* handler.c: Don't insert Content-Description/form name into reply.
	Closes #3164.

	* pgpkey.c: Allow ! suffix for pgp keys via $pgp_sign_as and
	prompt. Closes #1928.

	* commands.c, recvcmd.c: Warn before bouncing messages without
	From: header. Closes #3180.

	* smtp.c: SMTP: don't block but print CRLF for last line if it's
	not terminated

2009-06-11 18:34 +0200  Rocco Rutte  <pdmef@gmx.net>  (f60eb41ef63c)

	* UPDATING: Mention maildir mtime use in browser

	* send.c: Don't allow setting Return-Path: header via my_hdr

	Mutt has use_envelope_from/envelope_from_address for that purpose.
	Closes #1840.

	* browser.c: Use only latest mtime of new/cur for browser, not whole
	stat() info

	* copy.c: Don't reformat Return-Path (angle brackets are not
	optional). Closes #1702.

2009-06-10 17:44 +0200  Rocco Rutte  <pdmef@gmx.net>  (0721c3f6320d)

	* mbox.c, mx.c: Only print messages about CONTEXT when quiet flag not
	set

2009-06-09 22:09 -0700  Brendan Cully  <brendan@kublai.com>  (dc9ec900c657)

	* mutt_ssl.c: Improve host checking for SSL with intermediate
	certificates.

	* mutt_ssl.c: Whitespace.

	* imap/imap.c: Skip comparison against current mailbox for idle
	connections. Closes #3216.

	* imap/util.c: Revert accidental change

	* imap/util.c: Remove trailing whitespace.

2009-06-08 23:55 -0700  Brendan Cully  <brendan@kublai.com>  (15c662a95b91)

	* configure.ac, m4/libgnutls.m4: Test for libgnutls by hand rather
	than relying on deprecated libgnutls-config script. Closes #3239.

2009-06-07 10:55 -0700  Brendan Cully  <brendan@kublai.com>  (9831d4c2c3f9)

	* imap/message.c: Do not display error message when user declines
	to create target mailbox.

	* imap/message.c: Minor cleanup in imap_copy_messages.

2009-06-07 08:14 +0200  Miroslav Lichvar  <mlichvar@redhat.com>  (16592f0dfdaf)

	* configure.ac, mutt_ssl_gnutls.c: Disable checking certificate
	activation/expiration times in gnutls as we do the checks ourselves.

2009-06-06 22:31 -0700  Brendan Cully  <brendan@kublai.com>  (e5c2befbf0f5)

	* imap/message.c: Do not treat already-seen headers as if they are
	new. See #2935.

2009-06-07 02:09 +0200  Rocco Rutte  <pdmef@gmx.net>  (a786b0e8627c)

	* doc/dotlock.man, doc/makedoc.c, doc/mbox.man, doc/mmdf.man,
	doc/mutt.man, init.h: Fix hyphens in manpages. Closes #1937

2009-06-04 17:07 +0200  Rocco Rutte  <pdmef@gmx.net>  (4f1ceaae93dc)

	* rfc3676.c: Fix pretty quoting for f=f by resetting space count when
	flushing paragraph

2009-06-03 22:35 +0200  Rocco Rutte  <pdmef@gmx.net>  (386f2ce6b872)

	* rfc3676.c: Fix several f=f bugs

	It fixes problems with space-handling in general (trailing spaces
	for display, un-space-stuffing), fixes quote prefix for replies and
	lowers FLOWED_MAX so we don't run into line length trouble too
	early.

	* UPDATING, globals.h, init.h, pager.c: Don't abuse $pager_context for
	searches, add $search_context. See #976.

	* pattern.c: Fix compiler warning

2009-06-02 20:25 +0200  Miroslav Lichvar  <mlichvar@redhat.com>  (d1d0481d1ca1)

	* mutt_ssl_gnutls.c: Add support for GNUTLS_CERT_INSECURE_ALGORITHM
	error code

	* mutt_ssl_gnutls.c: Don't ignore certificate verification errors on
	saved signer certs

2009-06-02 10:18 -0700  René Clerc  <rene@clerc.nl>  (761bc678b23e)

	* po/nl.po: Updated Dutch translation.

2009-06-02 17:24 +0200  Rocco Rutte  <pdmef@gmx.net>  (8b2af5b64981)

	* buffy.c: Fix duplicate mailbox detection for remote
	folders

	* smtp.c: Fix array size

	* buffy.c: Thoroughly check for duplicates when parsing
	'mailboxes' command. Closes #1428.

2009-06-01 14:50 +0200  Rocco Rutte  <pdmef@gmx.net>  (7a277ba306c9)

	* gnupgparse.c: Use mutt_atoi() when parsing GnuPG output. Closes
	#3145

	* hcache.c, mh.c: More atoi() fixes

	* smtp.c: SMTP: Use mutt_atoi() to parse server responses

	* curs_main.c, edit.c, init.c, main.c, menu.c, mh.c, parse.c,
	resize.c, score.c, url.c: Use strtol() wrappers for most atoi()
	calls

	* lib.c, lib.h: Add mutt_atos(), mutt_atoi() and
	mutt_atol() (strtol() wrappers)

	* send.c: Treat address groups as no recipients

	When sending with Sendmail or SMTP we exclude address groups anyway,
	so treat these addresses as not present when checking for valid
	recipients before sending in the compose menu.

	* smtp.c: Weed out address groups for SMTP the same way we
	do for sendmail

2009-05-31 19:19 -0700  Brendan Cully  <brendan@kublai.com>  (0024860ab03e)

	* doc/Makefile.am: Allow chunked and unchunked manuals to build in
	parallel.

	* mutt_ssl_gnutls.c: Remove trailing whitespace

2009-05-31 14:46 +0200  Rocco Rutte  <pdmef@gmx.net>  (8e591e80cd48)

	* smtp.c: SMTP: Don't send "undisclosed-recipients" in RCPT TO

	This happened for Bcc only messages. "undisclosed-recipients" is
	added in To: as guard against MTAs that leak BCCs if no To:/Cc:
	header is given. See Debian #529090.

	* init.h: Document that $pager_context affects searching, too

	* UPDATING: Update UPDATING

	* handler.c: Turn trailing \r\n to \n for qp-encoded messages.

	RFC2045 (sect. 6.7, (1) general 8bit representation) states that
	neither CR nor LF of the trailing CRLF may be qp-encoded. So we
	ignore trailing qp-encoded CRs.

	See #2898 though this is a partial fix only.

	* pager.c: Give $pager_context lines of context when searching
	page-based menus. Closes #976.

	* handler.c, init.h, rfc3676.c: f=f: Strip trailing spaces for
	interoperability. Closes #3001.

	If we make a fixed reply to a flowed message we remove trailing
	spaces and can now safely allow $indent_string to be used which is
	what users expect.

	Second, if we make a flowed reply to a fixed message we also strip
	trailing spaces since from format=fixed we assume all lines are
	fixed (i.e. we don't want to errorneously make fixed lines flowed).

	* handler.c, init.h, mutt.h: Add $honor_disposition to not display
	attachments inline. Closes #3170.

	Previously all MIME parts were displayed inline regardless of the
	Content-Disposition header (if present). With $honor_disposition
	set, only inline parts are displayed inline, attachments can only be
	viewed from the attachments menu.

2009-04-25 01:56 -0400  Dan Loewenherz  <daniel.loewenherz@yale.edu>  (c1b947f60ea6)

	* init.h: Disables the insecure SSLv2 protocol. Closes #3192.

2009-05-30 19:37 +0200  Rocco Rutte  <pdmef@gmx.net>  (b080ae086a62)

	* ChangeLog, mbox.c: Keep new mail flag for mbox/mmdf folders after
	closing. Closes #1362.

2009-05-30 10:23 -0700  Vincent Lefevre  <vincent@vinc17.org>  (be7b3d349725)

	* po/fr.po: Updated French translation.

2009-05-30 00:24 +0200  Rocco Rutte  <pdmef@gmx.net>  (f65a1eb8abce)

	* smtp.c: Fix logic in f260f5836284

2009-05-29 21:33 +0200  Rocco Rutte  <pdmef@gmx.net>  (c4d86d4ea260)

	* pager.c: Drop modified version of and use mutt_read_line() in pager,
	too

	* history.c, init.c, lib.c, lib.h, mh.c, mutt_ssl_gnutls.c, pgp.c,
	query.c, rfc1524.c, smime.c: Add flags to mutt_read_line() for
	EOL-stripping and continuation support

	We use these to stop supporting EOL-escaping with \ which was wrong
	in most cases (e.g. $history_file), support is kept for reading
	config and mailcap files.

	Leaving CRLF in will be used for the pager.

	* menu.c, pager.c, pattern.c: Fall back to search if no query exists
	for search-(next|opposite)

	The pager had the fall-through to search, so for consistency do that
	in other menues as well.

	* pager.c: Fix pager search prompt for reverse search

	When doing a reverse search for the first time after switching to
	the pager, SearchBack is always 0 and thus gave the wrong prompt,
	change to using op directly. While I'm at it, unify search prompts.

	* doc/manual.xml.head: Manual: Fix markup of environment variables

2009-05-28 16:37 +0200  Rocco Rutte  <pdmef@gmx.net>  (f260f5836284)

	* smtp.c: SMTP: don't interactively authenticate without a
	password in batch/mailx mode

	Otherwise, if we don't have a password and curses is not running,
	the SASL authentication callback will crash mutt. We now abort if
	the password wasn't given in $smtp_url.

	* doc/mutt.css: Manual: vertical-align table cells at the top

	* doc/manual.xml.head, doc/mutt.css: Manual: Wrap muttrc commands
	in <command/>

2009-05-27 23:14 -0700  Brendan Cully  <brendan@kublai.com>  (5502fb790bab)

	* mutt_ssl_gnutls.c: gnutls: do not ignore certificate problems.
	Specifically, do not allow revoked certificates or those signed by
	non-CAs unless they have been explicitly stored in the trusted
	certificate file. Thanks to Miroslav Lichvar.

2009-05-27 22:55 -0700  Miroslav Lichvar  <mlichvar@redhat.com>  (85f41efec6bf)

	* ChangeLog, mutt_ssl_gnutls.c: Don't prompt to save certificates that
	are already saved but invalid.

2009-05-27 22:52 -0700  Brendan Cully  <brendan@kublai.com>  (90ef283c103e)

	* mutt_ssl_gnutls.c: Don't leak gnutls certs on preauth validation
	failure. Thanks to Miroslav Lichvar.

	* mutt_ssl.c: Fix TLS certificate chain validation for
	openssl.

2009-05-25 17:31 -0700  Brendan Cully  <brendan@kublai.com>  (8f11dd00c770)

	* mutt_ssl_gnutls.c: Fix a serious oversight validating TLS
	certificates. If any certificate in a chain presented by a server
	was accepted, the connection was allowed without verifying that the
	presented certificate was actually signed by the certificate in the
	chain.

2009-05-27 22:13 -0700  Petr Písař  <petr.pisar@atlas.cz>  (05bc65d6ae70)

	* po/cs.po: Updated Czech translation.

2009-05-27 10:13 +0200  Rocco Rutte  <pdmef@gmx.net>  (97305eeb91ce)

	* doc/manual.xml.head, doc/mutt.man: Document that -- is always
	mandatory after -a. Closes #3235.

	* init.h: Mention account-hook in the docs for $tunnel.  Closes
	#3237.

2009-05-26 17:57 +0200  Rocco Rutte  <pdmef@gmx.net>  (392e945dfba7)

	* attach.c: Use charset parameter to view text attachments using
	<view-attach>. Closes #3234.

2009-05-25 15:57 +0200  Rocco Rutte  <pdmef@gmx.net>  (3f0963dd9257)

	* pager.c: pager: print progress percentage for attachments, too

	* attach.c: Mark strings for translation

2009-05-18 20:48 -0700  Vincent Lefevre  <vincent@vinc17.org>  (6d810c5cf4fc)

	* po/fr.po: Updated French translation.

2009-05-15 15:03 +0200  Takahashi Tamotsu  <ttakah@lapis.plala.or.jp>  (c665bdf5ff5f)

	* pop.c: POP: Notify user when messages are lost. Closes #2226.

	* pop.c: POP: Ignore already-deleted messages while
	syncing. Closes #2225.

2009-05-13 18:03 +0200  Rocco Rutte  <pdmef@gmx.net>  (0563c88ad6f0)

	* attach.c, recvattach.c: Don't loose error message when attachment
	saving fails. Closes #3156.

2009-05-15 12:46 +0200  Seth Arnold  <seth.arnold@suse.de>  (1cea1ecf9f79)

	* UPDATING, color.c, doc/manual.xml.head: Make "uncolor" also work
	header and body objects. Closes #1046.

2009-05-13 14:20 +0200  Rocco Rutte  <pdmef@gmx.net>  (f96a176bb14c)

	* send.c: Don't set 'replied' flag if user changes
	References/IRT. Closes #2044.

	* mutt.h, muttlib.c: Add mutt_find_list() to lookup data in lists

	* alias.c, crypt-gpgme.c, group.c, mbox.c, pgp.c, query.c,
	rfc822.c, rfc822.h, send.c, smime.c: Prune empty address groups
	when preparing replies. Closes #2875.

	* mbox.c: Actually reopen mbox/mmdf files in case we find
	modifications. Closes #2725.

	Since the file is changed while we have it open in ctx->fp, we
	likely get wrong information when parsing the mailbox. Now we
	explicitely close and (re)open it.

2009-05-12 16:26 +0200  Rocco Rutte  <pdmef@gmx.net>  (06e318bfe8f2)

	* mbox.c: Backout errorneously commited mbox atime fix

	* OPS, mbox.c: Fix description for <save-message>

2009-04-29 14:49 +0200  Rocco Rutte  <pdmef@gmx.net>  (335e6f782862)

	* browser.c: Fix maildir times in mailboxes browser. Closes #626.

	Instead of using the (pointless) mtime of the top-level maildir
	folder, use the latest mtime of the "new" and "cur" subdirectories.
	Maildir folders in the mailboxes list can now be properly sorted by
	date. This does not affect the directory browser. Also see #2421.

	* mailbox.h, mh.c, mx.c: Move Maildir/MH folder detection from
	mx.c to mh.c

2009-04-28 15:12 +0200  Rocco Rutte  <pdmef@gmx.net>  (4d9685be5987)

	* sendlib.c: Fold References: header so we never run into line length
	problems

	* headers.c: Fix comment typo

2009-04-28 14:18 +0200  Bertram Felgenhauer  <int-e@gmx.de>  (6b20a3545f03)

	* doc/manual.xml.head, headers.c: Drop References header if In-Reply-
	To is modified by user. Closes #3221.

2009-04-28 13:05 +0200  Rocco Rutte  <pdmef@gmx.net>  (a13d8fd40094)

	* send.c: Don't generate References: for reply to multiple
	messages

	All parent Message-Ids are present in In-Reply-To already. Also,
	RfC2822, section 3.6.4 discourages its generation.

	* sendlib.c: Don't trim In-Reply-To with $edit_headers set

	In case of a tagged reply to several messages, we want In-Reply-To
	to contain all parent Message-Ids.

	* imap/imap.c: Only sync changed messages back to hcache on
	mailbox sync

	* doc/manual.xml.head: For spam detection, mention $imap_headers.
	Closes #3223.

	* doc/manual.xml.head: Manual: Fix typo and reword paragraph

2009-04-26 21:09 +0200  Rocco Rutte  <pdmef@gmx.net>  (9fa4a3e74355)

	* UPDATING, doc/manual.xml.head, pop.c: POP: Support hcache updating,
	too.

	This also allows us to use hcache to manage "flagged" and "replied"
	message flags.

	* imap/imap.c, mh.c: Sync header to hcache when synching
	MH/Maildir/IMAP folders. Closes #2942.

	* pager.c: Use dynamic buffer for displaying pager lines. Closes
	#3162.

	With too small fixed-size buffers we can't color/find certain words
	that span buffers. This needs to duplicate mutt_read_line with the
	adjustment to leave line termination in and not support breaking
	long lines using \ at EOL. Other callers may want to use this one
	instead, too as we support \-escaping in too many places.

	* init.h: Document suffixes for %f in $folder_format

2009-04-22 23:29 +0200  Bertram Felgenhauer  <int-e@gmx.de>  (0aa313a3bf20)

	* headers.c: Fix memory leak in mutt_edit_headers(). Closes #3220.

2009-04-25 10:51 +0200  Thomas Wiegner  <wiegner@gmx.de>  (8da22400a48d)

	* configure.ac, mkdtemp.c, protos.h: Add mkdtemp() from xfce to
	unbreak gpgme build on Solaris. Closes #3217.

2009-04-25 10:35 +0200  Rocco Rutte  <pdmef@gmx.net>  (c6de4f51b8c7)

	* ChangeLog, configure.ac, protos.h, strcasestr.c: Add strcasestr()
	from uclibc to unbreak (Open)Solaris build. Closes #3222.

2009-04-21 15:10 -0400  Aron Griffis  <agriffis@n01se.net>  (3d89eddb2d9a)

	* buffy.c: Equivalent mutt_buffy, but readable code

	* buffy.c, buffy.h: Call mutt_expand_path() from mutt_buffy to fix
	imap separator. Closes #3208 and #3218

	* buffy.c: Use slen instead of assuming _POSIX_PATH_MAX

2009-04-23 12:51 -0700  Vincent Lefevre  <vincent@vinc17.org>  (b5b4e652e4b1)

	* ChangeLog, po/fr.po: Updated French translation.

2009-04-20 18:36 +0200  Christoph Berg  <cb@df7cb.de>  (39fee3a9d034)

	* doc/manual.xml.head, init.h: Better document that some send-hooks
	can't work with $autoedit. Closes #1834.

2009-04-20 18:26 +0200  Rocco Rutte  <pdmef@gmx.net>  (6cc887ccd229)

	* init.h: Fix typo for $imap_pass

2009-04-17 18:05 +0200  Rocco Rutte  <pdmef@gmx.net>  (7d44a83efcc6)

	* pgp.c: Support the Charset: armor header for inline PGP. Closes
	#3039.

	The header is defined as optional by RfC4880.

	This is based on patch-1.5.9.tamo.pgp_charsetchack.1. We only
	support reading this header and, if present, recode the PGP output
	from the given charset to $charset if we find it valid; otherwise
	fall back to UTF-8. Certain clients make use of the header when
	sending mail, so mutt should respect it because some messages are
	otherwise unreadable.

	The sending side is not touched, we unconditionally send UTF-8.

2009-04-17 15:45 +0200  Michael Elkins  <me@mutt.org>  (61a0c67ed727)

	* sendlib.c: Make sure Recent-From: consults $realname.  Closes
	#1721.

2009-04-17 15:37 +0200  Rocco Rutte  <pdmef@gmx.net>  (3a7ecc3f8aeb)

	* UPDATING, functions.h, pager.c: Make <set-flag> and <clear-flag>
	work in the pager, too. Closes #3212.

	* pager.c: Don't consider \n part of a line for body
	coloring. Closes #2363.

	* attach.c: Enlarge buffer size for parsing mailcap files

	We really need code for dynamic buffers which would solve a few
	other bugs, too. Closes #2205.

2009-04-16 19:23 +0200  Rocco Rutte  <pdmef@gmx.net>  (a4f66ae72dc5)

	* ChangeLog, pop_lib.c: POP: Default to using getservbyname() as we do
	for IMAP and SMTP

	* doc/manual.xml.head: Manual: Improve docs on URL syntax, add
	examples

	* doc/manual.xml.head: Manual: Add user-defined variables to variable
	types

2009-04-11 10:35 +0200  Rocco Rutte  <pdmef@gmx.net>  (7d7976cd4fc4)

	* ChangeLog, buffy.c, buffy.h, commands.c, sendlib.c: Don't raise new
	mail flag on mbox/mmdf Fcc mailboxes. Closes #1896.

2009-04-08 16:25 +0200  Rocco Rutte  <pdmef@gmx.net>  (5b631ee33281)

	* hdrline.c: For %F, display Bcc recipient if no other recipients
	found. Closes #3157.

	* UPDATING, doc/manual.xml.head, doc/muttrc.man.head, pattern.c:
	Make ~x match In-Reply-To, too. Closes #771.

2009-04-07 19:57 +0200  Rocco Rutte  <pdmef@gmx.net>  (667b0006b586)

	* sendlib.c: Fix b5cbd0dab863, closes #3215.

	Still valgrind reports 'fromcode' as leaking.

2009-04-07 11:32 +0200  Erik Hovland  <erik@hovland.org>  (d344c6429a48)

	* sendlib.c: Try to correct usage of tempfile and *tempfile

	Since tempfile is a double pointer checking for tempfile and then
	dereferencing with *tempfile is not correct.

2009-04-06 22:05 +0200  Rocco Rutte  <pdmef@gmx.net>  (d639baaf57fb)

	* doc/manual.xml.head: Manual: Fix typo

2009-04-06 19:10 +0200  Erik Hovland  <erik@hovland.org>  (4fe35e9984ba)

	* sendlib.c: mutt_message_to_7bit(): Only close file
	pointer if we opened it

	The pointer is to be managed outside the function and provided. Only
	close it we opened it ourself using fopen().

2009-04-06 19:07 +0200  Erik Hovland  <erik@hovland.org>  (b5cbd0dab863)

	* sendlib.c: Plug memory leaks in sendlib.c

2009-04-05 13:41 +0200  Rocco Rutte  <pdmef@gmx.net>  (5d393e716c51)

	* init.h, sendlib.c: Backed out changeset 23c7b469ff20

	This requires more thought: if the user has -- in $sendmail, we need
	to add our arguments for 8BITMIME/DSN/etc. before it and not after.
	See #3168.

	* doc/manual.xml.head: Manual: Make sure every rc command has a
	synopsis in its describing section

	* doc/manual.xml.head: Manual: Fold consecutive <cmdsynopsis/>
	into just one

	This make it visually easier to spot what belongs together.

	* doc/manual.xml.head: Manual: More entities and <quotes/> as
	appropriate

2009-04-04 16:23 +0200  Rocco Rutte  <pdmef@gmx.net>  (a4b635e96b30)

	* doc/Makefile.am: Manual: Improve 'sortcheck' target

	Don't call up diff+pager if all is sorted and remove the temp files
	for diffing we created.

	* doc/gen-map-doc, doc/manual.xml.head, doc/manual.xml.tail: Manual:
	Capitalize headlines

	* doc/manual.xml.head: Manual: Move section on mixmaster support to
	Optional Features

	* doc/manual.xml.head: Manual: Remove duplicate section on mailcap use
	from security chapter

	We already have a more detailed section on secure mailcap usage, so
	link to it.

	* doc/manual.xml.head: Manual: Minor improvements and fixes

	* doc/Makefile.am, doc/manual.xml.head: Manual: Add a short chapter
	summarizing security considerations

	* doc/manual.xml.head: Manual: Use &mdash; in text rather than --

	* doc/manual.xml.head: Manual: Add section on padding for format
	strings

	* doc/manual.xml.head: Manual: Mention reply types in "Sending Mail"
	section

	* doc/manual.xml.head: Manual: Add table with navigation keys for
	page-based menus

	* doc/mutt.css: mutt.css: Add left+right margins to screen, note and
	examples

	* doc/manual.xml.head: Manual: Add section on screens and menus with
	short descriptions.

	Mostly stolen from old mutt-ng docs with adjustments.

2009-04-02 13:11 +0200  Steve Kemp  <skx@debian.org>  (23c7b469ff20)

	* init.h, sendlib.c: Only append -- to $sendmail if not
	present. Closes #3168.

	This allows users to add custom recipients via $sendmail.

2009-04-02 12:57 +0200  Rocco Rutte  <pdmef@gmx.net>  (bfb12cf02417)

	* init.h: Clarify what $attach_charset does, closes #3165.

	* doc/Makefile.am: Add 'sortcheck' target to doc/Makefile.am

	This should be used from time to time to check if vars are sorted.

	Closes #3191.

	* init.h: Sort $pgp_* and $crypt_* vars, see #3191.

	* init.h: Sort $smime_* vars, see #3191.

2009-04-01 14:33 +0200  Miroslav Lichvar  <mlichvar@redhat.com>  (8205a12329d3)

	* hcache.c, muttlib.c: Use PATH_MAX for buffers passed to realpath(3)
	as we're supposed to

2009-04-01 13:16 +0200  Rocco Rutte  <pdmef@gmx.net>  (47c64fd9ac70)

	* doc/gen-map-doc, doc/manual.xml.head: Manual: Fix openjade
	warnings

	* doc/makedoc.c, doc/mutt.css: makedoc: Render description lists as
	<informaltable/>

	This looks better and is more compact (except missing column
	headers.)

2009-03-31 16:03 +0200  Rocco Rutte  <pdmef@gmx.net>  (22f21b558f57)

	* doc/manual.xml.head: Manual: Add an example of how to manage
	multiple accounts using folder-hook

	* UPDATING, doc/manual.xml.head, mutt.h, pattern.c: Perform case
	insensitive string search if pattern is lower case

	...since we do that for regex patterns already. It doesn't work for
	IMAP server-side searches.

	* doc/manual.xml.head: Manual: Fix markup of ".muttrc"

	* doc/manual.xml.head: Manual: Always spell mutt as "Mutt"

	* doc/manual.xml.head: Manual: Replace netscape with firefox

	* doc/manual.xml.head: Manual: use <quote/> instead of " quotes

	* doc/manual.xml.head: Manual: Lots of minor improvements
	(markup consistency, wording)

2009-03-30 14:58 +0200  Rocco Rutte  <pdmef@gmx.net>  (318748f3962b)

	* doc/manual.xml.head: For mailbox formats, add some more verbose pros
	and cons

	* doc/manual.xml.head: Manual: Add section about zeroprinting format
	strings to format string section

2009-03-28 22:37 +0100  Thomas Roessler  <roessler@does-not-exist.org>  (be9fb07730c6)

	* mutt_idna.c: Make IDNA code more readable

2009-03-28 16:11 +0100  Rocco Rutte  <pdmef@gmx.net>  (77cfe8016930)

	* doc/manual.xml.head: Manual: Add section roughly explaining config
	option types

	* doc/makedoc.c: makedoc: make output slightly more readable

	Add <?dhtml... processing instructions to render <variablelist/>
	using HTML <table/> which save lots of vertical space. Also, drop
	the newline before </screen> to save some space.

2009-03-27 18:02 +0100  Rocco Rutte  <pdmef@gmx.net>  (a06a2a4c5ebc)

	* rfc3676.c: f=f: Fix debug messages

2009-03-19 17:19 +0100  Rocco Rutte  <pdmef@gmx.net>  (754ea0f091fc)

	* doc/manual.xml.head: Improve section on patterns

	* curs_lib.c: Fix progress update debug message

	* doc/manual.xml.head, doc/muttrc.man.head: Document kilo and mega
	suffixes for range patterns

	Document it only for ~z (message size) as they don't make much sense
	for other patterns like message score or number of attachments.

2009-03-18 17:40 +0100  Rocco Rutte  <pdmef@gmx.net>  (8528b8e715da)

	* init.h: Properly initialize more structs

2009-03-19 13:38 +0100  Erik Hovland  <erik@hovland.org>  (a802b5127f09)

	* pgp.c: Remove unused variable

2009-03-19 10:36 +0100  Roman Kraevskiy  <rkraevskiy@gmail.com>  (6fac57b97bf1)

	* mutt_sasl.c: Restore connection polling callback when
	closing SASL connection. Closes #3206.

2009-03-18 14:48 +0100  Erik Hovland  <erik@hovland.org>  (17d770ae41e4)

	* smime.c: S/MIME: Don't leak intermediate cert key

	* buffy.c: Properly initialize struct stats in buffy check

2009-03-17 20:04 +0100  Rocco Rutte  <pdmef@gmx.net>  (903b3cee5485)

	* addrbook.c, browser.c, compose.c, curs_main.c, imap/auth.c, mx.c,
	pattern.c, pop_auth.c, postpone.c, query.c, recvattach.c,
	remailer.c: Fix some warnings with -W about missing initializers in
	structs

2009-03-17 16:44 +0100  Todd Zullinger  <tmz@pobox.com>  (bb9b845800f6)

	* pgp.c: Ensure display is redrawn for application/pgp

	When using gpg-agent, a hard redraw is needed after the pinentry
	program is called. Otherwise, the screen is garbled and key
	bindings are screwed up.

	Closes #3196.

2009-03-15 16:44 +0100  Rocco Rutte  <pdmef@gmx.net>  (bc7c64ff3e48)

	* configure.ac, protos.h, wcscasecmp.c: Add wcscasecmp() compatibility
	function (for OS X)

	* doc/mutt.man: mutt.1: Mention that -a should be last in option
	list. Closes #3202

	* alias.c: Only define min() if not present. Closes #3199

2009-03-15 14:25 +0100  Erik Hovland  <erik@hovland.org>  (3c154fcdad4c)

	* rfc822.c: The assigned value of dom is never used. Remove
	assignment

	* alias.c: The file handle will leak if fread fails

2009-03-12 15:16 -0700  Erik Hovland  <erik@hovland.org>  (53bea026a2a2)

	* curs_main.c: resort_index will use menu->current as a index into an
	array. If menu->current is negative, bad things can happen. So check
	it before calling resort_index

	* recvcmd.c: 'last' is assigned but never used. Remove assignment.

2009-03-15 13:46 +0100  Rocco Rutte  <pdmef@gmx.net>  (1238dff54a15)

	* alias.c, attach.c, buffy.c, check_sec.sh, commands.c, compose.c,
	copy.c, crypt-gpgme.c, crypt.c, edit.c, editmsg.c, gnupgparse.c,
	handler.c, headers.c, help.c, history.c, imap/message.c, init.c,
	lib.c, main.c, mbox.c, mh.c, mutt_ssl.c, mutt_ssl_gnutls.c,
	muttlib.c, pager.c, pattern.c, pgp.c, pgpkey.c, pgppubring.c,
	pop.c, postpone.c, query.c, recvattach.c, recvcmd.c, rfc1524.c,
	rfc3676.c, send.c, sendlib.c, smime.c, smtp.c: Use safe_fclose()
	instead of fclose(), add fclose() to check_sec.sh

2009-03-10 18:39 +0100  NONAKA Kimihiro  <nonakap@gmail.com>  (cc6fede605d4)

	* mh.c: Fix crashes with 64bit time_t. Closes #3184.

2009-03-09 12:04 +0100  Vincent Lefevre  <vincent@vinc17.org>  (4ce562b7f5d7)

	* mbyte.h: Unbreak compilation on OS X with --with-regex/--without-wc-
	funcs. Closes #3149.

2009-03-09 11:58 +0100  Rocco Rutte  <pdmef@gmx.net>  (f3a33b77dc90)

	* mutt.h, regex.c: Unbreak compilation with --without-wc- funcs on
	OS X 10.5.*, see #3149.

	* init.h: Fix 11cd72da743a

	* init.h: Sort SSL-related variables, see #3191.

	* hash.c, hash.h, init.c, mh.c, thread.c: Restore $reverse_alias
	feature by using case-insensitive hash keys

	The fix is implemented as callbacks in the hash table so we can
	avoid working with copies of the mailbox keys but work on the
	originals instead and don't pollute the code with lower-case
	conversions all over the place.

	While I'm at it, turn int hashes into unsigned values since the hash
	function returns unsigned values now, too.

	Closes #3185.

2009-03-07 13:49 +0100  Rocco Rutte  <pdmef@gmx.net>  (ff1906f70b1b)

	* init.h: Sort most variables (except crypto), see #3191.

	* doc/manual.xml.head: Fix typo, see #2430.

2009-02-20 22:14 +0100  Rocco Rutte  <pdmef@gmx.net>  (35fbea209c6e)

	* doc/manual.xml.head: Manual: verbosely document how the
	initial folder is determined, see #3189.

	* doc/manual.xml.head: Document address normalization. Closes #2430.

	* headers.c: Simplify and fix Attach: header parsing

	With ee5e696a9d08 we would skip beyond the filename to look for a
	description. This changeset fixes it.

	* main.c: Set magic from -m before processing queries (-Q) or dumping
	variables (-D)

	* doc/mutt.man, init.h: Better document how the initial folder is
	determined. Closes #3189.

2009-02-15 16:09 +0100  Rocco Rutte  <pdmef@gmx.net>  (ee5e696a9d08)

	* doc/manual.xml.head, headers.c: Support spaces in Attach:
	pseudoheader. Closes #3179.

2009-02-10 13:05 +0100  Rocco Rutte  <pdmef@gmx.net>  (a21f8bf84149)

	* init.h: Fix documentation typos. Closes #3178.

2009-01-27 12:58 -0800  Brendan Cully  <brendan@kublai.com>  (7ddf1d1cc490)

	* imap/imap.c: Move socket close into imap_logout from imap_logout_all

	* imap/imap.c: IMAP: only close socket when not already
	disconnected.

2009-01-27 18:48 +0100  Rocco Rutte  <pdmef@gmx.net>  (d7e44862a08a)

	* help.c, main.c, mh.c: Update copyright years

	* help.c: Fix help alignment for escape sequences at screen
	boundary. Closes #3146.

	* mh.c: Unconditionally inode-sort Maildir and MH folders. Closes
	#3166.

2009-01-26 12:32 -0800  Brendan Cully  <brendan@kublai.com>  (da94a92c3ba0)

	* bcache.c: Remove old bcache tmpfile before trying to create new
	one. Closes #3163.

2009-01-20 12:34 -0800  René Clerc  <rene@clerc.nl>  (2006526d1d26)

	* po/nl.po: Updated Dutch translation

2009-01-19 20:39 -0800  Ivan Vilata i Balaguer  <ivan@selidor.net>  (038f1e5cdaea)

	* po/ca.po: Updated Catalan translation

2009-01-14 20:04 +0000  Emanuele Giaquinta  <e.giaquinta@glauco.it>  (ddf48761aacf)

	* imap/browse.c: Use imap_utf7_encode instead of
	imap_munge_mbox_name+imap_unquote_string.

2009-01-14 11:45 -0800  Brendan Cully  <brendan@kublai.com>  (cd0b17c80372)

	* doc/manual.xml.head: Add missing hooks to manual section 4

2009-01-13 06:51 -0800  Brendan Cully  <brendan@kublai.com>  (10e224e86f0b)

	* hook.c: Do not allow a command in an account-hook to trigger another
	account-hook. Recent changes in the IMAP path canonifier mean that
	account-hooks that set variables to URLs (eg folder, spoolfile) can
	trigger a recursive account-hook. Now we just bail out of account-
	hook early if we are called recursively, but perhaps we should warn
	the user to use a folder-hook instead. Thanks to Kyle Wheeler for
	finding this one.

2009-01-12 10:27 -0800  Brendan Cully  <brendan@kublai.com>  (6976aca75d04)

	* init.h: Correct defaults for new ssl options (fixes manual
	generation)

2009-01-11 21:47 -0800  Brendan Cully  <brendan@kublai.com>  (ff74e612f790)

	* mutt_ssl_gnutls.c: GNUTLS: check all available certs
	noninteractively before presenting any menus

	* UPDATING, init.h, mutt.h, mutt_ssl.c, mutt_ssl_gnutls.c: Add
	$ssl_verify_dates option to relax certificate date validation

	* UPDATING, init.h, mutt.h, mutt_ssl.c, mutt_ssl_gnutls.c: Add
	$ssl_verify_host to allow skipping host name validation

2009-01-10 22:09 -0800  Brendan Cully  <brendan@kublai.com>  (db3a61fcde35)

	* imap/util.c: Assume INBOX for ""/NULL in imap_mxcmp

	* imap/util.c: Use known connection delimiter in imap_expand_path

	* imap/util.c: Guard against NULL pointers in imap_mxcmp

	* imap/imap_private.h, imap/util.c: Canonicalize IMAP mailboxes before
	comparing them.

	* imap/util.c: Fix last commit

	* imap/util.c: Prioritize the entered IMAP folder delimiter. First
	priority is the connection delimiter. Second priority is the user's
	delimiter if it is in imap_delim_chars. We no longer use the first
	character in imap_delim_chars.

2009-01-06 18:34 -0800  Vsevolod Volkov  <vvv@mutt.org.ua>  (4032dfd52118)

	* po/ru.po: Updated Russian translation

2009-01-05 16:43 -0800  Brendan Cully  <brendan@kublai.com>  (0d81ef9d40fd)

	* build-release: Sign tagged revision, not the one after

	* .hgsigs: mutt-1.5.19 signed

	* .hgtags: Added tag mutt-1-5-19-rel for changeset a4b47ac32d32

	* VERSION, po/bg.po, po/ca.po, po/cs.po, po/da.po, po/de.po,
	po/el.po, po/eo.po, po/es.po, po/et.po, po/eu.po, po/fr.po,
	po/ga.po, po/gl.po, po/hu.po, po/id.po, po/it.po, po/ja.po,
	po/ko.po, po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po, po/ru.po,
	po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po, po/zh_TW.po:
	automatic post-release commit for mutt-1.5.19

	* build-release: Fall back to vi if VISUAL is unset in
	build-release

	* UPDATING: Update UPDATING

	* imap/command.c, imap/imap.c, imap/imap_private.h: Report CREATE
	failures

	* browser.c: Style fixes

	* browser.c: Leave error message on screen if imap_mailbox_create
	fails

	* doc/mutt.man: Add pointer to the full manual to the front of mutt.1

2009-01-05 09:16 -0800  Petr Písař  <petr.pisar@atlas.cz>  (990f1e841dd4)

	* po/cs.po: Updated Czech translation

2009-01-04 22:36 -0800  Vincent Lefevre  <vincent@vinc17.org>  (9af288ee9e91)

	* po/fr.po: Updated French translation

2009-01-04 18:32 -0800  Emanuele Giaquinta  <e.giaquinta@glauco.it>  (e47d05dc2633)

	* imap/util.c: Indentation fix

2009-01-04 18:12 -0800  Brendan Cully  <brendan@kublai.com>  (1947c370fcd9)

	* Makefile.am: Remove obsolete make target

	* doc/manual.xml.head: Update copyright in manual

2009-01-04 17:07 -0800  Vincent Lefevre  <vincent@vinc17.org>  (bbe8694acc33)

	* po/fr.po: Updated French translation

2009-01-04 17:04 -0800  Brendan Cully  <brendan@kublai.com>  (d98ab9a591e5)

	* pgpkey.c: Remove dead code. Thanks to Ingo Schwarze.

	* COPYRIGHT: Update copyrights

	* addrbook.c, ascii.h, attach.c, bcache.c, bcache.h, browser.c,
	browser.h, charset.c, charset.h, commands.c, complete.c,
	compose.c, crypt-gpgme.c, crypt.c, curs_main.c, dotlock.c,
	editmsg.c, enter.c, functions.h, gnupgparse.c, handler.c,
	hdrline.c, hook.c, init.h, lib.c, lib.h, menu.c, mh.c,
	mutt_idna.c, mutt_idna.h, mutt_sasl.h, mutt_socket.c, muttlib.c,
	mx.c, pager.c, pattern.c, pgp.c, pgp.h, pgpinvoke.c, pgpkey.c,
	pgplib.c, pgplib.h, pgppacket.c, pgppubring.c, pop.c, postpone.c,
	protos.h, query.c, recvattach.c, recvcmd.c, remailer.c, rfc1524.c,
	rfc2047.c, rfc2231.c, rfc3676.h, send.c, setenv.c, status.c,
	url.c: Update copyrights. Closes #3016. I went through the logs of
	each file with a copyright header and updated the years for the
	authors in the headers for any non-comment changes they
	introduced. What a pain!

	* imap/auth_anon.c, imap/auth_cram.c, imap/auth_login.c,
	imap/auth_sasl.c, imap/browse.c, imap/imap.h, imap/message.h,
	imap/utf7.c: IMAP copyright header updates

	* imap/auth_gss.c, imap/command.c, imap/imap.c, imap/message.c:
	Updated copyrights

	* smtp.c: SMTP: complain when authentication fails. Closes
	#2117. Now each failed attempt emits an error before mutt tries
	the next method. Possibly we should just fail immediately?

	* parse.c, snprintf.c: Use ! instead of testing pointers against 0.
	Closes #3125.

2009-01-04 20:12 +0100  Rocco Rutte  <pdmef@gmx.net>  (33fa1ca4b6af)

	* doc/gen-map-doc, init.h: Documentation: Minor fixes and
	improvements

2009-01-03 21:02 -0800  Brendan Cully  <brendan@kublai.com>  (5a80ee54a05f)

	* imap/command.c, imap/imap.c, init.c, muttlib.c, postpone.c: Raise
	debug level for several messages

	* imap/auth_gss.c: Guard against unused variable warning.  Thanks
	to Ingo Schwarze.

	* doc/Makefile.am: Remove obsolete reference to ChangeLog.old. Thanks
	to Ingo Schwarze.

	* imap/message.c: Ignore unexpected FETCH responses during
	imap_read_headers. Thanks to Chris Li for the excellent bug report
	in #3041. See #2902, #2935, #2985, #3028, #3041, #3143. With luck,
	this may close them. In truth, imap_read_headers is still a horrible
	kludge of duct tape and chicken wire.

	* hash.c, hash.h: Make hash_string work in unsigned domain

	* main.c: Another copyright update

	* main.c, smtp.c: Update some copyrights

2009-01-02 23:13 -0800  Brendan Cully  <brendan@kublai.com>  (87ef3e3550e4)

	* smtp.c: SMTP: Use Hostname if Fqdn is bogus. Closes #3142.

	* init.h: More tyops

	* doc/manual.xml.head: Tyops

	* mutt_ssl_gnutls.c: Add SSL intermediate certificate support for
	gnutls

	* mutt_ssl.c: Simplify intermediate certificate handling.  Return
	immediately if a certificate is interactively accepted.  Display
	index of current certificate in chain in menu title.

2009-01-02 12:46 -0800  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (5db868a874b6)

	* globals.h, mutt_ssl.c: Add support for intermediate certificates to
	openssl code. Gnutls support is not included in this patch.

2009-01-01 17:02 -0800  Marcel Telka  <marcel@telka.sk>  (532f695b4352)

	* smtp.c: SMTP: Require SP after AUTH response (strict RFC
	conformance). Closes #3141.

2009-01-01 16:55 -0800  Brendan Cully  <brendan@kublai.com>  (859009a507d8)

	* smtp.c: SMTP: guard against short server responses

2008-12-30 00:58 +0100  Rocco Rutte  <pdmef@gmx.net>  (ac870203179d)

	* doc/manual.xml.head: Manual: Add missing maps to bind command docs

	* doc/TODO: Documentation: Update TODO

2008-12-26 14:36 +0100  Rocco Rutte  <pdmef@gmx.net>  (4917897ac9b1)

	* init.c: Ignore NULL/empty lines in rc parser, fixes mutt -e ''
	crashing

2008-12-20 15:33 -0800  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (349986b1af09)

	* po/ja.po: Updated Japanese translation.

2008-12-20 15:31 -0800  Brendan Cully  <brendan@kublai.com>  (a715dca3610c)

	* main.c: Cosmetics for mutt -v

2008-11-26 01:15 +0000  Peter Collingbourne  <peter@pcc.me.uk>  (2fefd56f440c)

	* sendlib.c: Disable line wrapping for Message-ID header

2008-12-16 20:19 -0800  Erik Hovland  <erik@hovland.org>  (f6ae8dc70850)

	* imap/util.c: Remove unused #include directives

	* crypt.c, curs_main.c, flags.c, group.c, hcache.c, mh.c, pager.c,
	pgpmicalg.c, pgppacket.c, postpone.c, query.c, recvattach.c,
	recvcmd.c, send.c: Remove unused #include directives

	* sendlib.c: mutt_gen_msgid() allocates the msgid off of the heap.

	Since mutt_gen_msgid() allocates the msgid string with strdup, it is
	getting it off of the heap.

	When the fprintf writes the msgid, the string is no longer tracked
	and that string is leaked.

	* parse.c: Match variable type to getch return type

	* alias.c: Fix fread rc check

	* hash.c: Remove redundant int clamping

	* smime.c: Remove check that always succeeds

	* pattern.c: fclose correct fp

	* rfc822.c: buflen cannot be 0 here

2008-12-16 12:36 -0800  Brendan Cully  <brendan@kublai.com>  (bbf4dfc2aa41)

	* ChangeLog.old, Makefile.am: Remove ChangeLog.old

	* imap/Makefile.am: Remove imap/BUGS from Makefile.am

2008-12-15 23:45 -0800  Erik Hovland  <erik@hovland.org>  (adaf24e4117d)

	* mh.c: Fix bad parentheses in stat rc

	* bcache.c: snprintf returns int, not size_t

	* muttlib.c: Always va_end(ap_retry) in mutt_buffer_printf

2008-12-15 23:11 -0800  Brendan Cully  <brendan@kublai.com>  (101a8bcba613)

	* imap/BUGS: imap/BUGS is superseded by the BTS

2008-12-10 20:00 +0100  Rocco Rutte  <pdmef@gmx.net>  (817e5987633b)

	* doc/manual.xml.head: Manual: Fix typos found by by Vincent Lefevre,
	see #3109.

	* doc/manual.xml.head: Manual: trim into chapter, add notes about
	contributing

	* doc/mutt.css: Make mutt.css apply for all media types

	* doc/manual.xml.head, doc/mutt.css: Manual: Wrap important notes
	in <note/>

	* doc/Makefile.am, doc/chunk.xsl, doc/html.xsl, doc/mutt.xsl: Move
	common XSLT params to mutt.xsl imported into (chunk|html).xsl

	* doc/gen-map-doc, doc/makedoc.c, doc/manual.xml.head,
	doc/manual.xml.tail, init.h: Manual: Only wrap real text
	paragraphs in <para/>

	Elements such as lists, tables, synopsis don't need it and produce
	hundreds of warnings in tidy because of empty paragraphs.

	With this change, the manual should be fully XHTML 1.0 Transitional
	and validate without warnings and errors.

	* hg-commit: hg-commit: Work even in subdirectories

	* doc/chunk.xsl, doc/html.xsl: Manual: Use right XSLT-way to embed
	CSS to avoid invalid xmlns="" attributes on <style/>

	* doc/devel-notes.txt: devel-notes.txt: add some words about preparing
	& contributing patches

	* doc/manual.xml.head: Manual: Add section about typographical
	conventions, see #3109.

	* doc/manual.xml.head, doc/mutt.css: Manual: Wrap important examples
	in <example/>

2008-12-06 15:06 +0100  Rocco Rutte  <pdmef@gmx.net>  (e13e903af3bf)

	* doc/manual.xml.head, doc/mutt.css: Manual: Fixup configuration
	command synopsis and switch to <cmdsynopsis/>

	* doc/makedoc.c: makedoc: use <quote/> and <literal/> in string
	default values

	The goal is to improve readability of settings where spaces are
	relevant.

	* doc/Makefile.am, doc/chunk.xsl, doc/html.xsl, doc/mutt.css:
	Manual: Add simple and clean stylesheet, see #3109.

2008-12-02 16:10 +0100  Rocco Rutte  <pdmef@gmx.net>  (3a8e5756613c)

	* init.c: Include mutt_menu.h in init.c for mutt_menu_init() prototype

2008-12-01 21:27 +0100  Rocco Rutte  <pdmef@gmx.net>  (1e8252a9e92f)

	* ChangeLog, charset.c, history.c, init.c, init.h, pattern.c: Fix some
	typos to silence compiler warnings

2008-11-30 20:28 +0100  Rocco Rutte  <pdmef@gmx.net>  (cb251bde7fc1)

	* addrbook.c, browser.c, compose.c, crypt-gpgme.c, curs_main.c,
	init.c, menu.c, mutt_menu.h, mutt_ssl.c, mutt_ssl_gnutls.c, pager.c,
	pgpkey.c, postpone.c, query.c, recvattach.c, remailer.c, smime.c:
	Manage last search pattern outside of menu lifecycle

	Previously, the pattern was thrown away during menu destruction. For
	the next search, mutt then can't provide a good suggestion. The new
	behaviour is to manage the pattern outside the lifecyle to always
	provide the last pattern as suggestion.

	* query.c: Start numbering query results with 1 instead of 0

2008-11-24 11:44 -0800  Brendan Cully  <brendan@kublai.com>  (fd555f9fcb03)

	* doc/manual.xml.tail, main.c: Belatedtly acknowledge Rocco's
	significant contributions to mutt

2008-11-24 12:41 +0100  Rocco Rutte  <pdmef@gmx.net>  (dc62594cc9e9)

	* doc/Makefile.am: Manual: Fix lynx call for html to text
	conversion, strip \001 when dumping with elinks

	* doc/manual.xml.head: Manual: Fix/Improve quoting

	* hg-commit: hg-commit: Exit if manual validation fails

	* doc/manual.xml.head, doc/muttrc.man.head: Documentation:
	Consistently use "backtick" for `

	* doc/Makefile.am, doc/manual.xml.head, doc/muttrc.man.head:
	Manual: Add 'spellcheck' target for aspell and fix typos (closes
	#3137)

2008-11-23 18:46 +0100  Rocco Rutte  <pdmef@gmx.net>  (82b4664129cd)

	* doc/Makefile.am: Complete e1304a641938 commit

	* doc/Makefile.am, doc/db-cleanup.xsl: Manual: Convert manual.html
	to manual.txt under C locale

	This ensures manual.txt is always pure ASCII and removes the
	horrible XSLT-based and incomplete hack.

	* doc/manual.xml.head: Manual: Fix wording for simple search

2008-11-22 18:09 +0100  Rocco Rutte  <pdmef@gmx.net>  (0837f7b13990)

	* po/de.po: Fix German translation for what-key

	* UPDATING, functions.h, keymap.c, pager.c: Make what-key function
	available in pager-based menus, too

2008-11-21 11:34 -0800  Petr Písař  <petr.pisar@atlas.cz>  (870b7dfb89ef)

	* po/cs.po: Updated Czech translation.

2008-11-21 11:19 -0800  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (34315aab7401)

	* ChangeLog, mbyte.c: Initialize mbstate in mutt_filter_unprintable.
	Closes #3134

2008-11-16 21:01 -0800  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (8199185fa595)

	* snprintf.c: Add support for %ll to the bundled snprintf
	replacement.

	* configure.ac, doc/makedoc-defs.h: Add --disable-full-doc flag to
	only build documentation for enabled features

2008-11-15 20:24 -0800  Brendan Cully  <brendan@kublai.com>  (8087be7178cd)

	* configure.ac: Use with_tokyocabinet exclusively (with_tc is
	undefined). Closes #3131.

2008-11-15 19:51 -0800  Alexey I. Froloff  <raorn@altlinux.org>  (af87aa1846be)

	* md5.c, md5.h: md5.h, md5.c: updated to latest version from gnulib.
	Buggy old md5.h causes problems with gcc 4.3 compiler. In md5.h
	__attribute__ is #define'd to no-op and causes mutt_md5 to enter
	inifinite loop while calling memcpy().

2008-11-15 19:36 -0800  Gary Johnson  <garyjohn@spk.agilent.com>  (01e4deee6827)

	* curs_lib.c, mutt_socket.c, mutt_ssl_gnutls.c, smtp.c: Suppress
	several progress messages in batch mode

2008-11-11 11:41 -0800  Kyle Wheeler  <kyle-mutt-dev@memoryhole.net>  (53ffd34f4de3)

	* smtp.c: Use envfrom instead of recomputing it in mutt_smtp_send.

2008-10-29 20:49 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (c2439fc68cd6)

	* pager.c: Restart pager search from top if called twice.  Do not
	loop infinitely. Closes #3127.

2008-10-30 01:02 +0100  Emanuele Giaquinta  <e.giaquinta@glauco.it>  (6c58b678d360)

	* account.c: Remove unused variable in mutt_account_match and fix
	comment.

	* imap/command.c, imap/imap.h, imap/util.c: Add imap_account_match
	wrapper over mutt_account_match that canonicalizes accounts with
	imap_conn_find so that username comparison always work as expected.

2008-10-28 22:20 +0000  Emanuele Giaquinta  <e.giaquinta@glauco.it>  (caa738600644)

	* enter.c, group.c, handler.c, init.c, lib.c, menu.c, mh.c,
	mutt_idna.c, mutt_ssl.c, mx.c, parse.c, recvattach.c, rfc822.c,
	signal.c, sort.c, thread.c: Make some functions static.

2008-10-20 11:50 -0700  Brendan Cully  <brendan@kublai.com>  (5ea9f336dd60)

	* imap/util.c: Accidentally dropped from d4a9c0a68f2b prior to commit

	* imap/imap.c, imap/message.c: Hack around INBOX.INBOX breakage
	from [5d1cc2f0c1c4]

2008-10-20 18:00 +0100  Vincent Lefevre  <vincent@vinc17.org>  (11d2c6712c88)

	* pattern.c: Make eat_regexp static.

2008-10-20 09:55 -0700  Kyle Wheeler  <kyle@memoryhole.net>  (361b298c9fe2)

	* imap/util.c: Fix #3129

2008-10-20 09:48 -0700  Brendan Cully  <brendan@kublai.com>  (f119005f8169)

	* imap/imap.c, imap/imap_private.h: Call imap_free_idata instead of
	freeing directly in imap_logout

	* imap/browse.c: Fix memory leak in imap_mailbox_state

2008-10-19 16:26 -0700  TAKAHASHI Tamotsu  <tamo@momonga-linux.org>  (e1fc907b2968)

	* imap/browse.c: Fix up destination path when renaming mailbox. Closes
	#2090.

2008-10-19 16:14 -0700  Brendan Cully  <brendan@kublai.com>  (5d1cc2f0c1c4)

	* imap/util.c: Normalize path component of IMAP URLs in
	imap_expand_path (see #2897).

	* mutt_socket.c: Fix buglet in logging from previous commit

	* mutt_socket.c: Handle short writes in mutt_socket_write_d. See
	#3000. Apparently even blocking I/O with signals masked can
	sometimes return early. Based on a patch by Patrick Welche.

2008-10-19 15:14 +0200  Emanuele Giaquinta  <e.giaquinta@glauco.it>  (2f04a811db3f)

	* pattern.c, sendlib.c: Remove unused functions.

	* curs_main.c, init.c, pattern.c, score.c: Make some variables static.

	* configure.ac: Fix logic in [13a831a945be].

2008-10-07 19:22 -0700  Brendan Cully  <brendan@kublai.com>  (10a1f06bc8aa)

	* Makefile.am, configure.ac, mutt_idna.c, mutt_idna.h: Clean up with
	/without-idn handling

2008-10-07 15:58 -0700  Emanuele Giaquinta  <e.giaquinta@glauco.it>  (cd3bd3858c6c)

	* mutt_socket.c: Minor simplification in mutt_socket_readln_d

2008-10-07 15:27 -0700  Brendan Cully  <brendan@kublai.com>  (d13106731007)

	* mutt_idna.c, mutt_idna.h: Build no-op versions of new IDN functions
	if IDN is unavailable. Closes #3122, #3123.

2008-10-01 09:33 -0700  Brendan Cully  <brendan@kublai.com>  (13a831a945be)

	* configure.ac: Clean up autoconf header cache engine selection.

	Any explicit --with-$engine will force that engine to be used or
	make configure fail if the engine is unavailable.

2008-09-29 14:31 -0700  Emanuele Giaquinta  <e.giaquinta@glauco.it>  (ec96c56be182)

	* mutt_socket.c: Simplify host resolution code slightly.

2008-09-26 08:55 +0200  Rocco Rutte  <pdmef@gmx.net>  (9e569296190b)

	* UPDATING, doc/manual.xml.head, init.h: Mention tokyocabinet in
	UPDATING and docs

2008-09-25 15:07 -0700  Emanuele Giaquinta  <e.giaquinta@glauco.it>  (2050b44407bf)

	* configure.ac, hcache.c, init.h, mutt.h: Support tokyocabinet
	(successor to qdbm). Closes #3112

2008-09-24 15:58 +0200  Matthias Andree  <matthias.andree@gmx.de>  (2c8bf79d99b7)

	* ChangeLog, pager.c: Fix compiler warning in dprint() (closes #3120)

2008-09-24 15:53 +0200  Rocco Rutte  <pdmef@gmx.net>  (c842922bea10)

	* doc/manual.xml.head: Manual: Fix typo

	* mbyte.c: Provide legacy implementations for iswalpha() and
	iswupper()

	In mbyte.h and without using wc functions, only the prototypes were
	defined but implementations were missing resulting in build errors.
	These new functions are derived from the iswalnum() and towupper()
	routines which don't provide full unicode coverage.

	* imap/imap.c: Fix an infinite loop for imap searches

	Reported by Emanuele Giaquinta on #mutt.

2008-09-18 08:28 +0200  Rocco Rutte  <pdmef@gmx.net>  (ffefb446142c)

	* alias.c, init.c, muttlib.c, protos.h: Fix compiler warnings

2008-09-17 22:27 +0200  Thomas Roessler  <roessler@does-not-exist.org>  (77e25415a08a)

	* alias.c, globals.h, init.c, mutt_idna.c, muttlib.c, rfc822.h,
	sort.c: sorting efficiency

2008-09-16 17:20 +0200  Rocco Rutte  <pdmef@gmx.net>  (1cb0a127eb3d)

	* UPDATING: UPDATING: $move now defaults to "no"

2008-09-11 09:28 +0200  Rocco Rutte  <pdmef@gmx.net>  (1a6842983357)

	* ChangeLog, keymap.c: Fix IMAP keepalive if $imap_keepalive >=
	$timeout

2008-09-01 18:23 +0200  Rocco Rutte  <pdmef@gmx.net>  (17adea9cdff6)

	* UPDATING: Add note about locale-safe hcaches to UPDATING as it's a
	user-visible change

2008-08-31 23:36 +0200  Rocco Rutte  <pdmef@gmx.net>  (b6d07a662c7f)

	* ChangeLog, init.h, pager.c: Fix pager to respect $wrap_search

2008-08-31 23:28 +0200  Rocco Rutte  <pdmef@gmx.net>  (f4b10e6b415c)

	* doc/chunk.xsl, doc/html.xsl: Backout [e5610347fb3f] for further
	discussion

2008-08-31 21:13 +0200  Rocco Rutte  <pdmef@gmx.net>  (581037c15012)

	* init.h: Manual: Fix trailing \ for $preconnect

2008-08-31 21:12 +0200  Rocco Rutte  <pdmef@gmx.net>  (6d80c3d5b7aa)

	* doc/makedoc.c: makedoc: Fix fall-through in [c11ce7feaa3e]

2008-08-31 20:56 +0200  Rocco Rutte  <pdmef@gmx.net>  (03d1344f7ea2)

	* doc/gen-map-doc: Manual: Harmonize generated function mappings with
	the rest of the manual. This includes named keys such as "<Return>",
	attempts to use CamelCase and leaves the key column for unbound
	functions empty so they're visually easier to spot.

2008-08-31 20:12 +0200  Rocco Rutte  <pdmef@gmx.net>  (937c3976df5a)

	* doc/manual.xml.head, init.h: Manual: Many content+markup
	improvements for option documentation

2008-08-31 19:30 +0200  Rocco Rutte  <pdmef@gmx.net>  (df555876d480)

	* doc/makedoc.c: makedoc: Also replace | and ^ by entities in XML
	output

2008-08-31 18:25 +0200  Rocco Rutte  <pdmef@gmx.net>  (c11ce7feaa3e)

	* doc/makedoc.c: makedoc: Escape <>& in <screen/> environments

2008-08-31 15:27 +0200  Rocco Rutte  <pdmef@gmx.net>  (4cc92c30543b)

	* doc/makedoc.c, doc/manual.xml.head, doc/manual.xml.tail, init.h:
	Manual: Use <quote/> quoting for DocBook rather than ``''. All
	quotes characters are now rendered to Unicode quote chars in the
	HTML output (as <xref/> does, too) but still " for manual.txt.

2008-08-31 14:31 +0200  Rocco Rutte  <pdmef@gmx.net>  (e5610347fb3f)

	* doc/chunk.xsl, doc/html.xsl: Manual: Limit toc section depth to 1
	This only lists sect1 items and prevents variables from being shown
	making it unusable.

2008-08-31 14:25 +0200  Rocco Rutte  <pdmef@gmx.net>  (15a831b84d46)

	* doc/manual.xml.tail: Manual: use itemizedlist for acknowledgements
	DocBook XSL renders simplelist to a html table which is
	inappropriate.

2008-08-30 20:21 -0700  Brendan Cully  <brendan@kublai.com>  (c2af57b1e7ee)

	* ChangeLog, mutt_ssl_gnutls.c: Make gnutls read function more robust
	against interruptions. Signals should be masked off anyway, but see
	#3074.

2008-08-30 23:19 +0200  Rocco Rutte  <pdmef@gmx.net>  (996e4e2d2855)

	* doc/manual.xml.head, init.h: Manual: use $variable syntax, only
	quote non-variable links

	* doc/manual.xml.head: Manual: Various fixes+improvements in chapters
	1+2

	* doc/gen-map-doc, doc/makedoc.c, doc/manual.xml.head, init.h: Manual:
	Layout functions as <function-name>, s/ESC/Esc/ for consistency

	* doc/devel-notes.txt, doc/makedoc.c: makedoc: Add support for
	monospace fonts with \fC...\fP

	* doc/manual.xml.head: Manual: trim trailing whitespace

	* doc/manual.xml.head: Manual: Fix processing warnings by manually
	assigning missing id attributes

	* doc/manual.xml.head: Manual: Add a section on mutt core concepts as
	introduction

2008-08-30 19:59 -0700  Brendan Cully  <brendan@kublai.com>  (12a6de725483)

	* curs_lib.c, enter.c, flags.c, keymap.c, menu.c: Rework timeout
	handling to support keepalive in the line editor. Also allow
	keepalives of less than $timeout without returning before $timeout,
	so people who don't want to be notified of new mail don't have to
	be.

2008-08-29 23:10 -0700  Rado Smiljanic  <regrado@web.de>  (4f67fc336986)

	* curs_main.c, keymap.c, menu.c, pager.c: Make curses timeout the
	minimum of $timeout and $imap_keepalive. Do keepalive in km_dokey
	instead of directly in menu. Closes #2747.

2008-08-29 22:40 -0700  Brendan Cully  <brendan@kublai.com>  (e37ae3f79ec0)

	* imap/imap_private.h: Dead code

	* imap/imap.c: Remove redundant code

	* imap/command.c, imap/imap.c, imap/imap_private.h, imap/message.c:
	Use sorted headers in imap_exec_msgset. Fixes [e68f79fef249]. Closes
	#3000 again.

2008-08-29 10:23 +0200  YONETANI Tomokazu  <qhwt+mutt@les.ath.cx>  (78aab353e217)

	* buffy.c: Only consider empty files non-existent for buffy's
	purpose.

	According to SUS, the st_size member of struct stat is undefined for
	directories. In case a system reports 0, the newly_created flag will
	be set for a directory and the magic will be cleared.

	If the folder type is cleared, mutt won't check the folder for new
	mail and thus will ignore MH and Maildir type folders on such a fs
	completely (e.g. the HAMMER fs on DragonFly BSD).

2008-08-28 11:19 -0700  Brendan Cully  <brendan@kublai.com>  (1d94905ad00b)

	* imap/command.c, imap/imap.c, imap/imap_private.h, imap/message.c:
	The msgset changes seem buggy. Reverting pending further testing.

	* imap/command.c, imap/imap.c, imap/imap_private.h, imap/message.c:
	Split long IMAP commands for the benefit of lazy servers (closes
	#3000). Also touches lots of old, hairy code. Likely to wake
	sleeping dogs.

2008-08-26 23:09 -0700  Brendan Cully  <brendan@kublai.com>  (2731e5174c5a)

	* imap/util.c, mutt_sasl.c, mutt_ssl.c, mutt_ssl_gnutls.c:
	Properly set the SASL external auth name when using SSL client
	certs. Also zero out the account structure before filling it with
	available data. Client certificates + SASL EXTERNAL were only
	working by luck.

	* imap/imap.c: Remove leftover IMAP IDLE handling from before
	[53d9210aa4ee].

2008-08-25 00:52 -0700  Brendan Cully  <brendan@kublai.com>  (36aa1130091a)

	* UPDATING, globals.h, imap/command.c, imap/imap.c,
	imap/imap_private.h, imap/util.c, init.c, init.h: Introduce
	$imap_pipeline_depth. This lets users control the number of
	commands that mutt will queue up before sending them to the
	server. Setting this to 0 disables pipelining, which should close
	#2892.

	* imap/command.c, imap/imap.c, imap/imap_private.h, imap/message.c:
	Rework IMAP command queueing to allow pipelining to be disabled.
	IDLE handling has been better abstracted, and there are fewer entry
	points to the IMAP command issuing machinery. Any commands that are
	simply queued may be executed whenever the pipeline fills, instead
	of requiring explicit handling in the caller.

	Tested on my Cyrus server, but I wouldn't be surprise if this causes
	new problems.

2008-08-24 20:01 +0200  Rocco Rutte  <pdmef@gmx.net>  (045c5942e1ad)

	* doc/manual.xml.head: Manual: Fix DTD validation error and
	message header display section

	* doc/manual.xml.head: Manual: Fix typo

	* doc/manual.xml.head: Manual: Fix style and typos. Noted by
	Vincent Lefevre, see #3109.

2008-08-23 15:25 -0700  Brendan Cully  <brendan@kublai.com>  (1f9849496bc2)

	* main.c: Whitespace cleanup

	* main.c: Fix infinite loop with "mutt -", introduced in
	[31c9e9727d42]. Treats - as a non-option argument. It would be
	reasonable to treat it as an error instead.

2008-08-19 16:44 -0400  Aron Griffis  <agriffis@n01se.net>  (31c9e9727d42)

	* main.c: Handle -- correctly with or without -a, closes #3097

	Prefix optstring with "+" to force POSIX behavior on GNU getopt, and
	thereby prevent reordering argv. This allows us to correctly handle
	mixed addresses, attachments, options and the double-dash to signal
	end-of-options.

	Signed-off-by: Aron Griffis <agriffis@n01se.net>

2008-08-22 17:49 +0200  Rocco Rutte  <pdmef@gmx.net>  (6fd1fa2d98bc)

	* doc/manual.xml.head: Manual: fix/improve markup/content, see
	#3109

2008-08-21 10:42 +0200  Rocco Rutte  <pdmef@gmx.net>  (15d93fe50e62)

	* init.h: Clarify documentation for $config_charset. Closes #2021.

	* doc/manual.xml.head: Improve color/mono command synopsis.
	Closes #2630.

	* init.h: Better document the effect of $thorough_search being unset.
	Closes #3104.

	* mutt_ssl.c: Port certificate host checking from msmtp to
	mutt. It supports IDN, wildcards and extracting the hostname from
	subject alternative field as well as common name which should be
	the same gnutls supports. Closes #3087.

2008-08-19 13:17 -0700  Brendan Cully  <brendan@kublai.com>  (573d1aab3c89)

	* init.c: Silence an incorrect uninitialized variable warning.

	* init.h: Better documentation for how quote_regexp determines
	quote level. Closes #1463.

2008-08-19 09:39 +0200  Rocco Rutte  <pdmef@gmx.net>  (3e850c6e43fd)

	* handler.c, mutt.h: Make text/enriched handler multibyte aware.
	Closes #3033.

2008-08-18 13:08 -0700  Vincent Lefevre  <vincent@vinc17.org>  (95a11c7f677d)

	* po/fr.po: Updated French translation.

2008-08-18 10:24 +0200  Rocco Rutte  <pdmef@gmx.net>  (51bd7a47d552)

	* pager.c: Ignore zero width characters U+200B/U+FEFF which may garble
	the display. Closes #3061, #3048.

	* charset.c, charset.h, init.c: Validate charset names for all
	charset options. Validation is either done against mutt's table of
	IANA assigned names or local iconv implementation (based on the
	assumption that iconv_open(charset,charset) fails if charset is
	unknown to the implementation). Closes #1668.

2008-08-15 11:53 -0700  Brendan Cully  <brendan@kublai.com>  (ff3fbb6a92a8)

	* mutt_sasl.c: Fix type-punning warning in sasl_getprop usage

	* parse.c: Fix a couple of compiler warnings introduced in
	[00ce81d778bf]. Make the style of mutt_parse_references more
	pleasing to me.

2008-07-10 09:38 -0400  Aron Griffis  <agriffis@n01se.net>  (d3ee9644765f)

	* copy.c: Fix three bugs handling flags in mutt_copy_header

	1. mutt_copy_header incorrectly tests CH_UPDATE to determine whether
	to write the In-Reply-To and References headers. CH_UPDATE
	refers only to Status: and X-Status:

	2. mutt_copy_header ignores CH_NOSTATUS which is supposed to
	indicate that the mailbox type doesn't use those headers.

	3. mutt_copy_header tests h->env->irt_changed and
	h->env->refs_changed when it should be testing CH_UPDATE_IRT and
	CH_UPDATE_REFS, respectively. Early in the function this
	happens:

	 if (h->env) flags |= (h->env->irt_changed ? CH_UPDATE_IRT
	: 0) | (h->env->refs_changed ? CH_UPDATE_REFS : 0);

	 This means that for most callers, the result is the same, but
	mutt_copy_header should be testing the flags because the caller
	might have set them explicitly without setting
	irt_changed/refs_changed.

	* parse.c, protos.h, send.c: Unify parser for message-ids

	Rewrite mutt_extract_message_id and change mutt_parse_references to
	us it. The parser in mutt_extract_message_id is looser than the old
	one in mutt_parse_references; it just looks for <[^\s>]+> and
	doesn't worry about @-signs. Additionally it doesn't use strtok, so
	the input string can be const.

	Closes #3090, #1935, #1116 (both the stated bug and the conversation
	following).

2008-08-11 16:42 +0200  Rocco Rutte  <pdmef@gmx.net>  (508ffc26dad2)

	* alias.c, doc/manual.xml.head, init.c: Prefer "backtick" over
	"backtic" on comments and docs as it's more common, closes #3101.

2008-07-27 10:48 -0400  Aron Griffis  <agriffis@n01se.net>  (3f595d14a285)

	* doc/manual.xml.head: doc: semi-colon needs quoting too

	If semi-colon is bound or macro'd, it needs to be quoted like space,
	otherwise mutt thinks it's separating commands.

	Signed-off-by: Aron Griffis <agriffis@n01se.net>

2008-07-21 10:24 -0400  Aron Griffis  <agriffis@n01se.net>  (96b0dd25a550)

	* copy.h, mutt.h: noop cleanup: move mutt_copy_header flags to copy.h

	Noticed while reading that these flags are better defined in copy.h
	than mutt.h. Builds without warnings.

	Signed-off-by: Aron Griffis <agriffis@n01se.net>

2008-07-24 16:19 -0400  Brendan Cully  <brendan@kublai.com>  (0e2f9189a1dd)

	* m4/codeset.m4, m4/iconv.m4: Fix m4 serial numbers to avoid
	aclocal 1.10 warnings

2008-07-21 11:42 +0200  Rocco Rutte  <pdmef@gmx.net>  (7e6d98886cce)

	* doc/makedoc.c: makedoc: Add ".ie" and ".il" to support itemized
	lists.

	Some settings docs use verbatim screen environments to print lists
	while support for real lists will make it look nicer: for docbook
	use <itemizedlist/>, \(hy for roff and '-' for text.

	* doc/manual.xml.head: Document that account-hook is intended for
	connection-related settings only

	* doc/manual.xml.head: Manual: Use tables for message flags as it's
	more compact

	* doc/manual.xml.head: Manual: minor formatting tweaks

	* alias.c, init.h: Encode lines written to $alias_file in
	$config_charset if set. Closes #3095

2008-07-10 09:38 -0400  Aron Griffis  <agriffis@n01se.net>  (7729b1ad530c)

	* copy.c, protos.h, sendlib.c: Unify mutt_write_references

	copy.c and sendlib.c have independent and different implementations
	of writing references to a file. Choose the one in sendlib since
	it's conservative with mallocs and supports trimming the list.

	Signed-off-by: Aron Griffis <agriffis@n01se.net>

	* copy.c: Clean up error handling in mutt_copy_header

	mutt_copy_header unnecessarily tests the result of each fputc/fputs
	(well, most of them anyway, it's not consistent). This obfuscates
	the code and hides bugs. Remove these extraneous checks since
	ferror/feof are checked at the bottom of the function, and get rid
	of all the early returns.

	Signed-off-by: Aron Griffis <agriffis@n01se.net>

2008-07-17 19:48 +0200  Rocco Rutte  <pdmef@gmx.net>  (f135d64e0082)

	* query.c: Cleanup unused vars changeset ba0d96408425 didn't
	remove

2008-07-11 11:34 +0200  Rocco Rutte  <pdmef@gmx.net>  (cc67b008038c)

	* doc/manual.xml.head: Mention that @ can be used in usernames in URLs

	* charset.c: Allow UTF-8 charset to be misspelled as "utf8"

	* mutt_ssl.c: Verify hostname in (Open)SSL certificate validation

	This is based on the patch by gkloepfer attached to #3087 but passes
	the proper connection as argument (avoiding adding hostname to
	struct sslsockdata) and validates the hostname even in case OpenSSL
	cannot find the local issuer certificate. GnuTLS already supports
	hostname checking. Closes #3087.

2008-07-10 22:02 +0200  Rocco Rutte  <pdmef@gmx.net>  (b9ac445b035b)

	* hcache.c: Prevent some pointers of 'struct body' being saved to
	hcache

	This addresses the hcache safety issue but maybe doesn't fix it
	completely, see #2942. This also prevents mutt from crashing when
	using a hcache that was synced when syncing the mailbox (updating
	changed and fully-parsed messages).

2008-07-10 21:46 +0200  Aron Griffis  <agriffis@n01se.net>  (6244eefaea64)

	* headers.c: Remove completely wrong comment regarding in-reply-to and
	references

	...plus fix one other comment and some whitespace.

2008-07-09 09:14 +0000  Rocco Rutte  <pdmef@gmx.net>  (2a9e9c487bad)

	* doc/mutt.man, main.c: Document redirection to trigger batch send
	mode in mutt(1) and mutt -h. Closes #2070.

2008-07-04 09:09 +0200  Ralf Wildenhues  <wildenhues@ins.uni-bonn.de>  (74b54f11c919)

	* protos.h: Fix syntax error for strtok_r compatitility prototype

2008-07-02 18:26 +0200  Vladimir Marek  <Vladimir.Marek@Sun.COM>  (f72fce68ca19)

	* lib.c: Use stat() instead of dirent->d_type to test for
	directory. Closes #3089.

2008-07-02 18:23 +0200  Rocco Rutte  <pdmef@gmx.net>  (7783502a04c7)

	* curs_main.c: Calculate menu->max after a possible resort in index
	(maybe changing number of messages). Closes #3088.

	* curs_lib.c: Fix casts for progress update to prevent -ftrapv
	aborts to trigger. Closes #3018.

2008-07-02 08:56 -0700  Brendan Cully  <brendan@kublai.com>  (c51c16db46cc)

	* crypt-gpgme.c: Only make LC_MESSAGES conditional on NLS in GPGME
	locale support.

2008-07-02 11:19 +0200  Rocco Rutte  <pdmef@gmx.net>  (8b783c916893)

	* browser.c, buffy.c, commands.c, compose.c, curs_main.c, enter.c,
	headers.c, hook.c, imap/imap.c, init.c, mbox.c, muttlib.c,
	postpone.c, protos.h, recvattach.c, send.c, status.c: Use
	realpath() in mutt_pretty_mailbox() for paths that may need
	it. This requires to add the buffer size as parameter since the
	result may be longer than the original but still fit in the
	buffer. Closes #2948.

	* hash.c: Use casts to avoid triggering integer overflow detection in
	hash function

2008-07-01 20:06 -0700  Vincent Lefevre  <vincent@vinc17.org>  (fb0df4ae0836)

	* ChangeLog, curs_lib.c: Clamp timeval math to unsigned int to match
	progress timestamps. This is fine since only relative differences
	matter. Closes #3018.

2008-07-01 18:29 -0700  Brendan Cully  <brendan@kublai.com>  (f9af0501d2dd)

	* crypt-gpgme.c: Set GPGME locale on first attempt to create context.
	Closes #2913.

	* crypt-gpgme.c, crypt-gpgme.h, crypt-mod-pgp-gpgme.c: Stub in a
	gpgme version of extract-keys. It doesn't currently work right
	because apparently while gpg on the command line can parse a whole
	message, we'll have to do it for gpgme. I really wonder about the
	'ME' part of GPGME sometimes.

	* crypt-gpgme.c, lib.c, lib.h: Support displaying application/pgp-keys
	with GPGME. This was pretty convoluted because GPGME provides no way
	to examine a key block without importing it. This code creates a
	temporary GPG home in which to import the key in order to display
	it.

	* crypt-gpgme.c, handler.c, pgp.c: Handle DONTHANDLEPGPKEYS in
	handler instead of crypto modules. This lets gpgme and classic pgp
	share a bit of logic, and unbreaks key extraction at least for
	classic PGP.

	* copy.c: Bail out of copy if decryption is requested but the desired
	engine is missing. This closes #2684, but handling of mixed crypto
	in a single message needs more investigation.

2008-07-01 01:10 -0700  rtc  <rtc@gmx.de>  (49fe0292b503)

	* copy.c: When deleting attachments, always print newline
	separating header from body. Closes #3085.

2008-06-29 01:09 -0700  Brendan Cully  <brendan@kublai.com>  (677e7712d735)

	* crypt-gpgme.c: Improve gpgme SMIME uid display: align each line by
	the length of the first.

	* crypt-gpgme.c: Show more information about problematic SMIME
	signatures under gpgme. Also warn if the key is not known to be
	good. For some reason expired keys in my environment are not
	flagged as expired in sig->status or sig->summary.

2008-06-28 20:33 -0700  Brendan Cully  <brendan@kublai.com>  (1492c24f2a4e)

	* mutt_ssl_gnutls.c: Extract CN from client certificate in gnutls.
	Nothing currently uses it, but I suspect we should be using it as
	the external auth name in mutt_sasl_client_new.

	* UPDATING, globals.h, init.h, mutt_sasl.c, mutt_ssl_gnutls.c:
	Basic support for $ssl_client_cert when compiled with
	gnutls. The key must not be encrypted. Closes #2911.

2008-06-27 12:04 -0700  Petr Písař  <petr.pisar@atlas.cz>  (40c6e851bf76)

	* po/cs.po: Updated Czech translation.

2008-06-26 12:52 -0700  Brendan Cully  <brendan@kublai.com>  (c5256c65eedb)

	* handler.c: Mark new error message for translation.

	* curs_lib.c: Force a resize event after calling an external editor.
	Closes #2207

	* lib.c, lib.h, mh.c: fflush before fsync and close. Closes #2962
	again.

	* mh.c: fsync maildir/mh messages on commit. Closes #2962.

2008-06-25 23:40 -0700  Brendan Cully  <brendan@kublai.com>  (32374c911c6c)

	* smime.c: Check S/MIME signing ID exists before attempting to use
	it. Closes #3069. Also make (s)ign automatically ask for a key if
	no default is defined.

	* init.h: Make $move default to no instead of ask-no. Closes #2945.

	* doc/manual.xml.head: Document difference between index and pager
	search. Closes #2886.

	* commands.c, copy.c, crypt-gpgme.c, handler.c, mbox.c, pgp.c: Make
	mutt_copy_message distinguish between fatal and non-fatal errors.
	Non-fatal errors should prevent moving messages, since they indicate
	data loss. But mutt should still attempt to display them, since
	being able to see some attachments is better than nothing. Also stop
	printing out non-PGP material in application/pgp attachments. Closes
	#2545, #2912.

2008-06-24 23:12 -0700  Brendan Cully  <brendan@kublai.com>  (f5fe657f0633)

	* handler.c: Make multipart decoding a little more
	forgiving. First, ignore bad content-transfer-encoding in
	multipart sections. Second, if an attachment fails to decode,
	print a warning and continue instead of giving up on the entire
	message.

1970-01-01 00:00 +0000  Brendan Cully  <brendan@kublai.com>  (a2e8f6fab8d3)

	* smtp.c: Test that envelope from or from is set before attempting
	SMTP delivery. Closes #3079.

2008-06-14 18:23 -0700  Christoph Berg  <cb@df7cb.de>  (4b790909a037)

	* doc/mbox.man: Document that From_ lines use asctime-style dates,
	not RFC2822 dates. Closes #3077.

2008-06-11 22:45 -0700  Alexey I. Froloff  <raorn@altlinux.org>  (1e8ca708a52f)

	* attach.c: Do not attempt to close invalid descriptors. Closes #3075

2008-06-05 13:06 +0200  Vladimir Marek  <Vladimir.Marek@Sun.COM>  (5ab92dd44ce2)

	* alias.c: Wrap Fqdn in NONULL() to prevent crash with -d5 if Fqdn
	is NULL

2008-06-02 09:45 +0200  Rocco Rutte  <pdmef@gmx.net>  (d6d04a7f5aea)

	* init.c: Allow for printing variable values longer than 256
	characters

	* rfc822.c: Allow for mail addresses longer than 256
	characters (closes #3066).

2008-05-30 16:14 +0200  Rocco Rutte  <pdmef@gmx.net>  (2f59be26ad22)

	* protos.h: Define prototypes for compatibility functions in protos.h
	to silence compiler warnings

2008-05-29 14:18 +0200  Rocco Rutte  <pdmef@gmx.net>  (bf74c85070c4)

	* menu.c: Respect $wrap_search in generic menu search (e.g.  for
	browser)

	* doc/Makefile.am: Only install mutt_dotlock(1) if binary is
	installed, too (closes #1601).

2008-05-28 22:22 -0700  Paul Walker  <paul@black-sun.demon.co.uk>  (f4259a92dab6)

	* doc/Muttrc.head: Make default muttrc header weeding
	tidier. Closes #286.

2008-05-23 01:40 -0400  Todd Zullinger  <tmz@pobox.com>  (73a180edce53)

	* pgp.c: Call mutt_need_hard_redraw() in pgp_decrypt_part().

	This change ensures that the screen is redrawn when using gpg-agent.
	Without this, mutt's navigation keybindings are lost after pinentry
	curses prompts for a passphrase to descrypt a message.

2008-05-28 22:16 -0700  Moritz Schulte  <moritz@g10code.com>  (7fd74c40eced)

	* curs_lib.c: Make sure that the redrawing/reinitializing is done
	always, not only when the environment variable DISPLAY is not set.

2008-05-28 22:05 -0700  Vladimir Marek  <Vladimir.Marek@Sun.COM>  (9d0509641865)

	* configure.ac, m4/iconv.m4: Cosmetic fix to configure
	--help. Closes #3060.

2008-05-28 21:44 -0700  Vincent Lefevre  <vincent@vinc17.org>  (7b8ef3b8ff5a)

	* po/fr.po: Updated French translation

2008-05-23 18:39 +0200  Rocco Rutte  <pdmef@gmx.net>  (8a3a037ec6b3)

	* UPDATING: UPDATING: fix 1.5.18 line as noted by Kyle Wheeler

2008-05-22 20:22 -0700  Brendan Cully  <brendan@kublai.com>  (96a01436f88b)

	* imap/command.c: Escape LSUB mailbox names given to
	mutt_parse_rc_line. Handle literals in STATUS responses for Notes
	compatibility.

2008-05-22 17:01 +0200  Rocco Rutte  <pdmef@gmx.net>  (d612ef757ee9)

	* configure.ac, m4/types.m4: Use C99 macros "PRId64"/"PRId32" to
	format file sizes/offsets if available. This fixes warning about
	mismatching int argument sizes on amd64.

	* init.h: Document that $check_mbox_size should be set before
	mailboxes commands

	* UPDATING: Mention requirement to encode X-Label: headers in
	UPDATING

2008-05-21 23:20 -0700  Rocco Rutte  <pdmef@gmx.net>  (bba92e401440)

	* imap/browse.c: Guard idata->mailbox read in imap_mailbox_state.
	Closes #3057.

2008-05-21 22:59 -0700  Piarres Beobide Egaña  <pi@beobide.net>  (51c494a2e735)

	* po/eu.po: Updated Basque translation.

2008-05-21 22:55 -0700  René Clerc  <rene@clerc.nl>  (e95a579cf5e4)

	* po/nl.po: Updated Dutch translation

2008-05-21 20:36 +0200  Rocco Rutte  <pdmef@gmx.net>  (1bdb7a7c3c8f)

	* buffy.c, buffy.h: Fix new mail detection for >2 GB mboxes with
	$check_mbox_size set

	* mbox.c, sendlib.c: Use ftello() instead of ftell() in more places
	that need it (fixes progress updates for >2 GB mbox files)

	* doc/manual.xml.head, init.h: Improve documentation for handling
	multiple folders and new mail detection

2008-05-20 17:08 +0200  Paul Walker  <paul@black-sun.demon.co.uk>  (a4d423798321)

	* parse.c: Fix more compiler warnings on amd64 by use of %p instead of
	%x

2008-05-19 09:52 -0700  Ivan Vilata i Balaguer  <ivan@selidor.net>  (38319cd7d832)

	* po/ca.po: Updated Catalan translation

2008-05-19 18:49 +0200  Vladimir Marek  <Vladimir.Marek@Sun.COM>  (8ac4b70221ee)

	* Makefile.am: Unbreak build with included gettext by explicitly
	removing libs for mutt_md5

2008-05-19 11:14 +0200  Rocco Rutte  <pdmef@gmx.net>  (85654735d27e)

	* UPDATING: Mention mime_lookup change in UPDATING

2008-05-19 10:59 +0200  Paul Walker  <paul@black-sun.demon.co.uk>  (d3fd07d0016c)

	* init.c: Use %p instead of %x to debug-print pointers (fixes warnings
	on 64bit platforms)

2008-05-19 10:56 +0200  Rocco Rutte  <pdmef@gmx.net>  (771276a3bace)

	* Makefile.am: hcversion.h depends on new mutt_md5 tool

2008-05-18 12:42 -0700  Roland Rosenfeld  <roland@spinnaker.de>  (4ef0fc2f8378)

	* po/de.po: Updated German translation

2008-05-17 19:31 -0700  Andreas  <Andreas Jobs>  (aaeee8f868c4)

	* crypt-gpgme.c: Fix GPGME S/MIME micalg generation, broken
	in [e6f958b093b6]. Closes #2994.

2008-05-17 18:34 -0700  Brendan Cully  <brendan@kublai.com>  (f9545d5ec15f)

	* doc/Muttrc.head: Add 'mime_lookup application/octet-stream' to the
	distributed Muttrc. Closes #2984.

	* .hgignore, Makefile.am, configure.ac, hcachever.sh.in,
	md5.c: Build local md5 tool for hcachever.sh. Closes #3025.

2008-05-17 12:39 -0700  Brendan Cully  <brendan@kublai.com>  (692b7c063bf1)

	* .hgsigs: mutt-1.5.18 signed

	* .hgtags: Added tag mutt-1-5-18-rel for changeset ff9e4d0464b1

	* ChangeLog, VERSION, po/bg.po, po/ca.po, po/cs.po, po/da.po,
	po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po, po/eu.po,
	po/fr.po, po/ga.po, po/gl.po, po/hu.po, po/id.po, po/it.po,
	po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po,
	po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po,
	po/zh_TW.po: automatic post-release commit for mutt-1.5.18

	* UPDATING: Update UPDATING.

	* imap/browse.c: Use context to get IMAP new message count in mailbox
	browser if possible.

2008-05-17 11:08 -0700  Rocco Rutte  <pdmef@gmx.net>  (b341d157ae72)

	* Makefile.am, hcache.c, hcachever.sh.in: When necessary, convert
	strings to utf-8 in the header cache. If iconv is unavailable,
	include the charset in effect as part of the cache file
	name. Closes #3023.

2008-05-16 09:24 +0200  Rocco Rutte  <pdmef@gmx.net>  (001d6be61905)

	* smime_keys.pl: Glob paths derived from mutt -Q output in
	smime_keys.pl. Patch by Fabrice Bellet and Miroslav Lichvar (closes
	#3020).

2008-05-15 17:29 +0200  Rocco Rutte  <pdmef@gmx.net>  (132474d6dd3b)

	* alias.c, protos.h: Make mutt_check_alias_name()
	multibyte-aware (closes #2403).

	* doc/manual.xml.head: Document exact address in the manual (closes
	#3050)

2008-05-14 16:23 -0700  Brendan Cully  <brendan@kublai.com>  (7f4711b9b61f)

	* alias.c: Ensure alias file ends with \n before appending new
	aliases. Closes #1580.

2008-05-14 15:19 +0200  Samuel Tardieu  <sam@rfc1149.net>  (5518355bc6da)

	* curs_main.c: Always update status bar after sorting method changes
	(closes #2120).

2008-05-12 23:15 -0700  Brendan Cully  <brendan@kublai.com>  (97aa20438c47)

	* imap/imap.c: Terminate open IMAP message sets at end of mailbox
	even if the last message is inactive. Closes #3002.

2008-05-11 10:52 +0200  Matthias Andree  <matthias.andree@gmx.de>  (09b0363cdf54)

	* rfc3676.c: In debug output, cast size_t arguments to long for
	consistency with printf %ld argument.

2008-05-11 00:50 -0700  Brendan Cully  <brendan@kublai.com>  (98c39c5187a9)

	* main.c: Update copyright in -vv output. Closes #3042.

2008-05-07 11:54 -0700  Brendan Cully  <brendan@kublai.com>  (385efdbf9423)

	* mutt_sasl.c, mutt_sasl.h: Make SASL support conn_poll method.
        Make SASL IP lookup failure non-fatal. Both are for tunnel support.

2008-05-05 19:32 +0200  Rocco Rutte  <pdmef@gmx.net>  (0eacf5297484)

	* mbyte.c, mbyte.h: Fix some compiler warnings if compiling without
	system wide character functions

	* mbyte.c, protos.h, utf8.c: Pass buffer size to mutt_wctoutf8()
	to prevent crashes if MB_LEN_MAX<6 as pointed out by exg on #mutt.

2008-04-29 10:44 -0700  David Champion  <dgc@uchicago.edu>  (1de934f1d618)

	* muttlib.c: [9414b9dd36db] broke softfill. (closes #3035)

2008-04-29 10:38 -0700  Wilfried Goesgens  <dothebart@uncensored.citadel.org>  (8017c8074f62)

	* imap/auth_gss.c: Print GSSAPI status messages to debug log on
	error.

2008-04-03 17:08 +0200  Miroslav Lichvar  <mlichvar@redhat.com>  (bdd44e92919d)

	* mutt_ssl_gnutls.c: Fix sending long commands when using gnutls.

2008-04-09 15:57 -0700  Dan Fandrich  <dan@coneharvesters.com>  (3b7b3c0e459e)

	* configure.ac, strtok_r.c: Replace strtok_r when it's not
	available. The implementation comes from glibc 2.6.1 (like the
	strsep replacement) and uses the same autoconf hooks.

2008-04-09 18:13 +0200  Christian Ebert  <blacktrash@gmx.net>  (ae90c8e8ea4d)

	* doc/manual.xml.head: manual.xml.head: grammar correction

2008-03-11 17:20 -0700  N.J. Mann  <njm@njm.f2s.com>  (e3bc99a4a6bd)

	* mbox.c, mh.c, pop.c: Respect ctx->quiet when initializing
	progress bar.

2008-03-09 14:01 -0700  Sébastien Hinderer  <Sebastien.Hinderer@ens-lyon.org>  (c4212a17fad6)

	* compose.c, mx.c: Remove pointless NULL checks against
	arrays. This silences a warning on newer GCCs.

2008-03-04 22:00 -0800  Petr Písař  <petr.pisar@atlas.cz>  (fdad7b9fa741)

	* po/cs.po: Updated Czech translation

2008-03-02 21:45 -0800  Vincent Lefevre  <vincent@vinc17.org>  (9a7d802004d3)

	* po/fr.po: Updated French translation.

2008-02-27 14:45 +0100  Rocco Rutte  <pdmef@gmx.net>  (553ae136f20e)

	* COPYRIGHT, main.c: Update copyright years in 'mutt -v' output and
	COPYRIGHT

2008-02-27 13:27 +0100  Anders Helmersson  <anders.helmersson.utsikt@wasadata.net>  (d2eb082fd872)

	* curs_lib.c: Fix progress updates for large messages. Closes #3029.

2008-02-27 09:30 +0100  N.J. Mann  <njm@njm.f2s.com>  (eb4e214c8ced)

	* status.c: Cleanup status_format_str()

2008-02-20 12:02 +0100  Rocco Rutte  <pdmef@gmx.net>  (9414b9dd36db)

	* muttlib.c: Fix truncation logic for soft-padding (Closes #3035).

2008-01-29 21:06 -0800  Brendan Cully  <brendan@kublai.com>  (fd741c1922f3)

	* hg-commit: Fix typo in hg-commit

2008-01-29 21:05 -0800  Benno Schulenberg  <i18n@benno.vertaalt.nl>  (95807c4b824f)

	* po/nl.po: Improvements to the Dutch translation

2008-01-17 17:32 +0100  Rocco Rutte  <pdmef@gmx.net>  (039d939d8c3e)

	* browser.h: Use 'unsigned int' for file browser state to browse huge
	dirs (closes #3017).

2008-01-15 17:46 +0100  Rocco Rutte  <pdmef@gmx.net>  (6e6e6c4bee59)

	* recvattach.c: Fix logic error in b3cde588fe9a commit

2008-01-15 17:34 +0100  Rocco Rutte  <pdmef@gmx.net>  (b3cde588fe9a)

	* recvattach.c: Prepend './' to (some) suggested filenames when saving
	attachments. Attachment filenames may start with characters that are
	special to mutt_expand_path() may cause undesired expansion. Closes
	#1719.

	* INSTALL, README: Update stale INSTALL+README files

	* mh.c: Make maildir_delayed_parsing() more readable

	* init.h: Mention that References: and Date: cannot be
	changed in editor (closes #1234).

	* UPDATING, globals.h, init.h, query.c: Make formatting of query menu
	configurable via $query_format (closes #170).

	* init.h: Link $timeout from $mail_check, see Debian #385456.

2008-01-14 23:00 +0100  Rocco Rutte  <pdmef@gmx.net>  (130aa0517251)

	* mh.c: Fix typo of in dae38f5ab2a5 commit

2008-01-14 22:54 +0100  Rocco Rutte  <pdmef@gmx.net>  (dae38f5ab2a5)

	* ChangeLog, mh.c: hcache: Fetch data for correct message from hcache.
	With $maildir_header_cache_verify set (the default), the list (and
	thus the current) header change after data was fetched from hcache
	making some message appear as duplicate. Now fetch data for the
	correct message after possible in-place inode sorting altering file
	order. See debian bug #459739.

	* hcachever.sh.in: hcache: use HEADER for version calculation too

2008-01-09 13:06 +0100  Rocco Rutte  <pdmef@gmx.net>  (2a5636080210)

	* configure.ac: Fix mutt_dotlock build issue on cygwin
	(closes #3009).

	* init.h: Mention $recall in description for $postpone

2008-01-02 11:47 -0800  Johan Svedberg  <johan@svedberg.com>  (3cf8bc21bc3d)

	* po/sv.po: Updated Swedish translation

2007-12-11 15:22 +0100  Rocco Rutte  <pdmef@gmx.net>  (68a9c3e74f9a)

	* doc/manual.xml.head: Manual: Update caching docs (hcache naming,
	maintenance)

	* pop.c: POP: Name hcache the way IMAP does. Place the file
	under $header_cache/<url>/mutt.hcache. For now ignore that this may
	break if hcache == bcache and a message's uid is "mutt.hcache"
	(extremely unlikely) in which case the user will loose only the
	hcache file.

	* pop.c: POP: Respect $message_cache_clean

	* doc/manual.xml.head: Manual: mention $time_inc in tuning chapter

	* enter.c, history.h: Maintain different history lists for
	files and mailboxes. Closes #2999.

	* history.c: Do not trust history file and mutt code about history
	class. This prevents crashes as result of programming errors and/or
	wrong history file (e.g. negative or too high classes).

2007-12-08 12:54 -0800  Michael Elkins  <me@mutt.org>  (3971bcfd9112)

	* mh.c: Skip over messages which were previously parsed after sorting
	the tail of the list. Avoids a segmentation fault when rescanning
	the new/ subdir of a maildir when messages were left over from a
	previous scan.

2007-12-07 11:38 -0800  Rocco Rutte  <pdmef@gmx.net>  (b891b1736885)

	* lib.c, md5.h: Check definition of ENOTSUP before use
	(closes #2983)

	* mh.c: Sort MH folders into natural order after 2nd pass (closes
	#463).

	* init.h: Mention subscribe and lists commands for
	$ignore_list_reply_to (closes #2996).

	* mx.c: Don't attempt to move messages when $mbox is unset.

2007-12-05 10:03 +0100  Rocco Rutte  <pdmef@gmx.net>  (63c97881cb76)

	* UPDATING, configure.ac, main.c, mh.c: Improve inode sorting,
	enable it by default and add MH support. Sorting is done on-demand
	only before the first stat() or open()
	($maildir_header_cache_verify=yes/hcache miss). Furthermore, only
	a partial list of messages starting from that item is sorted
	reducing sorting overhead in most cases. For a fully hcache'd
	folder with $maildir_header_cache_verify=no, no sorting is needed
	and no sorting will be done. MH parsing is now two-pass, too to
	simplify the code and remove duplication.

2007-11-30 10:29 +0100  Rocco Rutte  <pdmef@gmx.net>  (5c635c9b5982)

	* configure.ac: Add version numbers for bdb 4.6

	* parse.c, sendlib.c: RfC2047 decode/encode X-Label: header
	(Closes #2970).

	* commands.c: Format status line for external and internal pager the
	same way to make %P work

2007-11-29 16:03 +0100  Rocco Rutte  <pdmef@gmx.net>  (4899bcc1c2c3)

	* doc/db-cleanup.xsl: Add ascii-replacements for 0x2dc
	(tilde) and 0x2026 (...) too. The manual cannot be clean us-acii
	but now we should have at least latin1

	* doc/Makefile.am, doc/db-cleanup.xsl: Add a really ugly hack to make
	sure the plain text manual is us-ascii. The hack is filtering
	manual.html to another HTML file but replacing unicode chars by
	their ascii equivalents. The intermediate file is used to dump HTML
	to us-ascii text (and only for that).

	* hcache.c: Fix hcache build issue when building with gdbm if qdbm
	is installed, too

2007-11-21 13:19 +0100  Miroslav Lichvar  <mlichvar@redhat.com>  (9286a76e79a2)

	* send.c: Don't ignore $from in batch send mode.

2007-11-23 15:11 +0100  Rocco Rutte  <pdmef@gmx.net>  (12a1d843c975)

	* curs_lib.c: Don't attempt to print progress if inc is 0, just
	print initial message

2007-11-21 14:14 -0800  Ronny Haryanto  <ronnylist@haryan.to>  (0e99eaaecd67)

	* po/id.po: Updated Indonesian translation

2007-11-21 16:47 +0100  Rocco Rutte  <pdmef@gmx.net>  (309ab3a63d91)

	* UPDATING: Add UPDATING entry for $check_mbox_size

	* init.h: Clarify the description for $timeout

	* UPDATING: Remove raw utf-8 char in UPDATING to make it ascii
	again

2007-11-20 19:46 +0100  Rocco Rutte  <pdmef@gmx.net>  (96f931ae0b22)

	* doc/manual.xml.head, init.h: Document that save-hook/fcc-hook/fcc-
	save-hook use $index_format expandos. Closes #2135.

	* doc/manual.xml.head, pattern.c: Simple search: Allow
	[~+%] to be \-escaped. Closes #2426.

	* configure.ac, strsep.c: Add glibc implementation of strsep() in case
	a system misses it. Closes #2989.

	* lib.h, mbyte.c: Alternate fix for not calling
	bind_textdomain_codeset() to fix Solaris build.

2007-11-19 15:32 +0100  Rocco Rutte  <pdmef@gmx.net>  (033eba2d6834)

	* rfc3676.c: Make f=f handler multibyte-aware by not buffering flowed
	content until it's finished. We now write out content as we read it
	(which simplifies the code quite a bit) and properly flow multibyte
	paragraphs. This should improve DelSp=yes handling where a flowed
	paragraph may not have spaces at all except trailing ones for
	flowable paragraphs (after concatenating lines we didn't have access
	to the original break points any longer). We still split content by
	ASCII space (this should be safe as f=f itself uses ASCII space to
	mark flowable lines (even for languages that aren't expected to use
	spaces, see DelSp). Closes #862.

2007-11-15 13:17 +0100  Rocco Rutte  <pdmef@gmx.net>  (a0161768f631)

	* doc/makedoc-defs.h, doc/makedoc.c: Fix more documentation build
	issues. Define USE_SASL (for $smtp_authenticators) in makedoc-
	defs.h, include it in makedoc.c to force doc rebuild if makedoc-
	defs.h changes.

	* parse.c, protos.h, send.c: Properly parse and validate Message-IDs
	from my_hdrs. Closes #2452.

	* configure.ac: Check for bind_textdomain_codeset() outside libc,
	too.

2007-11-15 11:53 +0100  peb  <peb@mppmu.mpg.de>  (22c68faeec08)

	* lib.h: Don't use bind_textdomain_codeset() if we're not using
	NLS/gettext. Closes #2162.

2007-11-15 11:22 +0100  Rocco Rutte  <pdmef@gmx.net>  (933e57dff004)

	* doc/manual.xml.head: Properly document simple searches and its
	"secret" keywords. Closes #2136.

2007-11-13 13:31 +0100  Rocco Rutte  <pdmef@gmx.net>  (7a4a154eefa5)

	* wcwidth.c: Fix compiler warnings in new wcwidth.c (too large values
	for 'unsigned short')

	* hg-commit: hg-commit: Run 'make validate' in doc/ if manual.xml
	is present

	* doc/manual.xml.head, init.h: Document that %f in $index_format is
	either Return-Path: or From: depending on which parses correctly.
	Also note that alternates' regex should be as precise as possible to
	avoid mismatches. Closes #1894.

	* init.h: Properly document $hostname, link it to $use_domain and
	$hidden_host. Closes #891.

2007-11-07 14:54 +0100  Rocco Rutte  <pdmef@gmx.net>  (84284776659e)

	* Makefile.am, po/Makefile.in.in, po/POTFILES.in: Don't build
	keymap_alldefs.h in srcdir as it may be read-only

	* po/Makefile.in.in: Don't try to build $(PACKAGE).pot in srcdir as it
	may be read-only

2007-11-08 22:13 -0800  Michael Elkins  <me@mutt.org>  (4bba47e6d026)

	* doc/manual.xml.head: Removed the [!] prefix from the usage from the
	usage string for the un/mailboxes command since it has no special
	meaning in this context other than referring to $spoolfile.

2007-11-08 11:48 -0800  Brendan Cully  <brendan@kublai.com>  (daf29fe0ed4c)

	* UPDATING, curs_lib.c, globals.h, init.h: Add $time_inc to
	control progress update frequency. I found 250ms to be noticeably
	different from the old behaviour, and it ruins the rounding of the
	other _inc variables.

	* color.c, copy.c, imap/command.c: Turn down some debug logging
	levels

2007-11-08 09:03 +0100  Rocco Rutte  <pdmef@gmx.net>  (92a6bfbed657)

	* doc/Makefile.am: Add stamp-doc-rc to makedoc-all to build Muttrc
	with fresh checkout

2007-11-07 14:48 -0800  Brendan Cully  <brendan@kublai.com>  (b68ccc2e66e2)

	* curs_lib.c, mutt_curses.h: Suppress progress bar updates less than
	250ms apart. Closes #2899.

2007-11-07 12:12 -0800  Emanuele Giaquinta  <e.giaquinta@glauco.it>  (c62c5495d67c)

	* wcwidth.c: Updated wcwidth to Unicode 5.0

2007-11-07 12:03 +0100  Rocco Rutte  <pdmef@gmx.net>  (fce40f3a1aec)

	* Makefile.am, Muttrc.head, doc/Makefile.am, doc/Muttrc.head, doc
	/makedoc-defs.h, doc/makedoc.c, functions.h, init.h, makedoc-defs.h,
	makedoc.c: Try to fix parallel build problems by moving makedoc to
	doc/. This also requires to move Muttrc into doc/.

2007-11-06 16:34 -0800  Emanuele Giaquinta  <e.giaquinta@glauco.it>  (ac14b76ef8b2)

	* Makefile.am: Remove unnecessary workaround for automake
	dist target

2007-11-06 18:23 +0100  Rocco Rutte  <pdmef@gmx.net>  (1770ab532bfd)

	* curs_lib.c, imap/imap.c, imap/message.c, mbox.c, mh.c,
	mutt_curses.h, pattern.c, pop.c, pop_lib.c, smtp.c: Add
	percentages to progress bar optionally supplied by caller. This is
	necessary to let the mbox driver print useful percentages. If
	there's no percentage given and we have a size, calculate on it on
	our own.  Closes #2929.

	* mh.c: (Re-)Add total msg count to progress for parsing maildirs

2007-11-05 14:24 -0800  Vincent Lefevre  <vincent@vinc17.org>  (ecb694b6176b)

	* po/fr.po: Updated French translation

2007-11-05 17:47 +0100  Rocco Rutte  <pdmef@gmx.net>  (6b9e91edba54)

	* curs_lib.c: Save value of errno across mutt_endwin()
	calls. Mutt_endwin() is sometimes called after noticing an error
	but before printing the message via perror(). Closes #2965.

2007-11-05 15:53 +0100  Emanuele Giaquinta  <e.giaquinta@glauco.it>  (b8dc6926ddf4)

	* doc/manual.xml.head: Manual: Fix typo

2007-11-05 14:53 +0100  Rocco Rutte  <pdmef@gmx.net>  (ad7983699656)

	* doc/manual.xml.head: Manual: Improve [un]mailboxes
	documentation. Closes #2204.

2007-11-05 12:11 +0100  Ralf Wildenhues  <wildenhues@ins.uni-bonn.de>  (645fcdd66828)

	* configure.ac, intl/Makefile.in, po/Makefile.in.in: Optionally define
	$datarootdir on our own for autoconf <2.60 compatibility. While I'm
	at it, fix two warnings in other files about ignoring datarootdir
	with autoconf >2.60. Closes #2905.

2007-11-04 13:19 -0800  Vsevolod Volkov  <vvv@mutt.org.ua>  (dc5ec6dbb278)

	* po/ru.po: Updated Russian translation

2007-11-04 13:17 -0800  Ivan Vilata i Balaguer  <ivan@selidor.net>  (1f72281eb36c)

	* po/ca.po: Updated Catalan translation

2007-11-04 13:16 -0800  Roland Rosenfeld  <roland@spinnaker.de>  (b2f0d89881dd)

	* po/de.po: Updated German translation

2007-11-04 19:10 +0100  Rocco Rutte  <pdmef@gmx.net>  (02e8b9c7bdc6)

	* UPDATING: Fixup UPDATING for 1.5.16/1.5.17

2007-11-04 18:27 +0100  cypher  <cypher@conuropsis.org>  (ab676b9f0c04)

	* url.c: Use strtok_r() to parse mailto: links, not strtok(). In
	case a headers needs to call mutt_parse_references() which uses
	strtok(), too, later headers will be silently discarded.  Closes
	#2968.

2007-11-04 18:14 +0100  Rocco Rutte  <pdmef@gmx.net>  (6248b3c04f61)

	* main.c, url.c: Prevent mailto parsing buffer overflow by ignoring
	too long header. If they're longer than our buffer, we can't turn it
	into a header to be parsed by mutt_parse_rfc822_line() anyway, so we
	bail out in this case. Also make main() catchup mailto parsing
	errors. Closes #2980.

	* UPDATING: Add 1.5.17 to UPDATING

	* doc/manual.xml.head, init.h: Improve DSN docs (require sendmail-
	compatible MTA, add SMTP notes). Closes #2979

2007-11-03 11:12 +0100  Rocco Rutte  <pdmef@gmx.net>  (0c054faeb285)

	* muttlib.c: Check Maildir for not being NULL when expanding
	'='-paths. Closes #2977.

2007-11-02 16:55 -0700  Pawel Dziekonski  <dzieko@pwr.wroc.pl>  (cc5de08f4612)

	* po/pl.po: Updated Polish translation.

2007-11-01 20:36 -0700  Petr Pisar  <petr.pisar@atlas.cz>  (0b4bd0452b5a)

	* ChangeLog, po/cs.po: Updated Czech translation.

2007-11-01 15:45 -0700  Brendan Cully  <brendan@kublai.com>  (5123cded9988)

	* configure.ac: Use $datarootdir as default prefix for documentation
	(closes #2905)

2007-11-01 14:07 -0700  Brendan Cully  <brendan@kublai.com>  (cd03dff9b576)

	* VERSION, po/bg.po, po/ca.po, po/cs.po, po/da.po, po/de.po, po/el.po,
	po/eo.po, po/es.po, po/et.po, po/eu.po, po/fr.po, po/ga.po,
	po/gl.po, po/hu.po, po/id.po, po/it.po, po/ja.po, po/ko.po,
	po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po, po/ru.po, po/sk.po,
	po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po, po/zh_TW.po: automatic
	post-release commit for mutt-1.5.17

	* hg-commit: Fix typo in hg-commit

2007-11-01 21:21 +0100  Rocco Rutte  <pdmef@gmx.net>  (4f3814a57eaf)

	* INSTALL, UPDATING, rfc822.c: Unbreak exact address feature. The
	problem was that when reading back tempfiles for pager display,
	trailing \n were not removed from the input so the pager displayed 2
	instead of 1.

2007-11-01 12:13 -0700  Oswald Buddenhagen  <ossi@kde.org>  (8aebd2ea4db8)

	* configure.ac: Detect BDB automatically if --with-bdb is empty

2007-11-01 14:33 +0100  Rocco Rutte  <pdmef@gmx.net>  (80f1331abec2)

	* doc/devel-notes.txt: devel-notes.txt: Mention where hg repo is, how
	to clone and update

	* doc/TODO: Documentation: Add doc/TODO with some items still open

	* doc/manual.xml.head: Manual: s/SMTP support/SMTP Support/ (for
	consitency)

	* doc/manual.xml.head: Manual: Remove 404 link for fetchmail,
	mention getmail, too

	* doc/manual.xml.head: Manual: Add short section on SSL/TLS support
	(needs more details)

	* doc/manual.xml.head: Manual: Document URL syntax in just one place,
	let others refer to it.

	* doc/manual.xml.head: Manual: Document optional SMTP support

	* doc/manual.xml.head: Manual: Add some general notes about optional
	features. Mention 'configure --help' and 'mutt -v' output.

	* doc/Makefile.am, doc/manual.xml.head: Manual: Move POP3, IMAP and
	cache-related sections to their own chapter.

	* doc/manual.xml.head: Manual: Add ids to all tables and use <xref/>
	for reference.

2007-10-31 16:34 -0700  Brendan Cully  <brendan@kublai.com>  (7cebeacc3b83)

	* config.guess, config.sub, depcomp, install-sh, missing: Remove
	autotools support files which autoreconf -i can generate

	* Makefile.am, cvslog2changelog.pl: cvslog2changelog.pl is obsolete

	* doc/muttbug.man: s/Mercurial/hg/

	* doc/muttbug.man: s/cvs/Mercurial/

2007-10-31 14:09 -0700  rea-mutt  <rea-mutt@codelabs.ru>  (c6ce36a67121)

	* lib.c: Fall back to rename for ENOTSUP and EOPNOTSUPP
	too. Closes #2975

2007-10-31 14:04 -0700  Brendan Cully  <brendan@kublai.com>  (51595292e112)

	* imap/imap.c: Fix the test for flushing queued STATUS requests in
	imap_buffy_check. This should fix the bug that caused every other
	IMAP connection to fail to get the new message counts. Thanks to exg
	for his generous help debugging this one.

2007-10-25 17:03 +0200  Rocco Rutte  <pdmef@gmx.net>  (5d96f24efa85)

	* muttlib.c, protos.h: Large file support for mutt_pretty_size().
	Based on a patch by Corinna Vinschen, adjusted for LOFF_T/OFF_T_FMT
	(closes #2191).

	* UPDATING: Add UPDATING entry for %P for $pager_format

2007-10-18 10:20 +0200  Rocco Rutte  <pdmef@gmx.net>  (4e738d998bb3)

	* hdrline.c: Enlarge temporary buffer in hdr_format_str to prevent
	subject truncation. The subject along with the thread tree are
	composed using a SHORT_STRING-sized buffer which may lead to
	truncation even though the destination buffer is large enough.

2007-10-16 11:33 +0200  Rocco Rutte  <pdmef@gmx.net>  (c33f288c3aab)

	* doc/manual.xml.head: Manual: fix typo (closes #2971).

2007-10-15 11:01 +0200  Rocco Rutte  <pdmef@gmx.net>  (35e5c34b7e91)

	* rfc3676.c: f=f: Print standalone fixed lines as-is (closes #2917).

2007-10-11 12:10 +0200  Rocco Rutte  <pdmef@gmx.net>  (c15eeb44f139)

	* UPDATING, doc/manual.xml.head: Document format string
	pipes. This is roughly the commit message only. Add a line to
	UPDATING (mark it as a change rather than a new feature as it may
	break setups).

	* init.h: Document that $indent_string actually is a format string.

	* muttlib.c: Do not consider empty pipes for filtering in format
	strings. This fixes a crash with $indent_string="|" and
	$text_flowed unset.

2007-09-28 11:06 +0200  Rocco Rutte  <pdmef@gmx.net>  (709db707bcdf)

	* curs_lib.c, muttlib.c, protos.h: Make mutt_FormatString()'s string
	truncation multibyte aware

2007-09-19 12:22 +0200  Rocco Rutte  <pdmef@gmx.net>  (c768a1ebf78a)

	* menu.c: Enlarge buffers for printing menu entries from STRING to
	LONG_STRING. Now that multibyte padding works, we may too soon run
	into too short buffers for common terminal widths in graphical
	terminals.

	* compose.c: Use mutt_paddstr() to print compose menu's status line
	rather than printw(). All other menus use mutt_paddstr(): printw()
	prints only N bytes, not N columns.

2007-09-18 11:37 +0200  Rocco Rutte  <pdmef@gmx.net>  (5827331565a2)

	* init.h: Document that $charset is a fallback for $send_charset

2007-09-17 17:32 +0200  Rocco Rutte  <pdmef@gmx.net>  (ae47263fc1b0)

	* muttlib.c: Enable padding with multibyte chars for %>X, %*X and
	%|X

	* hcache.c, hcache.h, main.c: Include hcache backend version info
	in mutt -v output

	* init.c: Use NONULL to ensure we can pretty-print empty paths for
	option queries

2007-09-14 11:35 -0700  Emanuele  <Emanuele Giaquinta>  (c699e5847630)

	* ChangeLog, configure.ac: The new MD5 code needs AC_C_BIGENDIAN on
	big-endian systems

2007-09-13 09:39 -0700  Brendan Cully  <brendan@kublai.com>  (154417d57b9d)

	* configure.ac: Do not clobber --with-bdb argument (closes #2955)

2007-09-11 18:33 +0200  Rocco Rutte  <pdmef@gmx.net>  (785c95c8ff9a)

	* commands.c: Enlarge error buffer in mutt_enter_command() to not
	truncate option queries. The error buffer gets passed down into
	parse_set() using it to report option values. SHORT_STRING is too
	short to even print some defaults (e.g. $status_format).

	* muttlib.c: Let %*X padding share the same code of %>X padding The
	current implementation of %*X was completely multibyte-unaware and
	had buffer overflow issues with large terminals. Now we use the same
	code as %>X has and optionally only truncate left content to make
	sure the right content can be printed entirely.

2007-09-10 11:14 -0700  Vincent Lefevre  <vincent@vinc17.org>  (664c5ec1a727)

	* po/fr.po: Updated French translation.

2007-09-10 08:54 +0200  Rocco Rutte  <pdmef@gmx.net>  (49d69399cf21)

	* curs_lib.c, muttlib.c, protos.h: Make mutt_FormatString() more
	multibyte-aware As default cause, don't copy raw bytes but copy
	multibyte chars instead to ensure column computation is correct
	(needed for padding).

	* init.c: Escape option values for variable queries and completion
	to ensure they're parsable

2007-09-09 15:48 -0700  Andreas Jaggi  (4e9445a06369)

	* imap/imap.c: Let imap_complete_hosts work with the last mailbox
	(closes #2949). This was an off-by-one error in the mailbox loop.

2007-09-09 15:20 -0700  Julien Cristau  (7e60c2515318)

	* ChangeLog, mutt_ssl_gnutls.c: Only check whether GNUTLS error is
	fatal when an error occurs (closes #2954). The API for GNUTLS
	changed to require this in 1.7.18.

2007-09-08 15:30 -0700  Brendan Cully  <brendan@kublai.com>  (1e4a6efddc81)

	* prepare: autoreconf --include doesn't pass its argument to aclocal.
	Let ACLOCAL_AMFLAGS in Makefile.am handle that.

	* configure.ac: Attempt to clean up DB back-end selection

2007-09-06 20:13 +0200  Rocco Rutte  <pdmef@gmx.net>  (648ad3832e82)

	* muttlib.c: Rewrite padding logic for mutt_FormatString()

	Do so by checking columns and bytes individually to make sure we
	really don't write past the end of allocated buffers. This patch
	fixes all my crashes I saw with files attached to/with the settings
	for #2882 and #2900.

2007-09-05 10:52 +0000  Rocco Rutte  <pdmef@gmx.net>  (078744e84667)

	* init.c, pattern.c: Fix/improve intl error messages

	* browser.c: Interpret relative paths in browser relative to shown
	dir, not working dir (closes #2471).

	* help.c, pager.c, pager.h: Teach pager how to ignore $wrap and use it
	for help (closes #2896).

	* doc/manual.xml.head: Manual: make sure <screen/> contents in shorter
	than 80 chars

	Otherwise conversion to plain text may cause line breaks rendering
	examples syntacially invalid (closes #2185).

	* doc/manual.xml.head: Manual: don't use <screen/> to present
	structured data

	* muttlib.c: Fix buffer overflow in mutt_FormatString()

	The variable in question is supposed to track string sizes, not
	string widths (closes #2882 and #2900).

2007-09-04 17:22 -0700  Brendan Cully  <brendan@kublai.com>  (7df563e4b7fd)

	* configure.ac: Add libz to crypto libs if available
	(closes #2303).

2007-09-04 12:06 -0700  Ivan Vilata i Balaguer  <ivan@selidor.net>  (d9a6b3f8a492)

	* po/ca.po: Updated Catalan translation

2007-08-31 10:12 -0700  Gary  <Gary Johnson>  (791bfed8ba62)

	* editmsg.c: Decrement the mtime of the tempfile during
	edit-message to make mutt notice changes taking less than one
	second.

2007-08-28 11:33 -0700  Brendan Cully  <brendan@kublai.com>  (3f8829e739e9)

	* init.h: Insert .pp after .de to fix man page generation (closes
	#2940)

	* imap/imap.c: Check subscriptions after any authentication,
	rather than after fist connection (closes #2908)

	* dotlock.c, lib.h, mutt.h: Use limits.h for PATH_MAX instead of
	posix1_lim.h (closes #2525)

2007-08-27 11:07 -0700  Brendan Cully  <brendan@kublai.com>  (9cfb5ac98e26)

	* imap/auth_cram.c: Update auth_cram for new MD5 code
	(untested).

	* Makefile.am, configure.ac, hcache.c, md5.c, md5.h, md5c.c,
	pgppubring.c, pop_auth.c: Replace RFC md5 implementation with GPL
	version from coreutils

2007-08-16 09:32 -0700  Brendan Cully  <brendan@kublai.com>  (d096219907e7)

	* curs_lib.c: Check for lost tty if getch returns error (closes #1220)
	Great thanks to Vincent Lefevre for tracking this one down.

2007-08-15 20:09 -0700  Michael Vrable  <mvrable@cs.ucsd.edu>  (acd71f2f2555)

	* rfc3676.c: Fix RFC 3676 (format=flowed text) handling.

	The old code would consider a line containing "> " to be flowed, but
	since this is a quoted and space-stuffed line containing no
	additional text, by my reading of RFC 3676 it should be fixed.

	Clean up the handling of format=flowed text. Fix the test to
	determine whether a line is fixed--if a line ends in a space only
	because the last character is a space from space-stuffing, consider
	the line to be a fixed line. This makes the test for ((buf_len -
	buf_off) <= 0) later no longer necessary.

	Also simplify the code by removing checks for curline being non-
	null; it is allocated at the start of the function and never
	reallocated to size zero, so it should never be a null pointer.

2007-08-08 10:49 -0700  Kyle Wheeler  (6d3e90261321)

	* makedoc.c: Trim whitespace in definition lists for man pages (closes
	#2941).

2007-08-02 22:30 -0700  Brendan Cully  <brendan@kublai.com>  (aefdab8fad80)

	* init.h: Clarify the documentation for $use_envelope_from
	(closes #2936). Thanks to Vincent Lefevre for the suggestions.

2007-07-25 11:16 -0700  Vincent Lefevre  <vincent@vinc17.org>  (6bc60516fffa)

	* po/fr.po: Updated French translation.

2007-07-16 10:46 -0700  Brendan Cully  <brendan@kublai.com>  (bd75134a6b65)

	* enter.c: Make is_shell_char static. Closes #2907.

	* init.c: Check that spam expression has enough matches for its
	template. Closes #2927.

2007-07-14 17:26 -0700  Brendan Cully  <brendan@kublai.com>  (f4b2c6eba5fd)

	* crypt-gpgme.c: GPGME: do not attempt to extract signatures
	unless gpgme_op_verify returned success.

2007-07-09 11:32 -0400  Aron Griffis  <agriffis@n01se.net>  (4e8e3db418ea)

	* send.c: Allow send-hooks to effectively change $from and $use_from

	* mx.c: Clean up mx.c: init stat structs to zero

	prev_sb.st_size was initialized to zero if USE_FCNTL but not if
	USE_FLOCK. Silence the gcc warning for both cases by zeroing the
	stat structures on the stack.

	Other minor cleanups:
	- clean up some whitespace
	- convert return (foo) to return foo
	- return r at the bottom of the function instead of testing values and
	returning them explicitly
	- add vim modeline

2007-07-10 14:47 +0200  Thomas Roessler  <roessler@does-not-exist.org>  (c06e39893cce)

	* handler.c: Actually bail out, but wiht an ok return value.

	* handler.c: Don't bail out on a bad message/external-body!

2007-07-08 18:27 -0700  David Champion  <dgc@uchicago.edu>  (6241f5669264)

	* commands.c, curs_lib.c, doc/manual.xml.head, init.h, lib.h, menu.c,
	muttlib.c, query.c, recvcmd.c: This patch implements the "%* "
	notation, which is analogous to "%> " but gives precedence to the
	right side instead of to the left when the fill length is zero. The
	default $pager_format is updated to use it so that %P is always
	available at the edge of the screen.

2007-07-08 15:34 -0700  Edmund GRIMLEY EVANS  <edmund820@rano.org>  (5d74a79deeb3)

	* po/eo.po: Updated Esperanto translation.

2007-07-04 17:36 -0700  Brendan Cully  <brendan@kublai.com>  (f24fa301493f)

	* crypt-gpgme.c: Fix some compiler warnings in GPGME. Closes #2919.

	* crypt-gpgme.c: GPGME: Stop parsing message as soon as PGP header
	is found. Use file_to_data_object to build data for inline
	signature verification instead of doing it by hand. This fixes
	inline verification for me.

	TODO: crypt-gpgme helper functions seem to return lots of pointers
	off the stack in very dubious ways.

2007-06-27 10:38 -0700  Dan Fandrich  <dan@coneharvesters.com>  (3354ac2e79c7)

	* pager.c: Fix %P in pager status for off_t variability.

	* dotlock.c: remove a double inclusion of config.h

2007-06-14 18:17 -0700  Sertaç Ö. Yıldız  (55cd4cb611d9)

	* rfc3676.c: flowed: consider a single space as a hard line break.
	Closes #2906

2007-06-13 10:43 -0700  Vsevolod Volkov  <vvv@mutt.org.ua>  (8d02c65ed0b5)

	* po/ru.po: Updated Russian translation

2007-06-11 09:27 -0700  René Clerc  <rene@clerc.nl>  (5eaa1cfe80ad)

	* po/nl.po: Updated Dutch translation

2007-06-11 09:19 -0700  Petr Písař  <petr.pisar@atlas.cz>  (b9accd463528)

	* po/cs.po: Updated Czech translation.

2007-06-10 21:30 -0700  Pawel Dziekonski  <dzieko@pwr.wroc.pl>  (ef1882fe42f9)

	* po/pl.po: Updated Polish translation.

2007-06-10 21:27 -0700  Vincent Lefevre  <vincent@vinc17.org>  (156ce3622588)

	* po/fr.po: Updated French translation.

2007-06-10 09:55 -0700  Roland Rosenfeld  <roland@spinnaker.de>  (5a61c162b9c0)

	* po/de.po: Updated German translation

2007-06-09 21:08 -0700  Brendan Cully  <brendan@kublai.com>  (50b11beb4265)

	* build-release: Fix quoting for hg sign in build-release

2007-06-09 20:32 -0700  Brendan Cully  <brendan@kublai.com>  (aaf805734d24)

	* VERSION, po/bg.po, po/ca.po, po/cs.po, po/da.po, po/de.po,
	po/el.po, po/eo.po, po/es.po, po/et.po, po/eu.po, po/fr.po,
	po/ga.po, po/gl.po, po/hu.po, po/id.po, po/it.po, po/ja.po,
	po/ko.po, po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po, po/ru.po,
	po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po, po/zh_TW.po:
	automatic post-release commit for mutt-1.5.16

2007-06-09 20:26 -0700  Brendan Cully  <brendan@kublai.com>  (4b5b42ddfe42)

	* ascii.h, crypt-gpgme.c: Make GPGME backend generate a
	RFC3156-compliant micalg parameter (blush). Based on a patch by
	Stefan Haun. Closes #2901.

2007-06-09 01:03 +0200  Thomas Roessler  <roessler@does-not-exist.org>  (53e5e1105fd2)

	* sendlib.c: remove unnecessary dprints

	* sendlib.c: Fix header encoding corner case.

2007-06-05 13:12 -0700  pywatson  <pywatson@gmail.com>  (9e90789518ad)

	* sort.c: Make sort by "To" stable (closes #2515).  compare_to()
	calls mutt_get_name(), which may return a static pointer if it in
	turn calls mutt_addr_for_display(). If this static pointer is used
	for a and b, the result is bad. The fix is to make a copy of the
	first object.

2007-05-17 14:40 +0200  Christoph Berg  <cb@df7cb.de>  (edefe5e1f2b4)

	* Muttrc.head: Temporarily set pipe_decode in the \cb urlview macro.
	(Debian #423640.)

2007-05-28 16:44 -0700  Brendan Cully  <brendan@kublai.com>  (794b039bacaa)

	* Makefile.am, configure.ac, hcachever.sh, hcachever.sh.in:
	Use autoconf instead of "which" to discover MD5 tool

2007-05-20 00:29 -0700  Brendan Cully  <brendan@kublai.com>  (a0e038310f42)

	* smtp.c: Forget SMTP password if authentication fails.  Thanks to
	Gregory Shapiro for the initial patch (I've moved the reset from
	smtp_auth_sasl up to smtp_auth, and used the account API instead
	of twiddling account bits by hand). Closes #2872.

2007-05-15 21:05 +0200  Thomas Roessler  <roessler@does-not-exist.org>  (33af2883d52b)

	* curs_main.c: Jump to the next *sub*-thread when tag-subthread is
	invoked, not to the next thread.

2007-05-08 12:54 -0700  Rocco Rutte  <pdmef@gmx.net>  (763bd781d108)

	* rfc3676.c: f=f: flush buffer contents (if any) after reading input
	Otherwise mutt maybe won't show the last line if it's supposed to
	continue.

2007-05-07 11:50 -0700  Brendan Cully  <brendan@kublai.com>  (89a3e1c5c28b)

	* OPS, UPDATING, curs_main.c, functions.h: Rename next-folder to next-
	unread-mailbox. Remove default binding.

	* muttlib.c: Use signed arithmetic in mutt_gecos_name to avoid an
	overflow. Closes #2885.

2007-05-02 10:50 -0700  N.J. Mann  <njm@njm.f2s.com>  (f6861b85f22b)

	* OPS, curs_main.c, functions.h: Add next-folder command

2007-05-01 10:41 -0700  Brendan Cully  <brendan@kublai.com>  (1ed1cbc7bad4)

	* configure.ac: Make IDN depend on iconv support

2007-04-29 19:10 -0700  Alain Bench  <veronatif@free.fr>  (0e32bd00f341)

	* contrib/smime.rc, smime.c: contrib/smime.rc:
	$smime_verify_opaque_command fallback to -noverify to get signed
	text despite a failed -verify (but send only this first failure
	notice to stderr). smime.c: fflush() before rewind(). Closes #2428.
	Helps Debian Bug 420014

2007-04-24 17:51 -0700  Vincent Lefevre  <vincent@vinc17.org>  (a58527ead950)

	* po/fr.po: Updated French translation.

2007-04-24 14:08 -0700  Michael Elkins  <me@mutt.org>  (21c7e172030f)

	* remailer.c: fixup for mutt_FormatString() changes

2007-04-23 12:12 -0700  Michael Elkins  <me@mutt.org>  (1bae5dcd7292)

	* crypt-gpgme.c: Fix compilation error related to change in
	mutt_FormatString()

2007-04-21 13:05 -0700  Brendan Cully  <brendan@kublai.com>  (4c70812b3104)

	* pgp.c: Use PGP_SECRING to find PGP signing keys. Closes #2878.

2007-04-21 13:00 -0700  Piarres Beobide Egaña  <pi@beobide.net>  (2b97fdbd6ce1)

	* po/eu.po: Updated Basque translation.

2007-04-15 15:43 -0700  Michael Elkins  <me@mutt.org>  (cb9bef17b3a8)

	* hdrline.c, init.h, pager.c, protos.h: Removed hardcoded pager
	progress indicator and add %P format code to $pager_status which
	contains the same information.

	Append "%> -- (%P)" to $pager_status to emulate old behavior.

	Closes #2087.

	* browser.c: merge with tip

2007-04-11 22:36 -0700  Michael Elkins  <me@mutt.org>  (0c47f7b06158)

	* addrbook.c, browser.c, compose.c, hdrline.c, muttlib.c, pgpinvoke.c,
	pgpkey.c, protos.h, recvattach.c, smime.c, status.c: Pass column
	value recursively when expanding format strings (bug #2840).

2007-04-13 14:14 -0700  Brendan Cully  <brendan@kublai.com>  (021f494d5154)

	* browser.c: Strip / from tail of LastDir when copying from
	Maildir (closes #1885)

	* doc/Makefile.am: Allow elinks for building manual.txt (closes #2876)

	* sendlib.c: Even simpler header wrapping fix

	* sendlib.c: Fix header wrapping

2007-04-12 20:11 -0700  Brendan Cully  <brendan@kublai.com>  (c9e92a1d71cf)

	* mh.c: Differentiate between first and second maildir passes in
	progress indicator

	* mh.c: Only call mutt_set_flag when necessary when checking for
	maildir changes (fixes #1216)

	* flags.c: Only update header color in mutt_set_flag if flag has
	changed (see #1216, #1931)

	* init.h: Make $header_cache_compress default to set

	* imap/message.c: Simplify IMAP message fetch loop slightly

	* imap/message.c: Handle a missing or corrupted header cache entry
	(closes #2676) If imap_hcache_get fails, stop parsing the header
	cache and simply refetch from that point on.

2007-04-11 14:19 -0700  Paul Eggert  <eggert@CS.UCLA.EDU>  (ac7355452a60)

	* configure.ac, muttbug.sh.in: Make mutt more posixly-
	correct (closes #1615).

2007-04-11 14:06 -0700  Brendan Cully  <brendan@kublai.com>  (5393c104e08a)

	* mkchangelog.sh: Remove un-POSIX TZ NOOP in mkchangelog.sh (see
	#1615)

	* account.c, globals.h, init.h: Add $smtp_pass (closes #2116)

	* doc/Makefile.am: Explicit -j1 breaks some versions of make (see
	#2538)

	* imap/util.c: Make imap_hcache_open robust against missing
	idata->ctx

	* imap/util.c: Do not attempt to parse idata->ctx->path if an explicit
	path is given

2007-04-10 20:22 -0700  Brendan Cully  <brendan@kublai.com>  (429fb67340cd)

	* UPDATING, imap/imap.c, imap/imap_private.h, imap/message.c,
	init.h, mutt.h: Add $message_cache_clean option to prune message
	cache on sync

	* hcache.c: Try to unlink old header cache if open fails

	* bcache.c, imap/imap.c, imap/util.c, lib.c: Fix some warnings

	* hcache.c: Refactor mutt_hcache_open to share more code

	* hcache.c: Save some stats when header cache already exists

	* hcache.c, imap/imap.c, imap/imap_private.h, imap/message.c,
	imap/util.c: Make IMAP header cache layout match body cache. You can
	now make them point to the same directory. Each folder will have a
	folder.hcache file for the header cache.

	* hcache.c, hcache.h, imap/imap.c, imap/util.c, mh.c, pop.c: Add
	hcache path name hook

	* bcache.c, url.c, url.h: Simplify body cache path creation

	* imap/imap.c, imap/imap_private.h, imap/message.c, imap/util.c:
	Do not hold hcache open while mailbox is open - it can lead to
	lockups

	* imap/command.c, imap/imap.c, imap/imap_private.h, imap/util.c: Add
	imap_hcache_del; minor cleanups

	* main.c: Fix a compiler warning

	* rfc3676.c: Don't use $indent_string to quote replies to flowed
	messages (closes #2874).

2007-04-10 10:16 -0700  Petr Písař  <petr.pisar@atlas.cz>  (af01580c9a08)

	* po/cs.po: Updated Czech translation

2007-04-10 10:13 -0700  Brendan Cully  <brendan@kublai.com>  (9bbf304e09bc)

	* rfc3676.c: Wrap flowed lines at no more than FLOWED_MAX in
	replies

2007-04-09 20:36 -0700  Michael Elkins  <me@mutt.org>  (fbe67329e688)

	* main.c: Exit with a nonzero value if sending a message in batch mode
	fails (bug #2709).

	* browser.c: Use mutt_pretty_size() to format '%s' in $folder_format
	so it is similar to '%c' in $hdr_format

2007-04-09 11:32 -0700  Brendan Cully  <brendan@kublai.com>  (df7a0ee95618)

	* imap/TODO: Kill off some IMAP TODO items

	* imap/imap.c: Null out idata->hcache when closing, and remove close
	from open failure (mx_close will handle it).

2007-04-09 08:56 -0700  Vsevolod Volkov  <vvv@mutt.org.ua>  (605c6d60217d)

	* po/ru.po: Updated Russian translation.

2007-04-07 16:22 -0700  Michael Elkins  <me@mutt.org>  (c310dd3d6d73)

	* hook.c, pattern.c: Allow reply-hook to use ~h when replying from the
	index. Fixes regression introduced by fix for bug #2190.
	mutt_pattern_exec() now checks for ctx!=NULL so that Mutt will no
	longer segfault when replying to a message from the attachment menu.

2007-04-07 16:20 -0700  Fabian Groffen  <grobian@gentoo.org>  (1c9db84ed54f)

	* imap/message.c, muttlib.c: Fix compiler aliasing warnings

	* hcache.c: Fix compiler warnings

2007-04-07 16:05 -0700  Jukka Salmi  <jukka@salmi.ch>  (ef35baf2a2d0)

	* configure.ac: Fix BDB autoconf buglet introduced in
	[3638701db407]

2007-04-07 15:21 -0700  Michael Elkins  <me@mutt.org>  (70e637e40943)

	* enter.c: add "|" to the list of shell chars

	* enter.c: "complete" function should consider shell chars to be word
	boundaries when doing filename completion (bug #2871)

	* complete.c, lib.c, lib.h: bug #2871

	Avoid altering the argument to mutt_complete() when completion
	fails. Previously, the trailing component of filename was removed
	each time the user pressed TAB.

2007-04-07 14:32 -0700  Fabian Groffen  <grobian@orakel.ods.org>  (eed43900f612)

	* copy.c: Fix some compiler warnings

2007-04-07 13:40 -0700  Brendan Cully  <brendan@kublai.com>  (980949218b09)

	* regex.c: Fix compiler warnings

	* smtp.c: Mark error message for translation

2007-04-06 18:03 -0700  Vincent Lefevre  <vincent@vinc17.org>  (1ab836e94c70)

	* po/fr.po: Updated French translation

2007-04-06 14:00 -0700  Brendan Cully  <brendan@kublai.com>  (cde224ad2662)

	* UPDATING: Update UPDATING

	* build-release: More build-release fixes

	* .hgsigs: mutt-1.5.15 signed

	* .hgtags: Added tag mutt-1-5-15-rel for changeset 4fd2d768fe5c

	* VERSION, po/bg.po, po/ca.po, po/cs.po, po/da.po, po/de.po,
	po/el.po, po/eo.po, po/es.po, po/et.po, po/eu.po, po/fr.po,
	po/ga.po, po/gl.po, po/hu.po, po/id.po, po/it.po, po/ja.po,
	po/ko.po, po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po, po/ru.po,
	po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po, po/zh_TW.po:
	automatic post-release commit for mutt-1.5.15

	* build-release: More minor build tweaks

	* Makefile.am, build-release, mkchangelog.sh: Fix up release
	scripts for Hg

	* lib.c: safe_rename: fall back to rename on ENOSYS and EPERM as well
	as EXDEV. sshfs returns ENOSYS when attempting cross-directory
	links. vfat returns EPERM.

	* lib.c: Make safe_open with O_EXCL friendlier for NFS. Per #2707,
	when an open file is moved into a different directory over NFS, it
	may leave a .nfsXXX hardlink behind. This causes the rmdir in
	safe_open to fail, leaving tempdir droppings around. This patch
	works around the problem by closing the file after creating it and
	reopening it after rename.

2007-04-05 21:38 -0700  Michael Elkins  <me@mutt.org>  (177c060504bb)

	* configure.ac, hcache.c: Fixup to detect qdbm includes in
	/usr/include/qdbm.

	Remove HAVE_QDBM_VILLA_H because it is redundant.

2007-04-05 19:22 -0700  Brendan Cully  <brendan@kublai.com>  (ee0fabbde466)

	* configure.ac, hcache.c: Fix up QDBM autoconf test for arguments
	and includes in subdirectories

	* imap/message.c: Fix logic error introduced in [efbcef81ac49]

	* hcache.c: Fix typo in 26b19fc9b78c

	* imap/imap_private.h, imap/message.c, imap/util.c: IMAP header cache
	API improvements.

	* imap/imap.c, imap/imap_private.h, imap/message.c, imap/util.c:
	Keep hcache pointer in idata, open and close with mailbox

	* hcache.c: Do not cache some unsafe header fields.

	* imap/message.c, mh.c: Small hcache-related memory leaks

	* hcache.c, mh.c: Fix mh header caching (closes #2472)

	* configure.ac: Teach --with-gdbm to accept a prefix (closes #2413)

	* hcachever.sh: POSIX fixes for hcachever.sh

2007-04-05 13:06 -0700  Jukka Salmi  <j+mutt@2007.salmi.ch>  (3638701db407)

	* configure.ac: Check for BDB4 libs in $lib as well as
	$lib/$ver (fixes pkgsrc BDB4 detection)

2007-04-05 12:55 -0700  Brendan Cully  <brendan@kublai.com>  (4f435337507e)

	* Makefile.am, hcache.c, hcachever.sh: Version header cache against
	MD5 of structures on which it depends

	* UPDATING, globals.h, imap/browse.c, imap/imap_private.h, init.h:
	Remove broken namespace support

2007-04-04 16:31 -0700  Brendan Cully  <brendan@kublai.com>  (e96bd1f85634)

	* imap/command.c: Only reset UIDNEXT if new mail has been detected.
	This prevents mutt from suddenly finding new mail when switching
	from unknown UIDVALIDITY to known.

2007-04-04 09:37 -0700  Fabian Groffen  <grobian@orakel.ods.org>  (330cb15403f0)

	* configure.ac: Check for Berkeley DB versions 4.4 and 4.5

2007-04-04 01:35 +0200  Christoph Berg  <cb@df7cb.de>  (b841df908929)

	* cryptglue.c: Fix typos in CRYPT_BACKEND #ifs.

2007-04-03 14:08 -0700  Christoph Berg  <cb@df7cb.de>  (339fd21bf139)

	* doc/manual.xml.head, doc/mutt.man, main.c: When -- is present in
	the argument list, allow attachment globs. The -- separates file
	names from recipients. Also works for -A and -Q.

2007-04-03 10:54 -0700  Fabian Groffen  <grobian@orakel.ods.org>  (89abe8bd0713)

	* hdrline.c, imap/message.c, mh.c, muttlib.c, regex.c, sendlib.c: Fix
	some warnings.

2007-04-03 08:59 -0700  Brendan Cully  <brendan@kublai.com>  (e363d7a69046)

	* pop_auth.c, rfc822.c, rfc822.h: Validate msgid in APOP
	authentication. Closes #2846

	* hcache.c: Fix DB4 crash introduced in d5ab883ef90a

	* imap/util.c: Add missing hcache.h include

2007-04-02 20:44 -0700  Brendan Cully  <brendan@kublai.com>  (59fcc37f8c75)

	* sendlib.c: Check message for boundary collisions (closes #902)

	* enter.c: Do not clobber string field on keypress when returning
	from file browser (closes #755)

	* browser.c, browser.h, imap/browse.c, imap/imap.h: Add hook for
	proper IMAP unseen count in mailbox browser

2007-04-02 18:41 -0700  David Yitzchak Cohen  <lists+mutt_bugs@bigfatdave.com>  (503c2882d0be)

	* muttbug.sh.in: flea: produce mutt version info in C
	locale (closes #1881)

2007-04-02 18:17 -0700  John Hawkinson  <jhawk@mit.edu>  (a283e5ab5de7)

	* sendlib.c: Write Sender header if specified (closes #2682)

2007-04-02 17:56 -0700  Brendan Cully  <brendan@kublai.com>  (15f8a55220a7)

	* mh.c: Fix off-by-one allocating mh sequences

	* curs_lib.c: Make mutt_edit_file display error if editor return is
	non-zero. (closes #1638)

	* imap/command.c: Reset uidnext unconditionally in IMAP new mail
	check. Reverts a logic error introduced in [0cb476dc70a7]

	* imap/imap.c, imap/imap_private.h, imap/message.c, imap/util.c: Fix a
	segfault in the new mboxcache hcache lookup. idata may not have an
	associated context, so the cache path must use the account info
	instead. For harmony with the other hcache callers, make them all
	canonify the path the same way with imap_hcache_open.

	* imap/imap.c: Fix segfault in new mboxcache hcache check when
	create is 0

	* imap/command.c, imap/imap.c, imap/imap_private.h, imap/message.c:
	Add create flag to imap_mboxcache_get

	* imap/command.c, imap/imap.c: Push mbox cache header cache check
	into imap_mboxcache_get

	* imap/imap.c: Cache IMAP access checks

2007-04-01 23:12 -0700  Brendan Cully  <brendan@kublai.com>  (4f598543d7a5)

	* imap/imap.c, imap/message.c: Adjust context->size on IMAP load
	and expunge (closes #2749)

2007-04-01 20:00 -0700  Ambrose Li  <a.c.li@ieee.org>  (38e896c4c192)

	* po/zh_TW.po: Updated Taiwanese translation

2007-04-01 15:40 -0700  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (6dcb53bc679c)

	* crypt-gpgme.c: gpgme: check result for signatures pointer
	(closes: #2199)

2007-04-01 15:33 -0700  Brendan Cully  <brendan@kublai.com>  (3a81b3793f77)

	* doc/muttbug.man: Update flea man page to current addresses

	* muttbug.sh.in: Adjust flea to use new submission address; check
	email for @

	* doc/muttbug.man, muttbug.sh.in: Restore muttbug

2007-03-31 18:50 -0700  Brendan Cully  <brendan@kublai.com>  (f467353f5657)

	* bcache.c, bcache.h, imap/message.c, pop.c, pop.h: Add tmp flag
	to bcache_put, create bcache_commit.

	* imap/command.c, imap/imap.c: Allow IMAP FCC to reconnect if
	append fails (closes: #890)

	* mh.c: Always set up data pointer in mh_read_dir, not just when
	allocating context

2007-03-30 21:26 -0700  Daniel Burrows  <dburrows@debian.org>  (d5ab883ef90a)

	* hcache.c: Fix handling of DB4 hcache open failure. (closes: #2714)

2007-03-30 20:18 -0700  Brendan Cully  <brendan@kublai.com>  (dc54ae48d8c1)

	* mh.c: Set mode of new mh/maildir messages to match parent
	directory.

	* mh.c, mutt.h: Move mtime_cur from CONTEXT to mh_data

	* imap/imap.c, imap/imap.h, mh.c: Add close hook for
	mh/maildir. stat the directory on open. Make IMAP close function
	match prototype.

	* imap/imap.c, mutt.h, mx.c, pop.c: Add function pointer for close
	hook in Context. Slowly inch towards function pointers instead of
	switch statements.

	* imap/command.c, imap/imap.c: Use RECENT for first mailbox
	check if header cache check fails

	* imap/command.c: Consult header cache if available for last known new
	mail count. This prevents mutt from announcing new mail in mailboxes
	that have unseen, but not new, messages, if those mailboxes are in
	the header cache.

2007-03-29 21:08 -0700  Brendan Cully  <brendan@kublai.com>  (359d9fbb5fda)

	* sendlib.c: Do not page sendmail error in batch mode.
	(closes: #2800)

2007-03-29 15:53 -0700  Rocco Rutte  <pdmef@gmx.net>  (798a40b0a9da)

	* rfc3676.c: f=f handler: Re-add space between quotes and text

2007-03-29 15:47 -0700  Brendan Cully  <brendan@kublai.com>  (51d13afbf24b)

	* doc/Makefile.am: Make -j2 in doc work (closes: #2538)

2007-03-29 15:23 -0700  Christoph Berg  <cb@df7cb.de>  (0514e6b5a67a)

	* init.c, init.h: Use ~/.muttrc as the default alias_file if no user
	muttrc exists. Makes the code agree with the documentation. Document
	that default is actually the used muttrc. (Closes Debian #226500.)

2007-03-29 10:30 -0700  Brendan Cully  <brendan@kublai.com>  (034ad0e55397)

	* bcache.c, bcache.h, imap/message.c: Make message cache write to
	temporary location until file is complete. Previously mutt trusted
	the cache file even when it was incomplete, causing permanently
	incorrect message display if the fetch was interrupted for some
	reason.

2007-03-28 09:43 +0200  Thomas Roessler  <roessler@does-not-exist.org>  (25cbd5588d35)

	* alias.c: Fix debug message for mutt_adr_is_user

2007-03-23 10:32 -0700  Brendan Cully  <brendan@kublai.com>  (888a57a2b5f2)

	* imap/browse.c: Reset list.name before each list response in
	folder browser

2007-03-22 14:36 +0100  Thomas Roessler  <roessler@does-not-exist.org>  (68cfab02b411)

	* curs_main.c: Fix update_index().

2007-03-21 11:29 -0700  Brendan Cully  <brendan@kublai.com>  (a6da24788400)

	* .cvsignore, Muttrc.head.in, configure.in, contrib/.cvsignore,
	doc/.cvsignore, imap/.cvsignore, init.h, intl/.cvsignore,
	m4/.cvsignore, mx.c, po/.cvsignore: Merge $umask backout

2007-03-21 11:26 -0700  Brendan Cully  <brendan@kublai.com>  (b9c0a75de5c0)

	* attach.c, globals.h, init.c, init.h, lib.c, mh.c, mx.c: Back out
	$umask.

2007-03-16 15:37 +0100  Christoph Berg  <cb@df7cb.de>  (f806a3eb59a8)

	* sendlib.c: Use execvp to call sendmail, useful for people trying
	sendmail="ssh host sendmail".

2007-03-21 10:08 -0700  Christoph Berg  <cb@df7cb.de>  (92a0a184005d)

	* Makefile.am, doc/Makefile.am, doc/gen-map-doc, doc/manual.xml.tail,
	functions.h, init.h, makedoc-defs.h: Pipe functions.h through cpp -C
	for the manual generation; factor out makedoc-defs.h from init.h for
	use in functions.h.

2007-03-21 09:29 -0700  Rocco Rutte  <pdmef@gmx.net>  (6216dd07b6be)

	* configure.ac: configure.ac: Make SSL tests for OpenSSL and gnutls
	behave the same For both this now mentions SMTP as a possible SSL
	user and also turns the error for configuring with gnutls without
	POP/IMAP/SMTP into a warning as the OpenSSL part does.

2007-03-20 13:39 -0700  Miroslav Lichvar  <mlichvar@redhat.com>  (b0172175cc89)

	* UPDATING, buffy.c, buffy.h, commands.c, configure.ac, init.h,
	main.c, mutt.h, mx.c: Make BUFFY_SIZE a runtime switch
	($check_mbox_size)

2007-03-20 13:17 -0700  Rocco Rutte  <pdmef@gmx.net>  (2fbc65f3feb6)

	* addrbook.c, browser.c, compose.c, crypt-gpgme.c, curs_main.c,
	mutt_ssl.c, mutt_ssl_gnutls.c, pgpkey.c, postpone.c, query.c,
	recvattach.c, remailer.c: Enlarge help string buffers Even on 80x25
	terminals, SHORT_STRING (128 byte) may not be enough so use
	LONG_STRING (1k) as STRING (256 byte) may well be too short for
	wider terminals. Closes debian #4152777.

2007-03-20 09:45 -0700  Antoine Reilles  <tonio@NetBSD.org>  (f0461517fc93)

	* muttlib.c: Remove trailing slash from $folder in
	mutt_expand_path.

2007-03-20 08:20 -0700  Rocco Rutte  <pdmef@gmx.net>  (3122a4a338b1)

	* rfc3676.c: Make f=f handler behave like old f=f handler for quoted
	lines Now lines containing quote characters but no further content
	appear as quoted lines again for making replies. Also, the spaces
	between quotes and text are removed to make output look as it did
	for the old handler.

2007-03-19 08:12 -0700  Rocco Rutte  <pdmef@gmx.net>  (5681216fa395)

	* doc/manual.xml.head: Manual: f=f messages are text/plain, not "plain
	ASCII"

2007-03-16 11:21 -0700  Michael Elkins  <me@mutt.org>  (aa96e6137c69)

	* imap/imap.c: Fixed segfault when attempting to open an imaps mailbox
	when mutt is not configured with SSL support.

2007-03-16 09:39 -0700  Brendan Cully  <brendan@kublai.com>  (08f9bb4b7810)

	* configure.ac, configure.in: Move configure.in to configure.ac

2007-03-15 16:29 -0700  Brendan Cully  <brendan@kublai.com>  (4ade0c9660d5)

	* Makefile.am: Add reldate.h to BUILT_SOURCES

2007-03-15 16:10 +0100  Christoph Berg  <cb@df7cb.de>  (ed804d94676a)

	* Makefile.am: Remove reldate.h from EXTRADIST to fix out-of-tree
	builds from tarballs (and remove some stray tabs).

	* contrib/gpg.rc: Remove absolute paths.

	* doc/Makefile.am: Pull release date directly from Changelog.

2007-03-15 09:23 -0700  Brendan Cully  <brendan@kublai.com>  (e648206c02e2)

	* .cvsignore, contrib/.cvsignore, doc/.cvsignore, imap/.cvsignore,
	intl/.cvsignore, m4/.cvsignore, po/.cvsignore: Remove .cvsignores

2007-03-15 08:48 -0700  Rocco Rutte  <pdmef@gmx.net>  (836822cc1260)

	* doc/manual.xml.head, doc/muttrc.man.head, init.h: Document
	pattern groups in the manual Sync with muttrc. Add some rationale
	for groups. Fix some style issues. Fix quoting issue with
	$smtp_authenticators.

2007-03-14 23:03 -0700  Kyle Wheeler  <kyle@memoryhole.net>  (fa6128cf9cba)

	* doc/muttrc.man.head: Improved pattern documentation
	(group/ungroup)

2007-03-14 22:29 -0700  Brendan Cully  <brendan@kublai.com>  (af1fc17674bc)

	* mbyte.h: Undefine mbyte macros before overriding them (#2820)

	* hg-commit: Let user review ChangeLog after hg-commit writes it

2007-03-15 02:12 +0100  Christoph Berg  <cb@df7cb.de>  (460713774c5b)

	* doc/Makefile.am: Add gen-map-doc to EXTRADIST, call using perl in
	srcdir, fix makedoc rules.

	* doc/Makefile.am, doc/gen-map-doc, doc/manual.xml.tail, functions.h:
	Generate menu binding documentation from functions.h and OPS*.

2007-03-14 14:45 -0700  Brendan Cully  <brendan@kublai.com>  (35b8facdbdda)

	* imap/command.c, mutt.h: Update IMAP ACL parser to recognize RFC
	rights

	* contrib/Makefile.am, contrib/mutt_xtitle, muttlib.c: Add demo
	mutt_xtitle script

	* muttlib.c: Remove trailing newlines from fmtpipe return value.
	Increase fmtpipe logging level to 3.

2007-03-14 13:49 -0700  David Champion  <dgc@uchicago.edu>  (63ad6be01750)

	* mutt.h, muttlib.c: Allow format strings to be filtered. Any format
	string ending in | will be expanded and piped through the first word
	in the string. The string returned will be used for display. If the
	returned string ends in %, it will be passed through the formatter a
	second time. This allows the filter to generate a replacement format
	string including % expandos.

2007-03-14 13:26 -0700  Brendan Cully  <brendan@kublai.com>  (e9203a364537)

	* imap/imap.c: Recheck capabilities after authentication (closes:
	#2837)

2007-03-14 13:09 -0700  Christoph Berg  <cb@df7cb.de>  (cbacb14a837a)

	* doc/mutt.man, main.c: mutt.man and mutt -h updates

	Document mutt --, remove the reference to
	flea, and generally update the mutt.1 manpage.

	(I removed -d from the SYNOPSIS part since it wasn't entirely
	correct syntactically there and putting it elsewhere seems like
	unnecessary clutter.)

2007-03-14 12:58 -0700  Brendan Cully  <brendan@kublai.com>  (f20641ecca59)

	* hcache.c: Always give realpath a shot at the hcache folder name.
	Remove other hacks.

2007-03-14 12:53 -0700  Rocco Rutte  <pdmef@gmx.net>  (18cd9834050d)

	* hcache.c: hcache: prepend current dir to path for local folders If a
	folder is local (i.e. stat() succeeds), prepend the current working
	directory if necessary to always fully qualify the path. Otherwise
	we may end up using different cache files for the same folder when
	given relative paths. This closes #2845.

2007-03-14 12:50 -0700  TAKIZAWA Takashi  <taki@luna.email.ne.jp>  (600b3466489c)

	* help.c: Complete fix for #1503

2007-03-14 12:39 -0700  Rado S  <regrado@web.de>  (ad2172897839)

	* imap/imap.c: Let imap_conn_find have first crack at completion of
	root

2007-03-14 12:23 -0700  Brendan Cully  <brendan@kublai.com>  (bb43900e853f)

	* imap/imap.c: Don't skip the last connection in
	imap_complete_hosts

2007-03-14 11:33 -0700  Rocco Rutte  <pdmef@gmx.net>  (09f73968d97a)

	* rfc822.c: Fix return value for rfc822_write_address() The strcat
	cleanup changed the return type from void to int but didn't provide
	a return value for the case of bogus function arguments.

2007-03-13 12:39 -0700  TAKIZAWA Takashi  <taki@luna.email.ne.jp>  (dc8f0c4a6287)

	* help.c: Use strwidth instead of strlen when generating help strings.
	This fixes word-wrap with multibyte strings (closes: #1503)

2007-03-13 22:40 -0700  Brendan Cully  <brendan@kublai.com>  (61b2845af4da)

	* Makefile.am, Muttrc.head, Muttrc.head.in, configure.in: Fully expand
	$docdir when building Muttrc (closes: #2832)

	* makedoc.c: Make makedoc return 0 on success (be there dragons here?)

2007-03-13 09:22 -0700  Vincent Lefevre  <vincent@vinc17.org>  (7e9c45589254)

	* po/fr.po: Updated French translation.

2007-03-13 10:58 +0100  Thomas Roessler  <roessler@does-not-exist.org>  (f4d3704813fd)

	* charset.c: Clean up the strcat cleanup

2007-03-12 16:26 -0700  Ronny Haryanto  <ronnylist@haryan.to>  (8d956e434fab)

	* po/id.po: Updated Indonesian translation

2007-03-12 12:19 -0700  René Clerc  <rene@clerc.nl>  (162bb5f71a0f)

	* po/nl.po: Updated Dutch translation.

2007-03-12 10:32 -0700  Brendan Cully  <brendan@kublai.com>  (83ca0fb6e36a)

	* imap/util.c: Substitute INBOX for empty mailbox _after_ cleanup
	(closes: #2841)

2007-03-12 10:03 -0700  Sami Farin  <safari-mutt@safari.iki.fi>  (42016ef5ee21)

	* charset.c, copy.c, rfc822.c, rfc822.h: Improve strcat usage
	(#2802).

2007-03-11 11:54 +0100  Thomas Roessler  <roessler@does-not-exist.org>  (8a640badfb60)

	* COPYRIGHT, build-release, crypt-gpgme.c, doc/applying-patches.txt,
	doc/dotlock.man, doc/manual.xml.head, doc/muttrc.man.head,
	muttbug.sh.in, po/bg.po, po/da.po, po/eo.po, po/es.po, po/et.po,
	po/gl.po, po/it.po, po/lt.po, po/pt_BR.po, po/sk.po, po/zh_CN.po,
	po/zh_TW.po: Grabage-collect references to an outdated email
	address.

2007-03-09 10:58 -0800  Rocco Rutte  <pdmef@gmx.net>  (d1122bbaacd8)

	* doc/Makefile.am, doc/manual.xml.head: Make manual validate against
	DocBook 4.2 DTD for "book" This adds a 'validate' target to
	doc/Makefile which uses xmllint(1) to validate manual.xml against
	the DTD given in the doctype (intended for developers only).

	Running it revealed two validation errors which this patch fixes:

	1) We declare 'article' as the doctype but want to use 'book' 2)
	Within a lists's items, we didn't include our text in a paragraph

2007-03-08 21:13 -0800  Michael Elkins  <me@mutt.org>  (0ec4394636c4)

	* init.h: Add `UL' cast for Umask entry in MuttVars to supress
	compiler warning.

2007-03-08 12:19 -0800  Petr Písař  <petr.pisar@atlas.cz>  (d0924f72d2e8)

	* po/cs.po: Czech spelling fixes and new translations

2007-03-07 12:18 -0800  Christoph Berg  <cb@df7cb.de>  (5de130a3cb96)

	* doc/muttrc.man.head: Typos in muttrc.man.head

2007-03-07 12:11 -0800  Michael Tatge  <Michael.Tatge@web.de>  (162f0c127492)

	* doc/mutt.man: Document -d in the man page

2007-03-06 18:13 -0800  Alain Bench  <veronatif@free.fr>  (5fc8c7cee1dd)

	* charset.c, charset.h, crypt-gpgme.c, imap/utf7.c, mbyte.c,
	mutt_idna.c, pgp.c, rfc2047.c, sendlib.c: Remove buggy usage
	of M_ICONV_HOOK_TO flag in mutt_idna.c:mutt_idna_to_local().
	Wipe unwanted code depending on M_ICONV_HOOK_TO in
	charset.c:mutt_iconv_open(). Totally wipe M_ICONV_HOOK_TO symbol.
	Remove misusages of M_ICONV_HOOK_FROM flag in:
	 - crypt-gpgme.c:print_utf8().
	 - mutt_idna.c:mutt_idna_to_local() and mutt_local_to_idna().
	 - pgp.c:pgp_traditional_encryptsign(). Document usage policy of
	M_ICONV_HOOK_FROM flag. Cosmetic downcasing of some constant charset
	names (utf-8, euc-jp) for consistency. Correction of a typo in the
	"iso8859-5" charset name.

2007-03-06 17:59 -0800  Rocco Rutte  <pdmef@gmx.net>  (5e47385893fe)

	* UPDATING, doc/manual.xml.head: Documentation updates for
	format=flowed

2007-03-06 17:45 -0800  Masayuki Moriyama  (78b424bf7c5a)

	* charset.c, hook.c, mbyte.c: Allow iconv-hook to use virtual
	charsets as targets. (closes: #1269)

2007-03-04 19:26 +0100  Alain Bench  <veronatif@free.fr>  (4dc1d87f4c25)

	* doc/manual.xml.head, init.h: Doc fixes and updates concerning hooks

	- Add reply-hooks and send2-hooks in lists they miss.
	- Fix that they all take full patterns, not only regexps.
	- Note interaction with $default_hook.
	- Enumerate them in execution order/increasing priority.
	- Add iconv-hook, remove a duplicate charset-hook.

2007-03-06 15:45 -0800  Brendan Cully  <brendan@kublai.com>  (607688bd77b1)

	* hg-commit: Add check_sec.sh call

	* hg-commit: Make hg commit less clever

	* PATCHES: Undo bad PATCHES commit from f=f

2007-03-06 09:49 -0800  Rocco Rutte  <pdmef@gmx.net>  (2e4e1cc18c22)

	* Makefile.am, PATCHES, doc/manual.xml.head, handler.c, muttlib.c,
	protos.h, rfc3676.c, rfc3676.h, send.c: New format=flowed handler.

2007-03-02 21:12 -0800  Brendan Cully  <brendan@kublai.com>  (537672d8fefb)

	* attach.c, globals.h, init.c, init.h, lib.c, mh.c, mx.c: Add $umask
	for mailboxes and attachments.

	init.c could really use some refactoring.

2007-03-05 14:50 -0800  Pawel Dziekonski  <dzieko@pwr.wroc.pl>  (de57c607e9d3)

	* po/pl.po: Updated Polish translation.

2007-03-03 22:09 -0800  Brendan Cully  <brendan@kublai.com>  (08b1fa8cd55e)

	* Makefile.am: Do not append ${prefix}/include to CPPFLAGS. If
	configure didn't see it, neither should make. (closes: #2603)

2007-03-03 21:49 -0800  Rado S  <regrado@web.de>  (d990dcbbf184)

	* color.c: Increase buffer for color-command regular expressions.

2007-03-03 21:26 -0800  Brendan Cully  <brendan@kublai.com>  (574dbb2c6590)

	* init.h: Revise status_format docs for %??&?. (closes: #2805)

2007-03-03 21:24 -0800  Brendan Cully  <brendan@kublai.com>  (2e296bd4cdfb)

	* doc/devel-notes.txt: s/CVS/Mercurial/

2007-03-03 19:04 -0800  Brendan Cully  <brendan@kublai.com>  (efb53c875ed8)

	* .hgignore: More .hgignore fixes

2007-03-03 18:51 -0800  Brendan Cully  <brendan@kublai.com>  (07f01dd033fe)

	* ChangeLog: Remove a couple of extraneous ChangeLog entries

2007-03-03 18:47 -0800  Brendan Cully  <brendan@kublai.com>  (48b17378c20a)

	* UPDATING, copy.c, globals.h, handler.c, init.c, init.h,
	mutt_curses.h, pager.c: Add $wrap, which supersedes $wrapmargin.
	When set to a positive number, wrap at that column. When set to a
	negative number, keep that many characters empty on the right.

2007-03-03 00:35 -0800  Brendan Cully  <brendan@kublai.com>  (3e3d3bf73c9f)

	* hg-changelog-map, hg-commit: Use hg-commit to perform commits
	that also update the ChangeLog.

2007-03-02 21:17 -0800  Brendan Cully  <brendan@kublai.com>  (472e100053ed)

	* .hgignore: Ignore more built files

2007-03-02 11:09 -0800  Brendan Cully  <brendan@kublai.com>  (256c86830a36)

	* .hgignore: Create .hgignore file

2007-03-02 10:29 +0100  Thomas Roessler  <roessler@does-not-exist.org>  (e040b8aba1c4)

	* configure.in: Make --enable-ssl without pop or imap a mere warning.

2007-03-02 01:25 +0000  Petr Pisar  <petr.pisar@atlas.cz>  (f1c800817281)

	* po/cs.po: Updated Czech translation (now in UTF-8).

2007-03-01 06:05 +0000  Brendan Cully  <brendan@kublai.com>  (d0ff524fa461)

	* init.h: Remove $file_charset SYN - it never appeared in an official
	release.

2007-02-28 17:47:13  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/command.c, imap/imap.c, imap/imap_private.h: Add
	imap_close_connection to fully reset IMAP state. (closes: #2717)
	Thanks to Sergey Svishchev for the original patch.

2007-02-28 16:27:47  Vsevolod Volkov  <vvv@mutt.org.ua>  (brendan)

	* po/ru.po: Updated Russian translation.

2007-02-28 07:36:33  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>  (brendan)

	* po/ja.po: Updated Japanese translation.

2007-02-27 20:53:13  Brendan Cully  <brendan@kublai.com>  (brendan)

	* hcache.c: Bump hcache version after $assumed_charset BODY
	change.

	* init.h: Fix init.h preprocessing when USE_SMTP is not set.

2007-02-27 17:44:09  TAKIZAWA Takashi  <taki@luna.email.ne.jp>  (brendan)

	* mutt.h, parse.c, rfc2047.c, rfc2047.h, rfc2231.c, sendlib.c,
	UPDATING, charset.c, charset.h, globals.h, handler.c, init.h:
	Updated $assumed_charset patch (closes: #2218).  Thanks to
	TAKAHASHI Tamotsu for the fixes and for handling patch conflicts.

2007-02-27 01:10:57  Brendan Cully  <brendan@kublai.com>  (brendan)

	* po/POTFILES.in: Add some missing files. This should probably
	be autogenerated somehow.

2007-02-26 18:39:52  Brendan Cully  <brendan@kublai.com>  (brendan)

	* m4/gpgme.m4: Add gpgme.m4 to distribution to avoid an error
	running autoconf on systems that do not have gpgme installed.

2007-02-26 17:27:29  Brendan Cully  <brendan@kublai.com>  (brendan)

	* main.c: Add curses_version to mutt -v output (thanks to Vincent
	Lefevre for the initial patch), and reformat library information.

2007-02-26 17:17:13  Vincent Lefevre  <vincent@vinc17.org>  (brendan)

	* UPDATING, enter.c, globals.h, history.c, history.h, init.c,
	init.h: Add $history_file and $save_history, for saving command
	history across sessions.

2007-02-26 16:54:26  Roland Rosenfeld  <roland@spinnaker.de>  (brendan)

	* po/de.po: Updated German translation.

2007-02-25 01:32:31  Brendan Cully  <brendan@kublai.com>  (brendan)

	* account.c, account.h, imap/imap.c, imap/message.c, main.c,
	mutt_sasl.c: Update copyrights.

2007-02-24 07:01:24  Takashi TAKIZAWA  <taki@cyber.email.ne.jp>  (brendan)

	* UPDATING, charset.c, charset.h, globals.h, handler.c,
	init.h, mutt.h, parse.c, rfc2047.c, rfc2231.c, sendlib.c: Add
	$assumed_charset, $file_charset and $strict_mime.

2007-02-24 06:37:32  Brendan Cully  <brendan@kublai.com>  (brendan)

	* globals.h, init.h, main.c, mutt_sasl.c, protos.h, send.c,
	sendlib.c, smtp.c, url.c, url.h, Makefile.am, account.c,
	account.h, configure.in: This patch adds ESMTP relay support to
	mutt.  To use, set $smtp_url to the address of your smtp relay,
	in the form:

	smtp[s]://[user[:password]@]host[:port]/

	where port defaults to 25 for smtp and 465 for smtps.

	You can also set $smtp_authenticators to control which
	methods mutt will attempt to use during authentication. See
	$imap_authenticators for details.

2007-02-24 06:12:20  Moritz Schulte  <Moritz.Schulte@ruhr-uni-bochum.de>  (brendan)

	* UPDATING, configure.in, crypt-gpgme.c, crypt-gpgme.h,
	crypt-mod-pgp-classic.c, crypt-mod-pgp-gpgme.c,
	crypt-mod-smime-classic.c, crypt-mod-smime-gpgme.c,
	crypt-mod.h, crypt.c, cryptglue.c, init.h, mutt.h, mutt_crypt.h,
	Makefile.am: PKA signature verification via GPGME, controlled
	by $crypt_use_pka.

2007-02-24 05:47:35  Vincent Lefevre  <vincent@vinc17.org>  (brendan)

	* po/fr.po: Updated French translation.

2007-02-23 17:38:25  brendan  (brendan)

	* po/tr.po, po/uk.po, po/zh_CN.po, po/zh_TW.po, po/pl.po,
	po/pt_BR.po, po/ru.po, po/sk.po, po/sv.po, po/it.po, po/ja.po,
	po/ko.po, po/lt.po, po/nl.po, po/et.po, po/eu.po, po/fr.po,
	po/ga.po, po/gl.po, po/hu.po, po/id.po, po/el.po, po/eo.po,
	po/es.po, VERSION, build-release, po/bg.po, po/ca.po, po/cs.po,
	po/da.po, po/de.po: automatic post-release commit for mutt-1.5.14

2007-02-12 00:56:36  Kees Cook  <kees@outflux.net>  (brendan)

	* imap/imap.c, thread.c: Full fix for null-pointer dereferences
	on partial opens. Thanks also to Ken Brush.

2007-02-12 00:06:32  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/imap.c, imap/message.c: Do not attempt to free NULL IMAP
	headers after a partial mailbox load.

2007-02-07 17:08:51  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/imap.c: Sanity-check mailbox name in
	imap_subscribe. (Closes: #2746)

2007-01-26 14:34:11  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* dotlock.c: Fix #2710, of-by-one in dotlock.c.

2007-01-09 10:37:34  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* cvslog2changelog.pl: Change comment convention for
	ChangeLog slightly, from ^# to ^#\ .

2007-01-09 10:31:09  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* pattern.c: #2673: Make mutt_which_case() multi-byte aware.

	* copy.c, protos.h, sendlib.c: Smarter header wrapping --
	different behavior for display purposes and sent messages.

2007-01-08 11:01:24  Rocco Rutte  <pdmef@gmx.net>  (roessler)

	* menu.c: Fix NULL pointer issue in mutt_format_string().

2007-01-02 17:10:34  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* globals.h, lib.c, lib.h, mutt.h, mutt_socket.c, muttlib.c,
	pgppacket.c, protos.h: add debug harness to lib.c functions,
	and a bunch of dprint's to safe_rename().

2006-12-20 08:27:58  René Clerc  <rene@clerc.nl>  (brendan)

	* po/nl.po: Updated Dutch translation.

2006-12-11 02:13:51  Brendan Cully  <brendan@kublai.com>  (brendan)

	* menu.c: Quiet check_sec.sh.

2006-12-11 02:11:35  Ivan Vilata i Balaguer  <ivan@selidor.net>  (brendan)

	* po/ca.po: Updated Catalan translation.

2006-12-07 11:34:35  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* menu.c, commands.c, curs_lib.c, enter.c: - my_mbtowcs didn't
	recover from bad multibyte sequences

	- mutt_format_string was called under the assumption that this
	  function can operate in-place. Unfortunately, that assumption
	  only holds if replacement_char() returns a one-byte character.

2006-12-03 14:07:54  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* account.c: Fix logic error; debian#400831.

2006-11-28 00:22:16  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* curs_lib.c, imap/message.c, mbox.c, mh.c, mutt_curses.h,
	pattern.c, pop.c, pop_lib.c: Rename PROG_(SIZE|MSG) to
	M_PROGRESS_\1.

2006-11-23 23:18:47  Thomas Roessler <roessler@does-not-exist.org>  (roessler)

	* contrib/sample.muttrc-tlr: Remove a display_filter that's
	locale dependent.

2006-11-22 23:08:01  David Champion  <dgc@uchicago.edu>  (brendan)

	* sort.c: Sort spam scores numerically even when they are in
	the form of floats or negative numbers.

2006-11-21 19:06:23  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* mh.c: Teach maildir and MH to use $write_inc.

	* mbox.c: Teach mbox/mmdf to use the new progress update API.

2006-11-21 03:06:03  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/auth_sasl.c: If a method list has been given, fall back
	to the next authenticator whenever an attempt returns NO or BAD.

2006-11-20 17:56:33  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* doc/manual.xml.head: Some notes on the performance of simple
	strings versus regular expressions in searches.

	* init.h: Note that $read_inc also affects search/limit progress
	updates now.

	* mh.c: Port MH/Maildir to new progress update methods.

2006-11-19 05:23:44  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* pop.c: Restore mail fetch count to POP progress bar.

	* buffy.c: Grow buffy notification to 512 bytes, for large
	terminals.

2006-11-15 18:59:27  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* pattern.c: Display progress during searches.

	* curs_lib.c, imap/imap.c, imap/message.c, mutt_curses.h, pop.c,
	pop_lib.c: Unify size and count progress display.

2006-11-14 18:56:29  Ralf Wildenhues  <wildenhues@ins.uni-bonn.de>  (brendan)

	* doc/Makefile.am: Work around pdksh bug in xml doc make target.

2006-11-14 18:52:10  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* pop.c: Make POP respect $read_inc/$write_inc.

	* doc/Makefile.am, doc/manual.xml.head: Add performance tuning
	section to manual.

2006-11-11 03:40:03  Ivan Vilata i Balaguer  <ivan@selidor.net>  (brendan)

	* po/ca.po: Updated Catalan translation.

2006-11-02 01:09:59  Brendan Cully  <brendan@kublai.com>  (brendan)

	* ChangeLog: Undo accidental charset corruption in ChangeLog.

2006-11-01 23:19:03  Vincent Lefevre  <vincent@vinc17.org>  (brendan)

	* po/fr.po: Updated French translation.

2006-10-31 20:29:24  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/TODO: Update TODO

2006-10-31 18:37:14  Kevin Scannell  <kscanne@gmail.com>  (brendan)

	* po/ga.po: Update Irish translation to 1.5.12.

2006-10-30 02:54:12  Brendan Cully  <brendan@kublai.com>  (brendan)

	* mutt_socket.c: Include <sys/time.h> if available, to ensure
	struct timeval is declared in raw_socket_poll.

2006-10-30 02:36:07  David Shaw  <dshaw@jabberwocky.com>  (brendan)

	* pgpmicalg.c: RFC-2440bis adds support for the SHA-224 hash
	algorithm.

2006-10-30 02:32:30  Alain Bench  <veronatif@free.fr>  (brendan)

	* contrib/gpg.rc: Add the usual %?p? condition around the
	--passphrase-fd option in 3 commented-out examples of gpg-2comp
	usage. Also match gpgv in a good_sign pattern commented-out
	example.

2006-10-09 13:39:38  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* lib.c: Even more paranoid temporary file creation.

2006-10-03 16:45:45  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* curs_lib.c: Clear the progress bar when the current operation
	has completed.

2006-10-03 16:40:56  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* hcache.c: Ignore trailing slashes in folder names when mapping
	to header cache.

2006-09-08 18:28:10  Malcolm Parsons  <malcolm.parsons@gmail.com>  (brendan)

	* OPS.PGP, doc/manual.xml.tail, pgpkey.c, OPS: Clean up some
	text. Closes: #2466.

2006-09-08 17:30:33  Brendan Cully  <brendan@kublai.com>  (brendan)

	* mutt_sasl.c, pop_auth.c: Don't send protocol garbage to
	sasl_decode64 during POP authentication.  Also enable SASL
	plaintext: $foo_authenticators is a more general solution.

	* Makefile.am: Remove bogus smtp.c entry from extra sources,
	added by accident on 20060831.

2006-09-05 08:57:37  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* send.c: Fix #2168.

2006-09-01 19:26:39  Lars Hecking  <lhecking@users.sourceforge.net>  (brendan)

	* configure.in: Handle --without-mixmaster properly. (Slightly
	modified.)

2006-08-31 23:49:40  Ralf Wildenhues  <wildenhues@ins.uni-bonn.de>  (brendan)

	* Makefile.am, configure.in: Only build wchar replacement funcs
	when necessary. Add space after mode argument to install-sh.

	* gettext.c: Remove superfluous empty file from CVS.

2006-08-18 10:28:15  Roland Rosenfeld   <roland@spinnaker.de>  (roessler)

	* po/de.po: update

2006-08-16 20:32:23  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* copy.c, protos.h, sendlib.c: Do intelligent things with long
	header lines.

2006-08-16 17:38:57  René Clerc  <rene@clerc.nl>  (brendan)

	* po/nl.po: Updated translation.

2006-08-15 22:40:48  Vincent Lefevre  <vincent@vinc17.org>  (brendan)

	* po/fr.po: Updated translation.

2006-08-15 22:38:19  Vsevolod Volkov  <vvv@mutt.org.ua>  (brendan)

	* po/ru.po: Updated translation.

2006-08-15 22:35:51  Brendan Cully  <brendan@kublai.com>  (brendan)

	* ChangeLog: Fix a few UTF-8 conversions.

2006-08-15 17:08:33  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* imap/command.c, imap/imap.c, imap/imap_private.h, curs_main.c,
	flags.c, mutt.h, mx.c, pager.c, pop.c: Generic ACL support.

2006-08-15 08:42:46  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* doc/devel-notes.txt: Document switch to UTF-8.

	* ChangeLog: Changing ChangeLog to utf-8.

2006-08-14 19:43:10  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* UPDATING: Mention change since 1.5.12.  Ooops.

	* po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po,
	po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po,
	po/zh_TW.po, po/eu.po, po/fr.po, po/ga.po, po/gl.po, po/hu.po,
	po/id.po, po/it.po, po/ca.po, po/cs.po, po/da.po, po/de.po,
	po/el.po, po/eo.po, po/es.po, po/et.po, VERSION, po/bg.po:
	automatic post-release commit for mutt-1.5.13

2006-08-11 16:25:59  Brendan Cully  <brendan@kublai.com>  (brendan)

	* Makefile.am: Include reldate.h in make dist, so docs won't be
	needlessly rebuilt.

2006-08-11 10:54:24  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* contrib/sample.muttrc-tlr: Update example -- it's amazing how
	little I've actually changed over the past couple of years.

2006-08-11 09:32:29  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>  (roessler)

	* doc/manual.xml.head, mutt.h, pattern.c: Mutt-thread patch. Use
	~(PATTERN) to match any threads that contain messages that
	match PATTERN.

2006-08-11 09:08:20  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* init.h, mutt.h: Use #ifdef in some appropriate places.
	(Particularly relevant when building the documentation.)

2006-08-10 22:16:11  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/command.c: Unbreak imap_check_subscribed after command
	data type change.

2006-08-10 21:47:44  Ralf Wildenhues  <wildenhues@ins.uni-bonn.de>  (brendan)

	* doc/PGP-Notes.txt, doc/devel-notes.txt, doc/manual.xml.head,
	doc/smime-notes.txt: Fix some typos; regularise spelling from
	UK to US forms.

2006-08-10 21:43:47  Brendan Cully  <brendan@kublai.com>  (brendan)

	* Makefile.am: Only touch reldate.h if it actually changes.
	It was getting annoying rebuilding the manual after every commit.

2006-08-10 21:25:18  Ralf Wildenhues  <wildenhues@ins.uni-bonn.de>  (brendan)

	* Makefile.am, configure.in, doc/instdoc.sh.in: No need to set
	CPP, OPS manually in Makefile.am.  Include stdlib.h in autoconf
	tests that use exit.

2006-08-10 20:20:28  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/imap_private.h, imap/browse.c, imap/command.c,
	imap/imap.c: Add type field for IMAP command data structure,
	check it before use.

	* imap/command.c: Handle IMAP out-of-order tagged
	responses. Closes: #2365.

	* imap/command.c, imap/util.c: Handle literal mailbox names
	in LIST responses (for Notes).	We should really have an IMAP
	stream tokenizer.

	* imap/command.c: Notes sometimes sends EXISTS messages for the
	wrong mailbox.

	* imap/message.c: More out-of-order FETCH fixes. This time I wrote
	a replay tool acting as an IMAP server based on a .muttdebug0
	file, and mutt handled the out-of-order responses served by it.

	* imap/command.c, imap/message.c: More fixes for out-of-order
	FETCH responses.

2006-08-09 19:29:22  Vincent Lefevre  <vincent@vinc17.org>  (brendan)

	* mime.types: Update sample mime.types.

2006-08-09 01:17:48  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/message.c: Untested attempt to handle flag updates during
	mailbox open.

	* imap/message.c: Do not allow IMAP mailbox to be reopened while
	it is being opened.

2006-08-08 23:04:01  Matthias Andree  <matthias.andree@gmx.de>  (brendan)

	* INSTALL, doc/devel-notes.txt: Updated and improved build
	instructions.

2006-08-08 22:49:12  Holger Weiss  <holger@zedat.fu-berlin.de>  (brendan)

	* configure.in, snprintf.c: Check whether v?snprintf is
	C99-compliant, and fix replacement functions to be.

2006-08-08 22:38:29  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/imap.c: Finish fixing 2251.

	* imap/imap.c: Handle unknown mailboxes in IMAP buffy check.

2006-08-08 22:05:51  Ronny Haryanto  <ronnylist@haryan.to>  (brendan)

	* po/id.po: Update.

2006-08-08 21:59:37  Vincent Lefevre  <vincent@vinc17.org>  (brendan)

	* po/fr.po: Update.

2006-08-07 19:55:42  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/command.c: Check for CAPABILITY in extended tagged
	responses.

2006-08-05 00:48:16  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* mutt_socket.c: Include FD in socket logging.

2006-08-05 00:19:38  Brendan Cully  <brendan@kublai.com>  (brendan)

	* browser.c: Don't allow user to attempt to delete root IMAP
	folder.

2006-08-05 00:03:22  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* po/Makefile.in.in: Fix po build when builddir != srcdir
	(modified: made simpler).

2006-08-03 23:46:31  ckillian@cs.ucsd.edu  (brendan)

	* doc/manual.xml.head: Fix --enable--hcache typo in the manual.

2006-08-03 23:42:27  Christian Ebert  <blacktrash@gmx.net>  (brendan)

	* doc/manual.xml.head: Minor formatting tweak in the manual.

2006-08-03 23:31:11  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* init.h: Add some missing makedoc defines for hcache DB
	options. Clarify their meanings in the documentation.

2006-07-20 00:57:33  David Champion  <dgc@uchicago.edu>  (brendan)

	* doc/devel-notes.txt: Some notes on setting up a working
	docbook toolchain.

2006-07-20 00:12:52  Alain Bench  <veronatif@free.fr>  (brendan)

	* contrib/Pine.rc, contrib/Tin.rc, contrib/sample.muttrc,
	contrib/sample.muttrc-tlr, doc/muttrc.man.head, Muttrc.head.in,
	contrib/Mush.rc: Clean up a number of examples in the
	documentation.

2006-07-19 23:33:27  Matthias Andree  <matthias.andree@gmx.de>  (brendan)

	* m4/Makefile.am: Clean up some debugging code in the build
	system update.

2006-07-19 23:29:54  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* configure.in: Fix linking for body cache without IMAP support.

2006-07-19 23:17:59  Matthias Andree  <matthias.andree@gmx.de>  (brendan)

	* .cvsignore: Ignore stamp-h1

	* prepare: Update prepare: remove -dev (always enable dependency
	tracking) and use autoreconf -i instead of running tools by hand.

2006-07-18 18:15:30  Brendan Cully  <brendan@kublai.com>  (brendan)

	* doc/devel-notes.txt: Document which versions of autoconf and
	automake mutt supports.

2006-07-18 18:04:15  Matthias Andree  <matthias.andree@gmx.de>  (brendan)

	* doc/.cvsignore, doc/Makefile.am, doc/Makefile.in,
	imap/Makefile.am, m4/Makefile.am, m4/Makefile.am.in, m4/README,
	po/Makefile.in.in, Makefile.am, build-release, contrib/.cvsignore,
	contrib/Makefile.am, contrib/Makefile.in, prepare: Long-overdue
	build system overhaul.

2006-07-18 16:08:39  Vsevolod Volkov  <vvv@mutt.org.ua>  (brendan)

	* po/ru.po: Update for 1.5.12.

2006-07-17 18:40:26  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* doc/Makefile.in: Some makefile fixes relating to reldate.h.

2006-07-17 18:24:52  Matthias Andree  <matthias.andree@gmx.de>  (brendan)

	* doc/.cvsignore: Tell CVS to ignore generated file mutt.1.

2006-07-17 18:01:58  Christian Ebert  <blacktrash@gmx.net>  (brendan)

	* doc/manual.xml.head: Fix a typo in a macro demonstrating $my_
	variables.

2006-07-17 17:56:37  Adeodato Simó  <dato@net.com.org.es>  (brendan)

	* sendlib.c: Change formate of User-Agent header from
	Mutt/Version-Date to Mutt/Version (Date).

2006-07-14 18:39:14  roessler  (roessler)

	* po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po,
	po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po,
	po/zh_TW.po, VERSION, po/bg.po, po/ca.po, po/cs.po, po/da.po,
	po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po, po/eu.po,
	po/fr.po, po/ga.po, po/gl.po, po/hu.po, po/id.po, po/it.po:
	automatic post-release commit for mutt-1.5.12

2006-07-14 18:12:49  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* UPDATING: There's no point in giving a date for each
	incompatible change.

	* UPDATING: Fix UPDATING.

2006-07-14 00:20:05  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* doc/manual.xml.head: Improved history documentation (modified
	for clarity).

	* doc/manual.xml.head: Document $my_ variables and add a section
	about how to calculate the header cache file name for a given
	folder. Modified for clarity.

2006-07-11 23:38:30  Rocco Rutte  <pdmef@gmx.net>  (roessler)

	* main.c, mutt_curses.h: Fix 2305.

2006-07-11 23:34:11  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (roessler)

	* mbyte.c, protos.h, rfc2047.c, rfc2231.c: Fix #2173.

2006-07-09 20:05:02  Kyle Wheeler  <kyle-mutt-dev@memoryhole.net>  (brendan)

	* imap/imap.c: Plug an mbox leak parsing the Postponed folder in
	imap_open_mailbox (slightly modified to prevent bad free calls).

2006-07-07 23:10:51  Johan Svedberg  <johan@svedberg.com>  (brendan)

	* po/sv.po: Update to the Swedish translation.

2006-07-07 18:44:34  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* imap/message.c: Fix a small memory leak in the gap between
	the last cached header and the first uncached. (I've plugged a
	couple of other leaks that happen under error conditions.)

2006-07-07 17:00:05  Kyle Wheeler  <kyle-mutt-dev@memoryhole.net>  (brendan)

	* doc/muttrc.man.head: Fix a small inconsistency documenting
	'reset all.'

2006-07-07 16:21:57  Pawel Dziekonski  <dzieko@pwr.wroc.pl>  (brendan)

	* po/pl.po: Update.

2006-07-06 18:18:31  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* imap/command.c: Fix a string leak parsing STATUS responses.

	* score.c: Fix a small memory leak when updating a score pattern.

2006-07-05 00:31:38  Brendan Cully  <brendan@kublai.com>  (brendan)

	* init.c: Reset myvar for each token in parse_set, so that
	things like set my_var=val &my_var ?charset work again. Noted
	by Alain Bench.

	* doc/Makefile.in, init.c: Undo breakage I introduced in VL's
	doc reldate patch.

	* UPDATING, init.h: Remove $imap_cachedir synonym, and update
	some docs.

	* bcache.c: Rename mutt_bcache_path to bcache_path (it's static),
	simplify it a bit, and just strip '/' in the URL portion up
	to path instead of replacing them with '_', for prettier cache
	folder names.

2006-07-04 17:23:16  Alain Bench  <veronatif@free.fr>  (brendan)

	* history.c: Adopt shell convention of omitting from the history
	commands prefixed with a space.

2006-07-04 17:11:04  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* configure.in, doc/manual.xml.head, globals.h, imap/imap.c,
	imap/imap_private.h, imap/message.c, imap/util.c, init.h, mh.c,
	pop.c, pop.h, Makefile.am: pdmef.cache.24: Generalise IMAP body
	caching and add POP support.  $imap_cachedir is now a synonym
	for $message_cachedir, and should be dropped soon since it hasn't
	been in an official release.

2006-07-03 16:19:43  Michael Tatge  <Michael.Tatge@web.de>  (brendan)

	* doc/manual.xml.head: Some commands used a dash in the
	documentation instead of an underscore. Closes: #2270.

2006-06-29 22:14:08  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* UPDATING: Fill in missing entries in UPDATING.

2006-06-25 20:10:24  Vincent Lefevre  <vincent@vinc17.org>  (brendan)

	* doc/Makefile.in: Add release date to manual version
	information.

2006-06-19 18:14:03  TAKAHASHI Tamotsu  <tamo@momonga-linux.org>  (brendan)

	* imap/browse.c: Fix browse_get_namespace() which could overflow
	ns[LONG_STRING].  (Possible remote vulnerability)

2006-06-19 17:50:10  Vincent Lefevre  <vincent@vinc17.org>  (brendan)

	* po/fr.po: Update to current CVS.

2006-06-13 22:26:18  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* Makefile.am: Run cut under the C locale when parsing ChangeLog
	for reldate.

2006-06-13 07:52:52  René Clerc  <rene@clerc.nl>  (roessler)

	* cryptglue.c: typo

2006-06-08 11:56:05  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* commands.c, curs_main.c, globals.h, muttlib.c, sendlib.c: Clean
	up ReleaseDate mess; include ReleaseDate in User-Agent header.

	* crypt.c: Fix #2272.

2006-06-06 23:58:10  Paul Walker  <paul@black-sun.demon.co.uk>  (brendan)

	* init.c: Remove variable aliases from the output of mutt -D
	(modified for dubious cosmetic reasons). Closes: #2265.

2006-05-26 16:51:48  Vincent Lefevre  <vincent@vinc17.org>  (brendan)

	* configure.in: When flags are added to CPPFLAGS and LDFLAGS in
	configure.in, this should be done with a consistent
	order. Otherwise, when several versions of a library are
	installed, this could lead to a mismatch between the header and
	the library.

2006-05-26 16:38:18  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (brendan)

	* imap/command.c, imap/message.c, mutt_socket.c, mutt_socket.h,
	pop_lib.c: Add mutt_socket_write_n to write binary data. Use this
	function in imap_append_message. Closes: #2244.

2006-05-21 23:25:48  Brendan Cully  <brendan@kublai.com>  (brendan)

	* .cvsignore, reldate.h: reldate.h is a generated file now: remove
	reldate.h from version control, and add it to .cvsignore.

2006-05-19 20:38:05  Brendan Cully  <brendan@kublai.com>  (brendan)

	* doc/Makefile.in: Add intro.html to distributed HTML files
	(fallout from conversion from article to book).

	* UPDATING: Use +/-/! instead of N/D/M in UPDATING.

2006-05-19 18:30:10  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* Makefile.am, README, UPDATING: The UPDATING document is supposed
	(when complete) to provide quick pointers by date to changed
	features (new options/commands, new features, changed defaults,
	etc.)

	* doc/manual.xml.head, init.h: Document speed impact of attachment
	counting. This adds a short paragraph to manual.xml and
	cross-links %X-expandos to it.

2006-05-18 18:35:10  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* hcache.c, hcache.h, imap/imap.c, imap/message.c, mh.c: Use
	header_cache_t* instead of void* for header cache.

	In hcache.c, the header_cache structure is defined to match the
	needs per DB backend used. Thus the interface uses void* abstract
	from it. This patch adds a 'header_cache' forward declaration to
	hcache.h so that we at least get a little more type safety.

	* INSTALL: Note that the DocBook 4.2 DTD should be installed
	locally in order to build the manual.

	* doc/chunk.xsl, doc/manual.xml.head, doc/manual.xml.tail,
	makedoc.c: Properly use tables in manual where appropriate.

	Now, lots of information which really deserves a table is just put
	into <screen/> sections with manual line breaks and things like
	that. This is ugly for several reasons including that the
	information stored there should be accessable straight from the
	table of contents. For the TOC, this patch switches to <book/> for the manual and uses a
        deeper split level so things actually look nicer. The only problem
	are tables which may be not so well supported when dumping the
	HTML to .txt but the DocBook->txt converter with table support is
	work-in-progress...

	* imap/message.c, imap/utf7.c, imap/util.c, mutt_ssl_gnutls.c,
	muttlib.c, mx.c, pager.c, pgplib.c, remailer.c, rfc1524.c,
	rfc2047.c, rfc2231.c, rfc822.c, sendlib.c, buffy.c, charset.c,
	check_sec.sh, color.c, enter.c, group.c, hash.c, init.c, lib.c,
	menu.c, mh.c, mutt_idna.c: Avoid safe_free() usage and add
	security checks.

	Add checks to check_sec.sh for memory functions. These include a
	check for use of safe_free() instead of FREE() and a check whether
	FREE(&...) is used. For the former, __SAFE_FREE_CHECKED__ is to be
	used, for the latter __FREE_CHECKED__ to avoid messages from
	check_sec.sh

2006-05-18 08:53:31  Rocco Rutte  <pdmef@gmx.net>  (roessler)

	* Makefile.am, build-release, reldate.h: Autogenerate reldate.h
	from ChangeLog.

2006-05-17 18:37:33  Rene Clerc  <rene@clerc.nl>  (brendan)

	* po/nl.po: Updated nl.po.

2006-05-16 05:01:02  Vincent Lefevre  <vincent@vinc17.org>  (brendan)

	* po/fr.po: Updated fr.po

2006-05-06 07:42:51  Rocco Rutte  <pdmef@gmx.net>  (roessler)

	* mh.c: Header caching for mh folders.

2006-05-05 17:27:10  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* doc/manual.xml.head: Set system ID to docbook 4.2, in harmony
	with schema URL.

2006-05-02 22:23:35  Rocco Rutte  <pdmef@gmx.net>  (brendan)

	* muttlib.c: Fix an improper dereference in mutt_buffer_init (I think).

2006-04-28 19:52:45  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* mutt.h, parse.c, pattern.c, protos.h, hdrline.c: Cleaning
	up attachment counting.  This takes away some of the worst
	aberrations, but the feature is still a performance hog.

2006-04-28 12:19:20  Ralf Wildenhues  <wildenhues@ins.uni-bonn.de>  (roessler)

	* mutt_socket.h: "could somebody please move this really nasty
	bug fix taken from Brendan's esmtp patch to the mailine code?" --
	"done"

2006-04-28 08:35:03  Rocco Rutte  <pdmef@gmx.net>  (roessler)

	* imap/imap.c, init.h, main.c, mutt.h, mutt_socket.c, mutt_ssl.c,
	mutt_ssl.h, mutt_ssl_gnutls.c, pop_lib.c, buffy.c, configure.in,
	globals.h, init.c: pdmef+fix+sslinterface. Triggered by a warning
	when compiling with POP and GNUTLS, I noticed the SSL interfaces
	for OpenSSL and GNUTLS internally are different which doesn't
	make sense.

	* configure.in, mh.c: pdmef+fix+dino.diff. This fixes mutt/2174.

2006-04-24 19:59:07  exg@gentoo.org  (brendan)

	* configure.in: Don't abort configure if --without-sasl is
	given without any network options. Gentoo's build scripts seem
	to generate this configuration.

2006-04-20 16:46:49  Moritz.Schulte@ruhr-uni-bochum.de  (roessler)

	* headers.c, mutt_crypt.h, postpone.c: Make mutt_parse_crypt_hdr
	more SMIME-aware.

2006-04-18 23:22:30  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/auth_sasl.c: Handle Exchange's bogus short challenge in
	AUTH NTLM (problem debugged by Alexander Gattin).

2006-04-18 15:28:50  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* recvattach.c: Fix saving of attachments.

2006-04-05 17:28:30  Phil Pennock  <mutt-dev@spodhuis.demon.nl>  (brendan)

	* curs_main.c:	(1) OP_MAIN_LINK_THREADS needs to check for
	IMAP_ACL_DELETE permission, since the thread linking involves
	deleting the old email. (2) makes CHECK_IMAP_ACL() a no-op if
	USE_IMAP is not defined; then cleans up a bunch of the #ifdef
	litter.

2006-04-03 20:26:14  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/command.c: Don't pass a null destination to imap_fix_path
	in the default STATUS handler when the mailbox name is implicitly
	INBOX. Thanks to Kai Hendry for the test mailbox and Sami Liedes
	for the backtrace. Closes debian #351337.

	* init.h: Set $record default to ~/sent (closes: #2068).

2006-03-30 19:50:01  Brendan Cully  <brendan@kublai.com>  (brendan)

	* doc/manual.xml.head: Tighten up lists/subscribe example,
	to close #2198.

2006-03-28 18:04:21  Mike Hallock  <mhallock@scs.uiuc.edu>  (brendan)

	* curs_main.c: imap-fetch-mail should check that there is a
	Context before dereferencing Context->magic to avoid a segfault
	possibility.

2006-03-28 01:08:28  Paul Walker  <paul@black-sun.demon.co.uk>  (brendan)

	* recvattach.c: Sanitize attachment file names (seatbelt for
	inattentive recipients).

2006-03-24 23:15:37  Paul Walker  <paul@black-sun.demon.co.uk>  (brendan)

	* INSTALL: Document the need for a docbook-xsl bundle in order
	to build the docs.

2006-03-15 12:26:00  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/message.c: Don't store UIDNEXT unless we know it.

	* imap/message.c: Only synthesize UIDNEXT if we've fetched
	uncached messages. Fixes a FETCH 1:0 bug Bruno Postle reported and
	helped to debug.

2006-03-13 23:21:51  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/message.c: Courier fails to send UIDNEXT on SELECT
	(a violation of RFC 3501 section 6.3.1) - synthesize it if it
	is missing.

	* init.h: Make imap_idle default to false for 1.5.12.

2006-03-03 10:12:27  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* hook.c: reply-hook is used in contexts where we don't have
	a Context structure available. Hence, it must not require the
	full message.

2006-03-03 09:55:46  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* query.c: Fix mutt/2189; lack of error checking in the query
	code.

2006-02-21 21:52:17  Brendan Cully  <brendan@kublai.com>  (brendan)

	* muttlib.c: Preallocate some buffer space before attempting
	vsnprintf in mutt_buffer_printf (Solaris 9 workaround).

2006-02-21 08:10:15  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* attach.c: Fix mutt/2186.

2006-02-21 00:29:10  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/command.c, muttlib.c: Catch mutt_buffer_printf failures.

2006-01-26 07:13:06  Ralf Wildenhues  <wildenhues@ins.uni-bonn.de>  (brendan)

	* contrib/Makefile.in, doc/Makefile.in: Set datarootdir.

2006-01-20 21:21:31  Phil Pennock  <mutt-dev@spodhuis.demon.nl>  (brendan)

	* imap/message.c: Correct a fairly harmless typo parsing message
	\Recent flags.

2006-01-15 21:37:03  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/browse.c, imap/command.c, imap/imap.c, imap/imap.h, main.c,
	pattern.c: A conservative update of copyright years. Some other
	files may need updating too.

2006-01-14 01:16:59  Phil Pennock  <mutt-dev@spodhuis.demon.nl>  (brendan)

	* init.c: Tab-completion for my_ variable names and values.

2006-01-13 09:08:11  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* init.c: More compact code for managing the "my" variables list.

2006-01-12 19:09:28  Phil Pennock  <mutt-dev@spodhuis.demon.nl>  (brendan)

	* init.c: Update MyVars to the next entry when deleting the head
	of the list, instead of leaving it pointing to a freed entry.

2006-01-12 09:36:46  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* po/fr.po: update

2006-01-12 06:07:50  Brendan Cully  <brendan@kublai.com>  (brendan)

	* init.c: Teach mutt to expand mutt variables as it does
	environment variables. For example, you might put something like
	this into a hook: set sendmail="mysmtp -f $from". Allow
	user-definable variables starting with my_. Environment variables
	take precedence, and expansion does not occur in shell-escape.

2006-01-11 06:45:23  Recai Oktas  <roktas@omu.edu.tr>  (brendan)

	* po/tr.po: A tr.po update.

2006-01-10 21:06:22  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/browse.c: Sanity-check folder inferiors response. Brian
	Weaver reports that it fixes the extra delimiters bug triggered by
	dbmail's incorrect LIST response.

	* hdrline.c: Don't use uninitialised flags variable when fetching
	attachment count.  Closes: #2153.

2006-01-09 19:43:59  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* imap/imap.c, mutt.h, pattern.c, protos.h, send.c, Makefile.am,
	globals.h, group.c, init.c, init.h: Adding pattern group support;
	see http://does-not-exist.org/mail-archives/mutt-dev/msg05693.html
	for instructions.  The ungroup command is not yet implemented,
	and documentation is lacking.

2006-01-04 17:28:32  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/browse.c: Zero out IMAP_LIST before each imap_cmd_step in
	browser to avoid bogus matches when the untagged response isn't a
	LIST response. Phil Pennock diagnosed and proposed a patch for
	this bug.

2006-01-03 17:35:18  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/imap.c: Pipeline CLOSE (it's always followed by a SELECT or
	a LOGOUT).

	* imap/command.c, imap/imap.c: If there is an * OK
	[CAPABILITY... qualifier on connect, parse it and skip the manual
	capability check.

	* imap/imap.h, imap/imap.c, postpone.c: Pipeline postponed mail
	check on mailbox open if appropriate.

2005-12-30 17:34:52  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/imap.c: Sort mailbox in SORT_ORDER in imap_sync_mailbox so
	that sync_helper doesn't end up resorting it 10 times.

	* imap/imap.c: Only resort headers in imap_make_msg_set if order
	!= SORT_ORDER. Fix sync_helper to return 1 in case of +FLAGS but
	not -FLAGS.

2005-12-26 23:55:19  Nik A. Melchior  <nam1@cec.wustl.edu>  (brendan)

	* doc/muttrc.man.head: Fix whitespace around ~X in
	muttrc.man.head.

2005-12-23 18:20:02  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/imap_private.h, imap/message.c: Don't evaluate hcache
	unless uidnext > 0. This shouldn't happen, but it was reported
	to. I probably have to be a lot more careful about the uid
	datatypes but I'm too lazy to clean up right now.

	* imap/imap.c: Always use NOOP when imap_check_mailbox is called
	with force set. Seems to resolve a Cyrus idiosyncracy noted by
	Phil Pennock.

	* imap/imap.c, imap/message.c: IMAP message cache fixes: embed
	UIDVALIDITY in the cache file name, only delete deleted messages
	at sync time. Also use an alias to make the sync code clearer.

2005-12-22 20:14:04  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/command.c: Fix at least Kyle Wheeler's new mail detection
	problems: call imap_fix_path on buffy path.

	* regex.c: Kyle Wheeler noticed a couple of warnings in the
	moribund regex code. One still remains that I'm too lazy to fix
	right now.

	* imap/message.c: Add <errno.h> for msg_cache_put.

	* globals.h, imap/imap.c, imap/imap_private.h, imap/message.c,
	imap/message.h, init.h: Add $imap_cachedir option. If set, mutt
	will keep copies of IMAP messages under this directory.

	* imap/imap.c: Check all connections instead of just the first
	when NONEW is set in imap_conn_find. Wait for root delimiter check
	to complete before SELECTing since we may need it to form the
	mailbox name.

	* imap/command.c: More logging in STATUS parser to track down new
	mail detection problems.

2005-12-21 21:02:50  Brendan Cully  <brendan@kublai.com>  (brendan)

	* hcache.c: Check for NULL data in refactored mutt_hcache_fetch.

	* hcache.c: Unbreak QDBM too.

	* hcache.c, hcache.h: I broke DB4 while refactoring hcache.c.

	* imap/imap.c, imap/imap_private.h, imap/message.c: Cache
	UIDVALIDITY/UIDNEXT as header cache metadata, only attempt to
	fetch up to UIDNEXT from the header cache. Also a cosmetic
	correction: Display the actual first message being fetched (after
	hcache) instead of 1.

	* imap/command.c: Don't run pending IMAP commands until the
	current queue has drained. Many thanks to Vincent Lefevre for his
	patient help debugging.

	* imap/command.c: Compare full mailbox names when doing IMAP buffy
	check, not up to the length of the STATUS response.

2005-12-20 17:50:47  Brendan Cully  <brendan@kublai.com>  (brendan)

	* hcache.c, hcache.h, imap/imap.c, imap/imap_private.h,
	imap/message.c, mh.c, protos.h, Makefile.am: Refactor header cache
	a bit to provide (fetch|store)_raw functions. These will let me
	keep folder metadata (UIDVALIDITY, NEXT, msg count etc) in the
	cache, which will help to sync more quickly.

	* imap/imap.c: Remove deleted entries from header cache on CLOSE.

2005-12-19 18:13:28  Brendan Cully  <brendan@kublai.com>  (brendan)

	* ChangeLog, ChangeLog.old: ChangeLog.old was just old ChangeLog
	entries with different formatting - I think it's time to put it
	out to pasture. I've moved all pre-1.4 entries from ChangeLog into
	ChangeLog.old now. This should have the nice side-effect of making
	the git mirror grow a little more slowly.

	* imap/imap.c: Catch another possible race when starting IDLE.

	* imap/imap.c, imap/imap_private.h, imap/message.c: More IMAP
	header cache cleanup: remove expunged entries from cache, and
	don't bother checking the cache for mail that's arrived since the
	mailbox was opened. TODO: cache UIDNEXT, only check the cache for
	messages up to cached value.

	* imap/imap.c: Avoid a possible race when entering the IDLE
	command - if new mail notification is received before the +
	response, mutt may attempt to send a fetch command before it
	realises it's idling.

	* imap/imap_private.h, imap/message.c, imap/imap.c: Much faster
	IMAP sync code, pipelined and everything. Now batch updates
	changed flags, instead of syncing each changed message
	individually.

	* imap/imap.c: Manually unidle at logout if necessary. Somewhat
	unclean - might be good to have an imap_unidle function...

	* imap/imap.c, imap/message.c, imap/message.h: Cache server-side
	flags, don't send flag updates if mutt's are the same. This can
	happen if a flag is toggled and toggled back, or we receive server
	updates, and the cache will make much faster sync possible later.

	* imap/command.c, imap/imap.c: Pipeline MYRIGHTS, subscribed
	mailbox check and root delimiter check.

	* imap/imap.c: Clear name field from status callback before each
	IMAP completion attempt.

	* imap/message.c: Remove some cut-n-paste garbage from IMAP header
	cache code.

	* mx.c: Only mark unread messages as old when closing mailbox.

	* imap/auth_sasl.c, imap/browse.c, imap/imap.c,
	imap/imap_private.h, imap/message.c, imap/util.c, mx.c: Real
	support for the Old flag on IMAP.

	* imap/imap.c, imap/imap_private.h: Display success message when
	subscription command succeeds.

	* imap/browse.c, imap/command.c, imap/imap.c, imap/imap_private.h:
	Replace imap_parse_list_response with a proper untagged response
	handler.

2005-12-16 18:49:40  Recai Oktas  <roktas@omu.edu.tr>  (brendan)

	* color.c, crypt.c, handler.c, init.c, parse.c, smime.c: Use
	ascii_str* instead of mutt_str* in several places where it's
	needed.

2005-12-16 18:18:52  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/command.c, imap/imap.c, imap/imap_private.h,
	imap/message.c, imap/util.c: New new mail detection code. Now we
	use UIDVALIDITY/UIDNEXT to detect whether a mailbox has been
	changed since we last saw it, rather than the more ephemeral
	RECENT flag. We also keep a cache of mailboxes we've visited or
	called STATUS on, which might eventually make for better
	information in the browser and mailbox views. Big changes,
	probably not stable. IWFM.

2005-12-15 18:59:59  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/message.c: Whitespace shuffling.

	* imap/command.c, imap/imap.c, imap/imap_private.h, imap/util.c:
	Use mutt_buffer_printf in several places instead of a homebrew
	version.

	* configure.in, m4/funcs.m4, muttlib.c, protos.h: Add
	mutt_buffer_printf function, with autoconf test for va_copy.

	* imap/imap.c: IMAP keepalive might have been interacting badly
	with $timeout when IDLE was enabled. Use force option for IDLE too.

2005-12-14 17:29:57  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/auth_sasl.c, imap/command.c, imap/imap_private.h: SASL-IR
	support for IMAP. The RTT was has begun. I had forgotten how
	strangely convoluted auth_sasl has become though...

2005-12-13 23:37:42  Brendan Cully  <brendan@kublai.com>  (brendan)

	* mutt_ssl.c, mutt_ssl_gnutls.c: Add conn_poll (using
	raw_socket_poll) to SSL socket setup functions.

	* buffy.c: Fix recently-broken buffy notification for IMAP.

	* imap/imap_private.h, imap/util.c, imap/command.c, imap/imap.c,
	imap/imap.h, postpone.c: Restore IMAP postponed check in the wake
	of the buffy pipelining patch. Fall back to NOOP if IDLE poll
	fails. Allow for untagged messages when starting IDLE. Free
	idata->cmdbuf in imap_free_idata.

	* imap/TODO, imap/BUGS: Updated todo/bug list for IMAP

2005-12-12 17:24:12  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/command.c, imap/imap.c, init.h, mutt.h: Add $imap_idle
	boolean to disable the IDLE extension (may be needed with some
	servers like the particular version of dovecot I tried
	yesterday). Don't attempt to poll mailboxes with connections that
	haven't yet authenticated. Recognize NO responses again (silly
	typo, spotted by Charlie Allom)

2005-12-12 02:24:43  Brendan Cully  <brendan@kublai.com>  (brendan)

	* configure.in, imap/command.c, imap/imap.c, imap/imap_private.h,
	mutt_socket.c, mutt_socket.h, mutt_tunnel.c: IMAP IDLE support.

	* buffy.c: Whoops, don't break buffy for non-IMAP mailboxes!

	* buffy.c, imap/command.c, imap/imap.c, imap/imap.h,
	imap/imap_private.h, imap/util.c: IMAP command batching code, used
	to pipeline mailbox poll requests. Up to 10 poll commands will be
	sent at a time (tunable in imap_private.h). This is a huge win on
	my currently awful wireless link. It takes a knife to a lot of
	fundamental IMAP code (mostly for the better), so it may have
	destabilised things. Time for some brave (or lazy
	non-Changelog-reading) testers to report... next up, IDLE
	support.

2005-12-10 07:06:44  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/browse.c, imap/command.c, imap/imap.c, imap/imap_private.h,
	imap/util.c: Set up a command pipeline. Currently everything still
	runs a single command from start to finish before moving on, but
	this creates the infrastructure to pipeline mailbox polling
	calls. Bitter experience at the end of a flaky wireless link
	teaches me that this can be useful.

	* imap/auth_anon.c, imap/auth_cram.c, imap/auth_gss.c,
	imap/auth_sasl.c, imap/browse.c, imap/command.c, imap/imap.c,
	imap/imap_private.h, imap/message.c, imap/util.c: Move IMAP
	response buffer out of command into IMAP_DATA. Ironically this is
	to prepare for pipelined commands.

2005-11-24 12:50:27  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* curs_main.c, pattern.c: mutt/2142 suggests that the change
	from pattern.c,3.14 -> 3.15 causes inconsistency and confusion.
	Reverting the change; adding a helpful message to the status line.

2005-11-22 12:31:58  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* pgp.c: Fix "mixed messages" about the success (or not) of
	decrypting PGP messages.

	* handler.c: Actually, the previous fix for 2139 had a flaw.

	* handler.c: Fix mutt/2139; also Debian #340116.

2005-11-17 18:40:50  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* menu.c: a not entirely sane state of code.

	* menu.c: Another stab at #2019.

2005-11-01 08:42:00  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* menu.c: This should be a better patch for the menu break
	dance. (#2019)

2005-10-31 11:56:58  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>  (roessler)

	* imap/message.c: Fix 2119.

2005-10-31 10:51:54  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* mutt_idna.c: Fix the underlying problem behind mutt/2107.

	* menu.c: Fixing #2019.

	* flags.c: Fix #2123.

2005-10-21 04:35:38  Brendan Cully  <brendan@kublai.com>  (brendan)

	* smime.c, attach.c, buffy.c, copy.c, copy.h, crypt-gpgme.c,
	crypt.c, edit.c, handler.c, mbox.c, mutt.h, pager.c, parse.c,
	pattern.c, pgp.c, pgpmicalg.c, pgppacket.c, pgppubring.c, pop.c,
	postpone.c, protos.h, sendlib.c: Full large file support. Keep a
	close watch on your mailboxes everyone!

2005-10-18 07:04:50  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* po/fr.po: update

2005-10-17 09:14:58  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (roessler)

	* smime.c: Fix S/MIME algorithm choice.

2005-10-14 09:30:11  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* imap/imap.c: Fix imap/2112.

2005-10-10 18:26:31  Brendan Cully  <brendan@kublai.com>  (brendan)

	* pgp.c: Make PGP decode failure non-fatal when displaying
	messages (as opposed to decode-saving them). I think it would be
	nicer to include the original text when decryption fails
	though...

	* imap/command.c, setenv.c: Accept + as IMAP continuation, not
	just + . May close #2106. Feed check_sec candy in setenv.c.

2005-10-09 20:53:21  Brendan Cully  <brendan@kublai.com>  (brendan)

	* configure.in: Now that we always check for ncurses/ncurses.h,
	remove /usr special case.

	* configure.in, mutt_curses.h: Tweak ncurses autoconflation to
	check for ncurses/ncurses.h everywhere, not just in /usr. With
	--with-curses=/usr/local, should Close: #2095.

	* configure.in, setenv.c: Add Russ Allbery's setenv replacement
	function.

	* init.h: Correct doc nit for $meta_key, noted by Mark
	Weyer. Closes: #2105.

2005-10-06 06:15:00  Brendan Cully  <brendan@kublai.com>  (brendan)

	* browser.c: Sort browser entries after every IMAP browsing
	operation instead of just when explicitly requested. Closes:
	#2089.

2005-10-06 05:13:55  Jeff Ito  <jeffi@rcn.com>  (brendan)

	* smime.c: Add AES ciphers to S/MIME encryption options. Closes:
	#2103.

2005-10-05 19:24:40  David Champion  <dgc@uchicago.edu>  (brendan)

	* doc/manual.xml.head, init.c: Fix 'unattachments'. Closes: #2102.

2005-10-05 19:20:22  Jeff Ito  <jeffi@rcn.com>  (brendan)

	* smime.c: S/MIME key selection truncates the last character of
	the selected key for no apparent reason. Removed until someone
	can justify it. Closes: #2081.

2005-10-04 19:00:05  Brendan Cully  <brendan@kublai.com>  (brendan)

	* init.h: Tweak description of pop_checkinterval slightly. Closes:
	#2074.

	* hcache.c: Bump hcache Id for attachment counting patch.

2005-10-04 06:05:39  David Champion  <dgc@uchicago.edu>  (brendan)

	* Muttrc.head.in, doc/manual.xml.head, doc/muttrc.man.head,
	globals.h, hdrline.c, init.c, init.h, mime.h, mutt.h, parse.c,
	pattern.c, protos.h, recvattach.c: Attachment counting for index
	display (patch-1.5.11.dgc.attach.6). Modifications: attach_recurse
	and attach_ignore_fundamental stripped, some debugging code
	removed, some bones thrown to check_sec.sh.

2005-10-04 05:24:00  Sébastien Hinderer  <Sebastien.Hinderer@libertysurf.fr>  (brendan)

	* pager.c: The following patch has an effect only when the
	braille_friendly variable is set. When this is the case, the
	cursor is put on the first line of the message body, when viewing
	it with the pager.

2005-10-04 04:29:09  Alain Bench  <veronatif@free.fr>  (brendan)

	* curs_main.c: Piping and printing in IMAP folder index with
	imap_peek=no marks message read immediately.

2005-10-03 07:52:00  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (roessler)

	* curs_lib.c, send.c: fix a problem that appears with signatures
	without newline.

2005-09-30 18:24:17  Brendan Cully  <brendan@kublai.com>  (brendan)

	* doc/devel-notes.txt: Change manual.sgml to manual.xml (noted
	by Alain Bench).

2005-09-30 01:42:50  Roland Rosenfeld  <roland@spinnaker.de>  (brendan)

	* po/de.po: Update.

2005-09-29 23:57:07  Vincent Lefevre  <vincent@vinc17.org>  (brendan)

	* po/fr.po: Update.

2005-09-29 23:52:16  pi  <pi@beobide.net>  (brendan)

	* configure.in, po/eu.po: Basque translation.

2005-09-29 23:02:49  Brendan Cully  <brendan@kublai.com>  (brendan)

	* configure.in, copy.c, sendlib.c: Ensure that Content-Length
	printf format specifier matches off_t size, to avoid mail-losing
	Content-Length: 0 (bug introduced by large file patch a couple
	of days ago). Closes: #2096.

2005-09-27 03:43:24  Johan Svedberg  <johan@svedberg.com>  (brendan)

	* po/sv.po: Update.

2005-09-24 20:03:04  Brendan Cully  <brendan@kublai.com>  (brendan)

	* edit.c: Inflict more needless pain on translators by splitting
	EditorHelp to satisfy -pedantic.

	* mbox.c, mutt.h, configure.in: Use fseeko/ftello when available
	while opening mbox/mmdf. Closes: #2084.

2005-09-24 19:36:35  Alain Bench  <veronatif@free.fr>  (brendan)

	* copy.c, mutt.h, parse.c, sendlib.c, thread.c: Cosmetic fixes to
	MIME headers. Closes: #2086.

2005-09-24 17:51:17  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (brendan)

	* po/ja.po: Update to HEAD.

2005-09-23 18:38:36  TAKAHASHI Tamotsu  <ttakah@lapis.plala.or.jp>  (brendan)

	* configure.in: Quote an error message.

2005-09-22 16:38:08  Takahashi Tamotsu  <ttakah@lapis.plala.or.jp>  (brendan)

	* configure.in, globals.h, hcache.c, init.h: Update QDBM patch to
	the current state of the art. Closes: #2003 (again).

2005-09-22 09:06:13  Thomas Roessler  <roessler@does-not-exist.org>  (roessler)

	* send.c: When composing a reply, there might be degenerate cases
	in which a CC header is created, but no To header.  In this case,
	we now use the auto-generated CC header as the To header.

2005-09-22 04:05:49  Brendan Cully  <brendan@kublai.com>  (brendan)

	* init.c: Refactor mutt var completion so it can be used for
	inline expansions (eg $from). Actual expansion not committed yet.

	* send.c: If ContentType is null, assume text/plain. Stopgap; a
	better mechanism would sanity-check MuttVars assignments before
	allowing them. Closes: #2080.

	* imap/util.c, imap/imap.c: Don't allow imap URLs with empty
	hosts. Also don't attempt to complete on open connections when
	there aren't any (diagnosed by Nico Golde). Closes: #2079.

	* pattern.c: Use ctx instead of Context when checking whether or
	not to do IMAP search. Resolves a possible segfault in color index
	~b operations. I can't remember whether Context vs ctx was
	intentional - I doubt it.

2005-09-21 14:17:14  Adeodato Simo  <asp16@alu.ua.es>  (brendan)

	* curs_main.c: Check for sigwinch in index before calling
	km_dokey, since for unknown reasons km_dokey seems to eat the
	signal in some cases. [Not reproducible in my ncurses environments
	- Brendan]. Closes: #1907.

2005-09-21 13:23:43  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/imap.c, pattern.c: Catch empty substring/regexp search
	arguments (precludes a segfault from dereferencing a null string
	pointer later).

2005-09-21 06:04:37  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>  (roessler)

	* init.h, mutt.h, configure.in, hcache.c: QDBM support for the
	header cache.

2005-09-21 04:50:31  Adeodato Simo  <asp16@alu.ua.es>  (brendan)

	* pgp.c: When using GPG agent in classic mode, set GPG_TTY if it
	isn't already set instead of bailing out. Closes: #2072.

2005-09-21 03:48:38  Takahashi Tamotsu  <ttakah@lapis.plala.or.jp>  (brendan)

	* init.c: Ensure that set doesn't change variables from within the
	help screen. I think this is a gross approach, and probably
	overkill, but it's the fault of the original code design, not
	Tamo's patch. Until a better way falls from the sky, this Closes:
	#2011.

2005-09-21 02:58:07  Brendan Cully  <brendan@kublai.com>  (brendan)

	* curs_main.c: Cancelling <change-folder> from within the pager
	will now keep you in the pager rather than kicking you back to the
	index. Closes: #2075.

2005-09-20 23:41:21  Vincent Lefevre  <vincent@vinc17.org>  (brendan)

	* muttlib.c: Slight improvement on dgc's warning fix in edge cases.

2005-09-20 06:43:39  David Champion  <dgc@uchicago.edu>  (brendan)

	* init.c: Fix a null-pointer-dereference parsing aliases with
	-d3+.

	* muttlib.c: Clear a compiler warning.

2005-09-20 03:56:25  Gero Treuner  <gerotick@faveve.uni-stuttgart.de>  (brendan)

	* contrib/gpg.rc, doc/manual.xml.tail: Update locations of
	gpg-2comp, Gero Treuner.

2005-09-19 06:14:27  Brendan Cully  <brendan@kublai.com>  (brendan)

	* mkchangelog.sh: I just realised what's been happening to the
	changelog: I recently got a new version of 'head' that refuses
	to accept -1 instead of -n 1, but doesn't actually return
	failure. So mkchangelog was feeding nothing to the cvs date
	argument, and instead merrily snarfing down the entire changelog
	every time. I've put in a simple $date != "" check. Thanks,
	textutils!  Thanks for ushering in the future! I'd like to shake
	your hand. Hard.

2005-09-19 05:12:29  Brendan Cully  <brendan@kublai.com>  (brendan)

	* doc/manual.xml.head: Remove mention of obsolete
	--enable-imap-edit-threads configure option.

2005-09-18 17:49:33  Brendan Cully  <brendan@kublai.com>  (brendan)

	* ChangeLog: Somehow the changelog got mangled (multiple copies
	of large parts).

2005-09-18 08:22:49  Vsevolod Volkov  <vvv@mutt.org.ua>  (roessler)

	* po/ru.po: update

2005-09-18 02:53:18  brendan  (brendan)

	* doc/Makefile.in: More cleanups, slightly better dependencies.

2005-09-18 02:35:10  Brendan Cully  <brendan@kublai.com>  (brendan)

	* doc/Makefile.in: Stupid hack to synchronise on makedoc for
	parallel builds. Only works when entered via make all. make
	stamp-doc-xml directly can fail in pathological conditions.

	* doc/Makefile.in: Attempt to work around make -j2
	breakage. Dependencies are still wrong, but I don't have
	the brainpower right now to get it right. People talk about
	imperative, functional, and logic programming, but no one ever
	mentions make programming.

2005-09-17 20:46:14  Brendan Cully  <brendan@kublai.com>  (brendan)

	* po/pt_BR.po, po/ru.po, po/sk.po, po/sv.po, po/tr.po,
	po/uk.po, po/zh_CN.po, po/zh_TW.po, po/ga.po, po/gl.po,
	po/hu.po, po/id.po, po/it.po, po/ja.po, po/ko.po, po/lt.po,
	po/nl.po, po/pl.po, intl/plural.y, intl/ref-add.sin,
	intl/ref-del.sin, intl/textdomain.c, po/bg.po, po/ca.po,
	po/cs.po, po/da.po, po/de.po, po/el.po, po/eo.po, po/es.po,
	po/et.po, po/fr.po, doc/dotlock.man, doc/manual.xml.head,
	doc/mutt.man, doc/muttbug.man, doc/muttrc.man.head,
	imap/auth.c, imap/auth.h, imap/auth_anon.c, imap/auth_cram.c,
	imap/auth_gss.c, imap/auth_login.c, imap/auth_sasl.c,
	imap/browse.c, imap/command.c, imap/imap.c, imap/imap.h,
	imap/imap_private.h, imap/message.c, imap/message.h, imap/utf7.c,
	imap/util.c, intl/COPYING.LIB-2, intl/COPYING.LIB-2.1,
	intl/Makefile.in, intl/bindtextdom.c, intl/config.charset,
	intl/dcgettext.c, intl/dcigettext.c, intl/dcngettext.c,
	intl/dgettext.c, intl/dngettext.c, intl/explodename.c,
	intl/finddomain.c, intl/gettext.c, intl/gettext.h,
	intl/gettextP.h, intl/hash-string.h, intl/intl-compat.c,
	intl/l10nflist.c, intl/libgettext.h, intl/libgnuintl.h,
	intl/libintl.glibc, intl/loadinfo.h, intl/loadmsgcat.c,
	intl/localcharset.c, intl/locale.alias, intl/localealias.c,
	intl/ngettext.c, intl/plural.c, pgpkey.c, pgplib.c, pgplib.h,
	pgpmicalg.c, pgppacket.c, pgppacket.h, pgppubring.c, pop.c,
	pop.h, pop_auth.c, pop_lib.c, postpone.c, protos.h, query.c,
	recvattach.c, recvcmd.c, regex.c, remailer.c, remailer.h,
	resize.c, rfc1524.c, rfc1524.h, rfc2047.c, rfc2047.h, rfc2231.c,
	rfc2231.h, rfc822.c, rfc822.h, score.c, send.c, sendlib.c,
	signal.c, smime.c, smime.h, smime_keys.pl, sort.c, sort.h,
	status.c, system.c, thread.c, url.c, browser.h, buffy.c, buffy.h,
	charset.c, charset.h, color.c, commands.c, complete.c, compose.c,
	config.guess, config.sub, copy.c, copy.h, crypt-gpgme.c,
	crypt-gpgme.h, crypt-mod-pgp-classic.c, crypt-mod-pgp-gpgme.c,
	crypt-mod-smime-classic.c, crypt-mod-smime-gpgme.c, crypt-mod.c,
	crypt-mod.h, crypt.c, cryptglue.c, curs_lib.c, curs_main.c,
	date.c, depcomp, dotlock.c, dotlock.h, edit.c, editmsg.c,
	enter.c, extlib.c, filter.c, flags.c, from.c, functions.h,
	globals.h, gnupgparse.c, handler.c, hash.c, hash.h, hcache.c,
	hdrline.c, headers.c, help.c, history.c, history.h, hook.c,
	init.c, init.h, keymap.c, keymap.h, lib.c, lib.h, mailbox.h,
	main.c, makedoc.c, mapping.h, mbox.c, mbyte.c, menu.c,
	mh.c, mime.h, missing, mutt.h, mutt_crypt.h, mutt_curses.h,
	mutt_idna.c, mutt_idna.h, mutt_menu.h, mutt_regex.h, mutt_sasl.c,
	mutt_sasl.h, mutt_socket.c, mutt_socket.h, mutt_ssl.c, mutt_ssl.h,
	mutt_ssl_gnutls.c, mutt_tunnel.c, mutt_tunnel.h, muttbug.sh.in,
	muttlib.c, mx.c, mx.h, pager.c, pager.h, parse.c, pattern.c,
	pgp.c, pgp.h, pgpinvoke.c, COPYRIGHT, _regex.h, account.c,
	account.h, addrbook.c, alias.c, ascii.c, ascii.h, attach.c,
	attach.h, base64.c, browser.c: Gah, forgot the zip code when
	updating the FSF address...

	* po/zh_CN.po, po/zh_TW.po, po/tr.po, po/uk.po, po/sk.po,
	po/sv.po, po/ru.po, po/pt_BR.po, po/nl.po, po/pl.po, po/ko.po,
	po/lt.po, po/ja.po, po/id.po, po/it.po, po/ga.po, po/gl.po,
	po/hu.po, po/et.po, po/fr.po, po/eo.po, po/es.po, po/de.po,
	po/el.po, po/da.po, imap/imap.h, imap/imap_private.h,
	imap/message.c, imap/message.h, imap/utf7.c, imap/util.c,
	intl/COPYING.LIB-2, intl/Makefile.in, intl/bindtextdom.c,
	intl/config.charset, intl/dcgettext.c, intl/dcigettext.c,
	intl/dcngettext.c, intl/dgettext.c, intl/dngettext.c,
	intl/explodename.c, intl/finddomain.c, intl/gettext.c,
	intl/gettext.h, intl/gettextP.h, intl/hash-string.h,
	intl/intl-compat.c, intl/l10nflist.c, intl/libgettext.h,
	intl/libgnuintl.h, intl/libintl.glibc, intl/loadinfo.h,
	intl/loadmsgcat.c, intl/localcharset.c, intl/locale.alias,
	intl/localealias.c, intl/ngettext.c, intl/plural.c, intl/plural.y,
	intl/ref-add.sin, intl/ref-del.sin, intl/textdomain.c, po/bg.po,
	po/ca.po, po/cs.po, doc/dotlock.man, doc/manual.xml.head,
	doc/mutt.man, doc/muttbug.man, doc/muttrc.man.head, imap/auth.c,
	imap/auth.h, imap/auth_anon.c, imap/auth_cram.c, imap/auth_gss.c,
	imap/auth_login.c, imap/auth_sasl.c, imap/browse.c,
	imap/command.c, imap/imap.c, rfc2047.h, rfc2231.c, rfc2231.h,
	rfc822.c, rfc822.h, score.c, send.c, sendlib.c, signal.c,
	smime.c, smime.h, smime_keys.pl, sort.c, sort.h, status.c,
	system.c, thread.c, url.c, query.c, recvattach.c, recvcmd.c,
	regex.c, remailer.c, remailer.h, resize.c, rfc1524.c,
	rfc1524.h, rfc2047.c, pager.h, parse.c, pattern.c, pgp.c,
	pgp.h, pgpinvoke.c, pgpkey.c, pgplib.c, pgplib.h, pgpmicalg.c,
	pgppacket.c, pgppacket.h, pgppubring.c, pop.c, pop.h,
	pop_auth.c, pop_lib.c, postpone.c, protos.h, mbyte.c, menu.c,
	mh.c, mime.h, missing, mutt.h, mutt_crypt.h, mutt_curses.h,
	mutt_idna.c, mutt_idna.h, mutt_menu.h, mutt_regex.h, mutt_sasl.c,
	mutt_sasl.h, mutt_socket.c, mutt_socket.h, mutt_ssl.c, mutt_ssl.h,
	mutt_ssl_gnutls.c, mutt_tunnel.c, mutt_tunnel.h, muttbug.sh.in,
	muttlib.c, mx.c, mx.h, pager.c, extlib.c, filter.c, flags.c,
	from.c, functions.h, globals.h, gnupgparse.c, handler.c, hash.c,
	hash.h, hcache.c, hdrline.c, headers.c, help.c, history.c,
	history.h, hook.c, init.c, init.h, keymap.c, keymap.h, lib.c,
	lib.h, mailbox.h, main.c, makedoc.c, mapping.h, mbox.c,
	dotlock.h, edit.c, editmsg.c, enter.c, copy.h, crypt-gpgme.c,
	crypt-gpgme.h, crypt-mod-pgp-classic.c, crypt-mod-pgp-gpgme.c,
	crypt-mod-smime-classic.c, crypt-mod-smime-gpgme.c, crypt-mod.c,
	crypt-mod.h, crypt.c, cryptglue.c, curs_lib.c, curs_main.c,
	date.c, depcomp, dotlock.c, COPYRIGHT, GPL, _regex.h, account.c,
	account.h, addrbook.c, alias.c, ascii.c, ascii.h, attach.c,
	attach.h, base64.c, browser.c, browser.h, buffy.c, buffy.h,
	charset.c, charset.h, color.c, commands.c, complete.c, compose.c,
	config.guess, config.sub, copy.c: Update FSF address (via sed,
	I hope nothing got mangled). Closes: #2071.

2005-09-17 17:39:18  Alain Bench  <veronatif@free.fr>  (brendan)

	* Muttrc.head.in: Clean up some Muttrc macros, and add macro
	'y' to jump to the mailboxes view. Closes: #2069.

2005-09-17 17:27:54  Brendan Cully  <brendan@kublai.com>  (brendan)

	* main.c: Some minor cleanups: tell users to go to bugs.mutt.org
	instead of using flea; update copyright year in mutt -v;
	reorganise USE opts a little; break long strings so that -pedantic
	stops complaining. Not sure that last one is worth the trouble
	it causes the po team...

2005-09-17 01:07:54  Vincent Lefevre  <vincent@vinc17.org>  (brendan)

	* po/fr.po: Update.

2005-09-16 23:09:12  Kevin Scannell  <scannell@slu.edu>  (brendan)

	* configure.in, po/ga.po: Irish translation.

2005-09-16 15:20:59  Brendan Cully  <brendan@kublai.com>  (brendan)

	* build-release, po/Makefile.in.in: Move update-po out of make
	dist, into build-release. It seems to me that make dist should do
	as little as possible beyond putting the right files in a tarball.

2005-09-16 13:43:58  Ronny Haryanto  <ronnylist@haryan.to>  (roessler)

	* po/id.po: update

2005-09-16 11:02:00  Ivan Vilata i Balaguer  <ivan@selidor.net>
(roessler)

	* po/ca.po: update

2005-09-16 10:20:20  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(roessler)

	* po/ja.po: update

2005-09-16 10:19:46  René Clerc  <rene@clerc.nl>  (roessler)

	* po/nl.po: update

2005-09-16 02:15:45  Brendan Cully  <brendan@kublai.com>  (brendan)

	* doc/Makefile.in: Add stamp-doc-xml to "all".

	* doc/Makefile.in: stamp-doc-man is pointless as far as I can
	tell. Removed.

	* doc/Makefile.in: Tweak makefile so that the dist tarball
	doesn't always try to build docs.

	* configure.in: VERSION should go into CONFIG_STATUS_DEPENDENCIES,
	not CONFIGURE_DEPENDENCIES. Slap ma fro.

2005-09-15 23:18:48  Brendan Cully  <brendan@kublai.com>  (brendan)

	* Makefile.am, build-release: Move changelog target to
	update-changelog so that dist won't automatically invoke it,
	and have commit and build-release call it.

	* build-release: Now that 1.5.11 is out, previous versions won't
	be x.y.zi: adjust diff.

2005-09-15 14:24:39  roessler  (roessler)

	* po/zh_TW.po, po/ca.po, po/cs.po, po/da.po, po/de.po, po/el.po,
	po/eo.po, po/es.po, po/et.po, po/fr.po, po/gl.po, po/hu.po,
	po/id.po, po/it.po, po/ja.po, po/ko.po, po/lt.po, po/nl.po,
	po/pl.po, po/pt_BR.po, po/ru.po, po/sk.po, po/sv.po, po/tr.po,
	po/uk.po, po/zh_CN.po, VERSION, po/bg.po, reldate.h: automatic
	post-release commit for mutt-1.5.11

2005-09-14 14:15:06  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(brendan)

	* init.h: Refer to $use_envelope_from rather than old
	$envelope_from in description of $envelope_from_address.

2005-09-14 02:45:44  Brendan Cully  <brendan@kublai.com>  (brendan)

	* globals.h, init.h, sendlib.c: Add new $envelope_from_address
	variable for manually specifying the envelope sender. Rename (with
	compatibility synonym) $envelope_from to $use_envelope_from. Make
	$envelope_from subordinate to $use_e_f, as $from is to
	$use_from. From a discussion with TLR.

2005-09-13 20:36:17  Brendan Cully  <brendan@kublai.com>  (brendan)

	* doc/Makefile.in: Put chunked HTML manual in top doc directory
	instead of HTML subdirectory.  Solves a weird $distdir
	absolute/relative path nuisance.

2005-09-12 06:22:21  Brendan Cully  <brendan@kublai.com>  (brendan)

	* curs_lib.c, pop.c, pop.h, pop_lib.c: Teach pop driver about
	mutt_progress_bar. Allow progress bar to omit total size if zero
	(=unknown).

2005-09-10 18:47:17  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(brendan)

	* menu.c: Correct some inconsistencies introduced by
	$menu_context. Closes: #2019?

2005-09-10 06:02:04  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/imap.c, curs_lib.c: A pair of small optimisations to the
	progress bar.

2005-09-08 16:37:59  Brendan Cully  <brendan@kublai.com>  (brendan)

	* pager.c: Revert bogus change to last message detection in
	mutt_pager.

	* pager.c: Forget line number when resolving in pager. This
	is beginning to get messy - maybe it would be better to only
	remember on specific operations like sync.

	* mutt_socket.c: Set CLOEXEC on sockets in IPv4 code path like
	we do in IPv6.

	* pattern.c: Make stringmatch pattern detection stateless.

	* curs_lib.c: ifdef USE_SOCKET around mutt_progress_bar.

2005-09-08 07:09:46  Bernd Ahlers  <bernd@ba-net.org>  (brendan)

	* po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po,
	po/zh_TW.po, po/it.po, po/ja.po, po/ko.po, po/lt.po, po/nl.po,
	po/pl.po, po/pt_BR.po, po/ru.po, po/da.po, po/de.po, po/el.po,
	po/eo.po, po/es.po, po/et.po, po/fr.po, po/gl.po, po/hu.po,
	po/id.po, po/ca.po, po/cs.po: Correct some S/MIME po entries.

2005-09-07 08:01:59  Brendan Cully  <brendan@kublai.com>  (brendan)

	* curs_lib.c: Ensure progress bar rounds to $net_inc.

	* curs_lib.c, globals.h, imap/imap.c, imap/imap_private.h,
	imap/message.c, init.h, mutt_curses.h: Display progress meter
	when uploading/fetching IMAP data. Closes: #1772.

	* pager.c: Adjust gross hack to return to the same line in the
	pager after an index operation so that it doesn't shoot past the
	end of the file if there are fewer lines on return (eg when weed
	is set).

	* mx.c, pgp.c: Silence some GCC warnings about uninitialized
	variables.

	* build-release, configure.in, mutt.h: Remove international
	vs. U.S. distribution distinction. build-release expects the
	previous version to be x.y.zi and should be updated again
	for 1.5.12.

2005-09-06 16:46:44  Brendan Cully  <brendan@kublai.com>  (brendan)

	* doc/manual.xml.head: More documentation cosmetics (newlines
	between Usage: lines).

	* pager.c: Gross hack to return to the same line in the pager
	after executing an index function. Closes: #1210.

	* doc/manual.xml.head, imap/command.c, imap/imap.c, imap/imap.h,
	init.c, mutt.h, pattern.c: Extend pattern language to do simple
	string matches as well as regular expressions when the pattern
	is invoked with = instead of ~. And, when possible, perform
	full body searches on the IMAP server instead of locally, for
	an enormous speed boost.

	* imap/utf7.c, init.c, main.c, protos.h: Fix a memory leak in
	imap_utf7_decode and do a little cleanup on shutdown.  Get a
	high five from valgrind.

	* curs_main.c, main.c: Move SASL and IMAP shutdown hooks into
	main where they belong.

	* init.c: Release pwent after extracting data from it.

	* mutt_sasl.h, curs_main.c, mutt_sasl.c: Release global SASL
	state when quitting.

2005-09-05 04:22:45  Brendan Cully  <brendan@kublai.com>  (brendan)

	* doc/manual.xml.head: Documentation cosmetics (add some line
	breaks).

2005-09-04 20:10:25  Brendan Cully  <brendan@kublai.com>  (brendan)

	* init.h: Point $hide_top_limited to $hide_limited instead of
	$hide_missing. Likewise for $hide_top_missing. Closes: #2039.

	* init.h: Mention $sort_re in $strict_threads
	documentation. Closes: #2052.

	* doc/manual.xml.head: Add a push example. Closes: #1591.

2005-09-04 19:46:26  Rupert Levene  <rupert@levene.dyndns.org>	(brendan)

	* doc/manual.xml.head: Mention $include when describing how mutt
	prepares message replies. Closes: #1471.

2005-09-04 19:28:19  Dale Woolridge  (brendan)

	* pattern.c, protos.h, parse.c: Unfold message headers before
	performing ~h search. Closes: #1865.

2005-09-04 18:01:57  Zardoz@users.sourceforge.net  (brendan)

	* keymap.c: Teach keymap.c about KEY_NEXT. Closes: #1588.

2005-09-04 06:57:04  Alain Bench  <veronatif@free.fr>  (brendan)

	* doc/manual.xml.head, doc/manual.xml.tail: Note that <Tab>
	is bound to next-new-then-unread by default, rather than
	next-new. Closes: #1637.

	* curs_main.c, pattern.c: Allow empty limits, and limits in
	empty mailboxes. Closes: #1853, #1906.

2005-09-03 23:22:31  Brendan Cully  <brendan@kublai.com>  (brendan)

	* send.c, attach.c: Note when mutt_edit_attachment fails and
	display error instead of prompting to abort an unmodified
	file. Closes: #2051.

2005-09-03 19:41:53  Alain Bench  <veronatif@free.fr>  (brendan)

	* contrib/gpg.rc: One should let GnuPG charset be automatically
	infered from whatever current locale, without hardcoding.

2005-09-03 04:34:25  Brendan Cully  <brendan@kublai.com>  (brendan)

	* doc/manual.xml.head: Just use EXPR as a place holder for regular
	expressions, instead of any of EXPR, USER, ID and SUBJECT. Noted
	by Vincent Lefevre.

2005-09-02 18:50:34  Brendan Cully  <brendan@kublai.com>  (brendan)

	* doc/manual.sgml.head, doc/manual.sgml.tail, doc/manual.xml.head,
	doc/manual.xml.tail, doc/Makefile.in: Rename manual.sgml.*
	to manual.xml.*.

2005-09-02 18:18:19  Alain Bench  <veronatif@free.fr>  (brendan)

	* keymap.c: Allow non-ascii characters in push arguments. Closes:
	#2023.

	* doc/manual.sgml.head, doc/muttrc.man.head, mutt.h, pattern.c:
	Adjust ~l to match all known lists, add ~u to match only
	subscribed lists.  Normalise pattern ordering in docs. Closes:
	#2050.

2005-09-01 17:07:14  Brendan Cully  <brendan@kublai.com>  (brendan)

	* configure.in, imap/auth_sasl.c, main.c, mutt_sasl.c,
	mutt_sasl.h, pop_auth.c: Remove obsolete Cyrus SASL 1.5 support.

	* doc/chunk.xsl, doc/html.xsl: Docbook support files, dropped
	in the initial commit.

	* doc/manual.sgml.tail, configure.in, doc/Makefile.in,
	doc/manual.sgml.head, makedoc.c: Convert documentation from
	linuxdoc to docbook format. Let the bug avalanche begin.

2005-08-30 21:34:36  Lars Hecking  <lhecking@users.sourceforge.net>
(brendan)

	* configure.in: Don't define domain="no" when configured
	--without-domain. Closes: #2046.

2005-08-24 15:17:43  Brendan Cully  <brendan@kublai.com>  (brendan)

	* pgp.c: Don't treat PGP inline signature verification errors
	as fatal.

2005-08-22 20:30:11  Brendan Cully  <brendan@kublai.com>  (brendan)

	* pgp.c: Pause after error message if PGP decode fails, in case
	mutt_copy_message overwrites.  Real error handling cleanup will
	have to wait...

	* pgp.c: Don't attempt to manipulate null pgp output file handles.

2005-08-16 18:10:11  Paul Walker  <paul@black-sun.demon.co.uk>	(brendan)

	* doc/manual.sgml.head, doc/mutt.man, main.c: -D dumps to stdout,
	not stderr.

2005-08-15 08:10:48  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* po/id.po: Fix \n mismatch.

2005-08-15 08:07:36  Ronny Haryanto  <ronnylist@haryan.to>  (roessler)

	* po/id.po: update

2005-08-15 08:06:40  Vsevolod Volkov  <vvv@mutt.org.ua>  (roessler)

	* po/ru.po: update

2005-08-14 21:32:17  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(brendan)

	* attach.c, send.c: Don't pass an empty filename to the default
	text editor when editing non-plain text. Also don't clobber
	$content_type when parsing it.	Closes: #2038.

2005-08-14 12:28:52  Roland Rosenfeld  <roland@spinnaker.de>  (roessler)

	* po/de.po: update

2005-08-14 02:22:47  Bernd Ahlers  <bernd@ba-net.org>  (brendan)

	* cryptglue.c, mutt_sasl.c, smime.c: Fix some S/MIME spelling
	inconsistencies.

2005-08-12 23:06:25  Brendan Cully  <brendan@kublai.com>  (brendan)

	* mutt_ssl_gnutls.c: Turn off input buffering for gnutls SSL
	certificate menu, as we do in the openssl version.

	* imap/auth_sasl.c: Override SASL initial response if the server
	spoke first in its continuation response. Closes: #2034.

	* doc/Makefile.in: Degnuify mutt.1 make rule. Imagining a world
	in which gnu documentation flagged any extensions to standard
	utilities almost makes me cry.

2005-08-12 12:52:11  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(roessler)

	* po/ja.po: update

2005-08-12 07:49:37  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* po/fr.po: Update.

2005-08-12 03:57:16  Brendan Cully  <brendan@kublai.com>  (brendan)

	* configure.in: Force configure to depend on VERSION. That's
	been bugging me for a while.

2005-08-11 21:46:26  roessler  (roessler)

	* po/pl.po, po/pt_BR.po, po/ru.po, po/sk.po, po/sv.po, po/tr.po,
	po/uk.po, po/zh_CN.po, po/zh_TW.po, po/bg.po, po/ca.po, po/cs.po,
	po/da.po, po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po,
	po/fr.po, po/gl.po, po/hu.po, po/id.po, po/it.po, po/ja.po,
	po/ko.po, po/lt.po, po/nl.po: automatic post-release commit
	for mutt-1.5.10

2005-08-11 21:22:41  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* Makefile.am, VERSION, reldate.h: Fix Makefile.am.

2005-08-11 21:16:38  Brendan Cully  <brendan@kublai.com>  (brendan)

	* copy.c, crypt-gpgme.c, crypt-gpgme.h, crypt-mod-pgp-classic.c,
	crypt-mod-pgp-gpgme.c, crypt-mod-smime-classic.c,
	crypt-mod-smime-gpgme.c, crypt-mod.h, crypt.c, cryptglue.c,
	handler.c, mutt_crypt.h, pgp.c, pgp.h, protos.h, smime.c, smime.h:
	Add error results to mutt_body_handlers, and check them when
	doing decode-save. Closes: #1919.

2005-08-11 21:08:55  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* pgp.c: Fix verification of clearsigned PGP messages.
	(debugged on IRC, mostly by Brendan)

2005-08-11 02:15:14  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>
(brendan)

	* configure.in: Don't test against nonexistent cache
	variable. Spotted by Torsten Veller.

2005-08-11 01:44:49  Brendan Cully  <brendan@kublai.com>  (brendan)

	* mutt_sasl.c: Silence some compiler warnings.

2005-08-09 20:13:03  Brendan Cully  <brendan@kublai.com>  (brendan)

	* doc/Makefile.in, doc/manual.sgml.tail: Replace raw latin1
	characters with entities, and enable latin output for
	manual.txt. I'm not sure this is ideal for non-latin (eg
	utf8) environments, but hopefully docbook will resolve this
	anyway. Closes: #2029.

	* doc/manual.sgml.head: Replace free ~ with &tilde;. Closes:
	#2030.

	* pgp.c: Move pgp failure check inside the if (invoke pgp)
	block. Should really Close: 2032.

	* pgp.c: Don't ftell pgp output file if there isn't one. Closes:
	#2032.

2005-08-09 16:24:15  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(brendan)

	* crypt-gpgme.c: Improve translatability of crypt-gpgme. Closes:
	#2020.

2005-08-09 16:10:40  Mads Martin Joergensen  <mmj@suse.de>  (brendan)

	* copy.c: Remove an unneeded cast, which introduces
	type-punning. Modified to use FREE instead of safe_free, since
	that seems to be the convention. I personally don't see the point.

2005-08-08 18:59:43  Brendan Cully  <brendan@kublai.com>  (brendan)

	* mutt_socket.c: Pause for a moment when a hostname fails to
	resolve. Closes #1942.	There are a number of cases where mutt
	cascades error messages. It might be nice if there were an error
	stack so that low level functions could push_error instead of
	displaying it right away, and the higher level ones could eg
	mutt_message(_("Failed to write FCC: %s"), pop_error ())...

	* main.c: Document -d option in mutt -h output. Closes #2027.

	* init.h: Remove undefined reference to unmailboxes
	command. Closes #2028.

	* imap/imap.c: Fix edge case where we might have to wait two
	timeouts to check for IMAP mail.

	* imap/command.c, imap/imap.c, init.h: Fix bug just introduced
	in lsub parsing that could cause mutt to loop indefinitely.
	Don't recheck subscriptions at every mailbox change, just the
	initial connection.

	* imap/imap.c: If imap_check_subscribed is set, mailbox or
	unmailbox folders in response to subscribe/unsubscribe commands
	in the browser.

2005-08-07 23:52:08  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/browse.c, imap/command.c, imap/imap.c, init.h, mutt.h:
	New option: $imap_check_subscribed. If set, mutt will fetch the
	set of subscribed mailboxes from the server and add them to the
	buffy list.

	* browser.c: Avoid a segfault attempting to browse an invalid
	IMAP URL.

	* imap/imap.c: Extend IMAP host completion to complete over open
	connections. Next up: account and folder hooks.

	* imap/imap.c: Allow IMAP tab-completion to complete over
	defined mailboxes, saving a bunch of typing for the hostname
	part of the URL. Should probably be extended to complete over
	open connections and possibly also folder/account hooks.

	* account.c, curs_lib.c, protos.h: Reuse mutt_get_field for
	mutt_get_field_unbuffered.

2005-08-07 06:20:37  Anders Helmersson
<anders.helmersson.utsikt@wasadata.net>  (brendan)

	* pager.c: Certain versions of libc may segfault during regex
	processing if given incomplete multibyte characters. Work around
	this by manually trimming the display buffer. I modified it
	somewhat to only check when the situation is most likely to occur:
	fgets has read all the way to the capacity of the buffer. Thanks
	also to Tamo for his comments.

2005-08-07 04:58:12  Brendan Cully  <brendan@kublai.com>  (brendan)

	* account.c, curs_lib.c, protos.h: Make username prompts
	unbuffered like password prompts are (no more folder-hook push
	garbage)

2005-08-06 22:20:55  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/imap.c, lib.c, lib.h, mutt.h, mutt_tunnel.c, sendlib.c:
	Report non-zero exit status of tunnel command. Closes: #1749.

	* imap/imap.c, imap/util.c, init.h, mutt.h, pop_lib.c: Replace
	pointless imap_force_ssl option with ssl_force_tls, which
	requires any connection (POP or IMAP) to a remote server to
	be encrypted, and attempts to negotiate encryption even if the
	capability isn't advertised (this last bit is of dubious utility,
	but essentially harmless since the connection would otherwise
	fail anyway). Closes: #1284.

	* imap/browse.c: Kill a warning.

	* init.c: Use isalnum instead of isalpha when parsing unbraced
	environment variable names, per tamo's suggestion. Closes #2022.

2005-08-05 02:16:46  Brendan Cully  <brendan@kublai.com>  (brendan)

	* attach.c, attach.h, browser.c, curs_main.c, mutt.h, mutt_menu.h,
	pager.h, protos.h: Move some attachment-related prototypes and
	structures into attach.h from the global headers. A small step
	towards sane dependency tracking and code cleanliness.

2005-08-04 01:15:52  brendan  (brendan)

	* compose.c: Don't unlink non-mutt files that would have been
	unlinked on send if the message is cancelled.

2005-08-03 15:34:14  Brendan Cully  <brendan@kublai.com>  (brendan)

	* account.c: Fix C precedence buglet in getlogin preventing it
	from actually calling getuser.

	* mutt_ssl.c: Don't double-free X509 certificates. This patch
	looks wrong, but it isn't.

2005-08-02 18:15:33  Brendan Cully  <brendan@kublai.com>  (brendan)

	* Makefile.am, po/Makefile.in.in, po/POTFILES.in: Remove
	mutt_ssl_nss.c from POTFILES.in. Also hack the makefiles to build
	keymap_alldefs.h in $(top_srcdir), since that's where xgettext
	looks. Not super clean I guess - the other alternative is to
	sed POTFILES.

	* globals.h, init.c, init.h, mutt.h, mutt_sasl.c, mutt_socket.c,
	mutt_ssl.h, mutt_ssl_nss.c, pop_lib.c, configure.in: Put moribund
	NSS support out to pasture.

	* compose.c, mutt.h: In compose menu, detach should be able to
	unlink files generated by mutt, but not files that existed before.

	* commands.c, pgp.c: More fiddling with PGP results. When
	rerunning PGP on a message, clear old security result bits to
	avoid confusing messages like 'decrypt failed; PGP signature
	successfully verified'.

	* pgp.c: Forget passphrase on PGP/inline decryption error,
	and improve status line messages.

	* configure.in: Make $docdir relative to $prefix, like the
	other prefixes.

	* contrib/Makefile.in, doc/Makefile.in: Be more selective about
	what to remove during uninstall. (closes #1625)

	* pgp.c: Also forget passphrase when encrypt fails, if
	signing. (closes #1025 again)

	* imap/message.c: Check that the entire message downloaded
	successfully on fetch, and don't treat a disappearing cache file
	as fatal. (closes #1483)

	* compose.c: Don't unlink attachments that you've decided not
	to send. (closes #1328)

	* pgp.c: Bump up size of PgpPass to 1024 from 256. Seems crazy,
	but it's harmless and it (closes #1207).

	* account.c: Fix password prompt for POP (more authentication
	ID fallout).

2005-08-01 22:37:22  Brendan Cully  <brendan@kublai.com>  (brendan)

	* doc/manual.sgml.head: Document <backtab> key.

	* pgp.c: Automatically forget PGP passphrase on sign or decrypt
	error. (closes #1025)

	* pgp.c: Display "successfully decrypted" message instead of
	nothing. Superseded by signature verification.

	* commands.c, pgp.c: Don't report PGP signature could not be
	verified unless there really is a signature verification problem
	(not some other PGP error).

	* Makefile.am: Install system muttrc from the build directory,
	not the source directory.

	* mbox.c: Restore Sort immediately after sorting by mailbox
	order in mbox_sync_mailbox.  (closes #972)

	* doc/Makefile.in, doc/mutt.man: Insert compile-time paths to
	system resources into mutt.man. (closes #854)

	* commands.c, protos.h: Report errors occuring in
	_mutt_save_message. (closes #847)

	* globals.h, mutt.h, mutt_ssl.c, muttlib.c: Cache SSL certificates
	that have been accepted but not saved until mutt exits. (closes
	#643).	Create mutt_add_list_n for adding non-character data to
	lists, have mutt_add_list call it.

	* mx.c: Report error creating FCC when writing to IMAP
	server. Addresses #423.

	* init.c: complete :set mbox_type=<tab>. (closes #1649)

2005-07-30 04:40:45  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(brendan)

	* pager.c: The builtin pager tries to wrap a line for ever if:
	0) the line contains a space or a tab character
	 followed by a very long word, and 1) M_PAGER_NSKIP flag is
	passed to it, and 2) $smart_wrap is set. (default)

2005-07-30 04:13:07  Vincent Lefevre  <vincent@vinc17.org>  (brendan)

	* curs_main.c, pager.c: When using colors, the status line of
	the index is displayed in a >bright color, even when the prefix
	"bright" is *not* given in the foreground color. The problem
	occurs when I have the following additional line:
	  color normal brightwhite black The problem is that BKGDSET's
	are missing.

2005-07-30 03:59:04  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(brendan)

	* recvattach.c: Don't refuse to delete attachments just because a
	message has been checked for "traditional" PGP encoding. (closes
	#2013)

2005-07-29 18:05:50  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(brendan)

	* init.c: "nospam foo" causes a segv if you have not set any
	"spam", because of a null pointer dereference.

2005-07-29 06:45:14  Brendan Cully  <brendan@kublai.com>  (brendan)

	* mutt_ssl_gnutls.c: Tweak a poorly-worded error message in the
	gnutls glue, pointed out by Vincent Lefevre.

	* imap/imap.c: Fix bug added in revision 3.26, where
	imap_sync_mailbox failed to check whether it was supposed to
	expunge before issuing a CLOSE.

2005-07-28 20:42:45  ttakah@lapis.plala.or.jp  (roessler)

	* crypt-gpgme.c: Fix mutt/2004; S/MIME user interface differences
	between GPGME and classic.

2005-07-28 19:47:40  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/auth_cram.c, imap/auth_login.c: Use mutt_account_getlogin
	instead of getuser for authentication methods that only support
	an authentication ID. As a side-effect, don't display a dangling
	authentication name pointer in getpass.

2005-07-27 15:08:43  Vincent Lefevre  <vincent@vinc17.org>  (brendan)

	* crypt-gpgme.c: Correct two typos in GPGME error messages.

2005-07-27 05:53:27  Brendan Cully  <brendan@kublai.com>  (brendan)

	* po/tr.po, po/uk.po, po/zh_CN.po, po/zh_TW.po, po/es.po,
	po/et.po, po/gl.po, po/lt.po, po/pt_BR.po, po/sk.po: Update
	Thomas' address in several out-of-date PO files. (closes #990)

	* mutt_ssl_gnutls.c: Silence some harmless warnings. Also,
	one day -pedantic is going to get held up on the causeway.

	* imap/command.c: More fiddling with fatal state handling. Not
	tested, and probably as wrong as what was already there.

	* muttlib.c: Rework mutt_save_confirm to support confirmappend
	with IMAP mailboxes.  I hope I got all cases right.

2005-07-26 23:57:38  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/imap.c: Adjust imap_access so that it doesn't issue STATUS
	on the selected mailbox, and have imap_open_mailbox_append use
	imap_access instead of rolling its own.

2005-07-26 18:45:01  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(brendan)

	* crypt-gpgme.c, mutt_ssl_gnutls.c, po/POTFILES.in: Partial
	application of Tamo's translation patch for gpgme and gnutls.

2005-07-26 16:44:20  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/imap.c: Don't check for the existence of a mailbox we're
	already in when appending.  (closes #1842)

2005-07-26 16:40:16  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>
(roessler)

	* init.h: Return $menu_move_off default to status quo ante.

	* init.h: hcache spelling fixes

2005-07-26 16:37:28  Tamotsu Takahashi	<ttakah@lapis.plala.or.jp>
(roessler)

	* enter.c: Introduce fall-back from complete-query to complete
	for the edit menu, so 'bind editor <tab> complete-query'
	becomes possible.

2005-07-26 06:14:34  "Brent J. Nordquist"  <brent@nordist.net>	(brendan)

	* doc/manual.sgml.head: Correct a couple of typos (and change
	&hyphen; to -: although the text version of the manual renders
	&hyphen;, the web version does not).

2005-07-26 05:58:29  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(brendan)

	* pattern.c: Interpret an empty limit as a request to cancel
	the current limit.  (Closes #1854)

2005-07-26 05:28:02  Brendan Cully  <brendan@kublai.com>  (brendan)

	* mutt_ssl.c: Don't offer to save expired or not-yet-valid
	certificates. Closes #1943 as a side-effect.

	* imap/imap.c, imap/imap_private.h: Rework IMAP CLOSE handling
	to avoid expunging messages when exiting without saving
	changes. (closes #1899)

2005-07-26 03:09:55  Ralf Wildenhues  <wildenhues@ins.uni-bonn.de>
(brendan)

	* mbyte.c, mutt_socket.c: There are some functions without ANSI
	prototypes left in mutt-owned sources.

2005-07-25 20:07:23  Brendan Cully  <brendan@kublai.com>  (brendan)

	* init.h: Update _MAKEDOC macro so that the documentation includes
	all variables.

2005-07-25 15:48:36  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* copy.c, imap/imap.c, mh.c, mutt.h, muttlib.c, thread.c: Get rid
	of IMAP-related special casing all over the thread editing code.

2005-07-25 04:56:38  brendan  (brendan)

	* imap/message.c: Indentation, mostly

2005-07-25 04:37:20  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/message.c: Minor cosmetic cleanup (fewer #ifdef HCACHE
	blocks)

2005-07-25 04:31:51  brendan  (brendan)

	* muttlib.c: Suppress a printf format warning

2005-07-24 18:33:31  Brendan Cully  <brendan@kublai.com>  (brendan)

	* muttlib.c: Typo in last commit.

	* imap/message.c, muttlib.c, protos.h: Merge full envelope from
	message fetch into original sparse envelope, instead of replacing
	it. This should be gentler on the various threading hashes and may
	(knock on wood) fix the threading segfault. Threading behaviour
	is observably better.

2005-07-24 18:18:29  brendan  (brendan)

	* imap/util.c: Revert Glanzmann's imap_parse_mailbox patch.

2005-07-24 16:53:59  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* thread.c: Try to fix threading bug triggered by duplicate
	references.

2005-07-24 16:51:38  Cedric Duval  <cedricduval+web@free.fr>  (brendan)

	* OPS, copy.c, curs_main.c, doc/manual.sgml.head, functions.h,
	imap/imap.c, mh.c, mutt.h, mx.c, pager.c, protos.h, thread.c:
	Add thread editing commands.

2005-07-24 16:12:12  Paul Walker  <paul@black-sun.demon.co.uk>	(roessler)

	* doc/manual.sgml.head, main.c, protos.h, init.c: This patch
	adds an option -D to dump mutt's configuration after all
	configuration files have been read.  Changes against PW's version:
	(1) curses isn't initialized; (2) variables are dumped to stdout,
	not to stderr.

2005-07-24 15:46:26  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* hash.c, imap/message.c, imap/util.c: This patch includes (1)
	a rewrite of hash_delete_hash, and (2) some changes to the IMAP
	code that Thomas Glanzmann made during an attempt to squash some
	segmentation fault in May.  There is no guarantee that this patch
	doesn't break things.  If it does, please complain to mutt-dev.

	* recvattach.c, smime.c: Fix S/MIME segmentation fault.  Bug
	reported by Mads Martin Joergensen; part fixed by Brendan Cully.

2005-07-24 08:59:44  Brendan Cully  <brendan@kublai.com>  (brendan)

	* copy.c: Don't assume messages in MMDF mailboxes have From
	separators when copying them.  Spotted by William Lovas. Initial
	patch by TAKAHASHI Tamotsu.

2005-07-23 23:35:17  Byrial Jensen  <byrial@image.dk>  (brendan)

	* curs_main.c, doc/manual.sgml.head, globals.h, main.c, muttlib.c:
	This is the current shortcut patch patch by Byrial Ole Jensen
	<byrial@image.dk>, updated by Christoph Berg <cb@df7cb.de>.

2005-07-17 00:43:05  Brendan Cully  <brendan@kublai.com>  (brendan)

	* account.c: Don't dereference null ImapUser in new getlogin
	function.

2005-07-15 07:29:37  Vincent Lefevre  <vincent@vinc17.org>  (brendan)

	* po/fr.po: PO update 20050613.

2005-07-06 23:49:08  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>
(brendan)

	* BEWARE: this fixes a little typo.

2005-07-06 21:03:00  Brendan Cully  <brendan@kublai.com>  (brendan)

	* hcache.c: Apply Aaron Crane's function pointer bandaid to the
	db4 open calls.

2005-06-28 19:26:54  Brendan Cully  <brendan@kublai.com>  (brendan)

	* account.c, account.h, globals.h, init.h, mutt_sasl.c: Add
	$imap_login variable to specify which user to authenticate as
	($imap_user controls which user's mail gets accessed). Currently
	this can't be specified interactively, since I can't think of
	a way to do it that wouldn't annoy users where login == user
	(the default value of $imap_login).

2005-06-24 22:32:38  Sébastien Hinderer  <Sebastien.Hinderer@libertysurf.fr>  (brendan)

	* crypt.c: Remove a warning about unused variable 'now' in
	crypt_valid_passphrase

2005-06-22 01:46:49  Sébastien Hinderer  <Sebastien.Hinderer@libertysurf.fr>  (brendan)

	* doc/devel-notes.txt: This patch fixes two small typos in
	dev notes.

2005-06-18 04:54:39  Brendan Cully  <brendan@kublai.com>  (brendan)

	* main.c: Update copyright dates according to latest activity
	in ChangeLog.

2005-06-12 18:28:29  Tamotsu Takahashi	<ttakah@lapis.plala.or.jp>
(roessler)

	* menu.c: Fix background colors for $arrow_cursor.

2005-06-12 18:24:31  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* curs_main.c, init.h, menu.c, mutt.h: Add $braille_friendly.
	Behavior originally suggested by Sébastien Hinderer
	<Sebastien.Hinderer@libertysurf.fr>.

2005-04-10 09:37:51  Johan Svedberg  <johan@svedberg.pp.se>  (roessler)

	* po/sv.po: update

2005-04-03 00:14:51  Daniel Jacobowitz	<dan@debian.org>  (brendan)

	* imap/imap.c, imap/imap_private.h, imap/message.c: Synchronise
	message flags before moving messages.

2005-03-31 04:55:09  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>
(brendan)

	* mh.c: Another hcache cygwin portability fix.

2005-03-23 10:51:11  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>
(roessler)

	* init.h, mh.c, mutt.h: Maildir header cache.

2005-03-22 19:58:15  Horst Schirmeier  <horst@schirmeier.com>  (roessler)

	* Makefile.am: Use install-exec-hook install of
	install-exec-local.

2005-03-22 19:53:49  Ronny Haryanto  <ronnylist@haryan.to>  (roessler)

	* po/id.po: update

2005-03-22 19:49:31  René Clerc  <rene@clerc.nl>  (roessler)

	* po/nl.po: update

2005-03-22 19:48:35  Roland Rosenfeld  <roland@spinnaker.de>  (roessler)

	* po/de.po: update

2005-03-22 19:46:59  Paul Walker  <paul@black-sun.demon.co.uk>	(roessler)

	* init.c, init.h: remove some unused functions.

2005-03-22 19:43:13  Vsevolod Volkov  <vvv@mutt.org.ua>  (roessler)

	* po/ru.po: update

2005-03-22 03:40:54  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>
(brendan)

	* hcache.c, imap/imap.c, imap/imap_private.h, imap/message.c,
	protos.h: Thomas graces us with this patch that resolves a
	type-size inconsistency in the UIDVALIDITY parser.

	Edited for correctness.

2005-03-17 09:30:06  Pawel Dziekonski  <pawel.dziekonski@pwr.wroc.pl>
(roessler)

	* po/pl.po: update

2005-03-16 07:01:59  Brendan Cully  <brendan@kublai.com>  (brendan)

	* doc/Makefile.in: As Ralf Wildenhues noted, the cygwin EXEEXT
	patch was incomplete. Note to self: avoid patching on short
	sleep. Starting tomorrow.

	* configure.in, doc/Makefile.in, hcache.c, Makefile.am: Various
	cygwin portability fixes

2005-03-15 04:40:40  Brendan Cully  <brendan@kublai.com>  (brendan)

	* crypthash.h: Don't define uint32_t anywhere but in
	config.h. Spotted by Alain Bench.

2005-03-13 16:35:35  roessler  (roessler)

	* po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po, po/zh_TW.po,
	po/id.po, po/it.po, po/ja.po, po/ko.po, po/lt.po, po/nl.po,
	po/pl.po, po/pt_BR.po, po/ru.po, po/sk.po, VERSION, po/bg.po,
	po/ca.po, po/cs.po, po/da.po, po/de.po, po/el.po, po/eo.po,
	po/es.po, po/et.po, po/fr.po, po/gl.po, po/hu.po, reldate.h:
	automatic post-release commit for mutt-1.5.9

2005-03-13 16:29:09  Morten Bo Johansen  <mojo@mbjnet.dk>  (roessler)

	* po/da.po: update

2005-03-05 18:15:20  Christoph Ludwig
<cludwig@cdc.informatik.tu-darmstadt.de>  (roessler)

	* crypt.c: The attached patch fixes a segfault I observed
	today: mutt failed to check for a possible null pointer in
	mutt_is_application_smime(Body*).

2005-03-05 07:10:57  brendan  (brendan)

	* mutt_sasl.c, mutt_sasl.h, mutt_socket.c, mutt_socket.h,
	mutt_ssl.c, mutt_ssl_gnutls.c, mutt_ssl_nss.c, mutt_tunnel.c:
	Rename open/close/read/write function pointers to avoid problems
	with systems where standard open/close/read/write functions are
	implemented with macros.  Thanks to Aaron Crane and others for
	their input about the problem.

2005-03-01 15:53:25  Vsevolod Volkov  <vvv@mutt.org.ua>  (roessler)

	* po/ru.po: update

2005-03-01 15:52:33  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>
(roessler)

	* init.h: This is a spelling fix supplied by Cameron Simpson.

2005-02-28 18:33:45  Mads Martin Joergensen  <mmj@suse.de>  (roessler)

	* curs_main.c: Fix a crash.

2005-02-28 15:15:23  Christoph Berg  <cb@df7cb.de>  (roessler)

	* init.h, menu.c, mutt.h: I've updated the menu_context patch to
	reintroduce the menu_move_off variable that hasn't made it into
	1.5.8. The patch fixes menu_prev_line and menu_next_line which
	didn't work with menu_context > 0 and also makes <current-middle>
	work even if there are less messages than screen lines (thanks
	to René Clerc and Vincent Lefevre for spotting these issues).

2005-02-28 14:37:09  Udo Schweigert  <mutt@cert.siemens.de>  (roessler)

	* smime.c: As pointed out in a separate thread, here is a patch
	which fixes the problem of a failing openssl after interactively
	selecting a recipient's key.

2005-02-27 03:18:23  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/message.c: Turn brain back on before committing patches
	(that modification I made to APPEND was bogus).

2005-02-27 02:44:45  Dan Hopper  <ku4nf@austin.rr.com>	(brendan)

	* imap/message.c: Don't lose N flag when uploading a message to
	an IMAP mailbox.  (Slightly modified from the original patch to
	prevent spurious space characters).

2005-02-21 04:42:34  Alain Bench  <messtic@oreka.com>  (roessler)

	* parse.c, pgp.c, sendlib.c: Bcc should be RFC2047-encoded, too.

2005-02-19 16:00:24  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* sendlib.c: Fix Debian 295528.

2005-02-17 03:33:00  Brendan Cully  <brendan@kublai.com>  (brendan)

	* OPS, browser.c, doc/manual.sgml.head, functions.h,
	imap/browse.c, imap/imap.c, imap/imap.h, imap/imap_private.h:
	New function: rename-mailbox (bound to 'r' by default).

	The lack of a rename-mailbox command for IMAP finally got too
	annoying.  It's a bit of a cut-and-paste job, but I've put my
	dreams of cleaning up the IMAP codebase on hold. Gotta grow up
	some time.

2005-02-16 09:34:06  ta_panta_rei  <7vvtch802@sneakemail.com>  (roessler)

	* po/el.po: update

2005-02-16 08:48:41  Ronny Haryanto  <ronnylist@haryan.to>  (roessler)

	* po/id.po: update

2005-02-15 19:28:24  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* doc/Makefile.in: Fix linuxdoc invocation.  Thanks to
	Tamotsu Takahashi for tracking this down to an idiotic
	non-backwards-compatible change to the way groff works.

2005-02-15 19:03:51  Ivan Vilata i Balaguer  <ivan@selidor.net>
(roessler)

	* po/ca.po: update

2005-02-14 08:48:43  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* po/fr.po: update

2005-02-13 17:37:31  Roland Rosenfeld  <roland@spinnaker.de>  (roessler)

	* po/de.po: update

2005-02-13 09:53:07  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* Makefile.am: Include crypt-gpgme.h with the distribution.

2005-02-13 00:25:37  Brendan Cully  <brendan@kublai.com>  (brendan)

	* configure.in, m4/gettext.m4, m4/iconv.m4: Use AC_HELP_STRING
	to pretty print configure --help screen, with mixed results.

2005-02-12 21:04:22  Brendan Cully  <brendan@kublai.com>  (brendan)

	* Makefile.am, imap/Makefile.am: Require at least automake 1.6

2005-02-12 20:56:36  roessler  (roessler)

	* po/zh_TW.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po,
	po/zh_CN.po, po/pt_BR.po, po/ru.po, po/lt.po, po/nl.po, po/pl.po,
	po/et.po, po/fr.po, po/gl.po, po/hu.po, po/id.po, po/it.po,
	po/ja.po, po/ko.po, po/da.po, po/de.po, po/el.po, po/eo.po,
	po/es.po, Makefile.am, VERSION, po/bg.po, po/ca.po, po/cs.po,
	reldate.h: automatic post-release commit for mutt-1.5.8

2005-02-12 20:46:48  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* po/fr.po: update

2005-02-12 20:45:36  Vsevolod Volkov  <vvv@mutt.org.ua>  (roessler)

	* po/ru.po: update

2005-02-12 20:20:42  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* configure.in: Give people more time to profile the inode
	sorting code; disabled by default for now.

	* globals.h, init.h, menu.c: Christoph Berg's menu_context,
	and a version of menu_move_off where that's not optional,
	but where mutt will just try to avoid moving off the bottom.
	Complain to mutt-dev if you want this to be optional.

2005-02-12 19:54:51  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(brendan)

	* imap/message.c, imap/util.c: Fix debian bug #275060 (editing
	on an imap server loses its flags).  Remove trailing delimiter
	from IMAP folder names.

2005-02-12 19:52:28  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* charset.c, mbyte.c: Recognize euc-jp-ms.  MORIYAMA Masayuki
	by way of TAKAHASHI Tamotsu.

2005-02-12 19:38:14  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(roessler)

	* doc/manual.sgml.head, doc/manual.sgml.tail, init.h, main.c:
	Trivial documentation fixes (TAKAHASHI Tamotsu, Brendan Cully,
	Paul Walker, Derek Martin).

	* editmsg.c: Partially fix debian bug #275060 (editing a message
	in a mbox loses its flags).

	* TODO: We have $include_onlyfirst.

2005-02-12 19:28:26  TAKIZAWA Takashi  <taki@luna.email.ne.jp>	(roessler)

	* muttlib.c, pager.c: column-length and byte-length are different

2005-02-12 19:19:25  Derek Martin  <invalid@pizzashack.org>  (roessler)

	* mutt.h, commands.c, curs_main.c, init.h: pgp-auto-decode: When
	$pgp_auto_decode is set, then mutt will check for traditional
	pgp on certain operations.  This is similar (but NOT identical)
	to the behavior known from PGP/MIME messages.

2005-02-12 19:12:40  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(roessler)

	* alias.c, doc/manual.sgml.head, globals.h, hdrline.c, init.c,
	init.h: unalternates now also adds to a list of exceptions;
	same behavior for unlists, and unsubscribe.  With some changes
	from tlr.

2005-02-11 04:12:03  Brendan Cully  <brendan@kublai.com>  (brendan)

	* configure.in, m4/libgnutls.m4, mutt_ssl_gnutls.c: autoconf
	support for gnutls using a slightly modified version of gnutls'
	own libgnutls.m4

	* globals.h, init.h: Only enable ssl_client_cert for openssl
	(spotted by Adeodato).

2005-02-09 09:05:38  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* pattern.c: Don't crash in mutt_pattern_exec when h->env is NULL.

2005-02-08 17:23:50  TAKAHASHI Tamotsu	<tamo@momonga-linux.org>
(roessler)

	* init.h, mutt.h, mutt_idna.c: Make IDN decoding optional.

2005-02-05 14:11:36  Thomas Roessler   <roessler@does-not-exist.org>
(roessler)

	* crypthash.h, imap/util.c, lib.h, mbyte.h, mutt_idna.h,
	patchlist.sh, remailer.h, rfc822.h: Remove a number of unnecessary
	config.h includes, and add some missing ones.  May fix some bugs.

2005-02-04 16:54:13  Brendan Cully  <brendan@kublai.com>  (brendan)

	* Makefile.am: Add smime_keys to EXTRA_SCRIPTS (for make dist).

2005-02-04 12:56:28  Tamotsu Takahashi	<ttakah@lapis.plala.or.jp>
(roessler)

	* Makefile.am: http://bugs.guug.de/db/17/1769.html This is
	necessary for FreeBSD.

2005-02-03 19:46:53  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>
(roessler)

	* hcache.c: this is a fix for hcache.c infrastructure which is
	about wrongly calculate unique id

2005-02-03 18:44:27  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* pgp.c: Fix PGP clear signature handling.

2005-02-03 17:01:44  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/auth.c, imap/auth_anon.c, imap/auth_cram.c,
	imap/auth_gss.c, imap/auth_login.c, imap/auth_sasl.c,
	imap/browse.c, imap/command.c, imap/imap.c, imap/message.c,
	imap/utf7.c, pgpkey.c, pgplib.c, pgpmicalg.c, pgppacket.c,
	pgppubring.c, pop.c, pop_auth.c, pop_lib.c, postpone.c,
	query.c, recvattach.c, recvcmd.c, regex.c, remailer.c,
	resize.c, rfc1524.c, rfc2047.c, rfc2231.c, rfc822.c, score.c,
	send.c, sendlib.c, sha1.c, signal.c, smime.c, snprintf.c,
	sort.c, status.c, system.c, thread.c, url.c, utf8.c,
	wcwidth.c, crypt-mod-pgp-classic.c, crypt-mod-pgp-gpgme.c,
	crypt-mod-smime-classic.c, crypt-mod-smime-gpgme.c, crypt-mod.c,
	crypt.c, cryptglue.c, curs_lib.c, curs_main.c, date.c,
	dotlock.c, edit.c, editmsg.c, enter.c, extlib.c, filter.c,
	flags.c, from.c, getdomain.c, gnupgparse.c, handler.c, hash.c,
	hdrline.c, headers.c, help.c, history.c, hook.c, init.c, keymap.c,
	lib.c, main.c, makedoc.c, mbox.c, mbyte.c, md5c.c, menu.c, mh.c,
	mutt.h, mutt_idna.c, mutt_sasl.c, mutt_socket.c, mutt_ssl.c,
	mutt_ssl_gnutls.c, mutt_ssl_nss.c, mutt_tunnel.c, muttlib.c,
	mx.c, pager.c, parse.c, pattern.c, pgp.c, pgpinvoke.c, account.c,
	addrbook.c, alias.c, ascii.c, attach.c, base64.c, browser.c,
	buffy.c, charset.c, color.c, commands.c, complete.c, compose.c,
	copy.c, crypt-gpgme.c: Add config.h to the top of every C file
	that could possibly want it.  Remove it from mutt.h

2005-02-01 03:36:39  Brendan Cully  <brendan@kublai.com>  (brendan)

	* imap/auth.c, imap/auth_anon.c, imap/auth_cram.c,
	imap/auth_gss.c, imap/auth_login.c, imap/auth_sasl.c,
	imap/browse.c, imap/command.c, imap/imap.c, imap/message.c,
	imap/utf7.c, protos.h: Pull config.h out of protos.h, add to
	top of every IMAP C file. This should probably be done to every
	C file, but the results need testing in case some files depend
	on the current (broken) includes.

2005-01-31 02:40:14  brendan  (brendan)

	* acconfig.h, configure.in, hcache.c, imap/imap_private.h,
	imap/message.c, m4/types.m4, protos.h: Begin removing deprecated
	autoconf 2.13 backward compatibility code.  Add AC_CHECK_TYPES
	macros for uin32/64 types, use uint64_t instead of long long in
	hcache code.

2005-01-29 19:15:07  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>
(roessler)

	* hcache.c: - make hcache.c conform to mutt codingstyle - use $Id$
	CVS keyword instead of %K% BitKeeper keyword

2005-01-28 16:40:33  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* pgp.c: Adeotato points out that feof() only works after a read.
	So, we now check for an unsuccessful fgetc().

2005-01-28 14:50:31  Paul Walker  <paul@black-sun.demon.co.uk>	(roessler)

	* signal.c: Trigger window resizing code when waking up from
	suspension.

2005-01-28 14:09:08  René Clerc  <rene@clerc.nl>  (roessler)

	* po/nl.po: update

2005-01-28 13:17:22  Werner Koch  <wk@gnupg.org>  (roessler)

	* Makefile.am, configure.in, crypt-gpgme.c, crypt-gpgme.h,
	crypt-mod-pgp-gpgme.c, crypt-mod-smime-gpgme.c, cryptglue.c,
	functions.h: gpgme integration.  See documentation for
	$crypt_use_gpgme, and http://www.gnupg.org/aegypten2/.

2005-01-28 13:00:36  Adeodato Simó  <asp16@alu.ua.es>  (roessler)

	* mutt_ssl_gnutls.c: The attached mini-patch from David Mosberger
	<davidm@napali.hpl.hp.com> seems to fix a segfault in the ia64
	architecture. Via Debian Bug#285001.

2005-01-28 10:01:30  roessler  (roessler)

	* po/tr.po, po/uk.po, po/zh_CN.po, po/zh_TW.po, po/lt.po,
	po/nl.po, po/pl.po, po/pt_BR.po, po/ru.po, po/sk.po, po/sv.po,
	po/el.po, po/eo.po, po/es.po, po/et.po, po/fr.po, po/gl.po,
	po/hu.po, po/id.po, po/it.po, po/ja.po, po/ko.po, VERSION,
	po/bg.po, po/ca.po, po/cs.po, po/da.po, po/de.po, reldate.h:
	automatic post-release commit for mutt-1.5.7

2005-01-27 20:52:13  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* main.c: Add USE_INODESORT to main.c's option dump.

2005-01-27 20:38:02  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(roessler)

	* commands.c: 0. In compose mode, press Ctrl-t to change
	Content-Type.  1. Type "application/octet-stream" for example.
	2. Press Ctrl-t again.	3. Type "text/plain; charset=us-ascii"
	4. You will be asked "Convert to us-ascii upon sending?"
	5. Press y or n.  6. You will see a strange message:
	 "Content-Type changed to Convert to us-ascii upon sending?."

2005-01-27 20:26:52  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* pgp.c: Return an error in pgp_decrypt_part when the PGP output
	file is empty.

2005-01-27 20:17:46  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>
(roessler)

	* curs_main.c: this patch doesn't raise an error if you try
	to sync an empty mailbox which makes it possible to use such a
	macro as this on an empty mailbox:

	macro index y "<sync-mailbox><change-folder>?"	macro pager y
	"<sync-mailbox><change-folder>?"

2005-01-27 19:34:50  David Shaw  <dshaw@jabberwocky.com>  (roessler)

	* pgp.c: Detect end of PGP armor header when a line is
	whitespace-only.

2005-01-27 19:18:15  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* smime.c: Void the S/MIME passphrase before prompting
	the user to re-enter it.  Noted by TAKAHASHI Tamotsu
	<ttakah@lapis.plala.or.jp>, but with memset replaced by
	smime_void_passphrase().

2005-01-27 19:00:59  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(roessler)

	* curs_lib.c: Add terminal newline when it lacks after editing
	a message.  Originally from TAKIZAWA Takashi.

2005-01-27 18:58:14  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* Makefile.am: Include mutt_ssl_gnutls.c with the distribution.

2005-01-27 18:54:24  Marco d'Itri  <md@Linux.IT>  (roessler)

	* globals.h, imap/imap.c, imap/util.c, init.c, init.h, main.c,
	mutt.h, mutt_sasl.c, mutt_socket.c, mutt_ssl.h, mutt_ssl_gnutls.c,
	pop_lib.c: GNUTLS support.  Used in Debian since Nov. 2001.

2005-01-27 18:48:41  Bill Nottingham  <notting@redhat.com>  (roessler)

	* mutt_sasl.c: With SASL, expect the server to prompt for
	additional auth data if we have some to send (#129961, upstream
	#1845)

	* contrib/sample.muttrc: Changes the sample.muttrc highlight to
	catch https URLs as well.

	* color.c, main.c: Support for the "default" color in Slang.

2005-01-27 18:45:37  Florian Weimer   <fw@deneb.enyo.de>  (roessler)

	* mh.c, configure.in: Read files in maildir folders in inode
	order; this seems to reduce seek overhead on Linux.  Enabled by
	default; to disable, run configure with --disable-inodesort.
	(By way of Mario d'Itri.)

2005-01-27 18:28:42  Marco d'Itri  <md@Linux.IT>  (roessler)

	* pgp.c: Improved good signature check.

	* contrib/gpg.rc, pgpinvoke.c: Make the default Muttrc work
	out the box for people using gnupg-agent.  Wrote and applied a
	one-line patch to make the %?p? conditional escape work correctly,
	patch forwarded upstream. (Closes: #277646)

	* pgpewrap.c: Don't segfault when invoked without any arguments.

	* contrib/gpg.rc, pgp.c: Evaluate gpg's machine-parseable status
	messages.

	* smime_keys.pl: Add some sanity checks to smime_keys.pl.

	* contrib/gpg.rc: A gpg command line contains both --verbose
	and --no-verbose, remove the first.

2005-01-26 14:33:08  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* status.c: And, thinking about it further, this should just be
	an empty string, not "(null)".

	* status.c: The last Context->pattern fix was still crap.
	Ooooops. (Thanks Ralf.)

2005-01-26 13:36:44  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>
(roessler)

	* Makefile.am, configure.in, globals.h, hcache.c, imap/imap.c,
	imap/imap_private.h, imap/message.c, init.h, main.c, protos.h:
	IMAP header cache.

2005-01-26 12:37:38  Ralf Wildenhues  <wildenhues@ins.uni-bonn.de>
(roessler)

	* addrbook.c, browser.c, commands.c, compose.c, imap/utf7.c:
	Make some functions static.

	* imap/command.c, imap/message.c: Fix some printf arguments.

2005-01-26 12:21:46  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* status.c: * status.c: A variant of
	<http://marc.theaimsgroup.com/?l=mutt-dev&m=110053165002362&w=2>.
	Spotted by Ralf Wildenhues <wildenhues@ins.uni-bonn.de>.

2005-01-17 02:24:49  Brendan Cully  <brendan@kublai.com>  (brendan)

	* cvslog2changelog.pl: cvs log emits a timezone after the hour,
	at least here. Adjust date regexp to handle that case.

2005-01-15 17:45:01  Adeodato Simó   <asp16@alu.ua.es>  (brendan)

	* po/cs.po: Major translation updates forgotten in mutt-po.
	(I missed cs in the last commit).

2005-01-15 08:01:35  Brendan Cully  <brendan@kublai.com>  (brendan)

	* Makefile.am: Update commit targets to work when builddir !=
	srcdir.

2005-01-15 07:43:30  Adeodato Simó  <asp16@alu.ua.es>	(brendan)

	* po/sv.po, po/ca.po, po/de.po, po/it.po: i18n updates.

	* doc/manual.sgml.head, doc/mutt.man, doc/muttrc.man.head,
	init.h: Sundry documentation nits fixed.  Debian #210679, #254294,
	#258621, #272579

2005-01-11 12:15:13  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* doc/manual.sgml.head, doc/muttrc.man.head: Document send2-hook.

	* send.c: send2-hook should also be executed after the first
	time the message is edited by the user.

2005-01-09 15:35:51  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* doc/muttbug.man, muttbug.sh.in: Replace muttbug and its
	documentation by a note that acknowledges the shut down of the
	bug tracking system.

2004-12-21 09:46:24  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* pgp.c: Fix Debian #275188.

2004-12-07 19:50:04  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* compose.c, hook.c, init.c, init.h, mutt.h, send.c: Add
	send2-hook and fix alternates handling.

2004-11-19 16:16:51  René Clerc  <rene@clerc.nl>  (roessler)

	* doc/manual.sgml.tail, doc/manual.sgml.head: Document
	tag-prefix-cond.

2004-11-08 08:43:17  Ralf Wildenhues  <wildenhues@ins.uni-bonn.de>
(roessler)

	* imap/imap_private.h: Having a signed one-bit bitfield is quite
	odd -- its value is either 0 or -1.  Although the current code
	is not broken because it doesn't test equality to 1, IMHO it's
	better not to use that.

	* imap/message.c: There's a size_t in imap_append_message not
	printed out portably.

2004-11-02 13:30:58  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* copy.h: Fix flag confusion.  Noted by Vincent Lefevre.

2004-10-30 21:59:00  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* browser.c, buffy.c, check_sec.sh, commands.c, edit.c,
	imap/auth_cram.c, imap/auth_gss.c, imap/imap.c, imap/message.c,
	lib.c, lib.h, mutt_ssl.c, muttlib.c, recvcmd.c, url.c:
	safe_strcat, safe_strncat.  Thanks to Ulf H. for noting the
	wrong use of strncat in part of the mutt code base.

	* smime.c: Fix bad code in smime_get_field_from_db.  Problem noted
	by Ulf Härnhammar <Ulf.Harnhammar.9485@student.uu.se>.

2004-09-29 11:27:33  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* lib.c: Fix mutt_unlink race condition for systems without
	O_NOFOLLOW.  Noted by Jarno Huuskonen <Jarno.Huuskonen@uku.fi>.

2004-09-07 08:09:39  Matthias Andree  <matthias.andree@gmx.de>	(roessler)

	* prepare: Fix parameter passing.

2004-08-31 15:41:03  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* configure.in: Add AC_GNU_SOURCE.

	* recvattach.c: Remove *two* layers of S/MIME from messages
	before building the attachment tree.  A generic solution would
	remove intransparent encodings all the way down the tree.

2004-08-30 20:10:10  Brendan Cully  <brendan@kublai.com>  (roessler)

	* compose.c: Only print additional information related to PGP
	in case the current message is indeed to be encrypted/signed
	with PGP.

	* globals.h, init.h, mutt_sasl.c, mutt_ssl.c: Here's a patch
	to allow mutt to use SSL client certificates to authenticate
	itself. To use, set ssl_client_cert to the path to your
	certificate file (containing both the certificate and the private
	key). It works with the SASL EXTERNAL authentication mechanism,
	so you'll need to have SASL enabled as well.

2004-08-30 20:03:35  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>
(roessler)

	* init.c: Fix a memory leak in the generic spam detection code.

	* muttlib.c, protos.h: This wipes duplicated code, which I
	introduced a while ago.

2004-08-30 19:47:47  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(roessler)

	* po/ja.po: update

2004-08-21 07:35:16  Ivan Vilata i Balaguer  <ivan@selidor.net>
(roessler)

	* po/ca.po: update

2004-08-17 16:06:48  René Clerc  <rene@clerc.nl>  (roessler)

	* po/nl.po: update

2004-08-17 15:56:23  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* configure.in, configure.in: Check for ssize_t.

2004-08-17 15:25:31  Ronny Haryanto  <ronnylist@haryan.to>  (roessler)

	* po/id.po: Corrected update.

	* po/id.po: update

2004-08-17 15:22:25  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* po/fr.po: update

2004-08-17 13:42:01  Johan Svedberg  <johan@svedberg.pp.se>  (roessler)

	* po/sv.po: update

2004-08-16 21:37:43  Adeodato Simó  <asp16@alu.ua.es>  (roessler)

	* headers.c: as of current cvs, setting "PGP: E" (or similar)
	when header-editing a message does not work. the OP is set
	(ENCRYPT, SIGN, whatever) but APPLICATION_PGP is missing.

2004-08-16 21:36:38  Brendan Cully  <brendan@kublai.com>  (roessler)

	* imap/imap.c: If STARTTLS fails to complete the SSL handshake,
	the error is not propagated and mutt will attempt to log in
	anyway, probably causing an infinite block on read. The attached
	patch closes the socket in this case, and propagates the error
	properly.

	* imap/auth_sasl.c: The attached patch causes mutt to attempt
	the next method in imap_authenticators if the previous method
	failed, even if the server reported that the method was
	available. Previously mutt would give up if any authentication
	method failed.

2004-08-16 21:34:22  Moritz Schulte   <moritz@g10code.com>  (roessler)

	* compose.c: Only print "Encrypt with" field in case the used
	S/MIME modules supports this feature.

2004-08-16 21:33:35  Pawel Dziekonski  <dzieko@pwr.wroc.pl>  (roessler)

	* po/pl.po: update

2004-08-11 12:31:21  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>
(roessler)

	* imap/imap.c: Fix two IMAP memory leaks.

	* imap/imap.c, imap/imap.h: Remove imap_close_connection.

	* menu.c: Fix a memory leak in mutt_menuDestroy.

2004-08-08 16:21:16  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>
(roessler)

	* ChangeLog, muttlib.c, protos.h: Fix a memory leak.

2004-08-08 16:19:15  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* pgp.c, smime.c: Fix the PGP and S/MIME menus. Complaints
	and suggestions of many lead to these changes.	See mutt-dev
	discussions around this time for details.

	* Makefile.am, crypthash.h, md5.h, sha1.h: Fix uint32_t
	portability problem. Reported by Steve Kennedy.

2004-08-07 05:23:33  Johan Svedberg  <johan@svedberg.pp.se>  (roessler)

	* po/sv.po: update

2004-08-02 08:03:46  Nathan Dushman  <nhd+mutt@andrew.cmu.edu>	(roessler)

	* imap/command.c: Fix the improvement to address #1655.

2004-07-22 01:10:55  Brendan Cully  <brendan@kublai.com>  (roessler)

	* imap/message.c: Quick fix for IMAP breakage.

2004-07-21 22:15:40  Nathan Dushman  <nhd+mutt@andrew.cmu.edu>	(roessler)

	* imap/command.c: This is a one-line patch that increases the
	speed at which mutt opens IMAP mailboxes, and addresses bug #1655.

2004-07-20 09:00:50  Pawel Dziekonski  <dzieko@pwr.wroc.pl>  (roessler)

	* po/pl.po: update

2004-07-20 08:17:21  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* imap/message.c, mutt.h, parse.c, send.c, url.c: Use List-Post
	headers when doing list-reply.

2004-07-19 21:44:23  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(roessler)

	* globals.h, imap/message.c, init.h: Fix #1548.  (The first
	variant, with $imap_headers specifying headers that are downloaded
	in addition to the set required for mutt to work properly.)

2004-07-19 21:41:43  David Champion  <dgc@uchicago.edu>  (roessler)

	* mbox.c, mh.c, pgp.c, sendlib.c: Fix some compiler warnings.

2004-07-19 21:39:28  Adeodato Simó  <asp16@alu.ua.es>  (roessler)

	* doc/manual.sgml.head: Fixing a missing newline.

2004-07-19 21:36:46  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>
(roessler)

	* Makefile.am: Fix IMAP breakage.

2004-07-15 08:08:32  David Champion  <dgc@uchicago.edu>  (roessler)

	* doc/manual.sgml.head, init.c, init.h, mutt.h: v3 of the generic
	spam detection patch.

2004-07-14 05:58:30  Moritz Schulte   <moritz@g10code.com>  (roessler)

	* pgp.c: Do not forget to handle special-case for gpg-agent.

2004-07-14 05:55:40  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* ChangeLog: Fix an earlier commit message.

2004-07-14 05:45:18  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(roessler)

	* browser.c: Fix Debian#237426.  (Experimental.)

2004-07-14 05:39:23  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* compose.c: Don't invoke "builtin" as an external editor.  Note:
	It's not clear to me that this is really the right approach.
	Revisit Editor/Visual some time.

2004-07-14 05:19:15  Elmar Hoffmann  <mutt-dev-ml@elho.net>  (roessler)

	* init.h, mutt.h, thread.c: By default Mutt hides the subject
	of messages in the thread tree that have the same subject as
	their parent or closest previously displayed sibling. This patch
	makes this optional, introducing the hide_thread_subject boolean
	setting which defaults to the old behaviour.

2004-07-14 05:07:18  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* mh.c: Some eye-candy during the delayed parsing of maildir
	folders.

2004-07-14 04:50:19  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(roessler)

	* init.h, sort.h: Hack to fix $sort_browser documentation.

	* copy.c, copy.h, handler.c, init.h, mutt.h, send.c:
	$include_onlyfirst, again.

2004-07-14 04:34:07  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* copy.c, copy.h, handler.c, init.h, mutt.h, send.c: Fix a cvs
	commit SNAFU: This commit undoes the include_onlyfirst patch,
	but leaves the generic spam detection by David Champion in place
	(which, erroneously, hadn't been committed automatically).

2004-07-14 04:16:58  ttakah@lapis.plala.or.jp  (roessler)

	* commands.c, copy.c, copy.h, doc/manual.sgml.head,
	doc/muttrc.man.head, globals.h, handler.c, hdrline.c, init.c,
	init.h, mutt.h, muttlib.c, parse.c, pattern.c, protos.h, send.c,
	sort.c, sort.h: Introduce $include_onlyfirst.

2004-07-12 13:35:27  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* pager.c: The limitations for OP_MAIL and OP_RECALL should
	be identical.

	* init.c, sendlib.c: Add some debugging code, and rewrite the
	previously-ununderstandable mutt_remove_duplicates.  (All this
	done on the search for a problem that ultimately turned out to
	be a configuration issue. Still, the changed code could come in
	handy some day.)

2004-07-11 16:25:00  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(roessler)

	* pager.c: Fix #1882.

2004-06-27 13:54:51  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* postpone.c: Experimental code for #1910.

2004-06-26 08:45:29  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* commands.c: Fix #1909.

2004-06-23 08:09:43  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* pgp.c: Zero out the PGP passphrase before asking for a new one.

2004-06-17 20:39:20  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* smime.c: Change S/MIME send menu behavior to xor instead of or,
	so it behaves the same way as the PGP send menu.

2004-06-17 20:36:13  Moritz Schulte  <moritz@g10code.com>  (roessler)

	* Makefile.am, compose.c, configure.in, crypt-mod-pgp-classic.c,
	crypt-mod-smime-classic.c, crypt-mod.c, crypt-mod.h, crypt.c,
	cryptglue.c, curs_lib.c, init.h, keymap.c, keymap.h, main.c,
	mutt.h, mutt_crypt.h, mutt_curses.h, pgp.c, pgp.h, smime.c,
	smime.h: This is the sequel to the crypto modularization changes
	I did on 2003-01-21.  Moritz added another abstraction layer
	which cleans up the code and allows the crypto modules to use
	their own option menu.	Everything should work as it used to
	but is now in a really good shape for part III, the Return of
	the GnuPG Easy Makers. -wk

	* crypt-mod-pgp-classic.c, crypt-mod-smime-classic.c, crypt-mod.c,
	crypt-mod.h: New files.

	* smime.c (smime_valid_passphrase, smime_send_menu): New
	functions.  * smime.h: Removed macro: smime_valid_passphrase.
	Declared: smime_valid_passphrase, smime_send_menu.  * pgp.c:
	Include "mutt_menu.h".	(pgp_valid_passphrase, pgp_send_menu):
	New functions.	* pgp.h: Removed macro: pgp_valid_passphrase.
	Declared: pgp_valid_passphrase, pgp_send_menu.	*
	mutt_curses.h: Declare: mutt_need_hard_redraw.	* mutt_crypt.h:
	Declare: crypt_pgp_valid_passphrase, crypt_pgp_send_menu,
	crypt_smime_valid_passphrase, crypt_smime_send_menu, crypt_init.
	Adjust WithCrypto definition since the GPGME backend does not
	exclude anymore the other `classic' backends.  (KEYFLAG_ISX509):
	New symbol.  * mutt.h (enum): New symbol: OPTCRYPTUSEGPGME.
	(struct body): New member: is_signed_data, warnsig.  * main.c
	(main): Call crypt_init.  * keymap.c (km_get_table): Support for
	MENU_KEY_SELECT_PGP and MENU_KEY_SELECT_SMIME.	(Menus): Added
	entries fuer MENU_KEY_SELECT_PGP and MENU_KEY_SELECT_SMIME.
	(km_init): Create bindings for MENU_KEY_SELECT_PGP and
	MENU_KEY_SELECT_SMIME.	* keymap.h (enum): New enum symbols:
	MENU_KEY_SELECT_PGP, MENU_KEY_SELECT_SMIME.  * init.h:
	New configuration variable: crypt_use_gpgme.  * compose.c
	(pgp_send_menu, smime_send_menu): Removed functions, they are now
	contained in the crypto backend modules.  (mutt_compose_menu):
	Use crypt_pgp_send_menu and crypt_smime_send_menu instead
	pgp_send_menu and smime_send_menu.  * cryptglue.c: Slightly
	rewritten in order to make use of the module mechanism used to
	access crypto backends.  * curs_lib.c (mutt_need_hard_redraw):
	New function.  * crypt.c (crypt_forget_passphrase): Adjust
	for new crypto backend interface.  (crypt_valid_passphrase):
	Stripped, use calls to crypt_pgp_valid_passphrase and
	crypt_smime_valid_passphrase.

2004-06-02 17:55:34  Alain Bench  <veronatif@free.fr>  (roessler)

	* parse.c: Fix #1759.

2004-04-30 06:49:37  Urs Janßen  <urs@tin.org>	(roessler)

	* doc/Makefile.in, doc/mbox.man, doc/mmdf.man: mmdf(5), new mbox
	(5).  (These changes have been sitting in my inbox for ages, tlr.)

2004-04-13 15:10:38  Brendan Cully  <brendan@kublai.com>  (roessler)

	* imap/message.c: Fix #1795

2004-04-13 08:02:12  David Shaw  <dshaw@jabberwocky.com>  (roessler)

	* crypt.c, init.h, mutt.h: Rename pgp_mime_ask to pgp_mime_auto;
	change the default; change the error message given if that
	variable is set to "no."

2004-04-12 21:43:33  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* lib.c, attach.c: Don't open a file for writing that we have
	unlinked before. Reported embarassingly long ago by Jarno
	Huuskonen <Jarno.Huuskonen@uku.fi>.

2004-04-12 21:19:31  Dale Woolridge  <dale-list-mutt-dev-2@woolridge.org>
(roessler)

	* po/uk.po, po/zh_CN.po, po/zh_TW.po, po/pt_BR.po, po/ru.po,
	po/sk.po, po/sv.po, po/tr.po, po/gl.po, po/hu.po, po/id.po,
	po/it.po, po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po,
	po/cs.po, po/da.po, po/de.po, po/el.po, po/eo.po, po/es.po,
	po/et.po, po/fr.po, compose.c, crypt.c, init.h, mutt.h,
	mutt_crypt.h, po/ca.po, postpone.c, send.c, sendlib.c: See:
	http://does-not-exist.org/mail-archives/mutt-dev/msg00843.html

2004-04-12 20:37:19  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* copy.c: Fix #1804.

	* commands.c, curs_main.c, mutt.h, mutt_crypt.h, pager.c,
	recvattach.c: A belated fix for #1808 (Debian #233106): Make
	sure check-traditional-pgp doesn't leave the pager context
	unnecessarily.	This makes message-hooks like this one safe:

	  message-hook '!(~g|~G) ~b"^-----BEGIN\ PGP\ (SIGNED\ )?MESSAGE"'
		\ "exec check-traditional-pgp"

2004-04-12 19:53:29  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(roessler)

	* doc/manual.sgml.head, init.h: Various documentation fixes,
	#1790.

2004-04-12 19:47:59  Alain Bench  <veronatif@free.fr>  (roessler)

	* doc/mbox.man, doc/muttbug.man: Fix #1831, Debian#237827.

2004-04-12 19:42:10  Joël Riou	<joel.riou@normalesup.org>  (roessler)

	* globals.h, init.c, init.h: Introduce config_charset.

2004-04-12 19:37:59  Vsevolod Volkov  <vvv@mutt.org.ua>  (roessler)

	* po/ru.po: update

2004-04-12 19:37:23  Im Eunjea	<eunjea@koru.org>  (roessler)

	* po/ko.po: update

2004-04-12 19:34:45  Holger Weiss  <lists@jhweiss.de>  (roessler)

	* doc/manual.sgml.head, doc/muttrc.man.head, mutt.h, pattern.c:
	Unreferenced messages pattern: ~$

2004-04-12 19:20:13  Paul WALKER  <paul.walker@st.com>	(roessler)

	* mutt_sasl.c: SASL2 needs errno.h.

2004-04-12 19:17:32  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* muttlib.c: Include the user ID with temporary file names.
	Suggested by eravin@panix.com in #1833.

	* doc/Makefile.in: Fix #1708 the brutal way, by installing
	multiple copies of the muttbug (pardon, flea) manual page.

2004-04-12 18:56:18  Neil Brown  <neilb@cse.unsw.edu.au>  (roessler)

	* imap/auth_sasl.c: Fix Debian #206078, #214758; patch submitted
	by Artur Czechowski as #1845.

2004-03-21 16:02:10  Ivan Vilata i Balaguer  <ivan@selidor.net>
(roessler)

	* po/ca.po: update

2004-02-12 08:51:07  roessler  (roessler)

	* po/uk.po, po/zh_CN.po, po/zh_TW.po, po/sk.po, po/sv.po,
	po/tr.po, po/pt_BR.po, po/ru.po, po/nl.po, po/pl.po, po/ja.po,
	po/ko.po, po/lt.po, po/id.po, po/it.po, po/gl.po, po/hu.po,
	po/es.po, po/et.po, po/fr.po, po/el.po, po/eo.po, po/da.po,
	po/de.po, VERSION, po/bg.po, po/ca.po, po/cs.po, reldate.h,
	ChangeLog: automatic post-release commit for mutt-1.4.2.1

2004-02-12 08:46:17  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* Makefile.am: (stable) Include regex.c and snprintf.c with
	the distribution.

2004-02-11 14:03:38  roessler  (roessler)

	* po/zh_TW.po, po/uk.po, po/zh_CN.po, po/tr.po, po/sv.po,
	po/ru.po, po/sk.po, po/pt_BR.po, po/pl.po, po/nl.po, po/ko.po,
	po/lt.po, po/ja.po, po/it.po, po/id.po, po/hu.po, po/gl.po,
	po/et.po, po/fr.po, po/eo.po, po/es.po, po/el.po, po/de.po,
	po/cs.po, po/da.po, po/ca.po, VERSION, po/bg.po, reldate.h,
	ChangeLog: automatic post-release commit for mutt-1.4.2

2004-02-11 10:07:17  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* configure.in, menu.c: Backport an old bug fix, and make sure
	configure can be created on recent systems.

2004-02-11 08:20:25  Mads Martin Joergensen  <mmj@suse.de>  (roessler)

	* init.c: Fix some warnings.

2004-02-08 11:41:31  Edmund GRIMLEY EVANS  <edmundo@rano.org>  (roessler)

	* charset.c: Fix a CP1255/8-related problem that's caused by a
	glibc/iconv bug.

2004-02-08 09:38:38  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* muttlib.c: Change the logic in mutt_open_read to only
	catch directories -- mutt may legitimately read devices (think
	/dev/null) or named pipes. Also delegate error reporting to the
	calling function by setting errno.

2004-02-07 21:40:11  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(roessler)

	* po/ja.po: update

2004-02-07 21:38:32  Juan Altmayer Pizzorno  <juan@altmayer.com>
(roessler)

	* mbox.c: Hi, off_t is a 64-bit number (like on Mac OS X/darwin),
	the percentages don't show right while mutt is reading/parsing
	a mailbox.  Here's a patch (against 1.5.6i) to fix that.

2004-02-07 21:36:41  David Yitzchak Cohen
<lists+mutt_devs@bigfatdave.com>  (roessler)

	* init.c, muttlib.c: Looking at the code, the problem is pretty
	obvious.  A recent patch to init.c (the one that was supposed
	to prevent Mutt from silently failing to read nonexistant RC
	files, IIRC) changed source_rc() to stat(2) the RC "file" before
	trying to mutt_open_read() it.	There's only one problem here:
	source_rc() has no way of knowing whether or not its "file"
	is a file or a command.  I'm attaching a patch that fixes the
	problem in what I believe is the right way.

2004-02-05 14:17:25  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* menu.c: Back out the patch for #1697.

2004-02-02 18:17:46  Roland Rosenfeld  <roland@spinnaker.de>  (roessler)

	* po/de.po: update

2004-02-02 10:26:14  Pawel Dziekonski  <dzieko@pwr.wroc.pl>  (roessler)

	* po/pl.po: update

2004-02-02 10:24:32  Im Eunjea	<eunjea@koru.org>  (roessler)

	* po/ko.po: update

2004-02-02 10:22:56  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* po/fr.po: update

2004-02-01 18:26:13  roessler  (roessler)

	* po/pt_BR.po, po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po,
	po/zh_CN.po, po/zh_TW.po, po/id.po, po/it.po, po/ja.po, po/ko.po,
	po/lt.po, po/nl.po, po/pl.po, VERSION, po/bg.po, po/ca.po,
	po/cs.po, po/da.po, po/de.po, po/el.po, po/eo.po, po/es.po,
	po/et.po, po/fr.po, po/gl.po, po/hu.po, reldate.h: automatic
	post-release commit for mutt-1.5.6

2004-02-01 18:00:16  Mike Schiraldi  <1074468571@schiraldi.org>
(roessler)

	* init.c: As you all know, running "mutt -F foo.rc" will have
	mutt read foo.rc as its config file. However, there is a bug --
	if you specify a directory (like accidentally typing "mutt -F
	/etc/mutt") mutt will silently ignore the flag and leave you
	wondering why it isn't working.

	Emil Sit posted a patch for this in March of 2002, but it seems
	to have slipped through the cracks. Here's the patch again;
	please consider it for inclusion.

2004-02-01 17:50:43  Luke Mewburn  <luke@mewburn.net>  (roessler)

	* buffy.c: Put a zero byte into the string, not into the pointer.

2004-02-01 17:48:25  Dan Ohnesorg  <Dan@ohnesorg.cz>  (roessler)

	* po/cs.po: update

2004-02-01 17:45:33  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* doc/manual.sgml.head: A cross-reference was missing.

	* doc/manual.sgml.head: Improve documentation of alterantes.

	* alias.c, doc/manual.sgml.head, doc/muttrc.man.head, globals.h,
	hdrline.c, init.c, init.h, mutt.h, mutt_regex.h, muttlib.c,
	protos.h: Turn alternates, lists, and subscribe into regular
	expression lists.

2004-01-12 22:56:58  Christoph Ludwig
<cludwig@cdc.informatik.tu-darmstadt.de>  (roessler)

	* smime_keys.pl: Avoid a Perl warning.

2004-01-12 20:24:09  Matt Kraai  <kraai@ftbfs.org>  (roessler)

	* doc/manual.sgml.head: Thanks.  The patch is committed to
	the CVS.

2004-01-12 19:59:38  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* crypt.c: Retainable PGP signatures were broken badly.  #1757.

2004-01-05 11:55:14  Robert Schiele  <robert.schiele@t-online.de>
(roessler)

	* mutt_sasl.c: Back out part of the previous SASL/IPv6 patch
	due to portability issues.

2004-01-04 11:10:21  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* init.c: Strike that.

	* init.c: Fix a memory management error.  Ouch.

2004-01-04 10:55:20  René Clerc  <rene@clerc.nl>  (roessler)

	* init.h: Fix hide_missing / hide_limited documentation.

2004-01-04 10:51:49  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* hdrline.c: Permit list patterns that match the domain name of
	an address; these patterns begin with '@'.  Example:  subscribe
	@bugs.guug.de matches all messages sent to the bug tracking
	system.

	* po/ru.po: Argh, I shouldn't replace files by patches.

2004-01-04 10:25:13  Cameron Patrick  <cameron@patrick.wattle.id.au>
(roessler)

	* menu.c: Fix #1697 (Debian  #219594.)

2004-01-04 10:21:19  Roland Rosenfeld  <roland@spinnaker.de>  (roessler)

	* po/de.po: update

2004-01-04 10:19:45  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(roessler)

	* po/ja.po: update

2004-01-04 10:08:02  Pawel Dziekonski  <dzieko@pwr.wroc.pl>  (roessler)

	* po/pl.po: update

2004-01-04 10:03:46  Michael Elkins  <me@sigpipe.org>  (roessler)

	* send.c: Fix #1488 (Debian#1882526): Honor Reply-To while
	generating Mail-Followup-To headers.

2004-01-04 09:59:42  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* init.h: Fix #1738; documentation issue re $from, $use_from.

2004-01-04 09:52:55  Michael Elkins  <me@sigpipe.org>  (roessler)

	* hook.c, send.c: Fix #1724, cannot use ~h pattern match with
	reply-hook.

2004-01-04 09:49:23  Vsevolod Volkov  <vvv@mutt.org.ua>  (roessler)

	* pop.h, pop_lib.c: Attached patch provides support of STLS
	(STARTTLS) command in POP3 protocol.

	* po/ru.po: update

2004-01-04 09:45:05  Brendan Cully  <brendan@kublai.com>  (roessler)

	* imap/imap.c: Fix #1703.

2004-01-04 09:42:35  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* smime.c: Fix a NULL pointer deference noted by Will Fiveash
	<william.fiveash@sun.com>.

2003-12-30 13:04:20  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* commands.c, crypt.c, mutt.h, mutt_crypt.h, smime.c: Handle
	partially signed messages more reasonably.  See #1743.

2003-12-29 11:44:35  Alain Bench  <veronatif@free.fr>  (roessler)

	* commands.c: Fix #844.

2003-12-29 11:37:41  Patrick Welche  <prlw1@newn.cam.ac.uk>  (roessler)

	* m4/gssapi.m4, mutt_sasl.c: A while ago I posted a similar
	patch which is necessary as when mutt tries to connect to an
	imap server over ipv6 it stores the address in a sockaddr which
	may not be large enough to hold the ipv6 address.

2003-12-17 17:42:02  Scott Koranda  <skoranda@gravity.phys.uwm.edu>
(roessler)

	* crypt.c: pkcs7-signature wasn't recognized properly in one
	more place.

2003-12-17 08:46:50  Michael Elkins  <me@sigpipe.org>  (roessler)

	* rfc1524.c: Fix possible core dump in mailcap nametemplate
	handling.

2003-12-10 00:48:57  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* thread.c: Avoid NULL pointer deference in threading code.

2003-12-03 08:19:11  Alain Bench  <veronatif@free.fr>  (roessler)

	* pager.c: Fix 1716.

2003-11-15 09:32:30  Velko Hristov  <hristov@informatik.hu-berlin.de>
(roessler)

	* po/bg.po: updat

2003-11-12 22:31:51  Edmund GRIMLEY EVANS  <edmundo@rano.org>  (roessler)

	* po/eo.po: update

2003-11-12 14:01:03  René Clerc  <rene@clerc.nl>  (roessler)

	* po/nl.po: update

2003-11-12 13:49:32  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* configure.in, mutt_idna.c, mutt_idna.h, mutt_socket.c: Fix
	IDN API incompatibility problems.

2003-11-12 11:47:46  duvall@emufarm.org  (roessler)

	* configure.in: Fix 1515, 1693.

2003-11-12 11:40:27  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* mh.c, sort.c: Fix dangling pointer problems in threading code.
	Noted and tracked down by q4xk3j002@sneakemail.com who also
	provided the initial fix.

2003-11-11 10:19:22  Ronny Haryanto  <ronnylist@haryan.to>  (roessler)

	* po/id.po: update

2003-11-10 18:02:26  Rudy Taraschi  <rudy@cae.com>  (roessler)

	* mutt_socket.c: Fix double-free problems related to IDN support.

2003-11-10 10:37:10  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* po/fr.po: update

2003-11-09 21:41:28  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* mh.c: Fix #1692.

	* send.c: Commit the fix for #1509. This must have been lost
	earlier this year.

2003-11-05 20:09:36  roessler  (roessler)

	* po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po,
	po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po,
	po/zh_TW.po, ChangeLog, VERSION, po/bg.po, po/ca.po, po/cs.po,
	po/da.po, po/de.po, po/el.po, po/eo.po, po/es.po, po/et.po,
	po/fr.po, po/gl.po, po/hu.po, po/id.po, po/it.po: automatic
	post-release commit for mutt-1.5.5.1

2003-11-05 12:17:10  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* Makefile.am: Include regex.c and snprintf.c with the
	distribution.  Noted by Lars Hecking.

	* build-release: Ups, we don't upload the CVS any more.

2003-11-05 09:51:10  roessler  (roessler)

	* po/pl.po, po/pt_BR.po, po/ru.po, po/sk.po, po/sv.po, po/tr.po,
	po/uk.po, po/zh_CN.po, po/zh_TW.po, ChangeLog, VERSION, po/bg.po,
	po/ca.po, po/cs.po, po/da.po, po/de.po, po/el.po, po/eo.po,
	po/es.po, po/et.po, po/fr.po, po/gl.po, po/hu.po, po/id.po,
	po/it.po, po/ja.po, po/ko.po, po/lt.po, po/nl.po, reldate.h:
	automatic post-release commit for mutt-1.5.5

2003-11-05 09:27:43  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* build-release: Use gpg for signing releases.

2003-11-03 10:30:58  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* attach.c: Fix a logic flaw in attachment saving.

2003-10-08 19:55:39  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* pgpkey.c: KeyTable is pgp_uid_t **, not pgp_key_t *.	Fix some
	sizeof statements accordingly.	Note that pgp_key_t is also a
	pointer, though, so this should not have broken things.

2003-10-06 09:58:35  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* query.c: Fiy memory corruption. (# 1659)

2003-10-04 22:12:10  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* lib.c: mutt_basename() was garbage.

	* doc/manual.sgml.head: Fix some tags.	Noted by Todd
	<Freedom_Lover@pobox.com>.

	* recvattach.c, attach.h, commands.c, compose.c, keymap.h, lib.c,
	lib.h, menu.c, mutt.h, mutt_menu.h, muttlib.c, pager.c, protos.h:
	This patch fixes various aspects of the attachment-saving user
	interface.  Changes include:

	* When tagging and saving multiple attachments, you can now use
	  the same target directory for multiple attachments.

	* When you can't save an attachment, you get an opportunity to
	  enter a new file name.

	* The menu cursor will highlight the attachment that you are
	  currently discussing with mutt.

	* Various bug fixes.

	This does, in particular, address #1619 (Debian#208430).

	* menu.c: Fix #1656.

2003-09-29 16:34:32  René Clerc  <rene@clerc.nl>  (roessler)

	* doc/muttrc.man.head: Fix typo.

2003-09-29 15:05:52  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* doc/dotlock.man, doc/mutt.man, doc/muttrc.man.head: Fix #1652
	(Debian #213007), noted by Jens Seidel <tux-master@web.de>.

2003-09-20 06:24:10  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* muttbug.sh.in: Adapt to new GNU coreutils by not using head (1).

2003-09-19 13:09:59  René Clerc  <rene@clerc.nl>  (roessler)

	* po/nl.po: update

2003-09-19 13:05:13  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* imap/utf7.c: Fix remaining (void **) casts.

2003-09-19 13:03:26  Mads Martin Joergensen  <mmj@suse.de>  (roessler)

	* imap/browse.c, imap/command.c, parse.c, pgp.c, pgpkey.c,
	pop_lib.c, query.c, recvattach.c, remailer.c, rfc1524.c,
	rfc2047.c, rfc2231.c, sendlib.c, smime.c, thread.c, addrbook.c,
	browser.c, color.c, compose.c, copy.c, crypt.c, curs_lib.c,
	edit.c, enter.c, handler.c, lib.c, lib.h, mh.c, mutt_idna.c, mx.c,
	pager.c: As the ones of you who compile with new gcc's probably
	have noticed, there's a lot of type-punning in Mutt. With help
	from Philipp Thomas, I've fixed all I could find in CVS (please
	double-check, one might have slipped through the cracks), I can
	make one for 1.4 CVS branch as well if wanted.

2003-09-19 12:56:49  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* send.c: Change abort_unmodified so it doesn't abort a message
	that has an attachment.  Catches the "send a file from the
	command line, quickly" case.

2003-09-11 16:59:54  Brendan Cully  <brendan@kublai.com>  (roessler)

	* mutt_sasl.c: This trivial patch closes #1516 (NI_WITHSCOPEID
	undefined). Thanks to Mads for the initial patch.

2003-09-11 07:27:23  Velko Hristov  <hristov@informatik.hu-berlin.de>
(roessler)

	* po/bg.po: Bulgarian translation.  (Seems like I screwed up an
	earlier commit.  -tlr)

2003-09-10 13:20:49  Jon Miles	<jon@zetnet.net>  (roessler)

	* pop_auth.c: In pop_auth.c:pop_auth_sasl(), if the main loop
	received anything back from the server that didnt begin with '+
	', it was bailing out and skipping the checks to see if there
	was a +OK response.

2003-09-07 10:11:49  Im Eunjea	<eunjea@koru.org>  (roessler)

	* po/ko.po: update.

2003-09-04 15:10:09  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* init.h: Fix some formatting glitches that lead to error messages
	when viewing the muttrc(5) manual page.

2003-09-04 14:59:57  Christoph Ludwig
<cludwig@cdc.informatik.tu-darmstadt.de>  (roessler)

	* smime.c: Fix verification bug when messages are S/MIME signed
	& encrypted.

2003-09-03 17:22:09  Dan Born  <dan@danborn.net>  (roessler)

	* postpone.c: I've attached a patch for bug number 1036, as
	reported at http://bugs.guug.de/db/pa/lmutt.html ("segfault
	when more than one msg is postponed").	This is a patch against
	mutt 1.4.1.

	As it was previously left, no one could reproduce it.  The problem
	occurs because sorting is disabled when opening the postponed
	folder, but the Sort global variable still tells mutt to use
	whatever sorting algorithm the $sort config option indicates.
	Eventually, the code would get to mutt_messages_in_thread and
	try to dereference a NULL thread object, causing the segfault.

2003-09-03 17:20:56  Pawel Dziekonski  <dzieko@pwr.wroc.pl>  (roessler)

	* po/pl.po: update.

2003-09-03 17:15:20  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(roessler)

	* po/ja.po: New ja.po.

2003-09-03 17:12:52  Velko Hristov  <hristov@informatik.hu-berlin.de>
(roessler)

	* configure.in: Bulgarian translation.

2003-09-03 17:10:37  Brendan Cully  <brendan@kublai.com>  (roessler)

	* mutt_ssl.c: Fix a segmentation fault which occurs
	when a certificate is rejected.  Bug noted by Rob Latham
	<rob@terizla.org>.

2003-09-03 17:09:09  Anatoly Vorobey  <mellon@pobox.com>  (roessler)

	* curs_main.c: The commands "read-thread" (^R) and
	"read-subthread" (Esc-R) do not honor the resolve variable (don't
	advance cursor after marking the thread/subthread as read),
	which, to me at least, is a nuisance.

2003-08-11 14:06:08  Brendan Cully  <brendan@kublai.com>  (roessler)

	* imap/imap.c: 1595: My guess is this bug is caused by
	mlarson@verisign.com's patch to check for UNSEEN rather than
	RECENT messages. This means that as long as there are messages
	in a mailbox either new or old, mutt will think it has new mail.

	The attached patch reverts that change. Let me know if it solves
	the problem.

2003-08-11 14:05:13  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* doc/muttrc.man.head: Fix a formatting bug.

2003-08-05 13:55:47  Brendan Cully  <brendan@kublai.com>  (roessler)

	* attach.c, buffy.c, commands.c, copy.c, editmsg.c, init.c,
	mbox.c, mx.c, mx.h, sendlib.c: This patch removes the Kendra
	format from mutt.  (The support was broken anyways.)

2003-08-02 11:01:09  Horvath Szabolcs  <horvaths@fi.inf.elte.hu>
(roessler)

	* po/hu.po: update

2003-07-29 10:11:05  Edmund GRIMLEY EVANS  <edmundo@rano.org>  (roessler)

	* pager.c: It seems that Solaris has an incorrect implementation
	of mbrtowc: when there is an encoding error and mbrtowc returns
	(size_t)(-1) no value should be stored in *pwc (the first
	argument), as I understand it, but here mbrtowc is storing 8
	when presented with the bytes "\xc8\x4d".

	However, relying on mbrtowc not to store anything in *pwc when
	there is an error is a bit silly; it makes sense to look at
	the return value. So, the following patch should be applied if
	Pawel can confirm that it fixes the problem. I've tested it and
	it worked for me with glibc's mbrtowc.

2003-07-24 18:40:50  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* alias.c, copy.c, handler.c, imap/command.c, imap/imap.c,
	imap/message.c, imap/util.c, init.c, intl/l10nflist.c,
	intl/loadmsgcat.c, intl/localealias.c, keymap.c, lib.c,
	makedoc.c, muttlib.c, pattern.c, rfc2047.c, rfc2231.c, rfc822.c,
	strcasecmp.c, url.c: Some functions/macros like isspace take an
	int and require the argument to have the value of an unsigned char
	(or EOF). Under Solaris, gcc complains when the argument is a char
	(as this is a possible bug, on platforms where char is signed,
	like Solaris). The attached patch fixes such problems (well,
	perhaps I've changed more than necessary, but this doesn't hurt).

2003-07-22 12:56:38  dshaw@jabberwocky.com  (roessler)

	* gnupgparse.c: When encrypting a message to a user that has more
	than one subkey, at least one of which is revoked or expired,
	mutt treats the entire key as unusable rather than just the
	subkey(s) in question.

2003-07-16 11:18:12  Brendan Cully  <brendan@kublai.com>  (roessler)

	* account.c, account.h, imap/auth_sasl.c, imap/imap.c: I noticed
	that my mutt hung when I tried SASL DIGEST-MD5 authentication
	(I'm not sure when this started). I believe this patch should
	solve that problem in a reliable way.

	This patch also attempts to reuse connections even when
	authentication fails, instead of just throwing away a perfectly
	good socket.

	* curs_lib.c, enter.c, keymap.c, keymap.h, mutt.h, mutt_curses.h,
	mutt_ssl.c: This patch redoes yesterday's unbuffered input
	patch. Now it uses a pseudo-option, which means less mess to carry
	down the call stack.  It also made it much easier to have the SSL
	certificate menu be unbuffered, which it is now. So push commands
	won't annoy you when entering passwords or accepting certificates.

2003-07-15 11:41:32  Brendan Cully  <brendan@kublai.com>  (roessler)

	* curs_main.c, globals.h, imap/command.c, imap/imap.c,
	imap/imap.h, imap/imap_private.h, imap/util.c, mx.c: The attached
	patch should keep all opened IMAP connections alive, no matter
	what mailbox you are currently in. With the patch that got
	committed yesterday, this should close bug 1523.

	(There was a typo in that patch. This one supersedes it.)

	* configure.in, .cvsignore: autoconf 2.5 compatibility.

2003-07-14 12:40:03  Hugo Haas	<hugo@larve.net>  (roessler)

	* send.c: Fix #1520.

2003-07-14 12:20:27  Pawel Dziekonski  <dzieko@pwr.wroc.pl>  (roessler)

	* po/pl.po: small fix.

2003-07-14 12:19:07  Brendan Cully  <brendan@kublai.com>  (roessler)

	* imap/command.c, imap/imap.c: On Sunday, 13 July 2003 at 18:09,
	Brendan Cully wrote:

	> The attached patch should help when the connection to your
	postponed > folder times out and you can't reconnect without
	restarting mutt. I'd > like anyone who has that problem to try
	it and let me know how it > works.

	I dug a little deeper. The attached patch seems to work better. It
	complains the first time you try to recall a message, but works
	the second.

	* account.c, curs_lib.c, enter.c, keymap.c, keymap.h, mutt.h,
	mutt_curses.h: The attached patch prevents mutt from reading the
	push buffer when asking for passwords. This is a proper fix for
	bug 1312. I think it's uncontroversial.

2003-07-04 17:15:34  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* imap/auth_sasl.c: Increase a buffer's size.

2003-07-04 17:07:22  Nicolas Rachinsky	<nr@rachinsky.de>  (roessler)

	* OPS, curs_lib.c, curs_main.c, functions.h, menu.c: Introduce
	tag-prefix-cond and end-cond.  This makes simple conditional
	execution of parts of macros possible.

2003-07-04 17:03:51  Bruno Postle  <bruno@postle.net>  (roessler)

	* curs_main.c, pattern.c: Display an empty index when no messages
	match search criteria.

2003-07-04 16:57:56  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* init.h, muttlib.c: Add a ':' flag to % expandos.  This will
	make sure that any dots are converted into underscores.  (_
	is already used for lowercasing the result of an expando.)

2003-06-04 14:01:39  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* muttlib.c: Don't colorize empty lines generated with
	state_attach_puts();

2003-05-29 17:48:28  David Shaw  <dshaw@jabberwocky.com>  (roessler)

	* imap/imap.c, pgp.c, po/eo.po, po/id.po: Fix part of #1564.

2003-05-29 17:47:10  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* init.c: Fix a segmentation fault which would occur when
	pgp_sort_keys is set in a configuration file, but mutt is compiled
	without PGP support.

	* gnupgparse.c: Fix PGP subkey handling when looking at key
	capabilities.  This should take care of the recent "mutt does
	not see all keys" problems.

2003-05-13 13:06:16  Dale Woolridge  <dale-list-mutt-dev-2@woolridge.org>
(roessler)

	* crypt.c: Fix gpg-agent use.

2003-05-13 12:53:20  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* doc/manual.sgml.head: Remove useless examples about treating
	text/enriched externally.  #1549; Debian #190309.

2003-05-13 12:50:04  Juan Altmayer Pizzorno  <juan@altmayer.com>
(roessler)

	* recvattach.c: view-attachments does not extract the message
	within a x-pkcs7-mime if it's only signed, but not encrypted.
	Such a message results, for example, from a decrypt-save if the
	message was previously encrypted and signed.

2003-05-13 12:45:35  Thomas Glanzmann  <sithglan@stud.uni-erlangen.de>
(roessler)

	* doc/manual.sgml.head: Fix an inconsistency between manual
	and code.

2003-05-13 12:43:45  David Shaw  <dshaw@jabberwocky.com>  (roessler)

	* gnupgparse.c, pgppubring.c: Currently, mutt uses the OpenPGP key
	algorithm to determine the capabilities of the key.  For example,
	in mutt, a key of type 1 (RSA) can both encrypt & sign.  This is
	not correct as per OpenPGP, however, where the capabilities of
	the key are determined by both the algorithm and key capability
	flags that are set on the key.	This can lead to user confusion
	when their RSA encrypt-only or sign-only key is listed for both
	signing and encryption in mutt.

	GnuPG lists these flags in key listings, so it is easy to take
	advantage of them.  Here is a patch to use the flags, as well
	as provide the flags in pgpring.  Note that the pgp+pgpring
	users won't see any change since the flags there are based on
	the key algorithm as they are now, but the GnuPG users will see
	an improvement.

2003-05-12 16:21:26  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* enter.c: Fix alias completion when the alias is entered as
	part of a group.  (E.g., The Tea Party: alias1, alias2, alias3;)

2003-05-03 20:07:40  Dan Nelson  <dnelson@allantgroup.com>  (roessler)

	* mutt.h, muttlib.c: Fix #1558.  (mutt_expand_fmt rewrite;
	OPT_MAX wasn't maximal.)

2003-04-15 13:17:05  René Clerc  <rene@clerc.nl>  (roessler)

	* compose.c: Fix two more cases in which ctrl-G is interpreted
	as M_YES.

2003-04-15 09:52:06  Dale Woolridge  <dale-flea-mutt-bug@woolridge.org>
(roessler)

	* compose.c: The "sign (a)s" code strips the pgp application
	bit causing drawing issues in redraw_crypt_lines().  Other bits
	(well bit = encrypt) are ignored as a result.  I've only tested
	with pgp, but the same problem exists in the smime code too.
	This inline patch (against cvs head revision) fixes the problem.

2003-04-14 09:09:53  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* init.h, mutt.h, send.c: Fix the PGP / S/MIME selection mess
	in send.c.  This patch adds two new configuration variables,
	$crypt_autopgp and $crypt_autsmime.  Both are set to "yes"
	by default.  By turning them off, you can disable the automatic
	selection of one or both mechanisms.  (Useful when your mutt is
	PGP- and S/MIME enabled, but you only use, say S/MIME.)

2003-04-11 15:15:04  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* send.c: Backing out the previous change. It was nonsense.

2003-04-11 11:56:58  Lars Hecking  <lhecking@nmrc.ucc.ie>  (roessler)

	* config.guess, config.sub, depcomp, install-sh, missing,
	mkinstalldirs: updates.

2003-04-11 11:56:22  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* send.c: Try to fix a PGP / S/MIME-related problem.  Found by
	Matt Larson <mlarson@verisign.com>, tracekd down by René Clerc
	<rene@clerc.nl>.

	* thread.c: Fix a segmentation fault.

2003-04-09 08:21:59  Zardoz@users.sourceforge.net  (roessler)

	* recvcmd.c: Fix #1531.  (recvcmd.c duplicate of #1528)

2003-04-08 22:32:56  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* lib.c: Avoid a division by zero.

	* color.c: Make sure has_colors() is only invoked when OPTNOCURSES
	is unset.  This fixes a segmentation fault on RH 8.0 which was
	observed by Matt Larson <mlarson@verisign.com>.

	* browser.c, enter.c, imap/imap.c, lib.c, mutt_idna.c, mx.c,
	sendlib.c, smime.c, thread.c: Try to catch a couple of cases
	in which parameters for malloc calls could overflow.  Thanks to
	Timo Sirainen for the heads-up.

	* po/es.po: Mark a translation as fuzzy in order to fix #1522.

2003-04-07 20:08:10  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* commands.c: Fix #1528.

2003-04-07 07:57:49  René Clerc  <rene@clerc.nl>  (roessler)

	* po/nl.po: update

2003-04-06 11:00:59  Ivan Vilata i Balaguer  <ivan@selidor.net>
(roessler)

	* po/ca.po: update

2003-04-02 09:05:19  Bjoern Jacke  <muttbug@j3e.de>  (roessler)

	* smime_keys.pl: - add a missing filehandle closure - some
	cleanups of unused/bogous code

2003-04-02 08:47:28  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* contrib/Makefile.in, contrib/colors.default,
	contrib/colors.linux: sample.muttrc-tlr would try to include
	my color configurations, which weren't distrubted.  Fix that.
	(Bug noted while helping someone else to configure mutt during
	a conference.)

	* contrib/sample.muttrc: Fix sample.muttrc.

2003-04-02 08:40:50  Gary Johnson  <garyjohn@spk.agilent.com>  (roessler)

	* curs_main.c: Here is the patch to fix the bug I reported
	earlier in this thread, that sometimes when changing folders,
	mutt would generate an error message and stop the further
	processing of folder-hooks.

2003-04-02 08:38:13  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* po/fr.po: update

2003-04-02 08:34:49  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(roessler)

	* po/ja.po: update

2003-04-02 08:31:00  Roland Rosenfeld  <roland@spinnaker.de>  (roessler)

	* po/de.po: update

2003-04-02 08:28:24  David Shaw  <dshaw@jabberwocky.com>  (roessler)

	* init.h, mutt.h, pgp.c: Here is the pgp_check_exit patch
	updated for 1.5.4.  This patch adds the pgp_check_exit option
	(enabled by default) that causes mutt to check the exit code
	of the PGP subprocess.	A non-zero exit code means that the
	subprocess failed and mutt will not continue to send the message.

	This is needed as in certain cases, PGP or GnuPG can fail to
	completely process a document (say, if the gpg.conf file is
	mangled, which is how I discovered the problem).  Without an
	exit code check, mutt will continue anyway and send the half
	processed file.

2003-04-02 08:21:09  Vsevolod Volkov  <vvv@mutt.org.ua>  (roessler)

	* po/ru.po: update.

2003-03-19 22:43:08  roessler  (roessler)

	* po/pl.po, po/pt_BR.po, po/ru.po, po/sk.po, po/sv.po, po/tr.po,
	po/uk.po, po/zh_CN.po, po/zh_TW.po, po/et.po, po/fr.po, po/gl.po,
	po/hu.po, po/id.po, po/it.po, po/ja.po, po/ko.po, po/lt.po,
	po/nl.po, ChangeLog, Makefile.am, VERSION, po/Makefile.in.in,
	po/ca.po, po/cs.po, po/da.po, po/de.po, po/el.po, po/eo.po,
	po/es.po, reldate.h: automatic post-release commit for mutt-1.5.4

	* po/tr.po, po/uk.po, po/zh_CN.po, po/zh_TW.po, po/sk.po,
	po/sv.po, po/pl.po, po/pt_BR.po, po/ru.po, po/ja.po, po/ko.po,
	po/lt.po, po/nl.po, po/gl.po, po/hu.po, po/id.po, po/it.po,
	po/et.po, po/fr.po, po/da.po, po/de.po, po/el.po, po/eo.po,
	po/es.po, VERSION, po/bg.po, po/ca.po, po/cs.po, reldate.h,
	ChangeLog: automatic post-release commit for mutt-1.4.1

2003-03-19 21:56:29  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* pgppubring.c: Fix some memory management calls. (Stable branch.)

2003-03-19 21:33:30  Edmund GRIMLEY EVANS  <edmundo@rano.org>  (roessler)

	* imap/utf7.c: Fix a buffer overflow in utf8_to_utf7. (Stable
	branch.)

	* imap/utf7.c: Fix a buffer overflow in utf8_to_utf7.

2003-03-18 14:51:52  Andrew W. Nosenko	<awn@bcs.zp.ua>  (roessler)

	* buffy.c, parse.c: - buffy.c (test_last_status_new): Fix memory
	  leak.  Envelope structure allocated by mutt_read_rfc822_header()
	  was never deallocated.

	- parse.c (mutt_read_rfc822_header): Comment added about
	  needing deallocate envelope structure returned by
	  mutt_read_rfc822_header().

	* mutt_idna.c: (mutt_addr_for_display): Fix memory leak.  `user'
	and `domain' buffers was never deallocated.

	(mbox_to_udomain): Fix memory leak.  `scratch' buffer was not
	deallocated when `mbx' doesn't contain '@'. Also rewritten for
	allocating memory only when needed and only how many as needed.

2003-03-12 13:00:03  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* copy.c, sendlib.c: We need to re-format address headers instead
	of just decoding them.

2003-03-07 14:55:53  Brendan Cully  <brendan@kublai.com>  (roessler)

	* mutt_sasl.c: The global callbacks set up in sasl_client_init
	are not copied by the SASL library, so they can't be allocated
	on the stack. This is the case with both versions of the SASL
	library, and I frankly don't understand why it hasn't caused
	problems before. Since it segfaults reliably on OS X for me now,
	I thought a patch would be in order.

2003-03-07 08:23:27  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* crypt.c, pgp.h: Don't use functions without importing the
	corresponding prototype.

	* mutt_idna.c: It seems like libidn doesn't like to translate
	NULL pointers.

2003-03-07 07:52:49  Jim Mock  <mij@soupnazi.org>  (roessler)

	* globals.h: globals.h is looking for crypt.h instead of
	mutt_crypt.h.

2003-03-06 21:23:53  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* send.c: Fixing a segmentation fault.	Here's how to reproduce
	it: Start mutt.  Compose a new message, with an attachment.
	Turn on PGP signing.  Press C-G on the pass phrase prompt.
	Turn off PGP signing.  Try to send the message.

2003-03-05 21:18:24  Andrew W. Nosenko	<awn@bcs.zp.ua>  (roessler)

	* protos.h, sort.c: Fix a warning.

	* mutt_idna.c: Fix tlr's pre-processor screw-up.

2003-03-04 09:51:07  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* mutt_idna.c, mutt_socket.c: Unset UseSTD3ASCIIRules, and set
	AllowUnassigned.  (Just reading some standards.)

2003-03-04 09:31:19  Edmund GRIMLEY EVANS  <edmundo@rano.org>  (roessler)

	* handler.c: Be more friendly about bad multipart/alternative
	bodies; #1478. Note that the relevant standards explicitly
	*forbid* nested MIME encodings.

2003-03-04 09:27:21  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* copy.c: Fix another stupid error, and decode IDNs in the
	CC header.

	* init.h: Fix two typos in one line.  Noted by Thomas Glanzmann
	and Steve Kennedy.

	* addrbook.c, alias.c, send.c: Fixing more IDN bugs.

2003-03-03 14:25:14  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* copy.c, sort.c: Fixing some nits.

	* mutt_socket.c: IDNA support for the socket back-end.

	* Makefile.am, addrbook.c, alias.c, charset.h, commands.c,
	compose.c, configure.in, copy.c, edit.c, hdrline.c, headers.c,
	init.c, main.c, mutt_idna.c, mutt_idna.h, pgpinvoke.c,
	protos.h, query.c, recvcmd.c, rfc822.c, rfc822.h, send.c,
	sendlib.c: IDN support for e-mail messages.  Things should work
	automagically once you have the GNU IDN library available from
	ftp://alpha.gnu.org/pub/gnu/libidn/ installed.	For IDN's which
	can't be losslessly recoded to your local character set, mutt
	should automatically fall back to using the ASCII representation.
	There's probably a considerable number of bugs in this, and the
	code may, at this point, not even compile on machines without
	libidn.  Will start working on that ASAP.

	* contrib/sample.muttrc, doc/manual.sgml.head, recvcmd.c,
	commands.c, init.h, mutt.h: Introduce a new option named
	$bounce, and fix some inconsistencies in the messages created
	when bouncing.	Based on work done by Thomas Glanzmann
	<sithglan@stud.uni-erlangen.de>.

2003-02-25 22:00:38  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* commands.c, recvcmd.c: Fix some (too lazy and tired to do all)
	of the inconsistencies between message and attachment bouncing.

	* crypt.c: I should test-compile things before committing.
	Stupid typo.

2003-02-25 21:41:32  Michael Elkins  <me@sigpipe.org>  (roessler)

	* query.c: Use mutt_strwidth for query response formatting.
	(#1477)

2003-02-25 21:37:59  Christian Vogel  <vogelchr@vogel.cx>  (roessler)

	* mx.c: Recognize MH folders used by sylpheed.

2003-02-25 21:35:24  jesus.climent@hispalinux.es  (roessler)

	* po/es.po: Fix a typo. (#1482)

2003-02-25 21:33:16  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* doc/manual.sgml.head: Remove some ftp.guug.de URLs from the
	manual. (#1485)

	* crypt.c: Fix #1486; noted by Jeroen Coekaerts
	<jeroen@coekaerts.be>.

2003-02-19 21:33:43  David Shaw  <dshaw@jabberwocky.com>  (roessler)

	* pgpmicalg.c: 3156 defined several micalg values (pgp-md5,
	pgp-sha1, etc.)  Since then, three more hashes have been assigned
	numbers in 2440bis.  Here is a patch to add values for pgp-sha256,
	pgp-sha384, and pgp-sha512 so mutt can properly handle them.

2003-02-19 21:31:19  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* parse.c: Fix a memory leak observed by Vineet Kumar
	<mutt-dev@virtual.doorstop.net>.

2003-02-13 09:55:02  David Shaw  <dshaw@jabberwocky.com>  (roessler)

	* init.h: Here are some updates to the muttrc docs (spell check,
	language tweaks, etc).	No functional changes - this is just
	language stuff.

2003-02-13 09:50:00  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* pgp.c: Fix #1444, Debian #178563.  The details of this problem
	were tracked down by Steven Barker <steve@blckknght.org>.

2003-01-31 00:15:03  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* init.h: Change the default for crypt_replyencrypt back to "yes".
	Noted by Thomas Poindessous in Debian bug #178899; also #1448.

	* pgp.c: Fix #1442 (thanks, Dale); properly initialize some
	pointers which could otherwise lead to crashes.

2003-01-30 23:54:30  David Shaw  <dshaw@jabberwocky.com>  (roessler)

	* crypt.c, init.h, mutt.h, mutt_crypt.h, send.c: Introduce
	$pgp_auto_traditional.

2003-01-30 23:48:36  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* flags.c: The IMAP ACL patch broke things.

2003-01-23 22:05:02  Nathan Dushman  <nhd+mutt@andrew.cmu.edu>	(roessler)

	* pop_auth.c: SASL2 support for popo_auth.c.

	* curs_main.c, flags.c, imap/imap.c, pager.c: The attached
	patch provides improved support for IMAP ACLs (on servers that
	support them).	This means that mutt will now write the Seen
	flag in mailboxes that allow it, even if the mailbox doesn't
	allow other changes.

2003-01-23 22:01:03  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* handler.c: Automatically use the text/plain handler for text/*
	body parts which don't have a handler of their own.

2003-01-21 18:56:10  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* cryptglue.c: Fix a typo which broke pgp-extract-traditional.

	* mutt_crypt.h: Fix an #ifdef.

2003-01-21 12:33:41  Werner Koch  <wk@gnupg.org>  (roessler)

	* Makefile.am, acconfig.h, attach.c, commands.c, compose.c,
	 configure.in, copy.c, copy.h, crypt.c, cryptglue.c, curs_main.c,
	 functions.h, globals.h, gnupgparse.c, handler.c, hdrline.c,
	 headers.c, hook.c, init.c, init.h, keymap.c, keymap.h,
	 main.c, mutt.h, mutt_crypt.h, muttlib.c, mx.c, pager.c,
	 parse.c, pattern.c, pgp.c, pgp.h, pgpkey.c, pgplib.c, pgplib.h,
	 pgppubring.c, pop.c, postpone.c, protos.h, recvattach.c, send.c,
	 sendlib.c, smime.c, smime.h, sort.h:  - To cleanup the pgp/smime
	 code and prepare for other backends.  - Support gpg-agent by
	 not asking for a passphrase - autconf cleanups.

	This is just a start and probably we need a couple of other things
	to do. One drawback is that the help menu does always list all
	crypto realted stuff even when configured for no crypto at all.
	Same goes for the configure options but I consider thsi a feature:
	It allows to use the same .muttrc for different versions of mutt -
	at least during development, this is an advantage.  This all might
	be fixed but requires some changes to the configuration system.

	Note, the use of the WithCrypto macro - it enables the compiler
	to do dead-code-elimination depending on the configured backend.
	This is better readable than all the nested ifdefs.  I did some
	short tests and it seems to work, althoug mutt's size does not
	change largely when compiled w/o crypto.

	cryptglue.c is new as a warpper to all crypto calls; some are
	still in crypt.c but they should eventually also be wrapped.
	We don't use function pointers to keep a path to use dlopen or
	runtime configured backends.  crypt.h is also new and replaces
	pgp.h and smime.h in most files (except for the backend).



	2003-01-06  Werner Koch  <wk@gnupg.org>

		* crypt.c (crypt_valid_passphrase): Detect gpg-agent and
		don't ask for the passphrase.  * pgp.c (pgp_decrypt_part,
		pgp_application_pgp_handler) (pgp_sign_message,
		pgp_encrypt_message) (pgp_traditional_encryptsign):
		Make sure that we never ever send the passphrase if the
		gpg-agent has been detected.  Likewise.

		* acconfig.h: Removed all remaining stuff as AC_TEMPLATEs
		to configure.in. BTW, we should consider to rename
		configure.in to configure.ac.

	2003-01-04  Werner Koch  <wk@gnupg.org>

		Replaced the use of HAVE_PGP and HAVE_SMIME by a more
		readable and extendable solution.

		* pgplib.h: Moved enum pgp_ring and KEYFLAGS_* to *
		crypt.h: here.	* smime.c (mutt_is_application_smime):
		Moved to * crypt.c (mutt_is_application_smime):
		here.  * pgp.c (mutt_is_application_pgp): Moved to
		* crypt.c (mutt_is_application_pgp): here.  * pgp.c
		(pgp_is_multipart_encrypted): Removed. Merged code with *
		crypt.c (mutt_is_multipart_encrypted): this.

		* mutt.h: Protect against double inclusion.

		* pgplib.h (struct pgp_keyinfo): Remove the typedef to
		pgp_key_t.  * crypt.h (pgp_key_t): Declare the typedef
		here.  NOTE:  This is now a pointer.  Changed all usages
		accordingly.

		* configure.in: Replace HAVE_PGP and HAVE_SMIME by the
		new CRYPT_BACKEND macros.  Always include all OPS.*.
		(LIBOBJ): Replaced by AC_LIBOBJ as required by newer
		autoconfs.  * Makefile.am (EXTRA_mutt_SOURCES): Move
		crypt.c to mutt_SOURCES.  (mutt_SOURCES): Add cryptglue.c
		(EXTRA_DIST): Add crypt.h

		* pgp.h, pgplib.h, smime.h: Use the header only
		when the approriate backend has been configured.  *
		pgp.c, pgpkey.c, smime.c: Build only if the approriate
		CRYPT_BACKEND_ macro is defined.  * pgp.h, smime.h,
		global.h: Moved all variable declarations to global.h
		because they are now always defined.

		* sort.h: Always define PgpSortKey, although it does
		not belong to here.

		* keymap.h: Unconditionally include all PGP and SMIME
		stuff.	* mutt.h: Ditto.  * protos.h: Ditto.

		* init.h (HAVE_SMIME): Unconditionally include all
		crypto related definitions.  Mark the doc entries with
		"(Crypto/PGP/SMIME only)".

		* globals.h: Replace gpg.h and smime.h by crypt.h.

		* functions.h: Always include all crypto commands.

		* copy.h: Unconditionally define the crypto related M_CM_

		* pgplib.h: Move APPLICATION_PGP and PGP* to crypt.h
		and include it.  * smime.h: Move APPLICATION_SMIME
		and SMIME* to crypt.h and include it.  * mutt_crypt.h
		(ENCRYPT,SIGN,GOODSIGN, BADSIGN): Move to crypt.h.

		* crypt.c: Replaced pgp.h and smime.h header by crypt.h.
		Always include all functions but shortcut them depending
		on WITHCRYPTO.	All over the place use WITHCRYPTO
		instead of ifdefs.  Replaced all direct calls of the
		backend fucntions by twrapper functions defined in
		cryptglue.c (crypt_get_keys): Removed prototypes.
		* pgp.h (pgp_findKeys): New prototype.	* smime.h
		(smime_findKeys): New prototype.  * cryptglue.c: New.
		* crypt.h: New.  * mutt_crypt.h: Moved all crypt_*
		prototypes to gcrypt.h.  Unconditionally use this file.

		* init.c: Replaced pgp.h and smime.h header by crypt.h.
		(parse_set): Use WITHCRYPTO instead of ifdefs.
		(mutt_var_value_complete): Ditto.

		* sendlib.c: Replaced pgp.h and smime.h header by crypt.h.
		(write_as_text_part): Now one macro using WITHCRYPTO.
		(mutt_write_mime_body): Use WITHCRYPTO instead of ifdefs.
		(mutt_make_message_attach): Ditto.  (mutt_write_fcc):
		Ditto.

		* send.c: Replaced pgp.h and smime.h header by crypt.h.
		(include_forward): Use WITHCRYPTO and validate
		passphrases for pgp and smime.	(include_reply): Ditto.
		(generate_body): Use WITHCRYPTO instead of ifdefs.
		(ci_send_message): Ditto.

		* recvattach.c: Replaced pgp.h and smime.h header
		by crypt.h.  (mutt_gen_attach_list): Use WITHCRYPTO
		instead of ifdefs.  (mutt_attach_display_loop): Ditto
		(mutt_view_attachments): Ditto.

		* postpone.c: Replaced pgp.h and smime.h header by
		crypt.h.  (mutt_get_postponed): Use WITHCRYPTO instead
		of ifdefs.  (mutt_parse_crypt_hdr): Always include and use
		WITHCRYPTO instead of ifdefs.  (mutt_prepare_template):
		Use WITHCRYPTO instead of ifdefs.

		* pop.c: Removed pgp.h and smime.h.  (pop_fetch_message):
		Use WITHCRYPTO instead of ifdefs.

		* pattern.c: Replaced pgp.h and smime.h header by crypt.h.
		(Flags): Always include the crypto flags.  (msg_search):
		Use WITHCRYPTO instead of ifdefs.  (mutt_pattern_exec):
		Ditto.

		* parse.c: Removed pgp.h and smime.h.
		(mutt_parse_mime_message): Use WITHCRYPTO instead
		of ifdefs.

		* pager.c: Replaced pgp.h and smime.h header by crypt.h.
		(mutt_pager): Use WITHCRYPTO instead of ifdefs.

		* mx.c: Removed smime.h and pgp.h.  (mx_update_context):
		Use WITHCRYPTO instead of ifdefs.

		* muttlib.c: Replaced pgp.h and smime.h header by crypt.h.
		(mutt_needs_mailcap): Use WITHCRYPTO. Note, that there
		used to be an error when PGP was not configured so
		that TYPEAPPLICATION was not recognized for SMIME.
		(mutt_is_text_part): Use WITHCRYPTO instead of ifdefs.

		* main.c: Include crypt.h.  (show_version): Remove
		HAVE_PGP and HAVE_SMIME.  Add CRYPT_BACKEND_CLASSIC_PGP,
		CRYPT_BACKEND_CLASSIC_SMIME.

		* keymap.c: Include crypt.h so that we can test
		WITHCRYPTO.  (Menus): Always include pgp and smime.
		(km_init): Create smime and pgp bindings depending
		on WITHCRYPTO.	(km_get_table): Return OpPgp depending
		on WITHCRYPTO.

		* hook.c (mutt_parse_hook): Use WITHCRYPTO instead
		of ifdefs.  (mutt_crypt_hook): Always include.

		* headers.c: Replaced pgp.h and smime.h header by crypt.h.
		(mutt_edit_headers): Use WITHCRYPTO instead of ifdefs

		* hdrline.c: Replaced pgp.h and smime.h header by crypt.h.
		(hdr_format_str): Use WITHCRYPTO.

		* handler.c: Replaced pgp.h and smime.h header by crypt.h.
		(mutt_can_decode): Use WITHCRYPTO instead of ifdefs.
		(mutt_can_decode): Application/smime is now also checked
		when PGP support is not configured.  (mutt_body_handler):
		Use WITHCRYPTO

		* curs_main.c: Replaced pgp.h and smime.h header
		by crypt.h.  (mutt_index_menu): Shortcut crypto only
		operations depending on WITHCRYPTO.

		* copy.c: Replaced pgp.h and smime.h header by crypt.h.
		(_mutt_copy_message):

		* compose.c: Replaced pgp.h and smime.h header by crypt.h.
		(enum): Always include HDR_CRYPT and HDR_CRYPTINFO.
		(redraw_crypt_lines): Always include this fnc but shortcut
		it depending on WITHCRYPT.  Draw lines depending on
		the configured crypto support.	(pgp_send_menu):
		Always include this one.  Call wrapper functions.
		(smime_send_menu): Likewise.  (draw_envelope): Use
		WITHCRYPTO instead of ifdefs.  (mutt_compose_menu):
		Allow pgp/smime commands only when configured.

		* commands.c: Replaced pgp.h and smime.h header
		by crypt.h.  (mutt_display_message,pipe_msg,
		_mutt_pipe_message) (set_copy_flags, mutt_save_message,
		mutt_edit_content_type) (_mutt_check_traditional_pgp):
		Use pgp wrapper.

		* attach.c (mutt_view_attachment): Removed HAVE_GPG and
		HAVE_SMIME and replaced by global variable WITHCRYPTO.
		Replaced pgp and smime header by crypt.h.x

2003-01-09 17:27:25  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* pgppubring.c: Don't make a "hard" transition to the new GnuPG
	syntax in pgpring.  This change undoes one of David Shaw's
	changes which were just committed.

2003-01-09 17:24:41  David Shaw  <dshaw@jabberwocky.com>  (roessler)

	* gnupgparse.c, pgppubring.c: The latest GnuPG has new abilities
	to work with disabled keys.  Part of this change will eventually
	involve moving the 'd' that indicates a disabled key to a
	different part of the key listing.

	To smooth this transition, as of version 1.2.2, GnuPG will
	start giving the 'd' in both places (and will do this for a good
	long time).

	Here is a patch so mutt will accept either the old or new syntax.

2003-01-09 17:23:23  dshaw@jabberwocky.com  (roessler)

	* curs_lib.c: A recent change causes all mutt_yesorno prompts
	to come out as [yes]/yes or [no]/no.  Here's a fix.

2003-01-05 22:16:02  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* smime_keys.pl: Error checking for the creation of the temporary
	directory; also, use file mode 0700.

2003-01-05 22:08:25  Bjoern Jacke  <bjoern@j3e.de>  (roessler)

	* smime_keys.pl: Improve temporary file handling.

2003-01-05 22:02:37  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* commands.c: Another mutt_yesorno() change, in order to correctly
	interpret a C-g.

2003-01-05 22:00:00  Armin Wolfermann  <aw@osn.de>  (roessler)

	* recvcmd.c, send.c, alias.c, attach.c, commands.c, curs_lib.c,
	main.c, muttlib.c, mx.c, pgpkey.c: Fix a number of invocations
	of mutt_yesorno(): Always explicitly use the M_YES and M_NO
	constants.  Fixes a couple of cases in which C-g would be
	mis-interpreted.

2003-01-03 18:07:36  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* pgp.c: Detect in-line key material when checking for traditional
	PGP messages.

2002-12-22 20:04:51  René Clerc  <rene@clerc.nl>  (roessler)

	* po/nl.po: update

2002-12-22 20:01:32  Bjoern Jacke  <bjoern@j3e.de>  (roessler)

	* smime_keys.pl: Remove an unnecessary invocation of "cat";
	call openssl with the full path.

2002-12-22 11:20:00  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* po/fr.po: Another fr.po update for the CVS (taking into account
	the change in pgpkey.c:486)...

2002-12-22 11:17:24  Martin Michlmayr  <tbm@cyrius.com>  (roessler)

	* hdrline.c, init.h: Add %A to the format strings, which expands
	to the reply-to address (if present) or to the author's address
	when there's no Reply-To header.

2002-12-21 20:32:13  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* ChangeLog: ok, gotos suck.

	* curs_main.c: OK, Michael is right: Gotos suck. ;-)

2002-12-21 13:25:11  Vsevolod Volkov  <vvv@mutt.org.ua>  (roessler)

	* po/ru.po: update

2002-12-20 09:37:59  David Shaw  <dshaw@jabberwocky.com>  (roessler)

	* pgpkey.c: Minor tweak to an error message.

2002-12-20 09:29:12  Pawel Dziekonski  <dzieko@pwr.wroc.pl>  (roessler)

	* po/pl.po: update

2002-12-19 11:48:58  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* doc/manual.sgml.head, doc/muttrc.man.head: Improve the
	documentation of pgp-hook/crypt-hook.

	* pgpkey.c: Don't bother the user with weak keys when there's
	a strong one.  Experimental, based on discussions on mutt-dev.

	* cvslog2changelog.pl: Identify both the author of a change and
	the one who committed it to the CVS in the changelog.

2002-12-19 07:42:36  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* po/fr.po: update

2002-12-19 07:37:01  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* Makefile.am: Michael doesn't have $VISUAL set.

2002-12-18 17:29:56  Sahil Tandon  <sahil@brandeis.edu>  (me)

	* init.h:	I found a small typo in the manual, specifically
		at this[1] URL.  The description of the smart_wrap
		variable reads: "Controls the display of lines longer
		then the screen width in the internal pager."  The word
		_then_ should be _than_ if I'm not mistaken.

2002-12-18 10:26:35  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po,
	po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po,
	po/zh_TW.po, po/ca.po, po/cs.po, po/da.po, po/de.po, po/el.po,
	po/eo.po, po/es.po, po/et.po, po/fr.po, po/gl.po, po/hu.po,
	po/id.po, po/it.po: make update-po

	* mkchangelog.sh: Turn on compression when getting log messages
	from the CVS server.  (Now that I don't have the server locally,
	bandwidth is expensive...  ;-)

	* keymap.c: Make the messages from the what-key function
	internationalizable.

	* crypt.c, crypt.h, mutt_crypt.h, pgp.c, pgp.h, smime.c, smime.h:
	Rename crypt.h to mutt_crypt.h.

	* Makefile.am: cvs update ChangeLog before trying to update
	it locally.

2002-12-18 07:37:56  Roland Rosenfeld  <roland@spinnaker.de>  (roessler)

	* po/de.po: update

2002-12-17 13:45:16  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* po/fr.po: update fr.po

2002-12-17 13:04:29  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* .cvsignore: Ignore some more files.

	* Makefile.am, mkjtags.c: Remve that jed tags generator.  I don't
	use it anyway.

	* cvslog2changelog.pl: Adding Michael's address to the changelog
	generator.

	* build-release: Adopting the release-building script to the
	new changelog process.

2002-12-17 10:37:24  roessler  (roessler)

	* po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po, po/zh_CN.po,
	po/zh_TW.po, po/hu.po, po/id.po, po/it.po, po/ja.po, po/ko.po,
	po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po, po/es.po, po/et.po,
	po/fr.po, po/gl.po, VERSION, build-release, po/ca.po, po/cs.po,
	po/da.po, po/de.po, po/el.po, po/eo.po, reldate.h: automatic
	post-release commit for mutt-1.5.3

2002-12-17 09:50:26  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* OPS, curs_main.c, functions.h: Experimental: Introduce
	{next,previous}-new-then-unread.  These functions behave
	like {next,previous}-new as long as new messages are visible.
	When no new messages are visibuel any more, there's a fall-back
	to {next,prev}-unread.

	Memo to self: Impose a weekly quota on the use of goto statements.

2002-12-16 20:28:46  Edmund GRIMLEY EVANS  <edmundo@rano.org>  (roessler)

	* handler.c, rfc2047.c, url.c: Fix #1424.

2002-12-16 17:59:51  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* pgp.c: Experimental short-cut code if the "image" of an address
	under a pgp-hook looks like a hexadecimal key id.

2002-12-13 15:53:36  David Shaw  <dshaw@jabberwocky.com>  (roessler)

	* lib.c: Fixing Thomas' screw-up in mutt_concat_path.

2002-12-13 11:00:44  René Clerc  <rene@clerc.nl>  (roessler)

	* po/nl.po: update.

2002-12-11 22:47:57  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* muttlib.c, pgp.c, protos.h, send.c: Fix #1417; thanks to
	Derek D. Martin <ddm@sophic.org> for the excellent observation.
	(In addition to the fix proper, some tracking of temporary files
	is added to mutt's debugging output.)

	* crypt.c: Call endwin() before calling PGP for traditional
	encryption.

2002-12-11 15:51:57  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* po/fr.po: update.

2002-12-11 15:20:21  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* browser.c, complete.c, hook.c, init.c, lib.c, lib.h: Herbert
	Martin Dietze <herbert@the-little-red-haired-girl.org> notes that
	mutt may currently build IMAP URLs like imap://exchange//herbert
	for FCCs.  The fix in this patch is to include a function named
	mutt_concat_path which concatenates path elements, but avoids
	the creation of double slashes.  (These don't create problems
	when you're just accessing the file system, but apparently thy
	do cause problems with IMAP.)

	* imap/auth.c, imap/command.c, imap/imap.c, imap/imap.h,
	imap/util.c, date.c, dotlock.c, dotlock.h, edit.c, editmsg.c,
	enter.c, extlib.c, flags.c, from.c, functions.h, gnupgparse.c,
	handler.c, hash.c, hash.h, headers.c, help.c, history.c,
	history.h, keymap.c, keymap.h, lib.c, lib.h, main.c, makedoc.c,
	mapping.h, menu.c, mh.c, mime.h, mkjtags.c, mutt_curses.h,
	mutt_menu.h, mutt_regex.h, mutt_socket.c, muttlib.c, mx.c, mx.h,
	pager.h, parse.c, pattern.c, pgp.c, pgp.h, pgpinvoke.c, pgpkey.c,
	pgplib.c, pgplib.h, postpone.c, protos.h, query.c, recvattach.c,
	recvcmd.c, remailer.c, remailer.h, resize.c, rfc1524.c, rfc1524.h,
	rfc2047.c, rfc2047.h, rfc2231.c, rfc2231.h, rfc822.c, rfc822.h,
	score.c, signal.c, snprintf.c, sort.c, sort.h, status.c,
	system.c, thread.c, url.c, addrbook.c, alias.c, attach.c,
	attach.h, browser.c, browser.h, buffy.c, buffy.h, charset.c,
	charset.h, commands.c, complete.c, compose.c, copy.h, crypt.c,
	crypt.h, curs_main.c: Fix Mike's and my e-mail addresses in
	copyright lines.

	* muttbug.sh.in: Ask for the user's e-mail address.

	* pager.c: Try to make search-next behave more closely to what
	people are used to, again.  The behaviour introduced by this
	patch will give you the previous search string as the default,
	but will search-next when you just press enter without changing
	the search string.

2002-12-10 20:56:52  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* imap/command.c, imap/imap.c, imap/message.c, imap/utf7.c,
	imap/util.c, score.c, send.c, sendlib.c, smime.c, thread.c, url.c,
	addrbook.c, alias.c, attach.c, browser.c, buffy.c, charset.c,
	color.c, compose.c, copy.c, crypt.c, curs_main.c, enter.c,
	gnupgparse.c, hash.c, history.c, hook.c, init.c, lib.c, main.c,
	mbox.c, menu.c, mh.c, mutt_ssl.c, mutt_ssl_nss.c, muttlib.c,
	mx.c, pager.c, parse.c, pattern.c, pgp.c, pgpkey.c, pgplib.c,
	pgppacket.c, pgppubring.c, pop.c, pop_auth.c, postpone.c,
	query.c, recvattach.c, remailer.c, rfc1524.c, rfc2047.c,
	rfc2231.c, rfc822.c: Replace safe_free calls by the FREE macro.

2002-12-09 19:06:40  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* Makefile.am: Minor formatting fix.

	* cvslog2changelog.pl: Change the ChangeLog format as suggested
	by  Martin Michlmayer.

	* send.c: Try to fix another obscure error in S/MIME auto-signing
	upon reply.

	* rfc822.c: Experimental patch to fix #1318.

2002-12-09 18:09:49  David Jardine  <david@jardine.de>	(roessler)

	* init.h: Documentation fix concerning %L in index_format.  #1313.

2002-12-09 18:05:54  David Shaw  <dshaw@jabberwocky.com>  (roessler)

	* mh.c, parse.c: Reduce the meaning of the mark_old option so
	it only controls whether new messages are marked as old when
	leaving the mailbox.

2002-12-09 17:54:25  Jesus Climent  <jesus.climent@hispalinux.es>
(roessler)

	* po/es.po: Fix a typo.  (#1392)

2002-12-09 17:52:50  Anders Helmersson	<anders.helmersson@telia.com>
(roessler)

	* addrbook.c, curs_lib.c, protos.h, query.c: Fix #1390.  Based on
	a patch submitted earlier by Edmund Grimley Evans.

2002-12-09 17:44:54  roessler  (roessler)

	* PATCHES: Ups.

2002-12-09 17:44:28  Michael Elkins  <me@sigpipe.org>  (roessler)

	* OPS, PATCHES, curs_main.c, functions.h, keymap.c, keymap.h,
	menu.c: This patch adds two features to mutt:

	- you can now specify the octal code of a key in a bind or
	  macro function, using the syntax <NNN>.  Eg, bind index <541>
	  show-version This allows you to bind to a function key for
	  which Mutt doesn't have a friendly name associated with it.

	- adds a what-key function which allows you to press a key and
	  have mutt show you the decimal/octal value.  (not bound to
	  anything by default)

2002-12-09 16:07:24  Toomas Soome  <tsoome@muhv.pri.ee>  (roessler)

	* po/et.po: update.

2002-12-09 13:30:02  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* po/pt_BR.po, po/ru.po, po/sk.po, po/sv.po, po/tr.po, po/uk.po,
	po/zh_CN.po, po/zh_TW.po, po/gl.po, po/hu.po, po/id.po, po/it.po,
	po/ja.po, po/ko.po, po/lt.po, po/nl.po, po/pl.po, po/eo.po,
	po/es.po, po/et.po, po/fr.po, po/ca.po, po/cs.po, po/da.po,
	po/de.po, po/el.po, compose.c: Try to fix a localization issue
	identified by Pawel Dzienkonski (#1410).  Side effect: All
	translations will need an update of the S/MIME key translations.

2002-12-09 11:20:14  Pawel Dziekonski  <dzieko@pwr.wroc.pl>  (roessler)

	* po/pl.po: update.

2002-12-08 23:14:43  ph04169@cc.uoi.gr	(roessler)

	* po/el.po: update.

2002-12-08 16:11:35  TAKAHASHI Tamotsu	<ttakah@lapis.plala.or.jp>
(roessler)

	* po/ja.po: update.

2002-12-08 15:10:59  Roland Rosenfeld  <roland@spinnaker.de>  (roessler)

	* po/de.po: Update.

2002-12-07 19:19:34  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* Makefile.am: yet another one.

	* Makefile.am: Another changelog-related change.

	* ChangeLog, Makefile.am, cvslog2changelog.pl: Automatically
	update ChangeLog as part of the commit process.

	* doc/Makefile.in, ChangeLog, ChangeLog.old, Makefile.am,
	cvslog2changelog.pl, mkchangelog.sh: Change the style
	of ChangeLog: Now, the actual patch submitter's name is
	extracted from the commit message and used for the change log.
	For the moment, the date format doesn't match the one in the
	old changelog.	If you want to fix this, submit a patch to
	cvslog2changelog.pl. ;-)

2002-12-07 08:55:59  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* po/fr.po: update

2002-12-07 08:55:23  Paul Walker  <paul@black-sun.demon.co.uk>	(roessler)

	* pgppubring.c: Fix a compilation warning.

2002-12-07 08:53:21  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* mh.c, mutt.h, muttlib.c: Gracefully handle unknown maildir
	flags.

2002-12-06 11:30:08  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* Makefile.am: Run check_sec.sh before committing.

2002-12-06 11:28:30  Brendan Cully  <brendan@kublai.com>  (roessler)

	* m4/gettext.m4, m4/iconv.m4, build-release, configure.in:
	autoconf cleanup.

2002-12-06 11:14:13  roessler  (roessler)

	* po/zh_CN.po, po/zh_TW.po, po/uk.po, po/ru.po, po/sk.po,
	po/sv.po, po/tr.po, po/lt.po, po/nl.po, po/pl.po, po/pt_BR.po,
	po/gl.po, po/hu.po, po/id.po, po/it.po, po/ja.po, po/ko.po,
	po/el.po, po/eo.po, po/es.po, po/et.po, po/fr.po, po/da.po,
	po/de.po, VERSION, po/ca.po, po/cs.po, reldate.h, ChangeLog:
	automatic post-release commit for mutt-1.5.2

2002-12-06 10:56:30  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* curs_lib.c, pgppubring.c: Fixing a number of traditional malloc
	calls which have made their way into the code.

	* build-release: Don't post announcements automatically for
	the moment.

2002-12-05 22:30:02  Michael Elkins  <me@sigpipe.org>  (roessler)

	* doc/manual.sgml.head: Fix #1398.

2002-11-25 14:16:47  Lars Hecking  <lhecking@nmrc.ucc.ie>  (roessler)

	* sendlib.c, ChangeLog, INSTALL, charset.h, configure.in: The
	noiconv patch.

2002-11-14 08:12:30  Michael Elkins  <me@sigpipe.org>  (roessler)

	* curs_lib.c: Fix #1388.

2002-11-13 10:10:52  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* main.c: A description of -A was lacking from the help string.

	* doc/manual.sgml.head, doc/mutt.man, main.c, protos.h: Add a
	new command line option -A which is used to expand aliases.

	* keymap.c: Add a safeguard #ifdef for the KEY_BTAB entry.
	Suggested by Thomas Dickey.

2002-11-12 09:20:30  Michael Elkins  <me@sigpipe.org>  (roessler)

	* keymap.c: Tell mutt about the back-tab key (shift tab).

2002-11-12 09:20:09  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* Makefile.am: ups.

	* Makefile.am: Add "make pclean" in order to clean up PATCHES.

2002-11-12 08:55:57  TAKAHASHI Tamotsu	<arms405@jade.dti.ne.jp>
(roessler)

	* po/ja.po: update

2002-11-12 08:41:18  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* README: Add an explicit note that CVS doesn't work from
	ftp.mutt.org any more.

2002-11-12 08:35:34  "Yasuhiro Matsumoto"  <mattn_jp@hotmail.com>
(roessler)

	* mbyte.c: cp932 should be treated like shift_jis.

2002-11-12 08:20:11  Nathan Dushman  <nhd+mutt@andrew.cmu.edu>	(roessler)

	* imap/auth_gss.c, imap/auth_sasl.c, configure.in, main.c,
	mutt_sasl.c, mutt_sasl.h: Hi - this is a patch against mutt-1.4
	to use version 2 of the Cyrus SASL library; all changes are
	ifdef'd so as not to break SASLv1 support. This includes a patch
	to configure.in to allow the choice between v1 and v2, but someone
	with a better understanding of autoconf should double-check it.

2002-11-12 08:00:51  Michael Elkins  <me@sigpipe.org>  (roessler)

	* handler.c: Actually commit patch-1.5.1.me.long_qp.2.

	* mailbox.h, mh.c, mx.c: The maildir_time patch.

2002-11-11 21:17:25  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* muttbug.sh.in: You shall not use CVS to distribute test
	versions.

	* muttbug.sh.in: more fixes.

	* muttbug.sh.in: Add some rpm-related intelligence to flea.

	* muttbug.sh.in: Fix flea's interaction with bug(1) on Debian
	systems.

	* PATCHES: Clean up the patch list.

2002-11-11 20:32:30  Michael Elkins  <me@sigpipe.org>  (roessler)

	* PATCHES, hdrline.c: Fix #485: Make %z work like %Z inside of
	%{} in $index_format.

	* PATCHES, copy.c: Fix #1379 - update the total mailbox size
	when an attachment is deleted.

	* PATCHES, curs_main.c, menu.c, pager.c: Fix #1310; redraw
	problems.

	* doc/manual.sgml.head, init.h: Fix #1306.

	* send.c: Fix #1364.

2002-11-11 19:50:23  Steve Kennedy  <steve-md@gbnet.net>  (roessler)

	* pgp.c: Fix memory leak in the PGP code.

2002-11-11 19:46:29  Paul Walker  <paul@black-sun.demon.co.uk>	(roessler)

	* commands.c, protos.h, sendlib.c: Fix #718.

2002-11-11 19:38:30  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* sendlib.c: Fix #1366.

2002-11-11 19:24:24  Martin Siegert  <siegert@sfu.ca>  (roessler)

	* mx.c: Fix IMAP moving; #1367.

2002-11-11 19:22:17  rene@clerc.nl  (roessler)

	* send.c: Another S/MIME ifdef misses and causes compilation
	problems.

2002-11-11 19:21:24  Michael Elkins  <me@sigpipe.org>  (roessler)

	* init.h: patch-1.5.1-me.status_doc.2

2002-11-11 19:16:11  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* alias.c, init.c, protos.h: patch-1.5-tlr.alias-parse.1 -
	extension of patch-1.5.1-me.aliascheck.1

	This patch catches the same kind of bad alias names caught by
	Michael's patch.  There are some extensions:

	1. Mutt makes sure that it doesn't _suggest_ bad names to
	the user.  2. If a name is bad, the user is informed, and may
	elect to fix the
	   name.  In this case, mutt will automatically suggest a fixed
	   version.
	3. If the user insists in the bad name, it's written into the
	   aliases file with proper quoting.
	4. When mutt parses the aliases file, it now uses the normal
	   tokenizer routines in order to properly handle quoted alias
	   names.

2002-11-11 18:36:25  Michael Elkins  <me@sigpipe.org>  (roessler)

	* handler.c: patch-1.5-me.long_qp.2 (#1371) - fix truncation
	with overly long Q-P encoded lines.

2002-10-22 21:24:07  René Clerc  <rene@clerc.nl>  (roessler)

	* commands.c: Add some missing #ifdefs.

2002-10-22 21:23:20  Michael Elkins  <me@sigpipe.org>  (roessler)

	* init.h, recvattach.c: Documentation fix; #1326

2002-10-22 21:22:45  René Clerc  <rene@clerc.nl>  (roessler)

	* send.c: Another crypt_reply fix.

2002-10-10 09:50:03  René Clerc  <rene@clerc.nl>  (roessler)

	* send.c: Make sure that crypt_reply replies with the same type,
	despite a possible S/MIME default.

2002-10-10 09:43:29  Michael Elkins  <me@sigpipe.org>  (roessler)

	* doc/manual.sgml.head, doc/manual.sgml.head: Document escaping
	rules for regular expressions (#1351).

	* pager.c: Fix header coloring, so there is no difference between
	ncurses and slang.

	* init.h: PGP documentation glitch.

2002-10-10 09:33:33  Paul Walker  <paul@black-sun.demon.co.uk>	(roessler)

	* doc/manual.sgml.head: Fix #1340 (documentation)

2002-10-10 09:33:05  Michael Elkins  <me@sigpipe.org>  (roessler)

	* pager.c: Jeremy Lin wrote: > When I search with / and get
	a match, doing '/\r' doesn't move to the next > match. This
	behavior is unlike the less pager, and is rather useless, IMHO.

	Try the attached patch.

2002-09-23 12:08:43  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* buffy.c: A variant of buffy notification.  Note:  If you folks
	don't like this, we can return to the old version.

2002-09-09 21:48:19  Rudi Chiarito  <nutello@sweetness.com>  (roessler)

	* OPS, browser.c, buffy.c, curs_main.c, functions.h, pager.c,
	protos.h: Add a buffy-list function, and display more information
	when new mail arrives.	With some modifications from tlr.

2002-09-09 21:19:08  Michael Elkins  <me@sigpipe.org>  (roessler)

	* mh.c: Fix #1321.

	* mh.c: [STABLE] Fix #1321.

2002-09-09 21:04:03  Tony Leneis  <tony@cvr.ds.adp.com>  (roessler)

	* signal.c: Tru64 Unix portability patch.

	* signal.c: [STABLE] Tru64 Unix portability patch.

2002-09-09 21:02:05  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* doc/manual.sgml.head: Fixing a typo.

2002-09-09 20:53:46  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* postpone.c: Fixing #1300.  Noted by David Shaw
	<dshaw@jabberwocky.com>.

	* postpone.c: Fix #1299; noted by David Shaw
	<dshaw@jabberwocky.com>.

2002-09-09 20:20:20  Michael Elkins  <me@sigpipe.org>  (roessler)

	* init.h, mutt.h, send.c: Introducing $forward_edit.

	* globals.h, init.h, send.c: Introduce $content_type.  There's
	one change against Michael's patch, in how the "format=flowed"
	parameter is used.

2002-09-09 20:04:45  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* history.c: [STABLE] Fixing history classes.

	* history.c: Fixing history classes.

2002-09-09 19:56:25  Armin Wolfermann  <aw@osn.de>  (roessler)

	* mh.c: when doing the second parsing pass on a maildir,
	mutt doesn't delete the fake HEADER struct if the file is
	unreadable. With this fix unreadable files get silently ignored
	(like in the MH case).

2002-09-09 19:55:01  "TAKAHASHI, Tamotsu"  <arms405@jade.dti.ne.jp>
(roessler)

	* po/ja.po: Update.

2002-09-09 19:53:24  Michael Elkins  <me@sigpipe.org>  (roessler)

	* editmsg.c: Fixing #1149:  Truncate files used for editing
	messages.

2002-09-09 19:29:26  Nicolas Rachinsky	<nicolas@dauerreden.de>
(roessler)

	* doc/manual.sgml.head, doc/muttrc.man.head, buffy.c, buffy.h,
	init.h: An unmailboxes command.  #1311.

2002-09-09 19:24:54  Michael Elkins  <me@sigpipe.org>  (roessler)

	* attach.c: Fixing #1330.

	* attach.c: [STABLE] Fixing #1330.

2002-08-09 07:01:11  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* doc/muttrc.man.head: Document unalternative_order in the
	manual page.

2002-08-09 06:58:37  Michael Elkins  <me@sigpipe.org>  (roessler)

	* doc/manual.sgml.head, init.c, init.h: The following patch
	adds the `unalternative_order' command.  It also allows using
	"*" more generically in un-commands which use parse_unlists().

2002-08-05 17:25:05  Michael Elkins  <me@sigpipe.org>  (roessler)

	* pgpewrap.c, pgppubring.c, pgpewrap.c, pgppubring.c: Error
	handling fixes.

2002-07-26 08:24:01  Michael Elkins  <me@sigpipe.org>  (roessler)

	* doc/manual.sgml.head: Documentation for reply-hook.  Another
	patch (for the manual page) would be most welcome. ;-))

	* curs_lib.c: The attached patch fixes mutt_yesorno() so that the
	question will be truncated enough to always fit in the default
	answer string.	The size is calculated on the fly so that there
	is no artificial truncation.

2002-07-24 09:46:58  TAKIZAWA Takashi  <taki@luna.email.ne.jp>	(roessler)

	* mutt.h, mutt.h: The attached patch sets MB_LEN_MAX to 16,
	which is MB_LEN_MAX value on glibc-2.2. It works only with
	--without-wc-funcs switch. It may be applied to mutt-1.4 and
	mutt-1.5.1.

2002-07-24 09:37:41  Lars Hecking  <lhecking@nmrc.ie>  (roessler)

	* configure.in, configure.in: Fix a quoting sloppiness.  Noted by
	Vincent Lefevre.

2002-07-24 09:33:59  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* browser.c, browser.c: Fixing #1282.  An off-by-one error. :-/

2002-07-24 09:20:22  Michael Elkins  <me@sigpipe.org>  (roessler)

	* mutt.h, send.c, hook.c, init.h: reply-hook.  Documentation
	still needed.

2002-07-24 09:06:06  Vincent Lefevre  <vincent@vinc17.org>  (roessler)

	* po/fr.po: update.

2002-07-24 08:41:31  Michael Elkins  <me@sigpipe.org>  (roessler)

	* doc/mutt.man, compose.c, editmsg.c, init.c, init.h, attach.c,
	doc/mutt.man, compose.c, editmsg.c, init.c, init.h, attach.c:
	Fix $editor and $visual.  Based on an earlier patch from Edmund
	Grimley Evans.

2002-07-19 19:23:21  Michael Elkins  <me@sigpipe.org>  (roessler)

	* doc/manual.sgml.head: Another documentation patch.

2002-07-17 12:48:38  Rocco Rutte  <s1118644@mail.inf.tu-dresden.de>
(roessler)

	* sendlib.c: * Thomas Roessler [02-07-08 10:14:53 +0200]
	wrote: >  * sendlib.c, 3.12 -> 3.13 >	 From: Rocco Rutte
	<s1118644@mail.inf.tu-dresden.de>

	>    Make encode_from a bit more aggressive, by also catching a
	'f' in >    the beginning of a line.

	'Catch' is good but also to encode it is better. It may have
	been too late (sorry for that) so I fixed it. I don't know why
	the current source only escapes lines that actually begin with
	'from' or 'From' followed by some text. I think that escaping
	'from' or 'From' on a single line should be done, too.

	Not a big deal, anyways.

2002-07-16 07:28:11  Michael Elkins  <me@sigpipe.org>  (roessler)

	* main.c, main.c: Update copyright notices.

2002-07-07 19:33:50  Cedric Duval  <cedricduval@free.fr>  (roessler)

	* doc/manual.sgml.head, doc/mutt.man, init.h: Documentation fixes.

2002-07-07 19:29:05  "TAKAHASHI, Tamotsu"  <arms405@jade.dti.ne.jp>
(roessler)

	* doc/manual.sgml.head: Dcumentation fixes.

2002-07-07 19:23:22  Cedric Duval  <cedricduval@free.fr>  (roessler)

	* doc/manual.sgml.head, doc/mutt.man, init.h: Documentation fixes.

2002-07-07 19:22:19  Rocco Rutte  <s1118644@mail.inf.tu-dresden.de>
(roessler)

	* sendlib.c: Make encode_from a bit more aggressive, by also
	catching a 'f' in the beginning of a line.

2002-07-07 19:13:03  Velko Hristov  <hristov@informatik.hu-berlin.de>
(roessler)

	* po/bg.po: Update.

2002-07-07 19:11:15  Jeremy Blosser  <jblosser-mutt@firinn.org>
(roessler)

	* init.h: Add unauto_view to the stable branch.  A one-liner.

2002-06-28 19:52:31  Michael Elkins  <me@sigpipe.org>  (roessler)

	* doc/manual.sgml.head, doc/manual.sgml.head: Documentation fix
	(#271).

2002-06-18 10:03:52  (automatic)  (roessler)

	* po/zh_TW.po, po/tr.po, po/uk.po, po/zh_CN.po, po/sv.po,
	po/sk.po, po/ru.po, po/pt_BR.po, po/nl.po, po/pl.po, po/ja.po,
	po/ko.po, po/lt.po, po/it.po, po/gl.po, po/hu.po, po/id.po,
	po/eo.po, po/es.po, po/et.po, po/fr.po, po/el.po, po/da.po,
	po/de.po, po/ca.po, po/cs.po: "make update-po"

2002-06-18 10:02:44  several submitters  (roessler)

	* po/ca.po: Adding a BG translation.  Update for CA.

2002-06-18 10:02:43  roessler  (roessler)

	* po/bg.po: branches:  1.1.2; file bg.po was initially added on
	branch mutt-1-4-stable.

2002-06-18 10:02:43  several submitters  (roessler)

	* po/bg.po: Adding a BG translation.  Update for CA.

	* configure.in: Adding a BG translation.

2002-06-18 09:53:12  Michael Elkins  <me@sigpipe.org>  (roessler)

	* init.c, init.c: The string used to store the commmand for a
	backtic expansion in the muttrc was not free'd if the command
	failed for some reason.

2002-06-18 09:52:13  David Champion  <dgc@uchicago.edu>  (roessler)

	* m4/gssapi.m4: Okay, two bugs here. One's an oversight of mine
	in my previous patch, where I tried to use "[hH]" as Bourne code
	while m4 had quoting set to ([, ]) -- this probably makes mutt
	mis-detect Heimdal after all.

	The other is not mine (i.e., it's in cvs now) and it makes mutt
	overstrike $LIBS if Heimdal or MIT Kerberos is detected. This is
	a problem for anyone who needs -lnsl -lsocket, in particular. I
	was fixing this by hand during late 1.3.x releases, as I didn't
	have time to track it down....

	Here's a patch against the current (unpatched) 1.5 cvs copy of
	m4/gssapi.m4. It probably should go into both branches. Sorry
	for the repeats.

2002-06-06 23:13:54  Michael Elkins  <me@sigpipe.org>  (roessler)

	* color.c: Fix #1230.

2002-06-06 12:22:05  Will Fiveash  <william.fiveash@sun.com>  (roessler)

	* init.h, init.h: Fix a couple of compile-time warnings.

2002-05-31 16:59:39  Edmund GRIMLEY EVANS  <edmundo@rano.org>  (roessler)

	* charset.c, charset.h, sendlib.c, charset.c, charset.h,
	sendlib.c: Fix charset-hook.

2002-05-31 16:45:49  Lars Hecking  <lhecking@nmrc.ucc.ie>  (roessler)

	* m4/iconv.m4, INSTALL, charset.h, configure.in: The noiconv
	patch.	Should probably have been in 1.4.

2002-05-30 12:15:02  Thomas Roessler  <roessler@does-not-exist.org>
(roessler)

	* rfc822.c: Properly handle empty addresses (<>) when they show
	up in mail headers.  The approach taken is to store this address
	as <@>, and to check this special case when printing an address.

2002-05-29 09:31:51  roessler  (roessler)

	* po/zh_CN.po, po/zh_TW.po, po/uk.po, po/tr.po, po/sk.po,
	po/sv.po, po/pl.po, po/pt_BR.po, po/ru.po, po/ko.po, po/lt.po,
	po/nl.po, po/it.po, po/ja.po, po/fr.po, po/gl.po, po/hu.po,
	po/id.po, po/eo.po, po/es.po, po/et.po, po/da.po, po/de.po,
	po/el.po, VERSION, po/ca.po, po/cs.po, reldate.h, ChangeLog:
	automatic post-release commit for mutt-1.4
